#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || false))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), true)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.5) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch.x)))) > injectionSwitch.y), false, true)))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(atanh(8484.3121)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(82.48, (false ? _GLF_FUZZED(9.4) : 82.48)), -77.10), 7310.4028)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0)))), mix(vec2(_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0)))))))[0], min((min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028))), clamp((true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028))), (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028))), ((true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028)))) * vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))))[0], _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))), mix(vec2(_GLF_IDENTITY(((min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))))[0], (true ? ((min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))))[0] : _GLF_FUZZED(-7.8))), _GLF_FUZZED(-1.0)), vec2(_GLF_FUZZED(2.0), ((min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(82.48, -77.10), 7310.4028)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))))[1]), bvec2(false, true)))[0])), _GLF_FUZZED(vec2(1609.2699, 94.84).t)), vec2(_GLF_FUZZED(2.4), (min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(mod(vec2(82.48, -77.10), 7310.4028), vec2(mat3x2(_GLF_IDENTITY(mod(vec2(82.48, -77.10), 7310.4028), vec2(0.0, 0.0) + (mod(vec2(82.48, -77.10), 7310.4028))), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(false, true)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true))))))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true))))))))))) || false, true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true))))))))))) || false))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(139.249)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), bvec2(bvec4(bvec2(false, false), true, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true))), bvec2(bvec4(bvec2(false, false), true, false))), true)), true, true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), bvec2(bvec4(bvec2(false, false), true, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true))), bvec2(bvec4(bvec2(false, false), true, false))), true)), true, true)))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), bvec2(bvec4(bvec2(false, false), true, false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true))), bvec2(bvec4(bvec2(false, false), true, false))), true)), true, true)))), false, true)), false, false)))), true, false)), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(false, false), true, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false))), false))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true, false))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(62767)))) | (0 >> _GLF_IDENTITY(int(7), int(7))))]), float(_GLF_FUZZED(-7.1)), bool(false))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_IDENTITY(true, true && (true))) && (false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)), true))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y) || false)))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y) || false)))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true)) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(false || (false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false || (false), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false || (false), true, true), false)))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(false || (false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false || (false), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false || (false), true, true), false))))))))))) && true) && true), true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, true)))), bool(bvec3(false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true))), true)))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(bool(bool((_GLF_IDENTITY(false, ! (! (false)))))), true)))), bool(bvec3(! (false), false, false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))), false, false, false)))))), false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), true && (bool(bvec3(true, true, true))))), false)), (bool(bvec4(! (false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), true && (bool(bvec3(true, true, true))))), false))) || false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec4(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)), true, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec4(bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), true, true)), true, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), true, true)), true, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true, false))), ! (! (bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true, false)))))))))), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec4(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, true)), true, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(num_workgroup)) : injectionSwitch.y))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, sqrt(1.0), sqrt(1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(40.40))) > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(40.40), max(_GLF_FUZZED(40.40), _GLF_IDENTITY(_GLF_FUZZED(40.40), clamp(_GLF_FUZZED(40.40), _GLF_FUZZED(40.40), _GLF_FUZZED(40.40))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.96, -7689.0578)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))))) && true))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), true))) && true)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9360.5574)), bool(false))), injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9360.5574)), bool(false))), injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9360.5574)), bool(false))), injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))) || false)))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))), false, _GLF_IDENTITY(true, true && (true)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, tan(0.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1167.3936), _GLF_FUZZED(-30.92)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), false, true, false)))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 0.0, 0.0))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.6)), bool(false))), 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0))) - 0.0), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0))) - 0.0)))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)))), (mat2(injectionSwitch, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) + mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), vec2(mat3x4(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-38.68)), max(float(_GLF_FUZZED(-38.68)), float(_GLF_FUZZED(-38.68)))), bool(false))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))))), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec2(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 0.0, 0.0))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.6)), bool(false))), 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0))) - 0.0), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0)), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-15.50))))) * 1.0))) - 0.0)))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)))), (mat2(injectionSwitch, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) + mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), vec2(mat3x4(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-38.68)), max(float(_GLF_FUZZED(-38.68)), float(_GLF_FUZZED(-38.68)))), bool(false))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))))), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), true && (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-76.92, mix(float(_GLF_IDENTITY(-76.92, float(mat2(-76.92, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(float(true))), bool(false)))), mix(float(true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(vec3(-1.8, 96.40, 4.2).r)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true))) : _GLF_FUZZED(-76.92)), float(_GLF_FUZZED(_GLF_IDENTITY((+ 22.94), clamp((+ 22.94), (+ 22.94), (+ 22.94))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) : _GLF_FUZZED(injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, round(length(normalize(1.0))), 1.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(509.687)), bool(false))), round(length(normalize(1.0))), 1.0, abs(0.0), length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(6.9, -9985.1682, 4329.9901, -63.67).r)), float(0.0), bool(true))), 0.0)), 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-23.32)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.6) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) * 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-76.92, mix(float(_GLF_IDENTITY(-76.92, float(mat2(-76.92, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(float(true))), bool(false)))), mix(float(true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(vec3(-1.8, 96.40, 4.2).r)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true))) : _GLF_FUZZED(-76.92)), float(_GLF_FUZZED(_GLF_IDENTITY((+ _GLF_IDENTITY(22.94, float(mat4x3(22.94, 0.0, abs(0.0), tan(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0)))), clamp((+ 22.94), (+ 22.94), (+ 22.94))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) : _GLF_FUZZED(injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) - 0.0)))), 1.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, round(length(normalize(1.0))), 1.0, abs(0.0), length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(6.9, -9985.1682, 4329.9901, -63.67).r)), float(0.0), bool(true))), 0.0)), 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-23.32)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-76.92, mix(float(_GLF_IDENTITY(-76.92, float(_GLF_IDENTITY(mat2(-76.92, 0.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(-76.92, 0.0, 1.0, 0.0), (mat2(-76.92, 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (true ? transpose(_GLF_IDENTITY(mat2(-76.92, 0.0, 1.0, 0.0), (mat2(-76.92, 0.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(mat2(-76.13, 1.4, 38.77, 58.02))))))))), float(_GLF_FUZZED(float(true))), bool(false)))), mix(float(true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(vec3(-1.8, 96.40, 4.2).r)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true))) : _GLF_FUZZED(-76.92)), float(_GLF_FUZZED(_GLF_IDENTITY((+ 22.94), clamp((+ 22.94), (+ 22.94), (+ _GLF_IDENTITY(22.94, clamp(22.94, 22.94, 22.94))))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))) : _GLF_FUZZED(injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, round(length(normalize(1.0))), 1.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch, injectionSwitch)), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), clamp(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (normalize(1.0)) - 0.0))), _GLF_IDENTITY(normalize(1.0), min(normalize(1.0), normalize(1.0))), normalize(1.0))))), 1.0, abs(0.0), length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(6.9, -9985.1682, 4329.9901, -63.67).r)), float(0.0), bool(true))), 0.0)), 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-23.32)), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(true ? max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-76.92, mix(float(_GLF_IDENTITY(-76.92, float(mat2(-76.92, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(float(true))), bool(false)))), mix(float(true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(vec3(-1.8, 96.40, 4.2).r)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true))) : _GLF_FUZZED(-76.92)), float(_GLF_FUZZED(_GLF_IDENTITY((+ 22.94), clamp((+ 22.94), (+ 22.94), (+ 22.94))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) : _GLF_FUZZED(injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, round(length(normalize(1.0))), 1.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, round(length(normalize(1.0))), 1.0, abs(0.0), length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(6.9, -9985.1682, 4329.9901, -63.67).r)), float(0.0), bool(true))), 0.0)), 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-23.32)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, false, true)), true, false)))), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.30)), vec2(_GLF_FUZZED(-2160.6988), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.30)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2160.6988), (_GLF_FUZZED(-2160.6988)) + log(1.0)), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.30)), vec2(_GLF_FUZZED(-2160.6988), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.30)), vec2(_GLF_FUZZED(-2160.6988), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))) : _GLF_FUZZED(vec2(4.4, -9.9)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), true && ((! (false)))), true, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, false), bvec3(bvec3(bvec3((! (false)), false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && ((! (false)))), true, true, false))), ! (! (_GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), ! (! ((false))))))), true, true, false))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) / 1u))) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) && true)))), ((! (! (false)))) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) || false)), (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), ! (! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(27.59))))) || (false))))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, false))))))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && ((false))) && true)), ! (! (! (false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))) && true) && ((false)), (_GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (true && ((false))), (! (true && _GLF_IDENTITY(((false)), bool(bvec3(_GLF_IDENTITY(((false)), (((false))) && true), false, false))))) && true)))) && true)), ! (! (! (false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && ((false))) && true)), ! (! (! (false))))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((false))), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), true && ((false))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), true && ((false))), bool(bvec4(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), true && ((false))), true, true, true))), false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), _GLF_IDENTITY(true, (true) && true) && (! (! (! (false)))))))))), ! (! (bool((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false)))), true && ((! _GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((! (! (! (false)))), ((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), ((! (! (false)))) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(true && (! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))), bool(bool(true && (! (! (! (false)))))))) && true, ((_GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)))), true)))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec2((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))), bool(bool(true && _GLF_IDENTITY((! (! (! (false)))), true && ((! (! (! (false)))))))))) && true) && true)))))))))))) && true), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (! ((! (false)))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(! (! (! ((! (false))))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (! ((! (false))))), (_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) || false)) && true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (! ((! (false))))), (_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) || false)) && true))), _GLF_IDENTITY(bool(bvec2(bool(bool(! _GLF_IDENTITY((! (! ((! (false))))), (_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) || false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(bool(bool(! _GLF_IDENTITY((! (! ((! (false))))), (_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) || false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (! ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false)))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (false))))) && true))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false)))))), false))))) || _GLF_IDENTITY(false, bool(bvec2(false, true))), ((false) || false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) && true), ! (! (_GLF_IDENTITY((false) || false, ((false) || false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && ((false))) && true)), ! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY(((false)), bool(bvec2(((false)), false)))), ! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY(((false)), true && (((false))))), ! (! (! (false)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((false))), ! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((false))), ! (! (! (false)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((false))), ! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((false))), ! (! (! (false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((false))), ! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((false))), ! (! (! (false))))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), false || (true && ((_GLF_IDENTITY(false, (false) || false)))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))), bool(bvec3(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))))), true, true))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (false)))), true && ((false))), ! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((false))), ! (! (! (false)))))))))))) && true))), true, false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true))), false))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(bool(bvec4((! (! (false))), false, true, true)), false || (bool(bvec4((! (! (false))), false, true, true))))), true && (! _GLF_IDENTITY((! (! (false))), bool(_GLF_IDENTITY(bvec2((! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))), ! _GLF_IDENTITY((! (bool((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), false || ((false))))), ! (_GLF_IDENTITY(! ((! (! _GLF_IDENTITY((false), false || ((false)))))), _GLF_IDENTITY(bool(bvec4(! ((! (! _GLF_IDENTITY((false), false || ((false)))))), true, false, true)), false || (bool(bvec4(! ((! (! _GLF_IDENTITY((false), false || ((false)))))), true, false, true))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), true))))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false, (false) || false) || (! (! (false)))))))), ((! (! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(568.079) : injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0), (false ? _GLF_FUZZED(mat2(-9.2, -964.805, -7.5, -66.58)) : mat2(injectionSwitch, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0))))).y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true))))))))))))))), bool(bool(true && (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))) && true))))))), ((! (bool((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-91.86) : injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-91.86) : injectionSwitch.x)) < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), bool(bvec3((_GLF_IDENTITY(! (! (false)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(true, (true) || false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(true, (true) || false)))))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ((_GLF_IDENTITY(! (! (! (false))), bool(bvec4(! (! (! (false))), true, false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))), true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true))))))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true))))))))))))))), bool(bool(true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), false || (! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))) && true)))))))) || false))))) && true), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(false, ! (! (false)))))), (bool((! (_GLF_IDENTITY(false, ! (! (false))))))) && true)))), ! (! (! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (! (false))))), _GLF_IDENTITY(true, false || (true)), true)), (bool(bvec3(_GLF_IDENTITY(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (! (false))))), _GLF_IDENTITY(true, false || (true)), true))) || false))), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (! (false))))) && true))) && true), _GLF_IDENTITY(false, (false) || false), false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))))), false || ((! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), bool(bvec3(true, false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false))))))))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false))))))))), (true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true)) && true))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), true))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) | _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) / 1), 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, tan(0.0)))))).y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0))))) * (injectionSwitch), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), _GLF_IDENTITY((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(162.544, 5.2, 5.8, -46.51)) : (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))) * mat2(1.0))) * (injectionSwitch)) * mat2(1.0))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), false)))), true, false, false)), true && (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), false)))), true, false, false))))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-51.98, 90.97)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), 1.0)), clamp(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), 1.0)), float(vec3(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), 1.0)), 1.0, 1.0))), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), 1.0)), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), 1.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), 1.0)), clamp(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), 1.0)), float(vec3(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0)))), 1.0, 1.0))), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), 1.0)), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, sqrt(1.0), 1.0))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), float(mat2x4((injectionSwitch.x), abs(1.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0)))) - 0.0) * round(length(normalize(1.0)))) > injectionSwitch.y))))
  barrier();
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), max(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) / 1u)) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) / 1u)) * 1u), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) / 1u)) * 1u)) >> 0u)) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (false ? _GLF_FUZZED(165934u) : (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) / 1u)) * 1u), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (_GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(64, (64) - 0), 2), (atomicLoad(write_val, 4, 64, 2)) / 1u)) * 1u)) >> 0u)) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u))))))), atomicLoad(write_val, 4, 64, 2)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(546.205))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true), true))))))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-87.39, 8181.2563)) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-87.39, 8181.2563)) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-87.39, 8181.2563)) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
