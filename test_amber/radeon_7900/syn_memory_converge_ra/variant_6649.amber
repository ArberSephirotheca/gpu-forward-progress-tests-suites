#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(intBitsToFloat(-6289))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(tan(0.0)) + (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (false))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (gl_WorkGroupSize.x)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) && true), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), injectionSwitch[1])))), injectionSwitch)).y) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), injectionSwitch[1])))), injectionSwitch)).y) && true), true), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) ? _GLF_FUZZED(93795u) : gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (gl_WorkGroupSize.x)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) && true), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))) ? _GLF_FUZZED(93795u) : gl_WorkGroupSize.x))) >> 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-9097.3825)), bool(false))), (injectionSwitch.y))) / _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY((cos(0.0)) / 1.0, (_GLF_IDENTITY((cos(0.0)), (true ? _GLF_IDENTITY((cos(0.0)), (_GLF_IDENTITY((cos(0.0)), ((cos(0.0))) / 1.0)) / 1.0) : _GLF_FUZZED(8.4))) / 1.0) * 1.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (! (false)) && true)))), true))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! (false)) && true))))) && true)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))), true), true))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! (false)) && true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! (false)) && true)))), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! (false)) && true)))), true)), false, true), bvec3(bvec4(bvec3(bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! (false)) && true)))), true)), false, true), true))))))) && true)) && true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! (false)) && true))))) && true)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) && true))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! (false)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))) && true)) && true)))) || false)), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec4(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! (false)) && true))))) && true)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true))), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))))), (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) && true))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), _GLF_IDENTITY((! (false)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true && ((! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), true, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), true, false, true)), false, false, true)))))))))))) && true)) && true)))) || false))))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (! (false)) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) || false), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, exp(0.0)), mix(vec3(_GLF_FUZZED(4879.8963), (vec3(injectionSwitch, exp(0.0)))[1], _GLF_FUZZED(-823.717)), vec3((vec3(injectionSwitch, exp(0.0)))[0], _GLF_FUZZED(105.083), (vec3(injectionSwitch, exp(0.0)))[2]), bvec3(true, false, true))))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, exp(0.0)), mix(vec3(_GLF_FUZZED(4879.8963), (vec3(injectionSwitch, exp(0.0)))[1], _GLF_FUZZED(-823.717)), vec3((vec3(injectionSwitch, exp(0.0)))[0], _GLF_FUZZED(105.083), (vec3(injectionSwitch, exp(0.0)))[2]), bvec3(true, false, true))))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, exp(0.0)), mix(vec3(_GLF_FUZZED(4879.8963), (vec3(injectionSwitch, exp(0.0)))[1], _GLF_FUZZED(-823.717)), vec3((vec3(injectionSwitch, exp(0.0)))[0], _GLF_FUZZED(105.083), (vec3(injectionSwitch, exp(0.0)))[2]), bvec3(true, false, true))))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), (! (false)) && true))))) && true)) && true))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0))), (mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)))) / vec2(1.0, 1.0)))).x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, min((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, true)), true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), false || (! (bool(bool(false)))))))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], 0u | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, _GLF_IDENTITY(min(gl_WorkGroupID.x, gl_WorkGroupID.x), (false ? _GLF_FUZZED((workgroup_size ^ workgroup_size)) : min(gl_WorkGroupID.x, gl_WorkGroupID.x))))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, false, false, false)), true && (_GLF_IDENTITY(bool(bvec4((false) && true, false, false, false)), (bool(bvec4((false) && true, false, false, false))) || false)))), (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)), true && (_GLF_IDENTITY(bool(bvec4((false) && true, false, false, false)), (bool(bvec4((false) && true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false, false))) || false))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false, true))), (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, false)), true, true, false))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), true, true, true)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((7.0 * -32.29))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-93803))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-93803))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-93803))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))) && true, false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u, 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u, 0u))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u, 0u))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u, 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u, 0u))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u, 0u)))))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u, 0u)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u, 0u))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) - uvec4(0u, 0u, 0u, 0u))), 1u, 0u, 0u))))))))))), subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), (false ? _GLF_FUZZED(-13452) : (_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) ^ 0), ((4)) | ((4)))))) | (_GLF_IDENTITY((4), ((_GLF_IDENTITY(4, (4) | 0))) - 0)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false ? _GLF_FUZZED(vec2(-405.301, -6415.7273)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-8.9), float(float(_GLF_IDENTITY(_GLF_FUZZED(-8.9), max(_GLF_FUZZED(-8.9), _GLF_FUZZED(-8.9))))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y)), 1.0, 1.0, 0.0, 0.0, 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y)), 1.0, 1.0, 0.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2423.4701)), bool(false))))), 0.0)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0)))[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(bvec2(bvec2(bvec2(true, false)))))))), (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(bvec2(bvec2(bvec2(true, false))))))))) || false)), (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))).x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))).x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((53.97 / vec2(-59.60, -75.35))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y)))))), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, float(vec4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))).x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((53.97 / vec2(-59.60, -75.35))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(sqrt(vec2(1.0, 1.0)))))))).y))))))) && true), true), false, _GLF_IDENTITY(true, (true) || false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-59.25), _GLF_FUZZED((69.35))), bvec2(false, false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8415.1701, (8415.1701) * cos(0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4866.5693, -69.39), max(vec2(4866.5693, -69.39), vec2(4866.5693, -69.39))))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), mix(vec2(_GLF_FUZZED(-7957.0356), (mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (! (false)), ! (! (_GLF_IDENTITY(true && (! (false)), true && (true && (! (false))))))))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0, 0.0, exp(0.0), 1.0))))))))[1]), vec2((mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-33.71)))) - 0.0)) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(4866.5693, -69.39)), (_GLF_FUZZED(vec2(4866.5693, -69.39))) / vec2(1.0, 1.0))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(4866.5693, -69.39)), (_GLF_FUZZED(vec2(4866.5693, -69.39))) / vec2(1.0, 1.0))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))[0], _GLF_FUZZED(71.82)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(4866.5693, 0.0 + (4866.5693)), -69.39))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)) && true)))), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))))).x) - 0.0) > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(-7957.0356), (mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(8415.1701), mix(float(_GLF_IDENTITY(_GLF_FUZZED(8415.1701), max(_GLF_FUZZED(8415.1701), _GLF_FUZZED(8415.1701)))), float(_GLF_FUZZED(-5.1)), bool(false))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(false)))) - 0.0)))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))))[1]), vec2((mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0)), vec2(vec3(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0)), 0.0)))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED((-3.7 * 7916.9914))), vec2(_GLF_FUZZED(11.37), ((injectionSwitch))[1]), bvec2(false, true)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4866.5693, -69.39), (vec2(4866.5693, -69.39)) / abs(vec2(1.0, 1.0)))), vec2(mat4x3(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4866.5693, -69.39), (vec2(4866.5693, -69.39)) / abs(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, tan(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, tan(0.0)))))))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))))[0], _GLF_FUZZED(71.82)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(5.2, 9.9)) : (injectionSwitch))), (injectionSwitch)))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0))], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true, true), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true, true), false)))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-59.25), _GLF_FUZZED((69.35))), bvec2(false, false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))), mix(vec2((mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-59.25), _GLF_FUZZED((69.35))), bvec2(false, false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))))[0], (mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-59.25), _GLF_FUZZED((69.35))), bvec2(false, false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))))[1]), vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(500.070)), bvec2(false, false))), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8415.1701, (8415.1701) * cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 0.0, abs(1.0))), mix(float(float(mat2(0.0, 0.0, 0.0, abs(1.0)))), float(_GLF_FUZZED((9.9 - -450.684))), bool(false))))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! _GLF_IDENTITY((false), ((false)) || false)))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! _GLF_IDENTITY((false), ((false)) || false))))))) && true) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4866.5693, -69.39), max(vec2(4866.5693, -69.39), vec2(4866.5693, -69.39))))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), mix(vec2(_GLF_FUZZED(-7957.0356), (mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), _GLF_IDENTITY(true && (! (false)), ! (! (_GLF_IDENTITY(true && (! (false)), true && (true && (! (false))))))))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), 0.0))), 1.0, 0.0, 0.0, exp(0.0), 1.0))))))))[1]), vec2((mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-33.71)))) - 0.0)) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! (false)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(4866.5693, -69.39)), (_GLF_FUZZED(vec2(4866.5693, -69.39))) / vec2(1.0, 1.0))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, 0 ^ (0)))))], (true ? injectionSwitch[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, 0 ^ (0)))))] : _GLF_FUZZED(8.8))), injectionSwitch[1])).y), false || ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(4866.5693, -69.39)), (_GLF_FUZZED(vec2(4866.5693, -69.39))) / vec2(1.0, 1.0))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-9450.9951), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(1321.4545)), bvec2(true, false))).y)))))))[0], _GLF_IDENTITY(_GLF_FUZZED(71.82), min(_GLF_FUZZED(71.82), _GLF_FUZZED(71.82)))), bvec2(true, false))), mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(4866.5693, 0.0 + (4866.5693)), -69.39))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-215.326, -52.28)) : injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)).y))))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)) && true)))), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(4866.5693, float(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), max(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), min(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), -69.39))))), max((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(4866.5693, float(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), max(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), min(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), -69.39))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(4866.5693, float(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), max(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), min(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), -69.39))))), min((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(4866.5693, float(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), max(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), min(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), -69.39))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(4866.5693, float(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), max(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), min(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), -69.39))))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(4866.5693, float(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), max(_GLF_IDENTITY(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), min(vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), vec4(4866.5693, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), -69.39))))))))))) / sqrt(vec2(1.0, 1.0))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))))).x) - 0.0) > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(-7957.0356), (mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(8415.1701), mix(float(_GLF_IDENTITY(_GLF_FUZZED(8415.1701), max(_GLF_FUZZED(8415.1701), _GLF_FUZZED(8415.1701)))), float(_GLF_FUZZED(-5.1)), bool(false))), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 + (1))))]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(false)))) - 0.0)))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) - 0.0))), min(true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) - 0.0))), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) - 0.0))), vec2(mat2x3(true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) - 0.0))), 1.0, 0.0, 0.0, 0.0)))))))) / sqrt(vec2(1.0, 1.0))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) - 0.0))), min(true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) - 0.0))), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) - 0.0))), vec2(mat2x3(true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, _GLF_IDENTITY(-69.39, (_GLF_IDENTITY(-69.39, mix(float(-69.39), float(_GLF_FUZZED(3595.5562)), bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) - 0.0))), 1.0, 0.0, 0.0, 0.0)))))))) / sqrt(vec2(1.0, 1.0))).x), float(_GLF_FUZZED(58.04)), bool(false))) > injectionSwitch.y)))))))[1]), _GLF_IDENTITY(vec2((mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), min(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), _GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), min(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))))))), 0.0), (_GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(vec3(1394.4151, -186.079, 9.9)) : vec3(_GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), min(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), _GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), min(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))))))), 0.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED((-3.7 * 7916.9914))), vec2(_GLF_FUZZED(11.37), ((injectionSwitch))[1]), bvec2(false, true)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4866.5693, -69.39), (vec2(_GLF_IDENTITY(4866.5693, mix(float(_GLF_FUZZED(542.297)), float(4866.5693), bool(true))), -69.39)) / abs(vec2(1.0, 1.0)))), vec2(mat4x3(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4866.5693, -69.39), (_GLF_IDENTITY(vec2(4866.5693, -69.39), (vec2(4866.5693, -69.39)) - vec2(0.0, 0.0))) / abs(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(81.02, -61.20, 89.21, 110.381)) : mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0))))), max(float(_GLF_IDENTITY(mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(81.02, -61.20, 89.21, 110.381)) : mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0))))), float(_GLF_IDENTITY(mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(81.02, -61.20, 89.21, 110.381)) : mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0)))))))), 0.0), vec2(1.0, 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, tan(0.0))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.9))), tan(0.0)))))))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))))[0], _GLF_FUZZED(71.82)), (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(152947u, 104871u))) : vec2((mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), min(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), _GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), min(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))))))), 0.0), (_GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(vec3(1394.4151, -186.079, 9.9)) : vec3(_GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), min(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), _GLF_IDENTITY(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), min(vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))), vec2(mat3((injectionSwitch), sqrt(1.0), 1.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.4)), float(1.0), bool(true))))))))), 0.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED((-3.7 * 7916.9914))), vec2(_GLF_FUZZED(11.37), ((injectionSwitch))[1]), bvec2(false, true)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4866.5693, -69.39), (vec2(_GLF_IDENTITY(4866.5693, mix(float(_GLF_FUZZED(542.297)), float(4866.5693), bool(true))), -69.39)) / abs(vec2(1.0, 1.0)))), vec2(mat4x3(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4866.5693, -69.39), (_GLF_IDENTITY(vec2(4866.5693, -69.39), (vec2(4866.5693, -69.39)) - vec2(0.0, 0.0))) / abs(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(81.02, -61.20, 89.21, 110.381)) : mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0))))), max(float(_GLF_IDENTITY(mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(81.02, -61.20, 89.21, 110.381)) : mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0))))), float(_GLF_IDENTITY(mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(81.02, -61.20, 89.21, 110.381)) : mat2(sqrt(1.0), abs(0.0), 1.0, abs(1.0)))))))), 0.0), vec2(1.0, 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, tan(0.0))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.9))), tan(0.0)))))))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))))[0], _GLF_FUZZED(71.82)))), bvec2(true, false))), mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(5.2, 9.9)) : (injectionSwitch))), (injectionSwitch)))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0))], _GLF_FUZZED(-8.9)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true, true), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true, true), false)))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4866.5693, -69.39))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))))).x > injectionSwitch.y)))))))), _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, _GLF_IDENTITY(float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat4(tan(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), cos(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4(tan(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), cos(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), mix(float(_GLF_FUZZED(-428.007)), float(float(mat4(tan(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), vec3(1.0, determinant(mat4(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, length(vec3(0.0, 0.0, 0.0)) + (1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), cos(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), bool(true))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(0.0), 1.0, 0.0, 1.0)))), 0.0, 0.0)), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))), max(float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(tan(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(6.7), _GLF_FUZZED(-9559.5379)), vec3(_GLF_FUZZED(-5306.8079), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(25.00))))), _GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0))), 0.0, 0.0)), 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0), transpose(transpose(mat4(tan(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], _GLF_FUZZED(6.7), _GLF_FUZZED(-9559.5379)), vec3(_GLF_FUZZED(-5306.8079), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(25.00))))), _GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0))), 0.0, 0.0)), 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), cos(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0))))), float(mat3x4(_GLF_IDENTITY(float(mat4(tan(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), (false ? _GLF_FUZZED(-3977.2488) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), min(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))))), cos(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-428.007)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_FUZZED(-428.007)) : _GLF_FUZZED(-5.6))), float(float(mat4(tan(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, log(1.0), 0.0, 1.0, 0.0))), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), min(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), cos(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), 1.0))), bool(true))), 1.0, 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(2.6, 419.376, 0.1, -5.0, 5.3, -704.219, 1.7, 2.5, 594.540))))), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), sqrt(0.0) + (round(length(normalize(vec2(1.0, 1.0)))))), 0.0, sqrt(0.0), 1.0, 0.0, 1.0)))), 0.0, 0.0)), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))), float(mat3(-8.9, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat4(tan(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), cos(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4(tan(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(length(vec3(30.21, 26.93, 4348.7598))))), 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), cos(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-9.6)), float(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + length(vec4(0.0, 0.0, 0.0, 0.0)))), bool(true)))), 1.0)), mix(float(_GLF_FUZZED(-428.007)), float(float(mat4(tan(0.0), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(acos(-87.76)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), abs(0.0), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat4x3(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, cos(0.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), abs(0.0), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0))) / 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5546.6939)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))) : _GLF_FUZZED(118.633))), cos(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), bool(true))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, sqrt(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 1.0)))), 0.0, 0.0)), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0)))))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, tan(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(abs(-843.233)) : 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(8415.1701), _GLF_IDENTITY((injectionSwitch)[1], float(vec4((injectionSwitch)[1], 0.0, 1.0, 0.0)))), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, abs(1.0), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))), (true ? _GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), determinant(_GLF_IDENTITY(mat2(0.0, tan(0.0), 0.0, 0.0), (true ? mat2(0.0, tan(0.0), 0.0, 0.0) : _GLF_FUZZED(mat2(-49.98, -114.404, -46.30, -1.8))))), sin(0.0)))) : _GLF_FUZZED(-71.67))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y)))), _GLF_IDENTITY(((bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, max(-8.9, _GLF_IDENTITY(-8.9, float(mat4x3(-8.9, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-40.90) : 1.0))), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), min(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y))))) && true, _GLF_IDENTITY(bool(bvec2(((bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, max(-8.9, _GLF_IDENTITY(-8.9, float(mat4x3(-8.9, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-40.90) : 1.0))), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), min(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y))))) && true, false)), true && (_GLF_IDENTITY(bool(bvec2(((bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, max(-8.9, _GLF_IDENTITY(-8.9, float(mat4x3(-8.9, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-40.90) : 1.0))), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), min(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y))))) && true, false)), (bool(bvec2(((bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, max(-8.9, _GLF_IDENTITY(-8.9, float(mat4x3(-8.9, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-40.90) : 1.0))), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), min(mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(8415.1701), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8.9, float(mat3(-8.9, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, tan(0.0), 0.0, 0.0)), sin(0.0)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y))))) && true, false))) || false))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (mat4x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), vec2(mat3(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (mat4x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((2), ((2)) ^ 0), clamp(~ _GLF_IDENTITY((2), ((2)) ^ 0), ~ _GLF_IDENTITY((2), ((2)) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((2), ((2)) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) ^ 0)), ((2)) ^ 0)) - 0))))), 0 ^ (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((2), ((2)) ^ 0), clamp(~ _GLF_IDENTITY((2), ((2)) ^ 0), ~ _GLF_IDENTITY((2), ((2)) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((2), ((2)) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) ^ 0)), ((2)) ^ 0)) - 0))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((2), ((2)) ^ 0), clamp(~ _GLF_IDENTITY((2), ((2)) ^ 0), ~ _GLF_IDENTITY((2), ((2)) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((2), ((2)) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) ^ 0)), ((2)) ^ 0)) - 0))))), 0 ^ (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((2), ((2)) ^ 0), clamp(~ _GLF_IDENTITY((2), ((2)) ^ 0), ~ _GLF_IDENTITY((2), ((2)) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((2), ((2)) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) ^ 0)), ((2)) ^ 0)) - 0))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)))).x)), mix(float(_GLF_FUZZED(6.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(5.7)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2((injectionSwitch)[0], 0.0, 1.0, 0.0), (mat2((injectionSwitch)[0], 0.0, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-4020.8474)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(1.3)), bvec2(true, false))).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6106.9219)), vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), bvec2(false, true))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0)))[0])), injectionSwitch[1]), mix(vec2(_GLF_FUZZED(vec2(9.0, 987.662).r), (vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0)))[0])), injectionSwitch[1]))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0)))[0])), injectionSwitch[1]))[0], _GLF_FUZZED(7987.7381)), bvec2(true, false)))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6106.9219)), vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (true) || false)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[0])), injectionSwitch[1])).y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(tan(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8496.2771, -2187.1972)) : injectionSwitch)))).x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bool(bool(false))))), false))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (read_val) / 1u)) | (read_val))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (true ? vec2(0.0, 0.0) + (injectionSwitch) : _GLF_FUZZED(mat2(0.0, -0.7, 6.1, 4.6)[0])))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (false ? _GLF_FUZZED(9251.9282) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 0.0) + (injectionSwitch)).y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), false)))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-630.422))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))))))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, false, true)))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))))))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true))) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))) && true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
