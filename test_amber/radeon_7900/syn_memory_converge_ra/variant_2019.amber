#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_17 {
 uvec2 _f0;
} ;

struct _GLF_struct_16 {
 uint workgroup_size;
 uvec2 _f0;
} ;

struct _GLF_struct_18 {
 vec4 _f0;
 vec2 _f1;
 mat2 _f2;
 mat3x2 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 mat4x2 _f1;
 mat2 _f2;
 bool _f3;
 uint workgroup_id;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
 mat3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 ivec4 _f1;
 ivec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 ivec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 vec2 _f1;
 int _f2;
} ;

struct _GLF_struct_6 {
 bool _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 mat4x3 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 mat4 _f1;
 ivec4 _f2;
 mat4x3 _f3;
 mat3 _f4;
 mat3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat4x3 _f1;
 mat2x4 _f2;
 bvec4 _f3;
 mat3x2 _f4;
 mat2x4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat4x3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 ivec2 _f1;
 uvec2 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 uvec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 mat2x3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_5 _f0;
 _GLF_struct_8 _f1;
 bvec2 _f2;
 mat4 _f3;
 uint subgroup_size;
 _GLF_struct_11 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_5(_GLF_struct_0(uvec2(1u), ivec2(1), uvec2(1u), mat3x2(1.0), uvec2(1u), uvec3(1u), mat3(1.0)), mat2x3(1.0), _GLF_struct_1(mat4x2(1.0), mat4x3(1.0), mat4(1.0)), _GLF_struct_2(uvec3(1u), mat4x3(1.0), mat2x4(1.0), bvec4(true), mat3x2(1.0), mat2x4(1.0), mat4(1.0)), _GLF_struct_3(uvec3(1u), mat2x3(1.0)), _GLF_struct_4(ivec2(1), mat4(1.0), ivec4(1), mat4x3(1.0), mat3(1.0), mat3(1.0), ivec4(1))), _GLF_struct_8(mat4x2(1.0), mat4x3(1.0), _GLF_struct_6(true, ivec4(1)), _GLF_struct_7(vec3(1.0), vec2(1.0), 1), ivec3(1)), bvec2(true), mat4(1.0), gl_SubgroupSize, _GLF_struct_11(_GLF_struct_9(bvec3(true), ivec2(1), mat3x2(1.0)), _GLF_struct_10(ivec2(1), ivec4(1), ivec2(1), mat3x2(1.0))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(vec4(1.0), vec2(1.0), mat2(1.0), mat3x2(1.0), _GLF_struct_16(gl_WorkGroupSize.x, uvec2(1u)), _GLF_struct_17(uvec2(1u)));
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_14(_GLF_struct_13(ivec4(1), mat4x2(1.0), mat2(1.0), true, gl_WorkGroupID.x)), mat3(1.0), bvec3(true));
 uint workgroup_base = _GLF_struct_replacement_18._f4.workgroup_size * _GLF_struct_replacement_15._f0._f0.workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_12.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
