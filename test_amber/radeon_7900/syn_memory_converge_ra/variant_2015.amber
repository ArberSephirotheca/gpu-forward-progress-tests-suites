#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, determinant(mat4(exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / sqrt(1.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(injectionSwitch, 1.0, determinant(mat4(exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / sqrt(1.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(mat4(-1.5, 189.747, 4574.4778, -5542.4887, 254.840, -17.16, -7089.7272, -0.4, -301.237, 337.856, 7667.0540, 3.9, 2.4, 6.8, 745.443, 6.1)))), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, determinant(mat4(exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / sqrt(1.0), (false ? _GLF_FUZZED(-91.10) : (1.0) / sqrt(1.0)))), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, determinant(mat4(exp(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - sqrt(0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((7.8))), bool(false))))), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-23.35))))), 1.0))), (vec2(mat4(injectionSwitch, 1.0, determinant(mat4(exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0)), float(float(float(vec4(0.0, 0.0, 1.0, 1.0)))))), 0.0), (max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0)), float(_GLF_IDENTITY(float(float(vec4(0.0, 0.0, 1.0, 1.0))), clamp(float(float(vec4(0.0, 0.0, 1.0, 1.0))), float(float(vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(float(float(vec4(0.0, 0.0, 1.0, 1.0))), (true ? float(float(vec4(0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(96.50)))))))), 0.0)) - sin(0.0))), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, log(1.0), 1.0)), float(mat3(float(mat2(0.0, 0.0, log(1.0), 1.0)), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0)), 1.0, sin(0.0)), (false ? _GLF_FUZZED(vec3(-98.73, 8.3, -3.2)) : vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, log(1.0), 1.0)), float(mat3(float(mat2(0.0, 0.0, log(1.0), 1.0)), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0)), 1.0, sin(0.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)))), 0.0, 1.0)), mix(vec4((vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat2x4(sin(0.0), 0.0, 0.0, 0.0, log(round(length(normalize(vec2(1.0, 1.0))))), 0.0, 1.0, determinant(mat3(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(mat2x4(-9.3, -8250.0204, 512.898, -56.61, 7.5, -1.3, 6.1, 880.040)) : mat2x4(sin(0.0), 0.0, 0.0, 0.0, log(round(length(normalize(vec2(1.0, 1.0))))), 0.0, 1.0, determinant(mat3(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)))), 0.0, 1.0)))[0], (vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, cos(sqrt(0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))), 0.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - sin(0.0)), sin(0.0)))), 0.0, 1.0)))[1], (vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0))), 1.0, sin(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)))), 0.0, 1.0)))[2], (vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5145.6885))))), 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), 1.0 * (float(1.0))))), sin(0.0)))), 0.0, 1.0)))[3]), vec4(_GLF_FUZZED(-8.2), _GLF_FUZZED(78.01), _GLF_FUZZED(760.547), _GLF_FUZZED(-261.757)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))), float(float(float(vec4(0.0, 0.0, 1.0, 1.0)))))), 0.0))) + 0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0))) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(vec2(-8109.5971, -66.54)) : injectionSwitch)), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8109.5971, -66.54)) : injectionSwitch), (_GLF_IDENTITY(true ? (false ? _GLF_FUZZED(vec2(-8109.5971, -66.54)) : injectionSwitch) : _GLF_FUZZED(vec2(1.8, -71.67)), (true ? (false ? _GLF_FUZZED(vec2(-8109.5971, -66.54)) : injectionSwitch) : _GLF_FUZZED(vec2(1.8, -71.67))) / vec2(1.0, 1.0))))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8109.5971, -66.54)) : injectionSwitch)), injectionSwitch, injectionSwitch)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, determinant(mat4(exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(352.614)), bool(false))), 1.0)), (1.0) / sqrt(1.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, determinant(mat4(exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat2(1.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, determinant(mat4(exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, sqrt(0.0), 1.0))))), 1.0, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) * (0.0)), 1.0)), 0.0, 1.0, 0.0, 1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), (vec2(mat4(injectionSwitch, 1.0, determinant(mat4(exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0)), float(float(float(vec4(0.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(float(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(222.892), mix(float(_GLF_FUZZED(222.892)), float(_GLF_FUZZED(-898.655)), bool(false)))), _GLF_IDENTITY(float(0.0), (true ? float(0.0) : _GLF_FUZZED(6.2))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0)), float(float(float(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), 1.0, 1.0)))))) / 1.0)), 0.0)), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9532.0295))), 0.0)), mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)))), 0.0, 1.0)), mix(vec4((vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)))), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)))), 0.0, 1.0)))[0], (vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(bvec2((true), true)))), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)), clamp(vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)), _GLF_IDENTITY(vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)), (vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))) - vec3(0.0, 0.0, 0.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)))), 0.0, 1.0)))[1], (vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)))))) - 0.0), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)))), 0.0, 1.0)))[2], (vec4(mat2x4(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(222.892)), float(0.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(211.445), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6316.9158)), bvec2(true, false))).x < injectionSwitch.y))))), 1.0, 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0)))), 0.0, 1.0)))[3]), vec4(_GLF_FUZZED(-8.2), _GLF_FUZZED(78.01), _GLF_FUZZED(760.547), _GLF_FUZZED(-261.757)), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))), float(float(float(vec4(0.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))) + 0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0))) * _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec3(vec2(1.0, 1.0), 0.0))), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8109.5971, -66.54)) : injectionSwitch)), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8109.5971, -66.54)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-8109.5971, -66.54)) : injectionSwitch) : _GLF_FUZZED(vec2(1.8, -71.67))))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8109.5971, -66.54)) : injectionSwitch)), injectionSwitch, injectionSwitch)))).y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), true && ((false))), false)))) && true), bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))), ((false)) && true), ! (! (false || _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false), true, true)))))) && true)))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), bool(_GLF_IDENTITY(bvec2(false || _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, false)), true && (bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, false))))))))) && true), false), bvec2(bvec2(bvec2(false || _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, false)), true && (bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, false))))))))) && true), false)))))), bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(! (! (false || _GLF_IDENTITY((false), ((false)) && true))), ! (! (! (! (false || _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) && true) && true))))))), false, false, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(433.417) : injectionSwitch.x)), 1.0, sqrt(1.0), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) | uvec2(0u, 0u)))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + 0u), (0u) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u)))) ^ 0u)) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(5u)))), 0u)) + (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (false ? _GLF_FUZZED((~ atomicLoad(workgroup_size, -79464, -95326, 94720))) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), 0u ^ (min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + (workgroup_id))) << 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + (workgroup_id))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + (workgroup_id))) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + (workgroup_id))) << 0u))) ^ 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + (workgroup_id))) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + (workgroup_id))) << 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + (workgroup_id))) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + (workgroup_id))) << 0u)))) << 0u), _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u | (workgroup_id), (0u | (workgroup_id)) ^ 0u))))) | 0u), workgroup_id))))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((~ (subgroup_local_id)), min((~ (subgroup_local_id)), (~ (subgroup_local_id)))))), clamp(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), min((~ (subgroup_local_id)), (~ (subgroup_local_id)))), (_GLF_IDENTITY((~ (subgroup_local_id)), min((~ (subgroup_local_id)), (~ (subgroup_local_id))))) | (_GLF_IDENTITY((~ (subgroup_local_id)), min((~ (subgroup_local_id)), (~ (subgroup_local_id)))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((~ (subgroup_local_id)), min((~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), _GLF_IDENTITY((~ (subgroup_local_id)), 1u * ((~ (subgroup_local_id)))))))), min(uint(uint(_GLF_IDENTITY((~ (subgroup_local_id)), min((~ (subgroup_local_id)), (~ (subgroup_local_id)))))), uint(uint(_GLF_IDENTITY((~ (subgroup_local_id)), min((_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))), (~ (subgroup_local_id)))))))), uint(uint(_GLF_IDENTITY((~ (subgroup_local_id)), min((~ (subgroup_local_id)), (~ (subgroup_local_id))))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true, bool(_GLF_IDENTITY(bvec3((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-9.3, -4.0), vec2(1101.2212, -0.5))) : injectionSwitch)).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(injectionSwitch, vec2(-9.3, -4.0), vec2(1101.2212, -0.5))) : injectionSwitch)).y)))) || false) && true)))
        return;
       return;
      }
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read_val = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(write_val, (write_val) | 0u))), 4, 64, 2), min(atomicLoad(write_val, 4, 64, 2), atomicLoad(_GLF_IDENTITY(write_val, (write_val) << 0u), 4, 64, 2)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
