#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)))), 0u) ^ (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3915.4196, 9470.0733)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4.4, (4.4) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(4.4, (4.4) / 1.0), 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(4.4, (4.4) / 1.0), 1.0, 1.0)))), (false ? _GLF_FUZZED(-15.01) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(4.4, (4.4) / 1.0), 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(4.4, (4.4) / 1.0), 1.0, 1.0)))))))))) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bool(bool(bvec2(false, true))), true && (_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(false, true))), true && (bool(bool(bvec2(false, true))))))))))))) || ((! (injectionSwitch.x > injectionSwitch.y))))), false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-765.461)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-765.461)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-69.64), _GLF_FUZZED(0.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), false)), false, false))))), ! (! (! ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-765.461)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), false)), false, false)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x), mix(float(_GLF_FUZZED(-1.2)), float(min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)), bool(true)))) > injectionSwitch.y, false, false)), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false, _GLF_IDENTITY(false, false || (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false))))))))))), _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)) && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool((! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))) && true)) && true, bool(bvec3((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))) && true)) && true, true, false))))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(fma(996.043, 6397.5452, -3310.4175))))) > injectionSwitch.y)), true))))), false, false))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), 1.0, 1.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0), mat2(mat3x4(mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0))))))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])) / vec2(1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x), mix(float(_GLF_FUZZED(-1.2)), float(min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)), bool(true)))) > injectionSwitch.y, false, false)), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(92.29) : injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), false))))))), false)))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(92.29) : injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, log(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(7639.6701), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), false))))))), false))))))))))) && true))), _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)) && (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool((! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool((! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))))) && true), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))) && (((! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))) && true)) && true, bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.03), _GLF_FUZZED(-1.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.03), _GLF_FUZZED(-1.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true))), false)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true))), false)))), false, true, true))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(69.61)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y)))))))))))))))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(69.61)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y)))))))))))))))), true && ((! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(69.61)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y))))))))))))))))))))))))) && true)) && true, true, false), bvec3(bvec4(bvec3((! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.03), _GLF_FUZZED(-1.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.03), _GLF_FUZZED(-1.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true))), false)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true))), false)))), false, true, true))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(69.61)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y)))))))))))))))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(69.61)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y)))))))))))))))), true && ((! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(69.61)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y))))))))))))))))))))))))) && true)) && true, true, false), true))))))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(fma(996.043, 6397.5452, -3310.4175))))) > injectionSwitch.y)), true))))), false, false)))))))) && _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? injectionSwitch.x : _GLF_FUZZED(4.4))) > injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))), false || ((! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, false, true)))), false || ((! (injectionSwitch.x > injectionSwitch.y)))))))), false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true))))), false, false)))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-6.3))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0)))) > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(-3737.8119)), vec2(_GLF_FUZZED(684.215), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, true)))))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) > injectionSwitch.y, false, false)), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0))))), vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false))))))))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))) && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool((! (injectionSwitch.x > injectionSwitch.y))))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (! (((! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), (bool(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))) && true))) && true)) && true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, true)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, true)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y)), true))), ! (! (! (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, true)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y)), true))))))))))), false, false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), bvec2(bvec3(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), false))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), bvec2(bvec3(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), false))), false, true)), true))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))) && true)))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true))))), false, false)))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-6.3))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(19.08)), float(0.0), bool(true))), 1.0, exp(0.0)))) > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false, true)))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(-3737.8119)), vec2(_GLF_FUZZED(684.215), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, true))))), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(-3737.8119)), vec2(_GLF_FUZZED(684.215), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, true)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) > injectionSwitch.y, false, false)), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0)), _GLF_IDENTITY(clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), sin(0.0), 1.0)), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0) : _GLF_FUZZED(vec4(96.10, 434.599, -470.593, -9.4)))))))))), vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(vec2(0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, false))))))))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))) && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool((! (injectionSwitch.x > injectionSwitch.y))))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))) || false))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), false, true, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), false, true, false))) && true)))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(((! (injectionSwitch.x > injectionSwitch.y))), true)))))))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), false, true, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), false, true, false))) && true)))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(((! (injectionSwitch.x > injectionSwitch.y))), true)))))))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), false, true, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), false, true, false))) && true)))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(((! (injectionSwitch.x > injectionSwitch.y))), true)))))))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), (! ((! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), false, true, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))), false, true, false))) && true)))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(((! (injectionSwitch.x > injectionSwitch.y))), true)))))))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))) || false)))) || false), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, sin(0.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-48.17), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.8)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), _GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6891.6456)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((((! (injectionSwitch.x > injectionSwitch.y)))), true, true)), ! (! (bool(bvec3((((! (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))), true && (_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6891.6456)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((((! (injectionSwitch.x > injectionSwitch.y)))), true, true)), ! (! (bool(bvec3((((! (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))), true && ((bool(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6891.6456)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((((! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((((! (injectionSwitch.x > injectionSwitch.y)))), true, true)), ! (! (bool(bvec3((((! (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))))))) && true))) && true)) && true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, true)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false)), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(5.1)), bool(false)))))) * vec2(1.0, 1.0)), injectionSwitch)).x) / 1.0) > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, true)))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0)) * 1.0)) - 0.0))) > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (! (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, true)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, true)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y)), true)))), bool(bvec4(! (! (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, true)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y)), true)))), false, false, true))))))))))))), false, false))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), bvec2(bvec3(bvec2(bool(bvec4(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), false))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), bvec2(bvec3(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false)), true), false))), false, true)), true))))))))))))), true, _GLF_IDENTITY(false, true && (false)), false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (0u ^ 0u) | (_GLF_IDENTITY(workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packUnorm4x8(vec4(-186.551, 986.062, -90.94, -5973.5308))) : workgroup_id))));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) ^ 0u)) | 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size) << 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) + 0u) + 1), _GLF_IDENTITY(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))))), (subgroup_local_id + 1)), min(clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))))), (subgroup_local_id + 1)), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))))), (subgroup_local_id + 1)))), 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1)), 0u, 1u, 1u), min(uvec4(clamp((subgroup_local_id + _GLF_IDENTITY(1, (1) + 0)), (subgroup_local_id + 1), (subgroup_local_id + 1)), 0u, 1u, 1u), _GLF_IDENTITY(uvec4(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), 0u, 1u, 1u), (uvec4(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), 0u, 1u, 1u)) | (uvec4(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), 0u, 1u, 1u)))))) | uvec4(0u, 0u, 0u, 0u))))))) >> 0u) / 1u))) % subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false), true)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? 1 : _GLF_FUZZED(97756)))))) - 0, ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), 0 | (int(_GLF_IDENTITY(int(1), min(int(1), int(1))))))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 1.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.6))), injectionSwitch.y)), 1.0, log(1.0), 1.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))) && true) ? 1 : _GLF_FUZZED(97756)))))) - 0) / 1), ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), _GLF_IDENTITY((int(int(1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1, clamp(_GLF_IDENTITY((_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1, ((_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1) | 0), _GLF_IDENTITY((_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1, ((_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1) / 1), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1))) << 0), (false ? _GLF_FUZZED(-11112) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((int(int(1))), clamp(_GLF_IDENTITY((int(int(1))), int(_GLF_IDENTITY(ivec2((int(int(1))), 1), min(ivec2((int(int(1))), 1), ivec2((int(int(1))), 1))))), (int(int(1))), (int(int(1))))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1)), 0 ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (int(int(1)))))) / 1)))))), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, min((1) >> 0, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | ((1) >> 0)))))))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(5632, 0 | (5632))) : (int(int(1)))))) / 1)) : _GLF_FUZZED(_GLF_IDENTITY(-24037, max(-24037, -24037))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((int(int(_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY((int(int(1))), (false ? _GLF_FUZZED(5632) : (_GLF_IDENTITY(int(int(1)), min(int(int(1)), int(int(1)))))))) / 1))))) / 1))) - 0) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(_GLF_IDENTITY(int(7), min(int(7), int(7)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(7), min(int(7), int(7)))), int(ivec4(int(_GLF_IDENTITY(int(7), min(int(7), int(7)))), 0, 1, 0)))) | (int(_GLF_IDENTITY(int(7), min(int(7), int(7))))))))), (_GLF_IDENTITY(int(7), int(7))) >> 0)))) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))), false, true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) : _GLF_FUZZED(vec2(87.91, 23.44))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x), float(_GLF_FUZZED(_GLF_IDENTITY(-6167.0410, max(-6167.0410, _GLF_IDENTITY(-6167.0410, mix(float(_GLF_FUZZED(939.045)), float(-6167.0410), bool(true))))))), bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x) / sqrt(1.0)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) && true), true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(84955) : 64)), 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) | 0), max(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) | 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) | 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) | 0)) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79322) : 0)), 0 ^ (0)), 0))))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(33414) : 0)));
   subgroupAll(true);
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ((! (false))) || false))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), (bool(_GLF_IDENTITY((false), bool(bvec2((false), true))))) && true)) || false)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false, false)), (bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false, false))) && true)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false, false)), (bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false, false))) && true)), false))))) || false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
