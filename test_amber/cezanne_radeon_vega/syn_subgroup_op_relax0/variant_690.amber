#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), true && (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))))), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-868.362, -393.232)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(_GLF_FUZZED(vec2(-12.06, 54.71).y)), bool(false)))) - 0.0)))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(false, false, false), true)))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), false), bvec3(bvec4(bvec3(false, false, false), true))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), bool(bool(bool(! (false)))))))))))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, min(1, 1))), ~ (~ (ivec2(1, _GLF_IDENTITY(1, min(1, 1))))))), (int(ivec2(1, 1))) >> 0))], (gl_WorkGroupSize[1]) << 0u), gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), false || (! (_GLF_IDENTITY((false) && true, true && ((false) && true))))))), ! (! ((false) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), (float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))) * 1.0))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch), max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-680.525)), float(1.0), bool(true))), 0.0)), max(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.5) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.6) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 0.0)), float(mat2(float(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, tan(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0)), 1.0, 1.0, log(1.0)), mat4(1.0) * (mat3x4(injectionSwitch, 1.0, 0.0, determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0)), 1.0, 1.0, log(1.0)))))))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id)))) << 0u)) / 1u), 0u | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.4, clamp(6.4, 6.4, 6.4)))), float(injectionSwitch.y), bool(true)))) + 0.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.4, clamp(6.4, 6.4, 6.4)))), float(injectionSwitch.y), bool(true)))) + 0.0))), bool(bool(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.4, clamp(6.4, 6.4, 6.4)))), float(injectionSwitch.y), bool(true)))) + 0.0))))))))))), true && (bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(refract(-20.96, intBitsToFloat(96930), 2.2)) : _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.9))) : _GLF_FUZZED(-7.6)))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)), 0.0))), (false ? _GLF_FUZZED(mat4x3(-990.144, -8.1, -6058.6121, 68.25, -5.5, -85.99, 33.55, -2.9, 54.64, 7.9, -4.6, -771.318)) : mat4x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(16.83), _GLF_FUZZED(1.4)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.3, 83.92)) : injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))[1], 1.0 * (_GLF_IDENTITY((injectionSwitch), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))[1])), ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.4, max(6.4, 6.4)))), float(injectionSwitch.y), bool(true)))) + 0.0))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.4, max(6.4, 6.4)))), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.4, max(6.4, 6.4)))), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(125.009)), bool(false))))) + 0.0)))))))), true && (bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), bool(bvec4(false, true, _GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(mat4x3(-990.144, -8.1, -6058.6121, 68.25, -5.5, -85.99, 33.55, -2.9, 54.64, 7.9, -4.6, -771.318)) : mat4x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), 1.0 * (max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)) * (0.0)), 0.0)))), sin(0.0), 0.0))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(16.83), _GLF_FUZZED(1.4)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0], mix(float((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0]), float(_GLF_FUZZED(-3.7)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y)))))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.4)), float(injectionSwitch.y), bool(true)))) + 0.0))))), true && (bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0), (false ? _GLF_FUZZED(mat4x3(-990.144, -8.1, -6058.6121, 68.25, -5.5, -85.99, 33.55, -2.9, 54.64, 7.9, -4.6, -771.318)) : mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) - 0.0), tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(16.83), _GLF_FUZZED(1.4)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.4)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) + 0.0), bool(true)))) + 0.0))))), true && (bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), (false ? _GLF_FUZZED(mat4x3(-990.144, -8.1, -6058.6121, 68.25, -5.5, -85.99, 33.55, -2.9, 54.64, 7.9, -4.6, -771.318)) : mat4x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), sin(0.0), 0.0))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(16.83), _GLF_FUZZED(1.4)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1]))))), (injectionSwitch)[1]))) - 0.0)), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1]))))), (injectionSwitch)[1]))) - 0.0))) / vec2(1.0, 1.0)), bvec2(true, true))).y)))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(6.4)), float(injectionSwitch.y), bool(true)))) + 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), min(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), min(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))))).y) + 0.0), mix(float(_GLF_FUZZED(6.4)), float(injectionSwitch.y), bool(true)))) + 0.0) + 0.0)))))), _GLF_IDENTITY(true && (bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0), (false ? _GLF_FUZZED(mat4x3(-990.144, -8.1, -6058.6121, 68.25, -5.5, -85.99, 33.55, -2.9, 54.64, 7.9, -4.6, -771.318)) : mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(16.83), _GLF_FUZZED(1.4)), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y))))), bool(bool(true && (bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0), (false ? _GLF_FUZZED(mat4x3(-990.144, -8.1, -6058.6121, 68.25, -5.5, -85.99, 33.55, -2.9, 54.64, 7.9, -4.6, -771.318)) : mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(16.83), _GLF_FUZZED(1.4)), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y)))))))))))))))), false, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + tan(vec2(0.0, 0.0))).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), ((! ((injectionSwitch.x < injectionSwitch.y)))) || false)))))) && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), ! (! (! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), mix(float(_GLF_FUZZED(-7691.4019)), float(0.0 + (injectionSwitch.x)), bool(true)))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(356.490)), bool(false))))))) > injectionSwitch.y))))))))) || false), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, false), false))))))))))))) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-8430.3343 * _GLF_IDENTITY(-5140.3524, clamp(-5140.3524, -5140.3524, -5140.3524)))) : 0.0)) + (injectionSwitch.x)) > injectionSwitch.y))))))))) || false), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), max(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))), ~ (~ (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), 0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, min((0u) ^ 0u, (0u) ^ 0u))))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))))))) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))))))) : _GLF_FUZZED(workgroup_id))), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u, 1u)))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))))))) : _GLF_FUZZED(workgroup_id))), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u, 1u))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))))))) : _GLF_FUZZED(workgroup_id))), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u, 1u)))))) + 1, 0u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))))))) : _GLF_FUZZED(workgroup_id))), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u, 1u)))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))))))) : _GLF_FUZZED(workgroup_id))), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u, 1u))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))))))) : _GLF_FUZZED(workgroup_id))), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u, 1u)))))) + 1, 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))))))) : _GLF_FUZZED(workgroup_id))), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u, 1u)))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))))))) : _GLF_FUZZED(workgroup_id))), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u, 1u))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), 0u | (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), min(uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u))), uint(uvec3(0u, 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u))))))))) : _GLF_FUZZED(workgroup_id))), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u, 1u)))))) + 1, 0u, 0u)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), max(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), ~ (~ (_GLF_IDENTITY(0u, (0u) - (0u | 0u))))), (0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))), max(0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))), (0u) - (0u | 0u)), 0u ^ (_GLF_IDENTITY(0u, (0u) - (0u | 0u))))))) ^ 0u), (0u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), 0u))))))))) + 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), max(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), ~ (~ (_GLF_IDENTITY(0u, (0u) - (0u | 0u))))), (0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))), max(0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))), (0u) - (0u | 0u)), 0u ^ (_GLF_IDENTITY(0u, (0u) - (0u | 0u))))))) ^ 0u), (0u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), 0u))))))))) + 1, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u))))), ((uint(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), max(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), 0u ^ (_GLF_IDENTITY(0u, (0u) - (0u | 0u))))))) ^ 0u), (0u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), 0u)))))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((subgroup_local_id) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), max(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), 0u ^ (_GLF_IDENTITY(0u, (0u) - (0u | 0u))))))) ^ 0u), (0u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), 0u)))))))), min((subgroup_local_id) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), max(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), 0u ^ (_GLF_IDENTITY(0u, (0u) - (0u | 0u))))))) ^ 0u), (0u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), 0u)))))))), (subgroup_local_id) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), max(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (0u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u | 0u)), 0u ^ (_GLF_IDENTITY(0u, (0u) - (0u | 0u))))))) ^ 0u), (0u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u), 0u))))))))))))) + 1, 0u, 0u)))) - _GLF_IDENTITY(0u, (0u) << 0u)) * _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), (uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) | (uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), (uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) | (uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), ((~ (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), (uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) | (uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), (uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) | (uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) * 1u)))) < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 1), clamp(ivec2(0, 1), ivec2(0, 1), ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0))))) | (0)), 1)))), ~ (~ (int(_GLF_IDENTITY(ivec2(0, 1), clamp(ivec2(0, 1), ivec2(0, 1), ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) >> 0))), min((~ (_GLF_IDENTITY(0, (0) >> 0))), (~ (_GLF_IDENTITY(0, (0) >> 0))))))) | (0)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-4550))))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(false, false, true)), false)), true && (bool(bvec2(bool(bvec3(false, false, true)), false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, true))) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(workgroup_id)) : injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, tan(0.0), 1.0)), _GLF_IDENTITY(float(mat2x3(determinant(mat2(1.0, 0.0, tan(0.0), 1.0)), 0.0, abs(1.0), 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(1.2)), float(float(mat2x3(determinant(mat2(1.0, 0.0, tan(0.0), 1.0)), 0.0, abs(1.0), 0.0, 0.0, 1.0))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((720.674))), bvec2(true, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((720.674))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((720.674))), bvec2(true, false))))))).y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false)))), false, true, true))) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(workgroup_id)) : injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, tan(0.0), 1.0)), _GLF_IDENTITY(float(mat2x3(determinant(mat2(1.0, 0.0, tan(0.0), 1.0)), 0.0, abs(1.0), 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(1.2)), float(float(mat2x3(determinant(mat2(1.0, 0.0, tan(0.0), 1.0)), 0.0, abs(1.0), 0.0, 0.0, 1.0))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2104.0990), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false)))[0], injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, max(0, 0))])))), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(1, ~ (~ (1)))))])).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((720.674))), bvec2(true, false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((720.674))), bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((720.674))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.8, 1.0 * (-7.8))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((720.674))), bvec2(true, false)))) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(96867u))), vec2(_GLF_FUZZED(91.47), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), mix(vec2(_GLF_FUZZED(-7.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED((720.674))), bvec2(true, false))))))).y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true, ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-61.34)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
