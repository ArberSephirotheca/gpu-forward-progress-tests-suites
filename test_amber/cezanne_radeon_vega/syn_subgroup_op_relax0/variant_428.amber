#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 mat3x4 _f0;
 mat2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_8 {
 uint workgroup_size;
 vec2 _f0;
 uvec2 _f1;
 ivec4 _f2;
 uvec4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 mat3x2 _f1;
 int _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 float _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 float _f1;
 uint _f2;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 uint subgroup_size;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 ivec4 _f2;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-51.18, -35.50).g)), vec2(_GLF_FUZZED(642.778), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-51.18, -35.50).g)), vec2(_GLF_FUZZED(642.778), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-51.18, -35.50).g)), vec2(_GLF_FUZZED(642.778), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), true && ((! (_GLF_IDENTITY(true, ! (! (true)))))))))), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) || false), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(bvec4(true), _GLF_struct_0(1u, uvec3(1u))), _GLF_struct_5(_GLF_struct_2(mat4x2(1.0)), _GLF_struct_3(mat3x4(1.0)), gl_SubgroupSize, _GLF_struct_4(bvec3(true), 1.0, 1u)), ivec4(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(_GLF_struct_7(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))))), false)), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)), false)), false))), true)), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))), false))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat3x2(1.0), 1, mat2x4(1.0)), 1.0, _GLF_struct_8(gl_WorkGroupSize.x, vec2(1.0), uvec2(1u), ivec4(1), uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), 0u ^ (1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)) | 0u, uint(uvec2((_GLF_IDENTITY(0u, (0u) * 1u)) | 0u, 0u)))) ^ (1u))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((2.1 - vec2(-0.9, -2723.2577))) : injectionSwitch)).x)))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u))))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u))))), (~ (~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), ((_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u))))), (~ (~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)))) - 0u)))))), bvec3(true)), _GLF_struct_9(mat3x4(1.0), mat2(1.0), vec3(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.y))) - 0.0)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.y))) - 0.0)))), true))), true))), true)))))))), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.y))) - 0.0)))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.y))) - 0.0)))), true))), true))), true)))))))), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), true)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false) && true), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))), true)))))) && true, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && (false))) && true)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true))))) / 1.0)), float(_GLF_FUZZED(53.65)), bool(false))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, exp(sin(0.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat2x3(injectionSwitch, exp(sin(0.0)), 0.0, 1.0, 0.0)), mat2x3(mat2x4(mat3(1.0) * (mat2x3(injectionSwitch, exp(sin(0.0)), 0.0, 1.0, 0.0)))))))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true))), (_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), abs(0.0) + (cos(0.0) * (injectionSwitch.x)))))), bool(true)))) / 1.0)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true))), (_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), abs(0.0) + (cos(0.0) * (injectionSwitch.x)))))), bool(true)))) / 1.0)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false, true))))), false || ((! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) * 1.0) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(_GLF_IDENTITY(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0), mix(vec3((vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))[0], _GLF_FUZZED((- -88.06)), _GLF_FUZZED((-6.4 / 7.6))), vec3(_GLF_FUZZED(5.5), (vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))[1], (vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))[2]), bvec3(false, true, true))))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))), false, true))))))))))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((false) && true), true && (! ((false) && true)))), ! (! (bool(_GLF_IDENTITY(! ((false) && true), true && (! ((false) && true))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))) && true))))), false, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_IDENTITY(_GLF_FUZZED(-0.5), abs(1.0) * (_GLF_FUZZED(-0.5))), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.0)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((4.3))), bool(false)))), bool(true)))), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))))), false, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), clamp(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x), _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), float(mat3(cos(0.0) * (injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0)))))), cos(0.0) * (injectionSwitch.x)))), bool(true))), (_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, mix(float(-0.5), float(_GLF_FUZZED(-7.1)), bool(false)))), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) / 1.0)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), clamp(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x), _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), float(mat3(cos(0.0) * (injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0)))))), cos(0.0) * (injectionSwitch.x)))), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_FUZZED(-0.5)) + 0.0), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) / 1.0)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false, true))))), false || ((! (_GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, (_GLF_IDENTITY(-0.5, mix(float(-0.5), float(_GLF_FUZZED((22.93 / 0.6))), bool(false)))) - sqrt(0.0))), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-0.5, (_GLF_IDENTITY(-0.5, (-0.5) / 1.0)) - 0.0), length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5))), max(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5)))))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(_GLF_IDENTITY(cos(0.0), float(mat2(cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0)))) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5))), max(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5)))))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(_GLF_IDENTITY(cos(0.0), float(mat2(cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0)))) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5))), max(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5)))))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(_GLF_IDENTITY(cos(0.0), float(mat2(cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0)))) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true))))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), float(mat4(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), float(mat2x3(cos(0.0) * (injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(abs(0.0)), 0.0))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.5, length(vec2(0.0, 0.0)) + (-0.5))), _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, (true ? _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, max((_GLF_FUZZED(-0.5)) + 0.0, _GLF_IDENTITY((_GLF_FUZZED(-0.5)) + 0.0, float(vec3((_GLF_FUZZED(-0.5)) + 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-9494.8864)))), _GLF_FUZZED(-0.5)))), float(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.x), max(cos(0.0) * (injectionSwitch.x), cos(0.0) * (injectionSwitch.x)))), bool(true)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), true)))) || false))), false, true)))))))))))))) && true)), false || (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false)), true && (((false))))), _GLF_IDENTITY(false || ((! _GLF_IDENTITY(((false)), true && (((false)))))), ! (! (false || ((! _GLF_IDENTITY(((false)), true && (((false))))))))))))))) && _GLF_IDENTITY(true, (true) && true)), (bool((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false, true)))))), false || (_GLF_IDENTITY((false), ! (! ((false)))))))) && true)) || false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(exp2(24.67)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), true, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(9516.2937)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(9516.2937)), bvec2(false, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(9516.2937)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(9516.2937)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(9516.2937)), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(9516.2937)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(abs(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-6191.1895, 7.9)) : vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.0), _GLF_FUZZED(6.3)), bvec2(false, false))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(9.0), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) * mat2(1.0)), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(abs(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, true, true))))))), false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_11._f0._f2.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(495.481)), float(injectionSwitch.y), bool(true))), false, false, false)))) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))) && true)))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), true))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(495.481)), float(injectionSwitch.y), bool(true))), false, false, false)))) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), true))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(495.481)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(495.481)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(495.481)), float(injectionSwitch.y), bool(true))))), false, false, false)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true))))))), false))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true))))))), false))), true))), false || (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true))))))), false))), true))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true)))), false))))))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true))))))), false))), true)))) || false))))))))))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) || false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) || false), false)), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) || false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) || false), false)), true)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size)), (false ? _GLF_FUZZED(packUnorm4x8(vec4(_GLF_IDENTITY(-44.61, clamp(-44.61, _GLF_IDENTITY(-44.61, 1.0 * (-44.61)), _GLF_IDENTITY(-44.61, _GLF_IDENTITY(mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true)), float(mat3(mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true))))))), -15.04, 405.693, -436.985))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, ~ (~ (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size))), workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size)))), uint(uvec2(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, 1u))))) + subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size)), (false ? _GLF_FUZZED(packUnorm4x8(vec4(_GLF_IDENTITY(-44.61, clamp(-44.61, _GLF_IDENTITY(-44.61, 1.0 * (-44.61)), _GLF_IDENTITY(-44.61, _GLF_IDENTITY(mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true)), float(mat3(mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true))))))), -15.04, 405.693, -436.985))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, ~ (~ (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size))), workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size)))), uint(uvec2(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, 1u))))) + subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size)), (false ? _GLF_FUZZED(packUnorm4x8(vec4(_GLF_IDENTITY(-44.61, clamp(-44.61, _GLF_IDENTITY(-44.61, 1.0 * (-44.61)), _GLF_IDENTITY(-44.61, _GLF_IDENTITY(mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true)), float(mat3(mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED((128.253))), float(_GLF_IDENTITY(-44.61, (-44.61) - 0.0)), bool(true))))))), -15.04, 405.693, -436.985))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, ~ (~ (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size))), workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size)))), uint(uvec2(workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size, 1u))))) + subgroup_local_id)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_size), 0u ^ ((_GLF_struct_replacement_6._f1.subgroup_size))) >> (32080u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u | (0u))))) + 0u))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_6._f1.subgroup_size), 0u ^ (workgroup_base + subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_6._f1.subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u))), (workgroup_base) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_size, (_GLF_struct_replacement_6._f1.subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_size, 0u ^ (_GLF_struct_replacement_6._f1.subgroup_size)))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_6._f1.subgroup_size)) | 0u);
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0))), float(float(injectionSwitch.x)))), float(_GLF_FUZZED(290.185)), bool(false))) > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(9425.4315))), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_struct_replacement_6._f1.subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))) || false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(224.527)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (0) * 1)), int(ivec3(_GLF_IDENTITY(64, (64) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (0) * 1)), 1, 1))), _GLF_IDENTITY(64, ~ (~ (64))))))), 0);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), (((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec2(false, false)))), false || (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))))))))) || false)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
