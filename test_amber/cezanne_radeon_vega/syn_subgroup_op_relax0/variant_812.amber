#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-3.2))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-3.2))) > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-3.2))) > injectionSwitch.y)), false), false)))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (true ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_FUZZED(uvec3(137926u, 55503u, 161773u))))).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1])))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), true && (bool(bvec3(_GLF_DEAD(false), false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false)))))), true, true, true)))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false, bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false)))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))))) ^ (uint(workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), 0u ^ (uint(workgroup_base + subgroup_id * subgroup_size))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) << 0u))))), 0u ^ (uint(workgroup_base + subgroup_id * subgroup_size))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u))))), 0u ^ (uint(workgroup_base + subgroup_id * subgroup_size))))), ~ (~ ((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u))))), 0u ^ (uint(workgroup_base + subgroup_id * subgroup_size))))))))) | ((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) << 0u))))), 0u ^ (uint(workgroup_base + subgroup_id * subgroup_size))))))))) - 0u)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(44115) : _GLF_IDENTITY(1, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? 1 : _GLF_FUZZED(findMSB(-51581))))))) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (uvec4(subgroup_local_id, 0u, 0u, 0u)), uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec4(0u, 0u, 0u, 0u) + (uvec4(subgroup_local_id, 0u, 0u, 0u))))), uvec4(subgroup_local_id, 0u, 0u, 0u), uvec4(subgroup_local_id, 0u, 0u, _GLF_IDENTITY(0u, (1u & 1u) * (0u))))))) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), min(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(1u, (1u) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), 0u)), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), 0u))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)), 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), clamp(_GLF_IDENTITY(max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), uvec3(0u, 0u, 0u) | (max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) + 0u))))))), max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)))))) | (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))))), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), 0u))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), ~ (~ (_GLF_IDENTITY(0u, (0u) - 0u)))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), clamp(_GLF_IDENTITY(max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), uvec3(0u, 0u, 0u) | (max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)))), max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u))), 1u)), max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)))))) | (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)), uint(_GLF_IDENTITY(uvec2(max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)), 0u), clamp(uvec2(max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)), 0u), uvec2(max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)), 0u), uvec2(max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)), 0u)))))))))), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), 0u))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)), _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), clamp(_GLF_IDENTITY(max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), uvec3(0u, 0u, 0u) | (max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)))), max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), _GLF_IDENTITY(max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), max(_GLF_IDENTITY(max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)), uvec3(1u, 1u, 1u) * (max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)))), max(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)))))) | (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))))), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), 0u))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)), _GLF_IDENTITY(0u, (0u) - 0u))))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)))))) | (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))))), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), 0u))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)), _GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))), (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u)))))) | (uvec3(uvec4(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))))))), (uvec3(uvec4(uvec3(subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)), 1u), 0u))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), max(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))))) * uvec3(1u, 1u, 1u))))))))) ^ 0u)) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), 0u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), 0u, 1u), uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), 0u, 1u)))))))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (uint(uvec3(subgroup_size, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u)))) ^ 0u)))) : _GLF_FUZZED(72492u)))))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) + 1))))) | ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) + 1)))) * 1u), (subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) + 1))))) | ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 1u))) + 1)))) * 1u), (subgroup_local_id + 1))) % subgroup_size)) << 0u) | ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)) + 0u)))), (min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)) + 0u))))) / 1u)) * _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), 0u | _GLF_IDENTITY((uint(1u)), min((uint(1u)), _GLF_IDENTITY((uint(1u)), ((uint(1u))) / 1u))))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))), bool(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))))))), true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), true))), false, false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))))), false || (! (bool(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), true))))), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false))))), true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), false))))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))), true, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, false))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, false))))), true)))), true, false)))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true))))))), false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))), true), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(3250.5816) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(acosh(-6.9)) : _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (true ? round(length(normalize(vec3(1.0, 1.0, 1.0)))) : _GLF_FUZZED(2.7))))), 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0))).y) - 0.0)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false), true, true)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))))), true, false)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))))), true, false)))), false))))))))))))), (! (true)) || false))), true))) && true))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y))))), 1.0, 1.0)), (float(vec3(_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), min(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y))))), 1.0, 1.0))) - 0.0))), injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) && true)))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))).x, injectionSwitch.x))))), float(_GLF_FUZZED(-271.278)), bool(false))) > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / cos(tan(vec2(0.0, 0.0)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) || false), true, false, false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, exp(0.0)))).x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false))))) && ((_GLF_DEAD(false)) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), true))) && _GLF_IDENTITY(true, false || (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true))), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id))), ((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u))), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))) >> 0u)))) | 0u), (_GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), ((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) | 0u)) >> 0u)) + _GLF_IDENTITY(1, min(1, 1)) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(71.82), mix(float(_GLF_IDENTITY(_GLF_FUZZED(71.82), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (_GLF_FUZZED(71.82)))), float(_GLF_FUZZED(-5.7)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))))), true)), false))), true))))))))))), bool(false))))) * (subgroup_size), ~ (~ (uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(71.82), mix(float(_GLF_IDENTITY(_GLF_FUZZED(71.82), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (_GLF_FUZZED(71.82)))), float(_GLF_FUZZED(-5.7)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, false, false)), true)))))))))))))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))), false))), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), true))))))))))), true)), false))), true)))))))), bool(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, false, false)), true)))))))))))))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))), false))), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), true))))))))))), true)), false))), true)))))))))))))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) * (subgroup_size))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1615.3440), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.0)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))), determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - log(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, abs(0.0))), 0.0, 1.0, 1.0, 0.0, abs(0.0), sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0, 0.0)))) + vec2(0.0, 0.0)), 1.0, 0.0, 0.0, log(1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, 0.0, 0.0, log(1.0)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0, 0.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.2)), bool(false))), 0.0), float(mat4(max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.2)), bool(false))), 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0)), clamp(vec2(mat4(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0, 0.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(523.088)), float(sin(0.0)), bool(true))), 0.0, 1.0, sqrt(0.0), 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0, 0.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))), 0.0, 1.0, sqrt(0.0), 1.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0, 0.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 1.0)))), (_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0, 0.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0))), 0.0, 1.0, sqrt(0.0), 1.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0, 0.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 1.0))))) * mat2(1.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0, 0.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6174.0892) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), sqrt(0.0), 1.0, 1.0))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true, ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true, ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true, ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), (bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true, ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true, ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))), (bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))) || false)), false, true))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))) || false))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))) || false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), uint(2)))) * 1u, max((_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), uint(2)))) * 1u, (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), uint(2)))) * 1u))) : _GLF_FUZZED(157730u))), 4, 64, 0);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-94.20)), float(injectionSwitch.y), bool(true))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
