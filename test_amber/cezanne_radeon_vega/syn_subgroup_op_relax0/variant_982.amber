#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), (bool(bvec4(bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, false))) || false))))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(int(7), int(7)))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != (_GLF_IDENTITY((56515 - -93754) & _GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, min((0) | 0, (0) | 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((56515 - -93754) & _GLF_IDENTITY(0, (0) | 0), ((56515 - -93754) & _GLF_IDENTITY(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(0, 0 | (0)))), (0) | _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 1, 1), clamp(_GLF_IDENTITY(ivec4(0, 1, 1, 1), ivec4(0, 0, 0, 0) | (ivec4(0, 1, 1, 1))), _GLF_IDENTITY(ivec4(0, 1, 1, 1), (ivec4(0, 1, 1, 1)) << ivec4(0, 0, 0, 0)), ivec4(0, 1, 1, 1))))))) | 0), 0)), (int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(56515, (56515) | 0) - -93754) & _GLF_IDENTITY(0, (0) | 0), ((56515 - -93754) & _GLF_IDENTITY(0, (0) | 0)) | 0), 0))) - 0)))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) || false)))))))), false)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), false, false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 return;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
              }
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))
          break;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(false), true, true))), true, false, true))))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-1.2))), injectionSwitch[1])), injectionSwitch, injectionSwitch))))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0))), bool(bool(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(0, max(0, 0))))))) >> (0 >> _GLF_IDENTITY(int(2), int(2)))), (true ? _GLF_IDENTITY(0, int(ivec2(0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), max(~ (_GLF_IDENTITY(1, (1) << 0)), ~ (_GLF_IDENTITY(1, (1) << 0))))))))) : _GLF_FUZZED(-49678))), _GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)))))))) && true)))); _injected_loop_counter --)
        {
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(99.22))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-0.6 + -0.2))), _GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-0.6, mix(float(_GLF_FUZZED(9.8)), float(-0.6), bool(true))) + -0.2))), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(99.22))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-0.6 + -0.2))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-0.6, mix(float(_GLF_FUZZED(9.8)), float(_GLF_IDENTITY(-0.6, (true ? -0.6 : _GLF_FUZZED(-1.2)))), bool(true))) + -0.2))), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-1395.2567, -351.763, -819.085).g), _GLF_FUZZED(5.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(99.22))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-0.6 + -0.2))), _GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-0.6, mix(float(_GLF_FUZZED(9.8)), float(-0.6), bool(true))) + -0.2))), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(99.22))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-0.6 + -0.2))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-0.6, mix(float(_GLF_FUZZED(9.8)), float(_GLF_IDENTITY(-0.6, (true ? -0.6 : _GLF_FUZZED(-1.2)))), bool(true))) + -0.2))), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-1395.2567, -351.763, -819.085).g), _GLF_FUZZED(5.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(99.22))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-0.6 + -0.2))), _GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-0.6, mix(float(_GLF_FUZZED(9.8)), float(-0.6), bool(true))) + -0.2))), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(99.22))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-0.6 + -0.2))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-0.6, mix(float(_GLF_FUZZED(9.8)), float(_GLF_IDENTITY(-0.6, (true ? -0.6 : _GLF_FUZZED(-1.2)))), bool(true))) + -0.2))), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-1395.2567, -351.763, -819.085).g), _GLF_FUZZED(5.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))))), true, true))))
  {
   for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0) != (1 ^ 1)); _injected_loop_counter --)
    {
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))), uvec3(uvec4(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))), 0u))))).x, (gl_WorkGroupSize.x) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(170570u, 50104u, 14054u))))) ^ uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) | ((0u) << 0u))))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u)).x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (0u)), 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u)).x)) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u)).x), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id))))))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)).x))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | 0u)), (~ (_GLF_IDENTITY(0u, (0u) | 0u))) / 1u), ~ (_GLF_IDENTITY(0u, (0u) | 0u)))))), 0u, 0u)).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))), ~ (~ ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), ~ (~ ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))).x, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) - (0u | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), 1u, 1u, ((0u & 193819u) | 0u))), (uint(uvec4((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), 1u, 1u, ((0u & 193819u) | 0u)))) | (uint(uvec4((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), 1u, 1u, ((0u & 193819u) | 0u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(188506u, 168484u, 185260u)))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(188506u, 168484u, 185260u)))), 1u))) >> uvec3(0u, 0u, 0u))).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))).x), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(54285u, 175958u, 21295u), uvec3(uvec3(uvec3(54285u, 175958u, 21295u))))) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) ^ uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x))))), (false ? _GLF_FUZZED(84268u) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | 0u)), (~ (_GLF_IDENTITY(0u, (0u) | 0u))) / 1u), ~ (_GLF_IDENTITY(0u, (0u) | 0u)))))), 0u, 0u)).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))), ~ (~ ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), ~ (~ ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))).x, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) - (0u | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), 1u, 1u, ((0u & 193819u) | 0u))), (uint(uvec4((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), 1u, 1u, ((0u & 193819u) | 0u)))) | (uint(uvec4((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x), 1u, 1u, ((0u & 193819u) | 0u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(188506u, 168484u, 185260u)))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(188506u, 168484u, 185260u)))), 1u))) >> uvec3(0u, 0u, 0u))).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))).x), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(54285u, 175958u, 21295u), uvec3(uvec3(uvec3(54285u, 175958u, 21295u))))) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) ^ uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x))))))) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(packHalf2x16(_GLF_IDENTITY(vec2(2.8, _GLF_IDENTITY(_GLF_IDENTITY(258.113, max(258.113, 258.113)), _GLF_IDENTITY((_GLF_IDENTITY(258.113, max(_GLF_IDENTITY(258.113, (true ? 258.113 : _GLF_FUZZED(-1517.7434))), 258.113))), min(_GLF_IDENTITY((_GLF_IDENTITY(258.113, max(_GLF_IDENTITY(258.113, (true ? 258.113 : _GLF_FUZZED(-1517.7434))), 258.113))), min((_GLF_IDENTITY(258.113, max(_GLF_IDENTITY(258.113, (true ? 258.113 : _GLF_FUZZED(-1517.7434))), 258.113))), (_GLF_IDENTITY(258.113, max(_GLF_IDENTITY(258.113, (true ? 258.113 : _GLF_FUZZED(-1517.7434))), 258.113))))), (_GLF_IDENTITY(258.113, max(_GLF_IDENTITY(258.113, (true ? 258.113 : _GLF_FUZZED(-1517.7434))), 258.113))))) - 0.0)), max(vec2(2.8, _GLF_IDENTITY(258.113, max(258.113, 258.113))), vec2(_GLF_IDENTITY(2.8, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2.8, max(2.8, _GLF_IDENTITY(2.8, (false ? _GLF_FUZZED(643.391) : 2.8)))), (_GLF_IDENTITY(2.8, max(2.8, _GLF_IDENTITY(2.8, (false ? _GLF_FUZZED(643.391) : 2.8))))) - sin(_GLF_ZERO(0.0, injectionSwitch.x))), 2.8, 2.8)), _GLF_IDENTITY(_GLF_IDENTITY(258.113, max(258.113, 258.113)), min(_GLF_IDENTITY(258.113, max(258.113, 258.113)), _GLF_IDENTITY(258.113, max(258.113, 258.113)))))))))))))) / 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) | 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)), (max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))) | (_GLF_IDENTITY(max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)), (max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))) + 0u))))) | 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x) - 0u)))) | 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, _GLF_IDENTITY(0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) - 0u)), clamp(0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) - 0u)), _GLF_IDENTITY(0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) - 0u)), clamp(0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) - 0u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) - 0u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) - 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) - 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), max(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(gl_WorkGroupSize))))))).x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) / 1u)) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, max((gl_WorkGroupSize.x) - 0u, (gl_WorkGroupSize.x) - 0u))), (gl_WorkGroupSize.x) - 0u)))), uint(uvec4((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), (gl_WorkGroupSize.x) - 0u)))), 0u, 0u, 1u))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], uint(_GLF_IDENTITY(uint(gl_WorkGroupSize[0]), max(uint(gl_WorkGroupSize[0]), uint(gl_WorkGroupSize[0]))))), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (gl_WorkGroupSize.x) - 0u)))) | 0u) ^ 0u))))))), (gl_WorkGroupSize.x) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u) | 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED((92593u | num_workgroup)))), (gl_WorkGroupSize.x) - 0u)))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) - 0u)))) | 0u) ^ 0u))))))), (gl_WorkGroupSize.x) >> 0u)) * 1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u) | 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) ^ 0u))))))), _GLF_IDENTITY((gl_WorkGroupSize.x) >> 0u, _GLF_IDENTITY(uint(uvec3((gl_WorkGroupSize.x) >> 0u, 0u, 1u)), (uint(uvec3((gl_WorkGroupSize.x) >> 0u, 0u, 1u))) / 1u)))) * 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), min(_GLF_IDENTITY(0u, uint(uint(0u))), 0u))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) >> 0u))))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))).x), 1u * ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))).x))) - 0u)))) | 0u) ^ 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) / 1u), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, (true ? _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) ^ 0u) : _GLF_FUZZED((~ subgroup_id))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, min((gl_WorkGroupSize.x) - 0u, (gl_WorkGroupSize.x) - 0u)))))))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), (gl_WorkGroupSize.x))) - 0u)))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(156171u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), (gl_WorkGroupSize.x) - 0u)))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), uint(uvec2((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 1u))) | 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / (uvec3(0u, 0u, 0u) | uvec3(1u, 1u, 1u))) : _GLF_FUZZED((uvec3(181645u, 192015u, 110744u) & 177720u)))).x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))) | 0u) ^ 0u))))))))), (gl_WorkGroupSize.x) >> 0u)) * 1u) / 1u)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) >> 0u)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(1.0, (1.0) * 1.0)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x)), 0u, 0u))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), max(workgroup_size, workgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(bitfieldReverse(workgroup_id)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) << ((1u ^ 1u) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))) * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ _GLF_IDENTITY((workgroup_id), 1u * ((workgroup_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), (workgroup_id))), (~ (workgroup_id)) | (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u)))), ((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), (workgroup_id))), (_GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), (workgroup_id)))) | (_GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), (workgroup_id))))), (~ (workgroup_id)) | (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u))))) >> 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))) | (~ (workgroup_id))))))) ^ ((0u & 81965u) >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY(uint(uvec4(8u, 1u, 0u, 1u)), (uint(uvec4(8u, 1u, 0u, 1u))) | (uint(uvec4(8u, 1u, 0u, 1u)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), _GLF_IDENTITY((~ (workgroup_id)), min((~ (workgroup_id)), (~ (workgroup_id)))) | (~ (workgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) | (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id, workgroup_id))))), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id)), (min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))) | (min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))))), (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | (~ (workgroup_id)))), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) | (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id, workgroup_id))))), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id)), (min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))) | (min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))))), (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | (~ (workgroup_id))))))) - 0u)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))), (_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))))), (_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id)), 0u | (min(_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(clamp((workgroup_id), (workgroup_id), (workgroup_id)), (_GLF_IDENTITY(clamp((workgroup_id), (workgroup_id), (workgroup_id)), (clamp((workgroup_id), (workgroup_id), (workgroup_id))) / 1u)) | (_GLF_IDENTITY(clamp((workgroup_id), (workgroup_id), (workgroup_id)), (_GLF_IDENTITY(clamp((workgroup_id), (workgroup_id), (workgroup_id)), uint(uvec4(clamp((workgroup_id), (workgroup_id), (workgroup_id)), 1u, 0u, 1u)))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))), (workgroup_id))))) - 0u)), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), uint(_GLF_IDENTITY(uvec3((workgroup_id), 1u, 0u), (uvec3((workgroup_id), 1u, 0u)) | (uvec3((workgroup_id), 1u, 0u))))), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id))))))) ^ ((0u & 81965u) >> _GLF_IDENTITY(uint(8u), uint(8u))))), ~ (~ (_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), (workgroup_id))), _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) | ((~ (workgroup_id)))) | (~ (workgroup_id))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))))) * 1u)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id))), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id))), clamp((workgroup_id), (workgroup_id), (workgroup_id))), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id))), clamp((workgroup_id), (workgroup_id), (workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id))), clamp((workgroup_id), (workgroup_id), (workgroup_id)))))) >> 0u), (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))))), (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (~ (workgroup_id))))))) ^ ((0u & 81965u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 0u ^ (_GLF_IDENTITY(uint(8u), uint(8u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), min((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), 0u ^ (~ (workgroup_id))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), 0u ^ (~ (workgroup_id)))))) << 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))) / (1u ^ 0u))), clamp((workgroup_id), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))), (workgroup_id))), (workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_id), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_id)))) | (~ (workgroup_id)), _GLF_IDENTITY(((~ (workgroup_id)) | (~ (workgroup_id))), (false ? _GLF_FUZZED(180958u) : ((~ (workgroup_id)) | (~ (workgroup_id))))) >> 0u)))))) ^ ((0u & 81965u) >> _GLF_IDENTITY(uint(8u), uint(8u))))), min(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), min((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id)))) | ((workgroup_id)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id)))) | ((workgroup_id))), min(~ ((_GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id)))) | ((workgroup_id))), ~ ((_GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id)))) | ((workgroup_id)))))))))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id)), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id)), clamp(min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id)), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id)), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id)))))))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), 0u | (~ (workgroup_id))))))))) ^ _GLF_IDENTITY((_GLF_IDENTITY((0u & 81965u), uint(uint((0u & 81965u)))) >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u ^ ((_GLF_IDENTITY((0u & 81965u), uint(uint((0u & 81965u)))) >> _GLF_IDENTITY(uint(8u), uint(8u))))))), _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldExtract(workgroup_id, 41330, 61254)))), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_size)))) << 0u)), (workgroup_id))), _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id))))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), min(_GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))))), (~ (workgroup_id)) | (~ (workgroup_id)))), min((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), _GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u))))))) ^ ((0u & _GLF_IDENTITY(81965u, (81965u) >> 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uint(uint(8u)), (uint(uint(8u))) | (uint(uint(8u)))))), uint(8u))))))), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) << 0u), ~ (workgroup_id)))))), uint(uvec2((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) << 0u), ~ (workgroup_id)))))), 1u))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))) | (~ (workgroup_id))))))) ^ ((0u & 81965u) >> _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) << 0u), ~ (workgroup_id)))))), uint(uvec2((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) << 0u), ~ (workgroup_id)))))), 1u))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))) | (~ (workgroup_id))))))) ^ ((0u & 81965u) >> _GLF_IDENTITY(uint(8u), uint(8u))))), min(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) << 0u), ~ (workgroup_id)))))), uint(uvec2((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) << 0u), ~ (workgroup_id)))))), 1u))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))) | (~ (workgroup_id))))))) ^ ((0u & 81965u) >> _GLF_IDENTITY(uint(8u), uint(8u))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (workgroup_id)) | (~ (workgroup_id)))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) << 0u), ~ (workgroup_id)))))), uint(uvec2((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), 0u + (_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), (workgroup_id))), (~ (workgroup_id)) | (_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) << 0u), ~ (workgroup_id)))))), 1u))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))), (workgroup_id))), (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))) | (~ (workgroup_id))))))) ^ ((0u & 81965u) >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))))), workgroup_size * workgroup_id));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), ~ (~ (uint(uvec2(subgroup_size, 1u)))))), subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size) >> 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size) >> 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (0u | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size) >> 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_FUZZED(atomicMin(virtual_gid, subgroup_size))))), min(((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (1u ^ 1u) ^ (subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1, false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1, false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1, false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1, false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))))) % subgroup_size, 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))) % subgroup_size), max(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) << 0u)) * (1u & 1u))) - _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))))))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1), ((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1), 0u + ((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1)))))) / 1u)), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 0u)))))))) * 1u)), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1), 0u | ((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size)), ((((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1), 0u | ((false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size))) / 1u) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 1u, 0u), max(uvec3(subgroup_local_id, 1u, 0u), uvec3(subgroup_local_id, 1u, 0u))))) + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))) + 1, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size))))), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(19455) : 0), ((false ? _GLF_FUZZED(19455) : 0)) << 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY((false ? _GLF_FUZZED(19455) : 0), ((false ? _GLF_FUZZED(19455) : 0)) << 0)), (true ? int(_GLF_IDENTITY((false ? _GLF_FUZZED(19455) : 0), ((false ? _GLF_FUZZED(19455) : 0)) << 0)) : _GLF_FUZZED(4647)))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 0, (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), (int(_GLF_IDENTITY(7, int(ivec4(_GLF_IDENTITY(7, (7) - 0), 0, 1, 1))))) | (_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(-4914)))))))))))), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (0 | 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != (0 | 1), false || (_injected_loop_counter != (0 | 1)))), bool(bvec3(! (_GLF_IDENTITY(_injected_loop_counter != (0 | _GLF_IDENTITY(1, (false ? _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, mix(-56237, _injected_loop_counter, true), 22519)) : 1))), false || (_injected_loop_counter != (_GLF_IDENTITY(0 | 1, (0 | 1) | 0))))), true, false))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (0 | 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != (0 | 1), false || (_injected_loop_counter != (0 | 1)))), bool(bvec3(! (_GLF_IDENTITY(_injected_loop_counter != (0 | _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, mix(-56237, _injected_loop_counter, true), 22519)) : 1, (false ? _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, mix(-56237, _injected_loop_counter, true), 22519)) : 1) << 0)))), false || (_injected_loop_counter != (_GLF_IDENTITY(0 | 1, (0 | 1) | 0))))), true, false))))))))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           buf[virtual_gid] = 1;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1))) || false)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0)), clamp(vec2(mat2(injectionSwitch, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0)), min(vec2(mat2(injectionSwitch, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0)), vec2(mat2(injectionSwitch, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0)))), vec2(mat2(injectionSwitch, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0))))).x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           break;
          }
        }
       else
        {
         do
          {
           for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (0 | 0) + (_GLF_IDENTITY(3, min(3, 3))))), (int(3)) | (int(3))), 0, 0)))), min(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (0 | 0) + (_GLF_IDENTITY(3, min(3, 3))))), (int(3)) | (int(3))), 0, 0)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (0 | 0) + (_GLF_IDENTITY(3, min(3, 3))))), (int(3)) | (int(3))), 0, 0))))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), true, true)))) || false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) >> 0) + _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-68660) : _GLF_IDENTITY((1), _GLF_IDENTITY((true ? (1) : _GLF_FUZZED(_GLF_IDENTITY(-24278, _GLF_IDENTITY((-24278), ~ (~ ((-24278)))) / (1 | 1)))), _GLF_IDENTITY(((true ? (1) : _GLF_FUZZED(_GLF_IDENTITY(-24278, (-24278) / (1 | 1))))), (((true ? (1) : _GLF_FUZZED(_GLF_IDENTITY(-24278, (-24278) / (1 | 1)))))) | (_GLF_IDENTITY(((true ? (1) : _GLF_FUZZED(_GLF_IDENTITY(-24278, (-24278) / (1 | 1))))), max(_GLF_IDENTITY(((true ? (1) : _GLF_FUZZED(_GLF_IDENTITY(-24278, (-24278) / (1 | 1))))), (((true ? (1) : _GLF_FUZZED(_GLF_IDENTITY(-24278, (-24278) / (1 | 1)))))) + 0), ((true ? (1) : _GLF_FUZZED(_GLF_IDENTITY(-24278, (-24278) / (1 | 1))))))))) - 0))))) < _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)) : _GLF_FUZZED(subgroup_size))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec3(uint(2), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec3(uint(2), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(uint(2), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) / uvec3(1u, 1u, 1u))) | (uvec3(uint(2), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), 64, 0);
    }
   else
    {
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.5)), _GLF_IDENTITY(float(mat2x4(float(_GLF_FUZZED(-7.5)), 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0)), min(float(mat2x4(float(_GLF_FUZZED(-7.5)), 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0)), float(mat2x4(float(_GLF_FUZZED(-7.5)), 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(0, (0) - 0));
               if(_GLF_DEAD(false))
                continue;
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   for(int _injected_loop_counter = _GLF_IDENTITY(((_GLF_IDENTITY(0, max(0, 0)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))), clamp(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), _GLF_IDENTITY(int(7), ~ (~ (int(7)))), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), _GLF_IDENTITY(int(7), ~ (~ (int(7)))), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), _GLF_IDENTITY(int(7), ~ (~ (int(7)))), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))))))))), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), (int(7)) + 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))), (_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7), int(7))), ~ (~ (int(7))))))) + 0))))) & _GLF_IDENTITY(26814, (0 | 0) + (26814))), _GLF_IDENTITY((false ? _GLF_FUZZED(37926) : ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) + int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-544.441)), bool(false))), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-544.441)), bool(false))), injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-544.441)), bool(false))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-544.441)), bool(false))), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-544.441)), bool(false))), injectionSwitch.x), float(mat4x3(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-544.441)), bool(false))), injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))))) & _GLF_IDENTITY(26814, (0 | 0) + (_GLF_IDENTITY(26814, (_GLF_IDENTITY(_GLF_IDENTITY(26814, 0 + (26814)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(26814, 0 + (26814)), min(_GLF_IDENTITY(26814, 0 + (26814)), _GLF_IDENTITY(26814, 0 + (26814)))), _GLF_IDENTITY(26814, 0 + (26814)), _GLF_IDENTITY(26814, 0 + (26814))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ((false ? _GLF_FUZZED(37926) : ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0 & 66874)))), (0) + int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-544.441)), bool(false))), injectionSwitch.x))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))))) & _GLF_IDENTITY(26814, (0 | 0) + (_GLF_IDENTITY(26814, (_GLF_IDENTITY(_GLF_IDENTITY(26814, 0 + (26814)), ~ (~ (_GLF_IDENTITY(26814, 0 + (26814)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(((-37520 & 0) | _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, max(0, 0)))) ^ 1, int(ivec3(((-37520 & 0) | _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, max(0, 0)))) ^ 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     do
      {
       subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), true && (_GLF_IDENTITY(true, false || (true)))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) / 1.0))) > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-392.655))), injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(trunc(27.78)) : injectionSwitch.y))) && true)))))) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) || false)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false, false, false))) && true)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false, false, false))) && true))), bool(bvec2((! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false, false, false))) && true))), true))))))))))
            {
             return;
            }
           else
            {
            }
          }
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
