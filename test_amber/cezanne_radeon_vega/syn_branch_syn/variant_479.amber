#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((18.02 * -1.6), max(_GLF_IDENTITY((18.02 * -1.6), (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY((18.02 * -1.6), float(mat2((18.02 * -1.6), 0.0, 0.0, 0.0))))), (18.02 * -1.6)))), (mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[1]), vec2((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false)))), injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((18.02 * -1.6), max(_GLF_IDENTITY((18.02 * -1.6), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY((18.02 * -1.6), float(mat2((18.02 * -1.6), 0.0, 0.0, 0.0))))), _GLF_IDENTITY((18.02 * -1.6), (true ? (18.02 * -1.6) : _GLF_FUZZED(-5.3)))))), _GLF_IDENTITY((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[1], min((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[1], (mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[1]))), vec2((mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9.3, float(mat2x4(9.3, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))))), dot(vec3(log(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), 0.0)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false)))), injectionSwitch)) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((18.02 * -1.6), max(_GLF_IDENTITY((18.02 * -1.6), (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.1, min(_GLF_IDENTITY(-2.1, max(-2.1, -2.1)), -2.1))) : _GLF_IDENTITY((18.02 * -1.6), float(mat2((18.02 * -1.6), 0.0, 0.0, 0.0))))), (18.02 * -1.6)))), (mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) | (1))]), vec2((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((18.02 * -1.6), max(_GLF_IDENTITY((18.02 * -1.6), (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.1, min(_GLF_IDENTITY(-2.1, max(-2.1, -2.1)), -2.1))) : _GLF_IDENTITY((18.02 * -1.6), float(mat2((18.02 * -1.6), 0.0, 0.0, 0.0))))), (18.02 * -1.6)))), (mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) | (1))]), vec2((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((18.02 * -1.6), max(_GLF_IDENTITY((18.02 * -1.6), (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.1, min(_GLF_IDENTITY(-2.1, max(-2.1, -2.1)), -2.1))) : _GLF_IDENTITY((18.02 * -1.6), float(mat2((18.02 * -1.6), 0.0, 0.0, 0.0))))), (18.02 * -1.6)))), (mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) | (1))]), vec2((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || false))))), false, false, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1]), (vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((18.02 * -1.6), max(_GLF_IDENTITY((18.02 * -1.6), (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(_GLF_IDENTITY((18.02 * -1.6), (true ? (18.02 * -1.6) : _GLF_FUZZED(-538.701))), float(mat2((18.02 * -1.6), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(18.02, min(_GLF_IDENTITY(18.02, max(18.02, 18.02)), _GLF_IDENTITY(18.02, _GLF_IDENTITY(float(vec2(18.02, 1.0)), clamp(float(vec2(18.02, 1.0)), float(vec2(18.02, 1.0)), float(vec2(18.02, 1.0))))))) * -1.6)))), (mix(vec2(_GLF_FUZZED(9.3), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[1]), vec2((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false)))), injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1]), (vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((18.02 * -1.6), max(_GLF_IDENTITY((18.02 * -1.6), (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(_GLF_IDENTITY((18.02 * -1.6), (true ? (18.02 * -1.6) : _GLF_FUZZED(-538.701))), float(mat2((18.02 * -1.6), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(18.02, min(_GLF_IDENTITY(18.02, max(18.02, 18.02)), _GLF_IDENTITY(18.02, _GLF_IDENTITY(float(vec2(18.02, 1.0)), clamp(float(vec2(18.02, 1.0)), float(vec2(18.02, 1.0)), float(vec2(18.02, 1.0))))))) * -1.6)))), (mix(vec2(_GLF_FUZZED(9.3), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[1]), vec2((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false)))), injectionSwitch)).x, mix(float(_GLF_FUZZED(-1174.2656)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1]), (vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((18.02 * -1.6), max(_GLF_IDENTITY((18.02 * -1.6), (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(_GLF_IDENTITY((18.02 * -1.6), (true ? (18.02 * -1.6) : _GLF_FUZZED(-538.701))), float(mat2((18.02 * -1.6), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(18.02, min(_GLF_IDENTITY(18.02, max(18.02, 18.02)), _GLF_IDENTITY(18.02, _GLF_IDENTITY(float(vec2(18.02, 1.0)), clamp(float(vec2(18.02, 1.0)), float(vec2(18.02, 1.0)), float(vec2(18.02, 1.0))))))) * -1.6)))), (mix(vec2(_GLF_FUZZED(9.3), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[1]), vec2((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false)))), injectionSwitch)).x), bool(true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1]), (vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((18.02 * -1.6), max(_GLF_IDENTITY((18.02 * -1.6), (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(_GLF_IDENTITY((18.02 * -1.6), (true ? (18.02 * -1.6) : _GLF_FUZZED(-538.701))), float(mat2((18.02 * -1.6), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(18.02, min(_GLF_IDENTITY(18.02, max(18.02, 18.02)), _GLF_IDENTITY(18.02, _GLF_IDENTITY(float(vec2(18.02, 1.0)), clamp(float(vec2(18.02, 1.0)), float(vec2(18.02, 1.0)), float(vec2(18.02, 1.0))))))) * -1.6)))), (mix(vec2(_GLF_FUZZED(9.3), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[1]), vec2((mix(vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.020)), bvec2(true, false)))[0], _GLF_FUZZED(-6.1)), bvec2(true, false)))), injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))))))), false, _GLF_IDENTITY(false, (false) || false), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), (false || ((false))) && true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_DEAD(false), false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), false, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(728.156)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), mix(vec2((vec2(mat4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(3.3), (vec2(mat4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))))[1]), bvec2(false, true)))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false)))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-1.5, 4.7, -6489.2958, 1.5).p), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6520.8285)), bvec2(true, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) && true)))))), true, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true, true)))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), false))))), true, true, false))))))), false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))), gl_WorkGroupSize)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(1u, 1u, 1u) * ((gl_WorkGroupSize))), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))), (true ? (~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(1u, 1u, 1u) * ((gl_WorkGroupSize))), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))))) : _GLF_FUZZED(uvec3(86599u, 193643u, 27767u)))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(23074u, 98061u, 15984u)) : ~ ((gl_WorkGroupSize)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(23074u, 98061u, 15984u)) : ~ ((gl_WorkGroupSize))))))))) << (uvec3(0u, 0u, 0u) & uvec3(131975u, 48158u, 76924u)))))) / uvec3(1u, 1u, 1u)))))) | (gl_WorkGroupSize)), gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, true), false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))))) || false)), ((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))))) || false))) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bvec4(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false))))))))) && true), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bvec4(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false))))))))) && true), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bvec4(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false)))))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (false)))))))), false, true, true))) || false)))))) && true), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec2(! (injectionSwitch.x < injectionSwitch.y), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), (_GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), true && (bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), (_GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), true && (bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((! (false || ((false)))), ((! (false || ((false))))) || false))))) && true)))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), true && (bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), true && (bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), true && (bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), true && (bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), true && (bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) && true)), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0)), float(_GLF_IDENTITY(vec3(float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(8.3))), injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))])).y, 1.0, 1.0)), 1.0, 1.0), mix(vec3(_GLF_FUZZED(-77.45), (vec3(float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0)), 1.0, 1.0))[1], _GLF_FUZZED(-9.8)), vec3((vec3(float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0)), 1.0, 1.0))[0], _GLF_FUZZED(602.538), (vec3(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0)), 1.0 * (float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0)))), 1.0, 1.0))[2]), bvec3(true, false, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : (injectionSwitch) * mat2(1.0)))), injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5391.0426), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(590.026)), bvec2(true, false)))), vec2(mat2((injectionSwitch), 0.0, 0.0)))).y))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-73.93, 2.4)) : injectionSwitch)))).y, (injectionSwitch.x > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(976.858)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bool(bool(bool(bvec2((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))))))))))), true, true, true)))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(min(vec2(-29.58, -6.7), injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(min(vec2(-29.58, -6.7), injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(min(vec2(-29.58, -6.7), injectionSwitch))))) * mat2(1.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(-5.7)), bool(false))), injectionSwitch.x), (false ? _GLF_FUZZED(-452.912) : _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(-5.7)), bool(false))), injectionSwitch.x), mix(float(_GLF_FUZZED(-22.56)), float(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(-5.7)), bool(false))), injectionSwitch.x)), bool(true)))))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, cos(0.0), abs(1.0)), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, cos(0.0), abs(1.0)), (false ? _GLF_FUZZED(mat4(2.9, -463.810, -6.6, 299.150, 3.5, 28.44, -9.8, -7.1, 108.942, -276.381, 2282.4452, -63.72, -35.64, 920.402, -963.779, 5.1)) : mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, cos(0.0), abs(1.0)))) : _GLF_FUZZED(mat4(-1.1, -164.571, -77.98, -82.10, -885.918, 9.9, -3538.6572, 973.230, -7.4, -9.1, -6325.1311, -1.6, -554.309, 19.84, -54.87, 8.3)))))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 1.0, 1.0)), (mat3(1.0) * (vec3(0.0, 1.0, 1.0))) + sqrt(vec3(0.0, 0.0, 0.0)))), vec3(round(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(float(mat2x4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)), float(mat4x3((_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0))) + log(1.0)), 1.0, 1.0, 0.0)), (float(mat2x4(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (true ? vec4(1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-793.632, 6.8, -514.149, 73.03)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0))) / _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))))), _GLF_IDENTITY((true ? length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))) : _GLF_FUZZED(9.8)), max((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? length(normalize(vec4(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(9.8)), (true ? length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) : _GLF_FUZZED(9.8)))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), vec3(0.0, 1.0, 1.0)), clamp(max(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), vec3(0.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), vec3(0.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), vec3(0.0, 1.0, 1.0))))), vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))), abs(0.0), 1.0, 1.0, 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)))), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))))) / abs(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))))), 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-302.965)), float(0.0), bool(true))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(45.99)), float(0.0), bool(true))), 0.0)), 0.0))), abs(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED((7.7 * 123.298)), _GLF_IDENTITY((vec2(0.0, 1.0))[1], max((vec2(0.0, 1.0))[1], (vec2(0.0, 1.0))[1]))), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-3.4)), bvec2(true, false))))))), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))), 0.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), min(0.0, 0.0))))) * mat2(1.0))).y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7326.1529)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), (vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)) * mat3(1.0)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), ~ (~ _GLF_IDENTITY((workgroup_size), (true ? (workgroup_size) : _GLF_FUZZED(subgroup_size))))), 0u ^ (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), false)))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-316.798)), float(injectionSwitch.y), bool(true)))) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-316.798)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y) / 1.0)), bool(true)))) * 1.0) : _GLF_FUZZED(72.11)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.4)), float(injectionSwitch.y), bool(true)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), false, true))), false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) >> 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4406.4378)), bool(false))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, true)))) || false)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-81.61 * -7.2))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))) * 1u), ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 1u * (~ (subgroup_id * subgroup_size))))))) + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))) * 1u), ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 1u * (~ (subgroup_id * subgroup_size))))))) + ((subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))) * 1u), ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 1u * (~ (subgroup_id * subgroup_size))))))) + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), bool(bool(true && (false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (false), bool(bool(true && (false)))))), bool(bvec2(! (! (_GLF_IDENTITY(true && (false), bool(bool(true && (false)))))), false))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), false, false)), true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && (_GLF_DEAD(false)))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5235.6552)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), float(_GLF_FUZZED((-8.0))), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5235.6552)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), float(_GLF_FUZZED((-8.0))), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5235.6552)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), float(_GLF_FUZZED((-8.0))), bool(false))))), true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(reflect(65.62, -2915.1726)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 0.0), (mat2(injectionSwitch, sqrt(0.0), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.7) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.34) : injectionSwitch.x)) > injectionSwitch.y))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))) && true))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), (true && (_GLF_IDENTITY(false, (false) && true))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.5)), bool(false))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7513.4222)), float(injectionSwitch.y), bool(true))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), log(1.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(61.57) : 0.0)))), 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(91.67)), bool(false))), injectionSwitch.y))) - 0.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec3(4612.6820, -90.28, 5.0), vec3(-673.069, -1.3, 4885.2862))) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec3(4612.6820, -90.28, 5.0), vec3(-673.069, -1.3, 4885.2862))) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), float(mat2x4(max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec3(4612.6820, -90.28, 5.0), vec3(-673.069, -1.3, 4885.2862))) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec3(4612.6820, -90.28, 5.0), vec3(-673.069, -1.3, 4885.2862))) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec3(4612.6820, -90.28, 5.0), vec3(-673.069, -1.3, 4885.2862))) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), 0.0 + (max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec3(4612.6820, -90.28, 5.0), vec3(-673.069, -1.3, 4885.2862))) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))))))), 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(91.67)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(91.67)), bool(false))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(91.67)), bool(false))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(91.67)), bool(false))))), injectionSwitch.y))) - 0.0)) || false)))))
    barrier();
   _GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) >> 0u);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))) > injectionSwitch.y))) && true))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((835.604 / 96.74))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(float(int(146436u)))), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false)))))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))[0], (injectionSwitch)[0])), _GLF_FUZZED(-2336.7276)), vec2(_GLF_FUZZED(-5410.3115), (injectionSwitch)[1]), bvec2(false, true))).y))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(float(int(146436u)))), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false)))))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))[0], (injectionSwitch)[0])), _GLF_FUZZED(-2336.7276)), vec2(_GLF_FUZZED(-5410.3115), (injectionSwitch)[1]), bvec2(false, true))).y))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(float(int(146436u)))), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false)))))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))[0], (injectionSwitch)[0])), _GLF_FUZZED(-2336.7276)), vec2(_GLF_FUZZED(-5410.3115), (injectionSwitch)[1]), bvec2(false, true))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(float(int(146436u)))), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false)))))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))[0], (injectionSwitch)[0])), _GLF_FUZZED(-2336.7276)), vec2(_GLF_FUZZED(-5410.3115), (injectionSwitch)[1]), bvec2(false, true))).y)))))) - 0.0) + _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x)))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   _GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = 2, ~ (~ (buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) / 1)))), (_GLF_IDENTITY(buf[next_virtual_gid] = 2, ~ (~ (buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) / 1))))) << _GLF_IDENTITY(0u, 1u * (0u)));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(21.79) : injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
