#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(94160u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(94160u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(8449.8470) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(94160u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(94160u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(94160u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))))) > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5627.4422, -1.8)))), injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-34.57))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3065.4303) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1986.8063)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1438.1156)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.5) : injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) || false))), bool(bvec4(_GLF_IDENTITY(true && (false), (true && (false)) && true), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(150.033), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) || false))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (true && (false)) && true), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(150.033), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), bvec2(true, true))).x > injectionSwitch.y)))))))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))).x, (gl_NumWorkGroups.x) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), true)))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))) || false)) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((gl_WorkGroupID.x)))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9866.0134)), vec2(_GLF_FUZZED(8744.2711), (injectionSwitch)[1]), bvec2(false, true))).x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size)))) ^ 0u))) + ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (subgroup_local_id) | 0u), subgroup_local_id)) + 1) % subgroup_size);
 _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), 0u | (~ (subgroup_local_id))), _GLF_IDENTITY(clamp(~ (subgroup_local_id), ~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ~ (subgroup_local_id)), (0u | 0u) | (clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(0u | (~ (subgroup_local_id)), (_GLF_IDENTITY(0u | (~ (subgroup_local_id)), clamp(0u | (~ (subgroup_local_id)), 0u | (~ (subgroup_local_id)), 0u | (~ (subgroup_local_id))))) / 1u)), _GLF_IDENTITY(clamp(~ (subgroup_local_id), ~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ~ (subgroup_local_id)), (0u | 0u) | (clamp(_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 0u, (1u ^ 1u), 0u))), ~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u), ~ (subgroup_local_id)))))))))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1524.5925)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec3((true), true, false)))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.9), _GLF_FUZZED(-1602.2220)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.23, 38.71)) : injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.23, 38.71)) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.23, 38.71)) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.23, 38.71)) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(705.303), _GLF_FUZZED(6623.8101)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.23, 38.71)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-28.23, 38.71)) : injectionSwitch))) - vec2(0.0, 0.0)))).y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((69.84 + 40.43)), _GLF_FUZZED(-388.399)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, sqrt(0.0)), mat2(mat4x2(mat2(injectionSwitch, 0.0, sqrt(0.0))))))).y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))), false))))), (true) && true)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))), false))))), (true) && true)), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))), false))))), (true) && true)), true, true))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))), false))))), (true) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))), false))))), (true) && true)))) && true)))))))), false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, false))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.4)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3769.2082)), bvec2(true, false))))))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-97.34)), vec2(_GLF_FUZZED(2850.9256), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)) && true)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-72034) : 4)), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) << 0, 0 | ((64) << 0)), max((64) << 0, (64) << 0))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))))))))), true)))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))))))))), true)))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(false, false || (false)), false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(true, true && (true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)))), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)))), false))), true)), true))))), true))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))), false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))), true)), false)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), false)))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))), false))))), true))))))))))))))), true)))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))) && true)) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), vec2(mat3(vec2(0.0, 0.0) + (injectionSwitch), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(3.1) : dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0))))), mat2(1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)) + (injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-530.762) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7122.7620) : injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(734.714)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
