#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))))) || false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true)))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))), true && (false)), bool(bvec2(false, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false)))))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ((true)) || false))), true, false, true)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ((true)) || false))), true, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ((true)) || false))), true, false, true)), true, true, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) | (subgroup_id), 0u | (_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (true ? ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) : _GLF_FUZZED(subgroup_id))) | 0u) | (subgroup_id))))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) | (subgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), _GLF_IDENTITY(((subgroup_id)) | 0u, clamp(((subgroup_id)) | 0u, ((subgroup_id)) | 0u, ((subgroup_id)) | 0u))) | (subgroup_id)) - 0u), 0u | (_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (true ? ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) : _GLF_FUZZED(subgroup_id))) | 0u) | (subgroup_id)))))) / 1u)) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ _GLF_IDENTITY((uint(1u)), min((uint(1u)), _GLF_IDENTITY((uint(1u)), ((uint(1u))) / 1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(_GLF_IDENTITY(1u, (1u) | (1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.7, 34.16)))).y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base))))))))))), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ _GLF_IDENTITY((uint(1u)), min((uint(1u)), _GLF_IDENTITY((uint(1u)), ((uint(1u))) / 1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(_GLF_IDENTITY(1u, (1u) | (1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.7, 34.16)))).y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base)))))))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ _GLF_IDENTITY((uint(1u)), min((uint(1u)), _GLF_IDENTITY((uint(1u)), ((uint(1u))) / 1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(_GLF_IDENTITY(1u, (1u) | (1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.7, 34.16)))).y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base))))))))))), uint(uvec3(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ _GLF_IDENTITY((uint(1u)), min((uint(1u)), _GLF_IDENTITY((uint(1u)), ((uint(1u))) / 1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(_GLF_IDENTITY(1u, (1u) | (1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.7, 34.16)))).y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base))))))))))), 0u, 1u))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ _GLF_IDENTITY((uint(1u)), min((uint(1u)), _GLF_IDENTITY((uint(1u)), ((uint(1u))) / 1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(_GLF_IDENTITY(1u, (1u) | (1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.7, 34.16)))).y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base))))))))))), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ _GLF_IDENTITY((uint(1u)), min((uint(1u)), _GLF_IDENTITY((uint(1u)), ((uint(1u))) / 1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(_GLF_IDENTITY(1u, (1u) | (1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.7, 34.16)))).y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base)))))))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ _GLF_IDENTITY((uint(1u)), min((uint(1u)), _GLF_IDENTITY((uint(1u)), ((uint(1u))) / 1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(_GLF_IDENTITY(1u, (1u) | (1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.7, 34.16)))).y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base))))))))))), uint(uvec3(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ _GLF_IDENTITY((uint(1u)), min((uint(1u)), _GLF_IDENTITY((uint(1u)), ((uint(1u))) / 1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(_GLF_IDENTITY(1u, (1u) | (1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.7, 34.16)))).y, 1.0, 0.0, 1.0))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base))))))))))), 0u, 1u)))))) << 0u);
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(mat2x3(clamp(0.0, 0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(determinant(mat4(4.6, -1.5, -4.2, -7612.2315, -84.58, 7.8, -81.33, 2.8, 3.4, -0.8, -259.379, -20.70, -8.2, 8.7, 682.284, 3.6))) : float(vec4(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(mat2x3(clamp(0.0, 0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0)))), float(vec3(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), float(mat2x3(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(mat3(clamp(0.0, 0.0, 0.0), log(1.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0)), exp(0.0), 0.0))))))).y))), true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), (_GLF_IDENTITY((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true)) || false) && true, ! (! (_GLF_IDENTITY((bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true))), (_GLF_IDENTITY((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true)) || false) && true)))))), ! (! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(mat2x3(clamp(0.0, 0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(determinant(mat4(4.6, -1.5, -4.2, -7612.2315, -84.58, 7.8, -81.33, 2.8, 3.4, -0.8, -259.379, -20.70, -8.2, 8.7, 682.284, 3.6))) : float(vec4(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(mat2x3(clamp(0.0, 0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0)))), float(vec3(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), float(mat2x3(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(mat3(clamp(0.0, 0.0, 0.0), log(1.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0)), exp(0.0), 0.0))))))).y))), true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), (_GLF_IDENTITY((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true)) || false) && true, ! (! (_GLF_IDENTITY((bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true))), (_GLF_IDENTITY((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ((bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true)) || false) && true))))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.0)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false)))))), true && (_GLF_IDENTITY((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.0)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false)))))), ! (! ((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.0)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false))))))))))), bool(_GLF_IDENTITY(bvec3((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(vec4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED((-629.870))), vec2(_GLF_FUZZED((-628.724 * -17.32)), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0)))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-3.2)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((-22.96 / -3.4))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(55.62)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.2)), bool(false)))), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - tan(0.0)), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(628.605), _GLF_FUZZED(-19.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false) || false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false) || false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-3.2)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((-22.96 / -3.4))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(55.62)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.2)), bool(false)))), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - tan(0.0)), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(628.605), _GLF_FUZZED(-19.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false) || false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false) || false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec2((bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-3.2)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((-22.96 / -3.4))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(55.62)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.2)), bool(false)))), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - tan(0.0)), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(628.605), _GLF_FUZZED(-19.28)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false) || false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false) || false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false))))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.4) : injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(vec2(-501.011, -8.1))))).x)), float(_GLF_FUZZED(-0.7)), bool(false))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat2(sqrt(1.0), 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, cos(0.0), log(1.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, cos(0.0), log(1.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)))))), mix(float(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), float(_GLF_FUZZED(-0.7)), bool(false))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat2(sqrt(1.0), 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-5.1))), 1.0)), 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0)))))) > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec3(0.0, 0.0, 0.0)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.4) : injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(vec2(-501.011, -8.1))))).x)), float(_GLF_FUZZED(-0.7)), bool(false))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat2(sqrt(1.0), 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, cos(0.0), log(1.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, cos(0.0), log(1.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0)))))), mix(float(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), float(_GLF_FUZZED(-0.7)), bool(false))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat2(sqrt(1.0), 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-5.1))), 1.0)), 1.0, 1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0)))))) > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec3(0.0, 0.0, 0.0)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true)))))))))), true && (_GLF_IDENTITY((bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.3, _GLF_IDENTITY(19.88, 1.0 * (19.88))), max(_GLF_IDENTITY(vec2(-7.3, _GLF_IDENTITY(19.88, 1.0 * (19.88))), vec2(mat2(vec2(-7.3, _GLF_IDENTITY(19.88, 1.0 * (19.88))), 1.0, abs(1.0)))), vec2(-7.3, _GLF_IDENTITY(19.88, 1.0 * (19.88)))))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool((bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-69.24), _GLF_FUZZED((- vec2(3.5, 1.3)).x)), bvec2(false, false))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)), true)))))))))))))), (bool(bool((_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, false))))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(vec2(1953.5148, 4.4).g), _GLF_FUZZED(-70.26)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))) * vec2(1.0, 1.0))).x > injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, false || (_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, bool(bvec2((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, true)))))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true))))) && true)))))))
    return;
   int i = _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))), 0 ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) * 1))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) ^ (ivec2(0, 0))))), _GLF_IDENTITY(0, (0) >> 0)))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true, false), true)))), false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(_GLF_IDENTITY(2, ~ (~ (2)))), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
