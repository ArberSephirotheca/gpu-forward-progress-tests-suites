#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(600.981), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0))), _GLF_FUZZED(-3.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))), true, false, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, false, false))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true, false)))), (bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, false))))) || false)), bool(bvec3((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true, false)))), (bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, false))))) || false)), true, false))) && true))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, false, false))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true, false)))), (bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, false))))) || false)), bool(bvec3((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true, false)))), (bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, false))))) || false)), true, false))) && true))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.5))))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((29.13 - 11.92)), _GLF_IDENTITY(_GLF_FUZZED(-889.026), min(_GLF_FUZZED(-889.026), _GLF_IDENTITY(_GLF_FUZZED(-889.026), (true ? _GLF_FUZZED(-889.026) : _GLF_FUZZED(2.4)))))), bvec2(false, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, tan(0.0))))), (vec2(mat2x4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, tan(0.0)))))) - vec2(0.0, 0.0))).y, min(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((29.13 - 11.92)), _GLF_IDENTITY(_GLF_FUZZED(-889.026), min(_GLF_FUZZED(-889.026), _GLF_IDENTITY(_GLF_FUZZED(-889.026), (true ? _GLF_FUZZED(-889.026) : _GLF_FUZZED(2.4)))))), bvec2(false, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, tan(0.0))))), (vec2(mat2x4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, tan(0.0)))))) - vec2(0.0, 0.0))).y, min(injectionSwitch.y, injectionSwitch.y)))) && true))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))
    {
     case 79:
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(0))
        {
         case 78:
         uvec3(57694u, 83271u, 7519u);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 58:
         uvec2 _GLF_SWITCH_3_0v[80], _GLF_SWITCH_3_1v[92], _GLF_SWITCH_3_2v;
         case 0:
         if(_GLF_DEAD(false))
          return;
         case 59:
         case 51:
         case 91:
         case 6:
         case 28:
         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
          {
           case 0:
           case 38:
           case 9:
           case 59:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 66:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           case 86:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           case 33:
           if(_GLF_DEAD(false))
            barrier();
           break;
           default:
           if(_GLF_DEAD(false))
            barrier();
           1;
          }
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 15:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         bvec3(false, false, true);
         default:
         1;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     int _GLF_SWITCH_0_0v;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     case 53:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(log(vec2(1.0, 1.0)), (log(vec2(1.0, 1.0))) * mat2(1.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(log(vec2(1.0, 1.0)), (log(vec2(1.0, 1.0))) * mat2(1.0))).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     do
      {
       workgroup_id;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8405.3076)), vec2(_GLF_FUZZED((243.706 + -4277.7562)), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 37:
             mat2(-658.589, 76.83, -283.952, -9.8);
             case 0:
             if(_GLF_DEAD(false))
              return;
             barrier();
             break;
             case 64:
             uvec4 _GLF_SWITCH_2_0v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 43:
             mat4x3 _GLF_SWITCH_2_1v[14];
             default:
             if(_GLF_DEAD(false))
              barrier();
             1;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if((true ? false : false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         {
          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
           {
            case 75:
            ;
            case 0:
            transpose(mat4x3(4.2));
            case 33:
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true)))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true)))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), false)), false || (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true)))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), false)))))))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            case 73:
            if(_GLF_DEAD(false))
             barrier();
            case 92:
            mat3x2(mat3x4(-9.2, 6507.9453, -29.07, 1.9, -5.3, 0.5, -372.117, -2714.7681, 0.9, 7.4, 666.731, _GLF_IDENTITY(-1.1, max(-1.1, -1.1))));
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
             continue;
            ivec3(-94899, -31297, -83891).tp.tss;
            case 53:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            floatBitsToUint(vec2(6.6, -524.774));
            case 43:
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))) / exp(0.0)) > injectionSwitch.y))))
             barrier();
            case 35:
            (false ? (vec4(8.4, _GLF_IDENTITY(-318.243, clamp(-318.243, -318.243, -318.243)), -3122.1457, -551.385) / 5630.4120) : vec4(9713.2478, -6861.1441, _GLF_IDENTITY(5.0, max(5.0, 5.0)), 308.267));
            break;
            case 41:
            uvec4(50471u, 139396u, 70325u, 109939u);
            default:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            1;
           }
         }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         {
          if(_GLF_DEAD(false))
           continue;
          mix(bvec4(false, true, false, false), bvec3(false, false, false).yyyx, mix(bvec4(false, true, false, true), greaterThanEqual(ivec4(_GLF_IDENTITY(49747, min(49747, 49747)), _GLF_IDENTITY(96446, (96446) | (int(-1785.0537) & int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(30210, (_GLF_IDENTITY(30210, (30210) << 0)) / ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), (int(ivec4(2, 1, 1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)), injectionSwitch.x))))) | 0)))))), -9886), ivec4(77734, -80356, -20946, -30972)), bvec4(false, true, false, true)));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          bvec4((uvec3(172104u, 142503u, 89356u) == uvec3(165193u, 10033u, 118793u)), bvec3(false, false, true));
          ivec3(-5612, 88982, -83267);
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              barrier();
             }
            barrier();
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          bvec3 _GLF_SWITCH_0_1v[19];
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, -6.2)))))), injectionSwitch)).x > injectionSwitch.y))))
           barrier();
          vec4 _GLF_SWITCH_0_2v[51];
          uvec2 _GLF_SWITCH_0_3v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
           }
          lessThanEqual(ivec4(14527, -22099, 41028, 53206), (ivec4(_GLF_SWITCH_0_0v, ivec2(-9028, 88106), 47047) ^ -72274));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))) && true)))
             barrier();
            break;
           }
         }
         if(true)
          {
           mat2x4 _GLF_SWITCH_0_4v[90], _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           (_GLF_IDENTITY(ivec3(-69899, 17937, -78546), (ivec3(_GLF_IDENTITY(-69899, (_GLF_IDENTITY(-69899, (-69899) + (0 | 0))) + (0 >> _GLF_IDENTITY(int(3), int(3)))), 17937, -78546)) / ivec3(1, 1, 1)) + ivec3(-29047, -93142, -63844));
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           ivec3 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
           if(_GLF_DEAD(false))
            return;
           (uvec2(_GLF_IDENTITY(164990u, max(164990u, _GLF_IDENTITY(164990u, (true ? 164990u : _GLF_FUZZED(183291u))))), 164057u) ^ virtual_gid);
           (mat4x3(-0.7, 13.99, 74.61, -618.975, -5730.2288, -633.473, -8.6, 8.9, 188.839, 92.32, 50.82, -9037.1515) * mat3x4(-52.96, -9.2, -8.3, -9002.5894, 471.898, 5.1, 8.5, 11.26, _GLF_IDENTITY(9.8, mix(float(_GLF_FUZZED((6.6 / _GLF_IDENTITY(8354.5016, float(mat2x4(8354.5016, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), float(vec3(sqrt(1.0), 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(8.0)), bool(false))), sqrt(1.0))), 1.0, 0.0)))))), _GLF_IDENTITY(float(9.8), float(_GLF_IDENTITY(mat2(float(9.8), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(584.437)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 1.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? mat2(float(9.8), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0) : _GLF_FUZZED(mat2(8223.4503, 36.59, 9.9, 4.1)))))), bool(true))), _GLF_IDENTITY(6.3, max(6.3, _GLF_IDENTITY(6.3, float(mat4x3(6.3, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))))), 776.475, 925.752));
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
            barrier();
           mat3x2 _GLF_SWITCH_0_9v[66], _GLF_SWITCH_0_10v;
           mat2x4(-55.99, -9.2, _GLF_IDENTITY(9517.9588, float(_GLF_IDENTITY(mat3x2(9517.9588, 1.0, determinant(mat3(_GLF_IDENTITY(length(_GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(max(length(_GLF_IDENTITY(0.0, (0.0) / 1.0)), length(_GLF_IDENTITY(0.0, (0.0) / 1.0))), mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(max(length(_GLF_IDENTITY(0.0, (0.0) / 1.0)), length(_GLF_IDENTITY(0.0, (0.0) / 1.0))), max(max(length(_GLF_IDENTITY(0.0, (0.0) / 1.0)), length(_GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(max(length(_GLF_IDENTITY(0.0, (0.0) / 1.0)), length(_GLF_IDENTITY(0.0, (0.0) / 1.0))), mix(float(_GLF_FUZZED(0.9)), float(max(length(_GLF_IDENTITY(0.0, (0.0) / 1.0)), length(_GLF_IDENTITY(0.0, (0.0) / 1.0)))), bool(true)))))), bool(_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.3) : 1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0), (true ? mat3x2(9517.9588, 1.0, determinant(mat3(length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0) : _GLF_FUZZED(_GLF_SWITCH_0_10v))))), -3739.5618, -3.3, -3.5, -8.1, -89.01);
           bvec3(false, false, true);
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           mat3x4(6.9, -605.174, -1.3, -0.9, -0.4, 48.60, 9.5, 1.6, -5.3, -5168.5947, 2.8, -4.8);
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)), true))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           (_GLF_IDENTITY(_GLF_IDENTITY(-26.67, clamp(_GLF_IDENTITY(-26.67, min(-26.67, -26.67)), -26.67, _GLF_IDENTITY(-26.67, clamp(-26.67, -26.67, -26.67)))) + (mat2(-532.754, -581.764, -5.0, _GLF_IDENTITY(-5131.9066, (_GLF_IDENTITY(-5131.9066, mix(float(-5131.9066), float(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), (_GLF_FUZZED(5749.6939)) - 0.0), 0.0, 1.0, 0.0))), 0.0, 1.0)), float(mat2(float(vec3(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), (_GLF_FUZZED(5749.6939)) - 0.0), 0.0, 1.0, 0.0))), 0.0, 1.0)), sqrt(0.0), 0.0, 0.0))))), bool(_GLF_IDENTITY(false, (false) || false))))) + 0.0)) / mat2(19.80, -3136.6992, 62.46, 687.229)), transpose(transpose(_GLF_IDENTITY(-26.67, clamp(_GLF_IDENTITY(-26.67, min(-26.67, -26.67)), -26.67, _GLF_IDENTITY(-26.67, clamp(-26.67, -26.67, -26.67)))) + (mat2(-532.754, -581.764, -5.0, _GLF_IDENTITY(-5131.9066, (_GLF_IDENTITY(-5131.9066, mix(float(-5131.9066), float(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), (_GLF_FUZZED(5749.6939)) - 0.0), 0.0, 1.0, 0.0))), 0.0, 1.0)), float(mat2(float(vec3(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(5749.6939), (_GLF_FUZZED(5749.6939)) - 0.0), 0.0, 1.0, 0.0))), 0.0, 1.0)), sqrt(0.0), 0.0, 0.0))))), bool(_GLF_IDENTITY(false, (false) || false))))) + 0.0)) / mat2(19.80, -3136.6992, 62.46, 687.229))))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         mat3 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
         uvec2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true, true), true))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
          }
        }
       ivec3 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[90], _GLF_SWITCH_0_18v;
       mat4x2(1.0, -7.5, -7.8, 1.9, -7.2, 9.6, 32.93, 7620.9761);
       asinh(_GLF_IDENTITY(vec3(-8.5, 5.4, 2.4), (_GLF_IDENTITY(vec3(-8.5, 5.4, 2.4), vec3(mat3(vec3(-8.5, 5.4, 2.4), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) * vec3(1.0, 1.0, 1.0)));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        barrier();
       while(true)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         uvec2 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[2], _GLF_SWITCH_0_21v[62];
         if(_GLF_DEAD(false))
          barrier();
         if(false)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 4:
               (- _GLF_IDENTITY(_GLF_SWITCH_0_0v, ~ (~ (_GLF_SWITCH_0_0v))));
               case 92:
               vec4(_GLF_IDENTITY(0.5, max(_GLF_IDENTITY(0.5, (0.5) / 1.0), 0.5)), 0.2, 4716.5521, -5885.0144);
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               case 0:
               case 33:
               case 16:
               case 72:
               case 5:
               if(_GLF_DEAD(false))
                barrier();
               case 19:
               case 49:
               if(_GLF_DEAD(false))
                continue;
               case 14:
               case 95:
               case 74:
               barrier();
               break;
               case 41:
               if(_GLF_DEAD(false))
                break;
               mat4x3(-1580.7910, 0.5, -1.8, 4469.2328, -781.386, 250.135, 80.39, 679.231, 14.49, -148.594, -3.3, -446.058);
               case 31:
               mat3x2(7.7, -3.6, _GLF_IDENTITY(0.7, clamp(_GLF_IDENTITY(0.7, max(0.7, 0.7)), 0.7, 0.7)), 4.4, 80.05, 27.49)[1];
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           ;
           (subgroup_local_id & subgroup_size);
           (- (-802.720 + mat4x3(72.18, -4.3, 548.383, 0.3, -3510.0915, 2112.3824, 8.7, _GLF_IDENTITY(0.8, mix(float(_GLF_FUZZED(1406.3815)), float(0.8), bool(true))), 3.8, -2.9, _GLF_IDENTITY(-6894.4399, _GLF_IDENTITY(max(_GLF_IDENTITY(-6894.4399, min(-6894.4399, _GLF_IDENTITY(-6894.4399, _GLF_IDENTITY((true ? _GLF_IDENTITY(-6894.4399, (-6894.4399) * 1.0) : _GLF_FUZZED(-3.8)), 0.0 + ((true ? _GLF_IDENTITY(-6894.4399, (-6894.4399) * 1.0) : _GLF_FUZZED(-3.8))))))), -6894.4399), (max(_GLF_IDENTITY(-6894.4399, min(-6894.4399, _GLF_IDENTITY(-6894.4399, _GLF_IDENTITY((true ? _GLF_IDENTITY(-6894.4399, (-6894.4399) * 1.0) : _GLF_FUZZED(-3.8)), 0.0 + ((true ? _GLF_IDENTITY(-6894.4399, (-6894.4399) * 1.0) : _GLF_FUZZED(-3.8))))))), -6894.4399)) / 1.0)), 8.6)));
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           bool _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
            return;
           vec2(1533.5075, 18.29);
           if(_GLF_DEAD(false))
            barrier();
           bvec3 _GLF_SWITCH_0_24v;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.6, 5654.2904)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
            barrier();
           vec2 _GLF_SWITCH_0_25v;
           uint _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[27];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) >> 0), 0))], _GLF_IDENTITY(_GLF_FUZZED(-1.8), (_GLF_IDENTITY(_GLF_FUZZED(-1.8), (true ? _GLF_FUZZED(-1.8) : _GLF_FUZZED(629.260)))) / 1.0)), vec2(_GLF_FUZZED(-646.262), (injectionSwitch)[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), true, false, true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, (false) && true), true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(_GLF_SWITCH_0_25v)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), false, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.8)), bool(false))), injectionSwitch.y)))) && (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))), ((_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))))) || false))) || false))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))))) || false))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, true))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))))))) && true)) && true), true, true), false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, (false) && true), true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(_GLF_SWITCH_0_25v)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-4.9), _GLF_FUZZED((9.0 + -5.5))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))), min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))))).y)) && (bool(bvec4(false, true, false, true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), false, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))))) || false))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), false, false)))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true))))))) || _GLF_IDENTITY(false, (false) || false)))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))) && (bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))))) || false))))))))))))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           float _GLF_SWITCH_0_28v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             continue;
            }
           mat2 _GLF_SWITCH_0_29v[46];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_IDENTITY((_GLF_SWITCH_0_19v != _GLF_IDENTITY(uvec2(188565u, 100622u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(188565u, 100622u), min(uvec2(188565u, 100622u), uvec2(188565u, 100622u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_SWITCH_0_19v, (_GLF_SWITCH_0_19v) | (_GLF_SWITCH_0_19v)) != uvec2(188565u, 100622u)), ! (! ((_GLF_SWITCH_0_19v != uvec2(188565u, 100622u)))))) && true));
         uvec4(_GLF_IDENTITY(19264u, 0u ^ (19264u)), 163454u, 71004u, 88943u).ggrg;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         mat3 _GLF_SWITCH_0_30v[7], _GLF_SWITCH_0_31v;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         vec2 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), ((false)) || false)), (false || (_GLF_IDENTITY((false), ((false)) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
            continue;
           barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            continue;
           }
          if(_GLF_DEAD(false))
           barrier();
          switch(_GLF_SWITCH(0))
           {
            case 19:
            bvec4(false, true, false, false);
            case 0:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             barrier();
            case 55:
            case 31:
            case 93:
            uvec2 _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v;
            case 85:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.6) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))
               continue;
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                barrier();
               }
             }
            case 95:
            case 25:
            if(_GLF_DEAD(false))
             return;
            bvec4(false, false, false, false).grb;
            mat2x4(mat4x2(7.1, -4.9, 9.5, 41.59, -252.838, 2.8, -15.05, -1.9));
            if(_GLF_DEAD(false))
             barrier();
            case 66:
            case 79:
            _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_SWITCH_0_35v, _GLF_SWITCH_0_19v), min(min(_GLF_SWITCH_0_35v, _GLF_SWITCH_0_19v), min(_GLF_SWITCH_0_35v, _GLF_SWITCH_0_19v))), uvec2(0u, 0u) + (_GLF_IDENTITY(min(_GLF_SWITCH_0_35v, _GLF_SWITCH_0_19v), min(min(_GLF_SWITCH_0_35v, _GLF_SWITCH_0_19v), min(_GLF_SWITCH_0_35v, _GLF_SWITCH_0_19v)))));
            break;
            case 10:
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               break;
              return;
             }
            mat3x2 _GLF_SWITCH_1_0v[28], _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.6)), vec2(_GLF_FUZZED(8.9), (injectionSwitch)[1]), bvec2(false, true))).y)))))))
             {
              if(_GLF_DEAD(false))
               continue;
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            default:
            if(_GLF_DEAD(false))
             return;
            1;
           }
          if(_GLF_DEAD(false))
           barrier();
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_SWITCH_0_0v)))))) | (0))))
            {
             case 88:
             (_GLF_SWITCH_0_31v / inversesqrt(-4.7));
             if(_GLF_DEAD(false))
              barrier();
             case 77:
             bvec2(true, false);
             case 0:
             case 79:
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.x))) / 1.0) > injectionSwitch.y, true, false, false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 barrier();
                }
               barrier();
              }
             case 32:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             continue;
             break;
             default:
             1;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
          }
         while(true)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 95:
               lessThan(ivec2(21366, -66699), ivec2(8103, 27243));
               case 77:
               uvec4(68139u, 106658u, 60889u, 182922u);
               case 0:
               case 17:
               case 15:
               if(_GLF_DEAD(false))
                return;
               case 50:
               case 35:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                barrier();
               case 26:
               case 63:
               case 83:
               case 60:
               case 16:
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 19:
               vec2(-5.9, 733.211);
               default:
               1;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           uvec3 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_SWITCH_0_33v))), injectionSwitch)).y)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           (-857.786 == -2069.7391);
           mat2x4(-4051.2226, 58.43, 0.2, -281.786, 2.2, -133.193, 5.4, -0.4);
           -944.855;
           mat3x4 _GLF_SWITCH_0_39v[92];
           _GLF_SWITCH_0_18v;
           ivec2(-18589, 3794);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           bool _GLF_SWITCH_0_40v[6], _GLF_SWITCH_0_41v[66], _GLF_SWITCH_0_42v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                return;
               break;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-18.88)), vec2(_GLF_FUZZED(-51.19), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-3.5)), float((injectionSwitch)[1]), bool(true)))), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))), bool(bvec4(! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))), true, true, false))))))))))) : _GLF_FUZZED(_GLF_SWITCH_0_32v))).y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          break;
         for(         mat2x4(572.965, 7.7, 22.20, -9919.7406, _GLF_IDENTITY(-1330.1352, (true ? _GLF_IDENTITY(-1330.1352, (_GLF_IDENTITY(-1330.1352, float(mat4x3(-1330.1352, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)))) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-3198.1838, (-3198.1838) + 0.0)))), 924.368, -508.413, -2930.7660);
 false; vec4(-7.0, -4709.4549, 1.0, -9709.9124))
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       max(ivec2(6238, -80423), ivec2(48009, _GLF_IDENTITY(-36629, int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((-36629), ((-36629)) / 1))));
      }
     while(true);
     if(_GLF_DEAD(false))
      return;
     case 0:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))
        {
         case 0:
         case 26:
         case 35:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         case 53:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         case 28:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         break;
         default:
         1;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     int i = 0;
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) | (64)), 64)), 4);
     if(_GLF_DEAD(false))
      barrier();
     case 66:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((! (false)), true, false)), false || (bool(bvec3((! (false)), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3((! (false)), true, false))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 6:
     if(_GLF_DEAD(false))
      barrier();
     uint _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[85];
     if(_GLF_DEAD(false))
      return;
     default:
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_SWITCH_0_0v) : 1));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true, false)))))
      barrier();
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 92:
     if((mat3x4(62.94, _GLF_IDENTITY(-8.7, 0.0 + (-8.7)), -2.5, 4.9, -792.085, -1.1, -85.97, 2.2, 6.5, 15.38, -60.25, -0.0) != mat3x4(-5.5, 8283.8092, 9.2, 56.49, -8133.5706, -6123.9145, 3581.4597, 29.62, 3.8, 979.338, -873.823, 44.07)))
      {
       if(_GLF_DEAD(false))
        barrier();
       {
        mat3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
        ;
       }
       atan(vec3(-94.35, -5.5, -623.082), vec3(-2450.0990, -8088.7360, -3.7));
       ivec3 _GLF_SWITCH_2_2v;
       min(21728, -3496);
       if(false)
        {
        }
      }
     case 22:
     (17.51 / mat2x3(mat3x4(3640.8392, -57.28, 65.21, -3.0, -630.445, 744.803, -7934.1981, -914.189, 459.074, 899.001, 5896.0424, 1.7)));
     case 0:
     case 99:
     if(_GLF_DEAD(false))
      barrier();
     case 11:
     if(_GLF_DEAD(false))
      return;
     switch(_GLF_SWITCH(0))
      {
       case 0:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), (bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))) && true))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, false), true)))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
       case 17:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       case 6:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       case 54:
       case 31:
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58950) : 0))) ^ 0)))
          {
           case 51:
           (- vec4(-2.4, -5.8, -93.36, -839.252));
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 58:
           case 55:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           case 22:
           barrier();
           case 36:
           case 26:
           case 8:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           break;
           default:
           1;
          }
        }
       case 42:
       if(_GLF_DEAD(false))
        barrier();
       case 35:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
        barrier();
       case 39:
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       break;
       if(_GLF_DEAD(false))
        barrier();
       case 88:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       ;
       case 2:
       (mat2(_GLF_IDENTITY(71.02, clamp(71.02, 71.02, 71.02)), 8606.9088, -511.297, 84.07) * (- mat3x2(_GLF_IDENTITY(91.18, mix(float(_GLF_FUZZED(-834.044)), float(91.18), bool(true))), -7.3, -4.3, -777.058, -9580.2172, 68.35)));
       default:
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
      return;
     break;
     if(_GLF_DEAD(false))
      return;
     case 45:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     {
      {
       float(workgroup_size);
       ;
       if(_GLF_DEAD(false))
        barrier();
      }
      {
       if(_GLF_DEAD(false))
        barrier();
       mat3 _GLF_SWITCH_2_3v;
       uvec4 _GLF_SWITCH_2_4v;
       ivec3(32235, -81112, -98688);
       bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), false);
       mat3x4(12.65, -8.8, -4249.4784, 90.72, -7241.6602, 94.86, 32.11, -34.88, -371.775, -7273.7287, 7.7, -0.8);
       {
        mat3x2 _GLF_SWITCH_2_5v[22], _GLF_SWITCH_2_6v;
        vec4(-241.205, 553.247, -3250.9561, -5982.9996);
        mat3x4 _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v;
        equal(uvec3(30638u, 117719u, 31831u), uvec3(144992u, 167042u, 5846u)).zyx;
        mat2x4 _GLF_SWITCH_2_10v;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        uvec2 _GLF_SWITCH_2_11v, _GLF_SWITCH_2_12v, _GLF_SWITCH_2_13v;
        if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
         return;
        notEqual(_GLF_SWITCH_2_4v, uvec4(uvec3(17294u, 185937u, 155590u), subgroup_local_id));
        mat3 _GLF_SWITCH_2_14v[29], _GLF_SWITCH_2_15v, _GLF_SWITCH_2_16v;
       }
      }
      while((uvec2(18403u, 103410u) != uvec2(198819u, 44547u)))
       {
        ;
        if(_GLF_DEAD(false))
         continue;
       }
      while(false)
       {
       }
      if(true)
       {
        bvec3 _GLF_SWITCH_2_17v[72], _GLF_SWITCH_2_18v[82], _GLF_SWITCH_2_19v[67];
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        transpose(mat2x4(86.46, -8.5, 5264.5820, -6.1, -9.0, 6.5, 46.67, -9.7));
        while(false)
         {
          switch(_GLF_SWITCH(0))
           {
            case 24:
            vec3 _GLF_SWITCH_3_0v;
            case 0:
            case 68:
            case 44:
            case 41:
            mat3(-4.5, 24.95, -48.39, 54.98, 68.68, -2.3, 3059.5017, 31.39, -5.9);
            mix(ivec2(7197, 99900).xyy, ivec3(-63849, 15844, 12783), bvec3(false, true, false));
            case 67:
            false;
            case 79:
            case 36:
            case 80:
            case 50:
            mat4 _GLF_SWITCH_2_20v[76], _GLF_SWITCH_2_21v, _GLF_SWITCH_2_22v;
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            case 55:
            mat3 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
            default:
            1;
            if(_GLF_DEAD(false))
             break;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           barrier();
         }
        int _GLF_SWITCH_2_23v;
        if(true)
         {
          mat2(mat4x2(-4199.3327, 4.0, 3.6, -70.22, 0.7, 56.63, 823.086, 9.7));
          num_workgroup;
          bvec3 _GLF_SWITCH_2_24v[84];
          isinf(vec4(2.9, -2346.2971, _GLF_IDENTITY(-1813.6854, mix(float(_GLF_FUZZED(-8.8)), float(-1813.6854), bool(true))), -2.2));
          mat2x4 _GLF_SWITCH_2_25v;
          log(mix(vec4(9336.8513, -4.6, -34.94, -0.5), vec4(-5.5, -3.6, 6.5, 791.482), vec4(-40.39, -4552.5341, 4447.6871, -67.33)));
          uvec4(94637u, 12330u, 36052u, 107914u);
          mat2x3(3.9, 3881.6056, 3.0, -6919.3249, -127.306, 68.93);
          vec2 _GLF_SWITCH_2_26v, _GLF_SWITCH_2_27v;
         }
        else
         {
          atan(vec3(-52.50, -3998.4238, -7.8));
          length(float((subgroup_size / subgroup_id)));
          (injectionSwitch != vec2(-94.98, -6.9));
          workgroup_base;
         }
       }
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         return;
        barrier();
       }
      for(mat4 _GLF_SWITCH_2_28v[44], _GLF_SWITCH_2_29v[96], _GLF_SWITCH_2_30v; (bvec4(true, true, false, false) != bvec4(true, false, true, true)); uvec4(82436u, 99677u, 28830u, 75925u))
       {
        if(_GLF_DEAD(false))
         return;
        injectionSwitch;
       }
     }
     default:
     if(_GLF_DEAD(false))
      barrier();
     1;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
