#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(false, (false) && true))), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(8.6, 0.0 + (8.6))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(8.6, 0.0 + (8.6))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))) * mat2(1.0), max((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat2x3(transpose(mat2(1.0))))))), mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0) + (mat2(1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))) * mat2(1.0), max((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat2x3(transpose(mat2(1.0))))))), mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0) + (mat2(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))) * mat2(1.0), max((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat2x3(transpose(mat2(1.0))))))), mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0) + (mat2(1.0)))))))))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(ceil(-1.3))))), ((injectionSwitch) * mat2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) - vec2(0.0, 0.0), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((vec2(0.0, 0.0)) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(82666u, 192869u))) : _GLF_IDENTITY((vec2(0.0, 0.0)) - vec2(0.0, 0.0), clamp((vec2(0.0, 0.0)) - vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))))) : _GLF_FUZZED(vec2(9131.3848, -1.8))))))))))).y))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, cos(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true, ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true) || _GLF_IDENTITY(false, true && (false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.y = num_workgroup, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) - (_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u ^ 1u), 0u)))), uint(1u)))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(4u, 1u, 0u)), min(uint(uvec3(4u, 1u, 0u)), uint(uvec3(4u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(4u, 1u, 0u), min(uvec3(4u, 1u, 0u), uvec3(4u, 1u, 0u)))), min(uint(uvec3(4u, 1u, 0u)), uint(uvec3(4u, 1u, 0u))))) << 0u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.y = num_workgroup, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.y = num_workgroup) >> 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))) | (1u)) * (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.y = num_workgroup, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.y = num_workgroup) >> 0u)))));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize[2], gl_WorkGroupSize[2]), (false ? _GLF_FUZZED(subgroup_id) : min(gl_WorkGroupSize[2], gl_WorkGroupSize[2]))), min(min(gl_WorkGroupSize[2], gl_WorkGroupSize[2]), min(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))), max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5954.0302) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5954.0302) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(1.9, 6.6)))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0)))), 1.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x)) > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bool(true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), bool(bvec2(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0))), (true ? _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0))), clamp(_GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0))), (float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0)))) / 1.0), _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0))), (false ? _GLF_FUZZED(599.306) : float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0))))), float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0))))) : _GLF_FUZZED(205.111)))), 0.0, 0.0, 1.0, 0.0))), 1.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0)), (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), 1.0))) + _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(1183.9190, -329.856, -9787.2891, 5.2)) : mat2(injectionSwitch, 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(1183.9190, -329.856, -9787.2891, 5.2)) : mat2(injectionSwitch, 1.0, 1.0))))) / vec2(1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x)) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (false)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_id;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, uvec3(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id[0], _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id[1], (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id[1], (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id[1]) >> 0u)) | (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id[1])), GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id[2])).z, max(workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z, 0u + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z, uint(uint(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z)))), ((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z, uint(_GLF_IDENTITY(uint(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z), (uint(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0u)), workgroup_size * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) : _GLF_FUZZED(injectionSwitch))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), bool(bool((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.4) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))), true, false))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  return;
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.19))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((false), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, _GLF_IDENTITY(((false) && true) && true, bool(bvec3(((false) && true) && true, true, false))))) || false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, _GLF_IDENTITY((true ? GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id)), (_GLF_IDENTITY((true ? GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id)), uvec3(0u, 0u, 0u) | ((true ? GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id))))) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))).y + _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x, ~ (~ (subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x))) + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)) ? _GLF_FUZZED((86495u / GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)).z, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z) >> 0u)) / 1u), max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((86495u / _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)))) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, clamp(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((86495u / _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)))) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((86495u / _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)))) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((86495u / _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)))) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((86495u / _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)))) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)))).z, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z) >> 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((86495u / GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec4(uvec2(136286u, 55683u), subgroup_size, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), workgroup_base, workgroup_base))))) >> subgroup_size)) : _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((86495u / _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)))) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)))).z, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z) >> 0u)) / 1u), uint(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED((86495u / GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid)).z, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z) >> 0u)) / 1u), 1u))))) + 1) % _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x, (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x) / 1u)) | 0u));
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, cos(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), max(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(99.05))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (false ? _GLF_FUZZED(mat2(2649.3581, -1529.1451, -7.4, 450.055)) : _GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, cos(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(smoothstep(17.73, -48.34, 8664.6772)) : 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.9))), 0.0))))), vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat2(injectionSwitch.y, 0.0, cos(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 _GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w] = 1, ~ (~ (buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w] = 1)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-666.020, -9256.9976)))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), false))))))))) || false))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-666.020, -9256.9976)))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), false))))))))) || false))))))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-4700.8766, -2246.7301), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec2(-4700.8766, -2246.7301), (_GLF_IDENTITY(vec2(-4700.8766, -2246.7301), vec2(mat2x3(vec2(-4700.8766, -2246.7301), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) + abs(vec2(0.0, 0.0)))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-4700.8766, -2246.7301), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(-4700.8766, -2246.7301)))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-4700.8766, -2246.7301), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(-4700.8766, -2246.7301)))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) * mat2(1.0))) * mat2(1.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-4700.8766, max(-4700.8766, -4700.8766)), -2246.7301)), clamp(_GLF_FUZZED(vec2(-4700.8766, -2246.7301)), _GLF_FUZZED(vec2(-4700.8766, -2246.7301)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-4700.8766, -2246.7301)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-4700.8766, -2246.7301)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(-4700.8766, -2246.7301)), max(_GLF_FUZZED(vec2(-4700.8766, -2246.7301)), _GLF_FUZZED(vec2(-4700.8766, -2246.7301)))), _GLF_FUZZED(vec2(-4700.8766, -2246.7301)), _GLF_FUZZED(vec2(-4700.8766, -2246.7301)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-4700.8766, -2246.7301)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-4700.8766, -2246.7301)))), (_GLF_IDENTITY(_GLF_FUZZED(vec2(-4700.8766, -2246.7301)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-4700.8766, _GLF_IDENTITY(-2246.7301, max(-2246.7301, -2246.7301))))))) * mat2(1.0)))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z + 1 < _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id, (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id) - (uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 1u) ^ uvec3(1u, 1u, 1u))).x)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   int i = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) / 1), int(6), int(6))))) | (0))) | _GLF_IDENTITY(0, (0) * 1));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.x], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bool(! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (injectionSwitch) / vec2(1.0, 1.0)).y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_11next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.x], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5)))), (max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5))))) - 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5)))), (max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5))))) - 0.0))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5)))), (max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5))))) - 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5)))), (max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5))))) - 0.0))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5)))), (max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5))))) - 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5)))), (max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.5))))) - 0.0))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, bool(bvec3((false) || false, false, false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), true, true))))), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, bool(bvec2(true, true)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true), false)))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))) || false))) || false)) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, sqrt(0.0), 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-6.8 + injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(injectionSwitch.x, 1.0, 0.0))))) > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(uvec3(128916u, 103845u, 195897u).r)))).x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
