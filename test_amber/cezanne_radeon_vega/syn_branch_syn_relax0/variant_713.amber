#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), _GLF_IDENTITY(true, ! (! (true)))))))), false || (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, true))), _GLF_IDENTITY(true, (true) && true))))))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), false || (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - abs(tan(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(0u | (uint(0u)), clamp(0u | (uint(0u)), 0u | (uint(0u)), _GLF_IDENTITY(0u | (uint(0u)), _GLF_IDENTITY(uint(uint(0u | (uint(0u)))), ~ (~ (uint(uint(0u | (uint(0u))))))))))), uint(0u)))))) ^ (gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) ^ (gl_WorkGroupSize))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))), 0u), ~ (~ (uvec3(0u, 0u, 0u)))) ^ (gl_WorkGroupSize))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(0u | (uint(0u)), clamp(0u | (uint(0u)), 0u | (uint(0u)), _GLF_IDENTITY(0u | (uint(0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u | (uint(0u)), max(0u | (uint(0u)), 0u | (uint(0u)))))), ~ (~ (uint(uint(0u | (uint(0u))))))))))), uint(0u)))))) ^ (gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) ^ (gl_WorkGroupSize))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))), 0u), ~ (~ (uvec3(0u, 0u, 0u)))) ^ (gl_WorkGroupSize))))))) : _GLF_FUZZED(uvec3(178112u, 20577u, 79363u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(192189u, 170979u, 92400u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true)))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, true)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true))))))) || false), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false), ((false)) && true) && true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), false || (! ((false))))))))) && true, true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))) || false)))))))) && true)), true && ((false) && true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u))) / (1u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), min(min(workgroup_base, workgroup_base), _GLF_IDENTITY(min(workgroup_base, workgroup_base), 0u | (min(workgroup_base, workgroup_base)))))), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))) >> 0u), subgroup_id, subgroup_id)) * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) << 0u) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))))))))) ^ 0u))))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))))))))) ^ 0u))))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))))))))) ^ 0u))))), ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))))))))) ^ 0u)))))) >> 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))))))))) ^ 0u))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))))))))) ^ 0u))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))))))))) ^ 0u)))))))))))) << 0u) + subgroup_local_id)))) >> 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))) ^ 0u)) | (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), clamp((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))) | ((subgroup_local_id)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), clamp((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))) | ((subgroup_local_id))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), clamp((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))) | ((subgroup_local_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), clamp((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))) | ((subgroup_local_id)) : _GLF_FUZZED((workgroup_size << num_workgroup))))))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), (subgroup_local_id))))) / (_GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))) ^ 0u) | ((subgroup_local_id))) ^ 0u), max(_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), ((_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED((subgroup_id --)))))) | ((subgroup_local_id))) ^ 0u), _GLF_IDENTITY(((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))), (((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u)))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), min(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), 0u + (_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))))))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id))), ((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))) ^ 0u) | ((subgroup_local_id))) ^ 0u), max(_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), ((_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED((subgroup_id --)))))) | ((subgroup_local_id))) ^ 0u), _GLF_IDENTITY(((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))), (((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u)))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), min(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), 0u + (_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))))))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id)))) << 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) << 0u)) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), ((subgroup_local_id)) * 1u), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), _GLF_IDENTITY((((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u, ((((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u) | 0u))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id)))), (((subgroup_local_id)) | ((subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> 0u))), 0u)))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) ^ 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) ^ 0u)) * 1u), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) ^ 0u)))), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id)))))) | 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), min(((subgroup_local_id)) | ((subgroup_local_id)), ((subgroup_local_id)) | ((subgroup_local_id))))) ^ 0u)), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))))) | ((subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) | (((subgroup_local_id)))) | ((subgroup_local_id))), min((_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) | (((subgroup_local_id)))) | ((subgroup_local_id))), (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) | (((subgroup_local_id)))) | ((subgroup_local_id))))) ^ 0u)), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), max(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, 0u + (0u)))))) ^ ((subgroup_local_id)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) + 0u))) + (_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))))), _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u), ~ (~ ((subgroup_local_id)))))))))), (subgroup_local_id), (subgroup_local_id))))))) / (_GLF_IDENTITY(_GLF_IDENTITY(1u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u | 0u) << 0u), min(_GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u), _GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u)))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))), (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))) ^ 0u) | ((subgroup_local_id))) ^ 0u), max(_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED((subgroup_id --)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED((subgroup_id --))))))))) | ((subgroup_local_id))) ^ 0u), _GLF_IDENTITY(((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))), (((subgroup_local_id)) | ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))))) ^ 0u)))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), min(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (_GLF_IDENTITY(0u, 0u + (0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ ((subgroup_local_id))))))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) << 0u)) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) | ((subgroup_local_id))) ^ 0u, ((((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u) | 0u))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u ^ ((subgroup_local_id)), (0u ^ ((subgroup_local_id))) + 0u))), (((subgroup_local_id)) | ((subgroup_local_id))) ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> 0u))), 0u)))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) ^ 0u)), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id)))))) | 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u)), _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id)), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id)), (true ? min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id)) : _GLF_FUZZED(workgroup_id))), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id)), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))))), (subgroup_local_id), (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id))), ((subgroup_local_id)) + (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))))) | ((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) | (((subgroup_local_id)))) | ((subgroup_local_id))) ^ 0u)), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) + 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), ~ (~ (_GLF_IDENTITY(0u, 0u + (0u))))) ^ ((subgroup_local_id))))), _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u), ~ (~ ((subgroup_local_id)))))))))), (subgroup_local_id), (subgroup_local_id))))))) / (_GLF_IDENTITY(_GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u), min(_GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u), _GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u)))))), (true ? (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id))) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (true ? ((subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))) ^ 0u) | ((subgroup_local_id))) ^ 0u), max(_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), ((_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (subgroup_local_id))), 1u, (1u & 1u)), (uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u))), ((uvec3(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))), 1u, (1u & 1u)))) * uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED((subgroup_id --)))))) | ((subgroup_local_id))) ^ 0u), _GLF_IDENTITY(((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), 1u * (((subgroup_local_id)) | ((subgroup_local_id)))))), (((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u)))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), min(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id)), 0u + (_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))))))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) << 0u)) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) | ((subgroup_local_id))) ^ 0u, ((((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u) | 0u))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id)))), (_GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), min(((subgroup_local_id)) | ((subgroup_local_id)), ((subgroup_local_id)) | ((subgroup_local_id))))) ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> 0u))), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) ^ 0u)), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id)))))) | 0u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u)), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), 1u * ((subgroup_local_id) | (subgroup_local_id))), (subgroup_local_id) | (subgroup_local_id))))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u)), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u)), _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (((subgroup_local_id)) | ((subgroup_local_id))) ^ 0u))))))), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))), (subgroup_local_id))))), (subgroup_local_id), (subgroup_local_id)))))))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))))) | ((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) | (((subgroup_local_id)))) | ((subgroup_local_id))) ^ 0u)), _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)) ^ (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u)), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) + 0u))) + (_GLF_IDENTITY(0u, 0u + (0u)) ^ ((subgroup_local_id))))), _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u), ~ (~ ((subgroup_local_id)))))))))), (subgroup_local_id), (subgroup_local_id))))))) / (_GLF_IDENTITY(_GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u), min(_GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u), _GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u)))))) : _GLF_FUZZED(workgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))))) - 0u), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_FUZZED(subgroup_size))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size : _GLF_FUZZED(165306u))), (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u ^ 0u)) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))), max((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_FUZZED(subgroup_size))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size : _GLF_FUZZED(165306u))), (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u ^ 0u)) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_FUZZED(subgroup_size))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size : _GLF_FUZZED(165306u))), (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u ^ 0u)) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))))) << 0u, ((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_FUZZED(subgroup_size))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u ^ 0u)) * subgroup_size, subgroup_id * subgroup_size)))))) << 0u) << 0u)), (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))))) - 0u), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_FUZZED(subgroup_size))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u ^ 0u)) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))) << 0u, ((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u ^ 0u)) * subgroup_size, subgroup_id * subgroup_size)))))) << 0u) << 0u))) | (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))))) - 0u), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_FUZZED(subgroup_size))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u ^ 0u)) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))) << 0u, ((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_FUZZED(subgroup_size))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u ^ 0u)) * subgroup_size, subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_FUZZED(subgroup_size))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u ^ 0u)) * subgroup_size, subgroup_id * subgroup_size)))))))) << 0u) << 0u)))) + subgroup_local_id) >> 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u)))) / 1u), _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 1u)), max(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 1u)), _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 1u)), max(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 1u)), uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 1u))))) | 0u)))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -58.47)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, -58.47))))) * mat2(1.0)).y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(reflect(injectionSwitch, vec2(-45.54, -5.7))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), 1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1)))))), 1))))) | 0)) - 0), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ _GLF_IDENTITY((1), 0 + (_GLF_IDENTITY((1), min((1), (1))))))))), (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1))))) | 0)) - 0), (buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), ~ (1))))), (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0))), 1))))) | 0)) - 0)) / 1u)) / (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))) && true), (! (false)) || false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), false)), bool(bool(bool(bvec2(bool(true), false)))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (false)) && true, ((! (false)) && true) || false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true))))))))))))))))), ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))))))))))))))) || false)))), ! (! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)) && true)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, true)))))) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), true))))))))))))))))), ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), true)), bool(bvec4(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), true)), false, false, false))))), false, true)))))) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((! (false)) && true, true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3((! (false)) && true, true, true)), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3((! (false)) && true, true, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3((! (false)) && true, true, true)), false)))))))))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))))))))))))))) || false))))))))))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), bvec3(bvec4(bvec3((! (false)) && true, true, true), false))))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), bvec3(bvec4(bvec3((! (false)) && true, true, true), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))))))))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true))))))))))))))))), ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))))))))))))))) || false)))))))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)) && true, bool(_GLF_IDENTITY(bool((! (false)) && true), ! (! (bool((! (false)) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))) && true, true, true)))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), false)))))))))))))))), bool(bvec4(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! _GLF_IDENTITY((false), ! (! ((false))))) && true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), false)))))))))), bool(bvec4(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, false)), true && (_GLF_IDENTITY(bool(bvec3((! (false)), true, false)), false || (bool(bvec3((! (false)), true, false))))))) && true, true, true)))))), false)))))))))), _GLF_IDENTITY(true, true && (true)) && ((! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false))))))))), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool((false)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true))))))))))))))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) && true, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) && true, true, true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) && true, true, true))))))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true))))))))))))))))))))))), ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), bvec3(bvec4(bvec3((! (false)) && true, true, true), true))))), bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bvec4(! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, true && (false)))) || false)), false, false, true))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) && true, true, true)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3((! (false)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true)))))))))), (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), false || (_GLF_IDENTITY(bool(bvec2(! (false), true)), ! (! (bool(bvec2(! (false), true))))))))) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true))))))))), true && ((bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), false || (_GLF_IDENTITY(bool(bvec2(! (false), true)), ! (! (bool(bvec2(! (false), true))))))))) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (false)) && true, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! (false)) && true, true, true))))))))))))) || false))))))))) || false)))))))) && true))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_DEAD(false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(912.845))))))).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, sqrt(0.0)))), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), 1 * (_GLF_IDENTITY(0, (0) - 0))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-673.273))))), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (bool((injectionSwitch.x > injectionSwitch.y))), true, true)), (bool(bvec3(! (bool((injectionSwitch.x > injectionSwitch.y))), true, true))) || false)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)), false || (bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (bool((injectionSwitch.x > injectionSwitch.y))), true, true)), (bool(bvec3(! (bool((injectionSwitch.x > injectionSwitch.y))), true, true))) || false)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)), false || (bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (bool((injectionSwitch.x > injectionSwitch.y))), true, true)), (bool(bvec3(! (bool((injectionSwitch.x > injectionSwitch.y))), true, true))) || false)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)), false || (bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (bool((injectionSwitch.x > injectionSwitch.y))), true, true)), (bool(bvec3(! (bool((injectionSwitch.x > injectionSwitch.y))), true, true))) || false)))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)), false || (bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true))))))))), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1])).x > injectionSwitch.y))) || false))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), injectionSwitch.x), float(mat2x4(max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * mat2(1.0)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))))))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(0, (0) >> 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))).y)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))).x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
