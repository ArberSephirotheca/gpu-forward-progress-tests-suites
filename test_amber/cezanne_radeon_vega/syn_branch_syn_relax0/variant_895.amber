#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 ivec4 _f0;
 int _f1;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat2x3 _f1;
 uint _f2;
 bvec2 _f3;
 int _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 ivec4 _f4;
 ivec4 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 uint subgroup_size;
 ivec2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(mat4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) * round(length(_GLF_IDENTITY(normalize(1.0), float(mat4(normalize(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), 1.0)), dot(vec2(0.0, 0.0), vec2(exp(0.0), 1.0))), 1.0, 1.0, exp(0.0), 0.0, 0.0, abs(0.0)))))))))), _GLF_struct_0(mat2x4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))), _GLF_struct_1(mat2x3(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0)))), ivec2(_GLF_IDENTITY(1, (1) << 0))), _GLF_struct_2(uvec3(1u), mat2x3(1.0), 1u, bvec2(true), 1, mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0)))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(determinant(mat4(mat3x2(-93.48, -1.5, -3.3, 23.73, 9.1, 0.4))), 0.0 + (determinant(mat4(mat3x2(-93.48, -1.5, -3.3, 23.73, 9.1, 0.4)))))) : float(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))))))))), 1.0), max(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0)), float(mat2x4(float(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY((float(1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY((float(1.0)), clamp((float(1.0)), (float(1.0)), (float(1.0))))), (float(_GLF_IDENTITY((float(1.0)), clamp((float(1.0)), (float(1.0)), (float(1.0)))))) / 1.0)), max(float(_GLF_IDENTITY(float(_GLF_IDENTITY((float(1.0)), clamp((float(1.0)), (float(1.0)), (float(1.0))))), (float(_GLF_IDENTITY((float(1.0)), clamp((float(1.0)), (float(1.0)), (float(1.0)))))) / 1.0)), float(_GLF_IDENTITY(float(_GLF_IDENTITY((float(1.0)), clamp((float(1.0)), (float(1.0)), (float(1.0))))), (float(_GLF_IDENTITY((float(1.0)), clamp((float(1.0)), (float(1.0)), (float(1.0)))))) / 1.0))))) / 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), float(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(refract(_GLF_IDENTITY(-9454.1541, (true ? _GLF_IDENTITY(-9454.1541, (-9454.1541) * 1.0) : _GLF_FUZZED(1.5))), 1.3, 8.4))))))))), 1.0), min(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0)))))), ivec4(1), ivec4(1), _GLF_struct_3(ivec4(1), 1)), gl_SubgroupSize, ivec2(1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))) && true)))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, false, false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))) && true)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false, false)))))) && true)))) || false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! ((! (_GLF_IDENTITY(false, (false) || false)))))), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! ((! (_GLF_IDENTITY(false, (false) || false)))))), true, false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! ((! (_GLF_IDENTITY(false, (false) || false)))))), true, false)))) && true)) || false)), false || (bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false)))))) && true)) || false)), bool(bvec3((! (_GLF_IDENTITY(false, (false) || false))), true, _GLF_IDENTITY(false, false || (false)))))))))), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(175978u, (_GLF_IDENTITY(175978u, (175978u) >> 0u)) + _GLF_IDENTITY(0u, (0u) * 1u)), 95470u, 25557u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)) || false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) * cos(0.0)) > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0))))), 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 1.0))), injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0), ((_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), min(mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), 0.0, 1.0, 1.0, sqrt(1.0), 0.0), mat2x3(_GLF_IDENTITY(mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), 0.0, 1.0, 1.0, sqrt(1.0), 0.0)), (false ? _GLF_FUZZED(mat2x3(-25.62, -6.5, 798.420, -894.140, 4874.9863, 16.13)) : mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))))))), injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)) * mat2(1.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0)))), 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])), (false ? _GLF_FUZZED(injectionSwitch) : mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(log(-3.2)))), 1.0, 1.0)))), 0.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch))[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))])), _GLF_IDENTITY(min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))) + 0.0)))), _GLF_IDENTITY(mat2(1.0) * (min(mat2(_GLF_IDENTITY(1.0, (1.0) + abs(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), cos(vec2(0.0, 0.0)) * (mat2(1.0) * (min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))))))) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0)))), 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))))))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), length(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.7) : 0.0)), 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), float(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), float(mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))), 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0)))[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0), ((_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0), ((_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0), ((_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(_GLF_IDENTITY(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0))), float(mat3(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0))), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, abs(0.0), 0.0, 0.0, sqrt(0.0))), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0)))), 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), max(min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), min(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))), cos(vec2(0.0, 0.0)) * (mat2(1.0) * (min(mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 1)), (int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 1)))))], injectionSwitch[1])), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))))))) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])), max(max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0)))), 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), length(vec2(0.0, 0.0)), 1.0, sin(0.0), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9451.1075) : 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))))))))).x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) | 0u))), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), false, false, false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))))[1])).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))))[1])).y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(0.0, 0.0) + (vec2(1.0, 1.0) * (injectionSwitch))))))[0], injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], injectionSwitch[1])) + abs(vec2(0.0, 0.0)))).y)), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(0.0, 0.0) + (vec2(1.0, 1.0) * (injectionSwitch))))))[0], injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], injectionSwitch[1])) + abs(vec2(0.0, 0.0)))).y))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), 1u, (0u | 1u)), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), 1u, (0u | 1u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), 1u, (0u | _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(1u, 0u)))), 0u + (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(1u, 0u))))))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), 1u, (0u | 1u)))))) * 1u)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, 0u | (_GLF_struct_replacement_5.subgroup_size)), ~ (~ (_GLF_struct_replacement_5.subgroup_size))), _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))))) << 0u), min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, max(_GLF_struct_replacement_5.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, max(_GLF_struct_replacement_5.subgroup_size, _GLF_struct_replacement_5.subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, max(_GLF_struct_replacement_5.subgroup_size, _GLF_struct_replacement_5.subgroup_size))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_struct_replacement_5.subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(_GLF_IDENTITY(8u, (8u) >> _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (0u))))) | (uint(8u))))), 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(_GLF_IDENTITY(8u, (8u) >> 0u))) | (uint(8u))))), 1u)) ^ uvec3(0u, 0u, 0u))), 0u + _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))), _GLF_IDENTITY(clamp((uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))), (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))), (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u)))), (clamp((uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))), (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))), (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_5.subgroup_size), (~ (_GLF_struct_replacement_5.subgroup_size)) - 0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u)), 0u + (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))), 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, min(_GLF_struct_replacement_5.subgroup_size, _GLF_struct_replacement_5.subgroup_size)), 1u, 1u))), ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u)), 0u + (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u)), 0u + (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u)))))) >> 0u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, max(7u, 7u))))))) << 0u), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))) << 0u), (true ? _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))) << 0u) : _GLF_FUZZED(uint(4715.1180))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, min(_GLF_struct_replacement_5.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_struct_replacement_5.subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))) << 0u), (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_5.subgroup_size), ((_GLF_struct_replacement_5.subgroup_size)) | ((_GLF_struct_replacement_5.subgroup_size))) ^ _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) << _GLF_IDENTITY(0u, min(0u, 0u)))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), min((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), max((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))))))) << 0u), (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), min((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), max((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))))))) << 0u)) | (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), min((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), max((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))), (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, ~ (~ (_GLF_struct_replacement_5.subgroup_size)))))))) << 0u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) * _GLF_struct_replacement_5.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_5.subgroup_size), max((_GLF_struct_replacement_5.subgroup_size), _GLF_IDENTITY((_GLF_struct_replacement_5.subgroup_size), max((_GLF_struct_replacement_5.subgroup_size), (_GLF_struct_replacement_5.subgroup_size))))) | 0u)), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u) * _GLF_struct_replacement_5.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_struct_replacement_5.subgroup_size) | 0u))) | _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u) * _GLF_struct_replacement_5.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_struct_replacement_5.subgroup_size) | 0u))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | (_GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))))), (subgroup_id), (subgroup_id))))) - 0u) * _GLF_struct_replacement_5.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_5.subgroup_size) | 0u, ((_GLF_struct_replacement_5.subgroup_size) | 0u) | (_GLF_IDENTITY((_GLF_struct_replacement_5.subgroup_size) | 0u, max((_GLF_struct_replacement_5.subgroup_size) | 0u, (_GLF_struct_replacement_5.subgroup_size) | 0u))))), uint(uvec3((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_5.subgroup_size) | 0u, ((_GLF_struct_replacement_5.subgroup_size) | 0u) | (_GLF_IDENTITY((_GLF_struct_replacement_5.subgroup_size) | 0u, max((_GLF_struct_replacement_5.subgroup_size) | 0u, (_GLF_struct_replacement_5.subgroup_size) | 0u))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (true ? _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u) * _GLF_struct_replacement_5.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_struct_replacement_5.subgroup_size) | 0u))), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u) * _GLF_struct_replacement_5.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_struct_replacement_5.subgroup_size) | 0u)))) >> 0u) : _GLF_FUZZED(subgroup_local_id)))) | ((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u) * _GLF_struct_replacement_5.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_size, (_GLF_struct_replacement_5.subgroup_size) | 0u))))));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))), subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1)))), (1) ^ 0) < _GLF_struct_replacement_5.subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(2, max(2, 2)), 2), (max(_GLF_IDENTITY(2, max(2, 2)), 2)) | (max(_GLF_IDENTITY(2, max(2, 2)), 2))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (_GLF_IDENTITY(max(2, 2), 1 * (max(2, 2)))) - _GLF_IDENTITY(0, (0) << 0))), 2), (max(_GLF_IDENTITY(2, max(2, 2)), 2)) | _GLF_IDENTITY((max(_GLF_IDENTITY(2, max(2, 2)), 2)), int(ivec3((max(_GLF_IDENTITY(2, max(2, 2)), 2)), 0, 1)))))), clamp((~ (_GLF_IDENTITY(max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (_GLF_IDENTITY(max(2, 2), 1 * (max(2, 2)))) - _GLF_IDENTITY(0, (0) << 0))), 2), (max(_GLF_IDENTITY(2, max(2, 2)), 2)) | _GLF_IDENTITY((max(_GLF_IDENTITY(2, max(2, 2)), 2)), int(ivec3((max(_GLF_IDENTITY(2, max(2, 2)), 2)), 0, 1)))))), (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (_GLF_IDENTITY(max(2, 2), 1 * (max(2, 2)))) - _GLF_IDENTITY(0, (0) << 0))), 2), (max(_GLF_IDENTITY(2, max(2, 2)), 2)) | _GLF_IDENTITY((max(_GLF_IDENTITY(2, max(2, 2)), 2)), int(ivec3((max(_GLF_IDENTITY(2, max(2, 2)), 2)), 0, 1)))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (_GLF_IDENTITY(max(2, 2), 1 * (max(2, 2)))) - _GLF_IDENTITY(0, (0) << 0))), 2), (max(_GLF_IDENTITY(2, max(2, 2)), 2)) | _GLF_IDENTITY((max(_GLF_IDENTITY(2, max(2, 2)), 2)), int(ivec3((max(_GLF_IDENTITY(2, max(2, 2)), 2)), 0, 1)))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (_GLF_IDENTITY(max(2, 2), 1 * (max(2, 2)))) - _GLF_IDENTITY(0, (0) << 0))), 2), (max(_GLF_IDENTITY(2, max(2, 2)), 2)) | _GLF_IDENTITY((max(_GLF_IDENTITY(2, max(2, 2)), 2)), int(ivec3((max(_GLF_IDENTITY(2, max(2, 2)), 2)), 0, 1)))))), int(int((~ (_GLF_IDENTITY(max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (_GLF_IDENTITY(max(2, 2), 1 * (max(2, 2)))) - _GLF_IDENTITY(0, (0) << 0))), 2), (max(_GLF_IDENTITY(2, max(2, 2)), 2)) | _GLF_IDENTITY((max(_GLF_IDENTITY(2, max(2, 2)), 2)), int(ivec3((max(_GLF_IDENTITY(2, max(2, 2)), 2)), 0, 1))))))))), (0 | 0), 0, 0)), (int(ivec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (_GLF_IDENTITY(max(2, 2), 1 * (max(2, 2)))) - _GLF_IDENTITY(0, (0) << 0))), 2), (max(_GLF_IDENTITY(2, max(2, 2)), 2)) | _GLF_IDENTITY((max(_GLF_IDENTITY(2, max(2, 2)), 2)), int(ivec3((max(_GLF_IDENTITY(2, max(2, 2)), 2)), 0, 1)))))), int(int((~ (_GLF_IDENTITY(max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (_GLF_IDENTITY(max(2, 2), 1 * (max(2, 2)))) - _GLF_IDENTITY(0, (0) << 0))), 2), (max(_GLF_IDENTITY(2, max(2, 2)), 2)) | _GLF_IDENTITY((max(_GLF_IDENTITY(2, max(2, 2)), 2)), int(ivec3((max(_GLF_IDENTITY(2, max(2, 2)), 2)), 0, 1))))))))), (0 | 0), 0, 0))) | 0))))))), 4, 64, 0);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), max(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(64, (64) ^ 0))), 64)), 0);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
