#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))) && true, (_GLF_IDENTITY((true) && true, true && ((true) && true))) || false))) && true), false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), mat3(1.0) * (_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), mix(vec3(_GLF_FUZZED((+ 77.02)), _GLF_FUZZED(5410.2827), _GLF_FUZZED((871.298 + (-6027.6822 - 87.76)))), vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], (vec3(injectionSwitch.x, 0.0, 1.0))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[2]), bvec3(true, true, true))))))))), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), mat3(1.0) * (_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), mix(vec3(_GLF_FUZZED((+ 77.02)), _GLF_FUZZED(5410.2827), _GLF_FUZZED((871.298 + (-6027.6822 - 87.76)))), vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], (vec3(injectionSwitch.x, 0.0, 1.0))[1], (vec3(injectionSwitch.x, 0.0, 1.0))[2]), bvec3(true, true, true))))))))), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.8)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 1.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))).y))), false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true)), ! (! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true))))))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), float(_GLF_FUZZED(-6.8)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true))), ! (! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true))), (! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))))).x > injectionSwitch.y))), false, true, true)), true)))) && true)))))))))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.8)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 1.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))).y))), false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true)), ! (! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true))))))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), float(_GLF_FUZZED(-6.8)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true))), ! (! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true))), (! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))))).x > injectionSwitch.y))), false, true, true)), true)))) && true)))))))))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-6.8)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0), mix(vec2(_GLF_FUZZED(88.93), _GLF_FUZZED(-334.284)), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0))[1]), bvec2(true, true)))))), 1.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))).y))), false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true)), ! (! (bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true)), true))))))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 0.0))).x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 0.0))).x, (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 0.0))).x)), 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-6.8)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))), false, true, true)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(75.64)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false, true, true)), true))), ! (! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, ! (! (true)))))), true))), (! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec2(941.694, 3279.4323), vec2(45.87, -44.12))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(74.85)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0)), (determinant(mat2(1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))) / cos(0.0))))).x > injectionSwitch.y))), false, true, true)), (bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec2(941.694, 3279.4323), vec2(45.87, -44.12))) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(74.85)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0)), (determinant(mat2(1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))) / cos(0.0))))).x > injectionSwitch.y))), false, true, true))) || false), _GLF_IDENTITY(true, (true) || false))))) && true)))))))))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))) && true)) || _GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), max(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 1u)), (true ? uint(uvec3(workgroup_id, 1u, 1u)) : _GLF_FUZZED(num_workgroup)))))), 0u | (workgroup_id))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.9)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-937.749, -239.323)) : _GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.9)), _GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.9)), _GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.9)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-937.749, -239.323)) : _GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.9)), _GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.9)), _GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.9)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-937.749, -239.323)) : _GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.9)), _GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.9)), _GLF_IDENTITY(vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((6.0 / 7.3)), (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), float(mat4x3(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(sqrt(1.0)), 1.0)))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 1.0, log(1.0), exp(0.0)), (mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 1.0, log(1.0), exp(0.0))) * mat4(1.0)))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))) || false))), false, true))))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))) | 0u))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))) | 0u))))), (true ? ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))) | 0u))))) : _GLF_FUZZED(num_workgroup)))) | (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id))) | 0u)))))))))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(17371), ~ (~ (true ? 1 : _GLF_FUZZED(17371)))))), 1, 1))) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(957.781)), bvec2(false, false))))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, 0u, 0u)))), (_GLF_FUZZED(workgroup_size)) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : uint(7u)), ((false ? _GLF_FUZZED(workgroup_base) : uint(7u))) >> 0u)))) | ((subgroup_size)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u), min((subgroup_size), (subgroup_size)))) | ((subgroup_size))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (subgroup_size))), _GLF_IDENTITY(0u, (0u) - 0u) ^ ((subgroup_size))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(clamp(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((subgroup_size)))), ((subgroup_size))), min(clamp(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((subgroup_size)))), ((subgroup_size))), clamp(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((subgroup_size)))), ((subgroup_size)))))) / 1u)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) ^ ((subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (_GLF_IDENTITY(~ (0u ^ ((subgroup_size))), min(_GLF_IDENTITY(~ (0u ^ ((subgroup_size))), (~ (0u ^ ((subgroup_size)))) + (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), ~ (0u ^ ((subgroup_size))))))), (_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size))))), (true ? _GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size))))) : _GLF_FUZZED(subgroup_local_id)))))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), uint(2u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), uint(2u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), uint(2u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), uint(2u))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u ^ ((subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u + (0u))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u + (0u))))), (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u + (0u)))))) << 0u))) ^ ((subgroup_size)))), min(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))))), (subgroup_size) >> 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) ^ ((subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), ~ (~ (0u ^ ((subgroup_size))))), (_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), ~ (~ (0u ^ ((subgroup_size)))))) / 1u)) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), uint(2u)))), 0u ^ ((subgroup_size)), 0u ^ ((subgroup_size)))), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, 0u ^ ((subgroup_size) >> 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) ^ ((subgroup_size)), (_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size)))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) ^ ((subgroup_size)), (_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size)))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) ^ ((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size)))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))), max((_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size)))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size)))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u + ((_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size)))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u)))) ^ ((subgroup_size)), (_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ _GLF_IDENTITY((0u ^ ((subgroup_size))), uint(uvec2((0u ^ ((subgroup_size))), 1u)))))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u)))))))))))))))) >> 0u)) * 1u), 0u ^ ((subgroup_size)), 0u ^ ((subgroup_size))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(0u, (0u) | 0u) ^ (uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u + (0u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (0u | 0u) ^ (min(0u, 0u)))) ^ ((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), ~ (~ (0u ^ ((subgroup_size)))))), min((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) / 1u), ~ (~ (0u ^ ((subgroup_size)))))), (_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), ~ (_GLF_IDENTITY(~ (0u ^ ((subgroup_size))), uint(uvec2(_GLF_IDENTITY(~ (0u ^ ((subgroup_size))), uint(uvec2(~ (0u ^ ((subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (127967u & 0u))) ^ 0u))), (((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u), 0u ^ ((subgroup_size)))), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_size) >> 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_size) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_size) >> 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_size) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_size) >> 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) ^ ((subgroup_size)), (_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((subgroup_size)) : 0u)) ^ ((_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u)) | 0u))))))), uint(uint((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((subgroup_size)) : 0u)), uint(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((subgroup_size)) : 0u)), 1u, 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) ^ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u))))), clamp(((_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u))))), ((_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u))))), ((_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u)))))))))))))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u | (_GLF_IDENTITY(uint(2u), uint(2u)))))), 0u ^ ((subgroup_size)), 0u ^ ((subgroup_size)))), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(20721u) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (_GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), min(0u, 0u)))) << 0u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(20721u) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (_GLF_IDENTITY(min(0u, _GLF_IDENTITY(0u, 0u | (0u))), max(min(0u, 0u), min(0u, 0u)))) << 0u))))), _GLF_IDENTITY(uint(uvec3(false ? _GLF_FUZZED(20721u) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (_GLF_IDENTITY(min(0u, 0u), max(min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(14445u)))), min(0u, 0u)))) << 0u))))), 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(false ? _GLF_FUZZED(20721u) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (_GLF_IDENTITY(min(0u, 0u), max(min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(14445u)))), min(0u, 0u)))) << 0u))))), 1u, 1u)), (uint(uvec3(false ? _GLF_FUZZED(20721u) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (_GLF_IDENTITY(min(0u, 0u), max(min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(14445u)))), min(0u, 0u)))) << 0u))))), 1u, 1u))) << 0u)) - 0u))) + 0u))) ^ ((subgroup_size)), (_GLF_IDENTITY(0u ^ ((subgroup_size)), ~ (~ (0u ^ ((subgroup_size)))))) | (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, 0u ^ (2u)))))), 0u ^ ((subgroup_size)), 0u ^ ((subgroup_size)))))))) ^ 0u), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(next_virtual_gid) : (subgroup_size))), (subgroup_size)))))))
  {
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-84.37)), bool(false)))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true, bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false || (_GLF_DEAD(false)))) && true, true))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false)))))))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false)))))))) && true))))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), false)))))))) && true))))), false || (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(float(44521u))), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       barrier();
      }
     barrier();
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -5.2)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -5.2)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -5.2)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -5.2)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -5.2)))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -5.2)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -5.2)))))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, 0)))))], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true))))))) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true))))))) || false))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * (injectionSwitch)).y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true))), bool(bvec3(false || _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true))), false, true))))))) || false)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))))), ((injectionSwitch.x > injectionSwitch.y)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -4138.4804))), vec2(_GLF_FUZZED(-657.359), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(tan(0.0)), determinant(mat2(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0)))), (float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 0.0, 0.0, tan(tan(0.0)), determinant(mat2(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0))))) - abs(0.0))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false)))), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, (false) && true), false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (false) && true)))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
