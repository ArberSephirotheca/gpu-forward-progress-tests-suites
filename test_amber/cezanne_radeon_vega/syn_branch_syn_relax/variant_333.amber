#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 int i;
 vec2 _f0;
 bool _f1;
 mat4x2 _f2;
 bvec3 _f3;
 ivec2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), max((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), mat2(1.0) * ((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))) / vec2(1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0)))))), _GLF_IDENTITY((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0))))) - abs(vec2(0.0, 0.0)), max(_GLF_IDENTITY((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0))))) - abs(vec2(0.0, 0.0)), ((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0))))) - abs(vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0))))) - abs(vec2(0.0, 0.0))))))) + vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), false, true)), _GLF_IDENTITY(true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ! (! _GLF_IDENTITY((true && (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, false || (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true && (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false, _GLF_IDENTITY(true, false || (true))))))))))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) << 0u), 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))))))))))), false || (false)), (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_size)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))))) : _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u)))) - 0u), workgroup_size)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))) | 0u)) << 0u))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false) || _GLF_IDENTITY(false, ! (! (false)))), (bool((_GLF_IDENTITY(false, (false) && true)) || false)) && true)), ! (! (bool(_GLF_IDENTITY(bool((false) || false), (bool((false) || false)) && true)))))), true && (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false) || _GLF_IDENTITY(false, ! (! (false)))), (bool((_GLF_IDENTITY(false, (false) && true)) || false)) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false) || false), (bool((false) || false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool((false) || false), (bool((false) || false)) && true), (_GLF_IDENTITY(bool((false) || false), (bool((false) || false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(subgroup_size), clamp(true ? workgroup_base : _GLF_FUZZED(subgroup_size), true ? workgroup_base : _GLF_FUZZED(subgroup_size), true ? workgroup_base : _GLF_FUZZED(subgroup_size))))), clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), min(workgroup_base, workgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), min(workgroup_base, workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), min((workgroup_base), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), clamp(((workgroup_base)), ((workgroup_base)), ((workgroup_base)))) << _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) | 0u))))), 0u ^ (_GLF_IDENTITY((workgroup_base), min((workgroup_base), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), clamp(((workgroup_base)), ((workgroup_base)), ((workgroup_base)))) << _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) | 0u))))))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u))), (true ? _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), clamp((_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(subgroup_local_id)))))), (workgroup_base), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u))) : _GLF_FUZZED(subgroup_size))) << 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base))), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), _GLF_IDENTITY(((workgroup_base)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(min((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) / 1u)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u)))), clamp(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) / 1u)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) / 1u)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) / 1u)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u))))))), (true ? min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) << 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_base)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(_GLF_IDENTITY(((workgroup_base)), 0u | (((workgroup_base))))))))), max(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(((workgroup_base)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(((workgroup_base)), max(((workgroup_base)), _GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) >> 0u)))))), uint(uint(uint(((workgroup_base)))))))))) << 0u), min((((workgroup_base)) << _GLF_IDENTITY(0u, ~ (~ (0u)))), (((workgroup_base)) << 0u))), (~ (((workgroup_base)) << 0u)) >> 0u))))) : _GLF_FUZZED(subgroup_size)))))) << 0u)) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(min((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) << 0u)))), (true ? min((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)) : _GLF_FUZZED(subgroup_id)))) << 0u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), uint(uvec2((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), 0u))), (workgroup_base), (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), uint(uint(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))))), (true ? _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(clamp((_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(subgroup_local_id)))))), (workgroup_base), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), 0u ^ (clamp((_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(subgroup_local_id)))))), (workgroup_base), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))) << 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), _GLF_IDENTITY(((workgroup_base)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED((bitfieldInsert(workgroup_size, workgroup_id, 52106, -42837) + workgroup_size)) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(min((workgroup_base), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) / 1u)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u))))), _GLF_IDENTITY((true ? min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))) << 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_base)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), max(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base)))))))))) << 0u), min((((workgroup_base)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) - 0u))), (((workgroup_base)) << 0u))), (~ (((workgroup_base)) << 0u)) >> 0u))))) : _GLF_FUZZED(subgroup_size)), clamp((true ? min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))) << 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_base)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), max(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base)))))))))) << 0u), min((((workgroup_base)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) - 0u))), (((workgroup_base)) << 0u))), (~ (((workgroup_base)) << 0u)) >> 0u))))) : _GLF_FUZZED(subgroup_size)), _GLF_IDENTITY((true ? min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))) << 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_base)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), max(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base)))))))))) << 0u), min((((workgroup_base)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) - 0u))), (((workgroup_base)) << 0u))), (~ (((workgroup_base)) << 0u)) >> 0u))))) : _GLF_FUZZED(subgroup_size)), (true ? (true ? min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))) << 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_base)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), max(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base)))))))))) << 0u), min((((workgroup_base)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) - 0u))), (((workgroup_base)) << 0u))), (~ (((workgroup_base)) << 0u)) >> 0u))))) : _GLF_FUZZED(subgroup_size)) : _GLF_FUZZED(subgroup_size))), (true ? min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))) << 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_base)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), max(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base)))))))))) << 0u), min((((workgroup_base)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) - 0u))), (((workgroup_base)) << 0u))), (~ (((workgroup_base)) << 0u)) >> 0u))))) : _GLF_FUZZED(subgroup_size)))))))) << 0u)) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(min((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), clamp(_GLF_IDENTITY(((workgroup_base)), min(((workgroup_base)), ((workgroup_base)))), ((workgroup_base)), ((workgroup_base)))) << 0u), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) << 0u)))), (true ? min((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), clamp(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))), ~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (workgroup_base), (workgroup_base))), (_GLF_IDENTITY((workgroup_base), clamp((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (workgroup_base), (workgroup_base)))) | (_GLF_IDENTITY((workgroup_base), clamp((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (workgroup_base), (workgroup_base))))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(workgroup_id) : ~ (0u)))))))), (true ? _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), clamp((_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(subgroup_local_id)))))), (workgroup_base), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))), ((workgroup_base)) << 0u))) : _GLF_FUZZED(subgroup_size))) << 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), _GLF_IDENTITY(((workgroup_base)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(min((workgroup_base), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) / 1u)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u))))), (true ? min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) << 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_base)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), max(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base)))))))))) << 0u), min((((workgroup_base)) << _GLF_IDENTITY(0u, ~ (~ (0u)))), (((workgroup_base)) << 0u))), (~ (((workgroup_base)) << 0u)) >> 0u))))) : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), _GLF_IDENTITY(((workgroup_base)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(min((workgroup_base), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) / 1u)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base)) << 0u), (~ (((workgroup_base)) << 0u)) >> 0u))))), (true ? min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) << 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(((workgroup_base)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), max(uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base))))))), uint(_GLF_IDENTITY(uint(((workgroup_base))), uint(uint(uint(((workgroup_base)))))))))) << 0u), min((((workgroup_base)) << _GLF_IDENTITY(0u, ~ (~ (0u)))), (((workgroup_base)) << 0u))), (~ (((workgroup_base)) << 0u)) >> 0u))))) : _GLF_FUZZED(subgroup_size)))))) ^ 0u)) << 0u)) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(min((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(min((workgroup_base), (workgroup_base)), (min((workgroup_base), (workgroup_base))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) << 0u)))), (true ? min((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)) : _GLF_FUZZED(subgroup_id)))) << 0u)))))) >> 0u))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false) ? _GLF_FUZZED(uaddCarry(subgroup_size, subgroup_size, workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (_GLF_DEAD(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (_GLF_DEAD(false))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (_GLF_DEAD(false))))), false)))), false, false, true))) && true))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true)))), false || (_GLF_DEAD(false))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))))), bool(bvec4(false, false, true, true)))), false || (_GLF_DEAD(false))), false, false, true)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9222.1694))))))))) && true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(uint(uint(_GLF_FUZZED(num_workgroup))), (uint(uint(_GLF_FUZZED(num_workgroup)))) | 0u)) : 1u))), (min(1u, _GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(uint(uint(_GLF_FUZZED(num_workgroup))), (uint(uint(_GLF_FUZZED(num_workgroup)))) | 0u)) : 1u)))) | (min(1u, _GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u | (_GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY((uint(uint(_GLF_FUZZED(num_workgroup)))), min((uint(uint(_GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY((uint(uint(_GLF_FUZZED(num_workgroup)))), uint(_GLF_IDENTITY(uvec4((uint(uint(_GLF_FUZZED(num_workgroup)))), 0u, 1u, 1u), max(uvec4((uint(uint(_GLF_FUZZED(num_workgroup)))), 0u, 1u, 1u), uvec4((uint(uint(_GLF_FUZZED(num_workgroup)))), 0u, 1u, 1u))))))) | 0u)) : 1u)))))) * (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size) | 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, (1u & 1u)), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_local_id, (1u & 1u))), (~ (uvec2(subgroup_local_id, (1u & 1u)))) / uvec2(1u, 1u)))))), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), clamp(~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(min(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))), subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))))))) + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size);
 buf[virtual_gid] = _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | ((~ (1)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), log(1.0), 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))) - 0.0), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), log(1.0), 0.0), (false ? _GLF_FUZZED(mat4(-8.7, 7.5, -7.9, 0.1, -6545.9597, 646.818, -2737.8624, 64.79, -1822.3093, 1.2, 368.111, -854.109, -2222.0100, 0.7, -3.4, 142.941)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))) - 0.0), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), log(1.0), 0.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))) - 0.0), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), log(1.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), false)))), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true)), true)))))))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))), false)), ! (! (bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))), false)), ! (! (bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((bool(bvec3(false, false, false))) && true, ! (! ((bool(bvec3(false, false, false))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), true, false))))))), false)), ! (! (bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY(true, bool(bool(true))), false)))))))))) || false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))), false)), ! (! (bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))), false)), ! (! (bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((bool(bvec3(false, false, false))) && true, ! (! ((bool(bvec3(false, false, false))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), true, false))))))), false)), ! (! (bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_IDENTITY(true, bool(bool(true))), false)))))))))) || false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((bool(bvec3(false, false, false))) || false, _GLF_IDENTITY(bool(bvec2((bool(bvec3(false, false, false))) || false, true)), true && (bool(bvec2((bool(bvec3(false, false, false))) || false, true)))))), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((bool(bvec3(false, false, false))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, true)), true && (bool(bvec2((bool(bvec3(false, false, false))) || false, true)))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))))), (false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))), _GLF_IDENTITY(bool(bool((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))), ! (! (bool(bool((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_size, subgroup_size), min(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size))), _GLF_IDENTITY(uint(uvec3(max(subgroup_size, subgroup_size), 0u, 1u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uvec3(max(subgroup_size, subgroup_size), 0u, 1u)), 0u + (uint(uvec3(max(subgroup_size, subgroup_size), 0u, 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), ~ (~ (max(subgroup_size, subgroup_size))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : subgroup_size)), subgroup_size))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), _GLF_IDENTITY(max(max(subgroup_size, subgroup_size), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), uvec2(uvec2(uvec2(subgroup_size, 1u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), uvec2(uvec2(uvec2(subgroup_size, 1u))))))))), subgroup_size)), ~ (~ (max(max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, subgroup_size))), max(subgroup_size, subgroup_size)))))))))) ^ 0u), false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true && (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-76656) : 1))) / 1) < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), true && (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)) + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) && true), true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))))))))), bool(bvec3((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true, bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(0, (0) << (0 | 0)), vec2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0)))), true, mat4x2(1.0), bvec3(true), ivec2(1));
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))) >> 0u), 4, 64, 0);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 1 * (2))), 4, 64, _GLF_IDENTITY(0, max(0, 0)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
