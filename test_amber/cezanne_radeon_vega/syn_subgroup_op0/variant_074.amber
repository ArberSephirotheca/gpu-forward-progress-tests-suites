#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), (uvec4(3u)) ^ uvec4(0u, 0u, 0u, 0u)))) ^ (uvec4(gl_NumWorkGroups, 1u))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), 1u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), 1u)) | (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), 1u)))) << uvec4(0u, 0u, 0u, 0u)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x, _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))).x) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), ~ (_GLF_IDENTITY(~ (uint(uint(0u))), (_GLF_IDENTITY(~ (uint(uint(0u))), (~ (uint(uint(0u)))) | (~ (uint(uint(0u)))))) << 0u)))), (1u & 1u), 1u), (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))).x) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), ~ (_GLF_IDENTITY(~ (uint(uint(0u))), (_GLF_IDENTITY(~ (uint(uint(0u))), (~ (uint(uint(0u)))) | (~ (uint(uint(0u)))))) << 0u)))), (1u & 1u), 1u), ~ (~ (uvec3((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))).x) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), ~ (_GLF_IDENTITY(~ (uint(uint(0u))), (_GLF_IDENTITY(~ (uint(uint(0u))), (~ (uint(uint(0u)))) | (~ (uint(uint(0u)))))) << 0u)))), (1u & 1u), 1u))))) << uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(63372u, 55869u, _GLF_IDENTITY(36450u, min(36450u, 36450u)))) : _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), gl_NumWorkGroups, gl_NumWorkGroups)))).x) - 0u, uint(uvec3((gl_NumWorkGroups.x) - 0u, (1u & _GLF_IDENTITY(1u, ~ (~ (1u)))), 1u)))), uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, uint(uvec3((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)) - 0u, (1u & 1u), 1u)))), 0u)))) ^ 0u), gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u, 0u))), 1u, 0u))), workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), 0u ^ (~ ((1u))))))), (0u ^ 1u), _GLF_IDENTITY(1u, (1u) | (1u))), (uvec4(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))) | uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), 0u ^ (~ ((1u))))))), (0u ^ 1u), _GLF_IDENTITY(1u, (1u) | (1u))), (uvec4(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))) | uvec4(0u, 0u, 0u, 0u))))))), (uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), 0u ^ (~ ((1u))))))), (0u ^ 1u), _GLF_IDENTITY(1u, (1u) | (1u))), (uvec4(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))) | uvec4(0u, 0u, 0u, 0u)))))))) >> 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), 0u ^ (~ ((1u))))))), (0u ^ 1u), _GLF_IDENTITY(1u, (1u) | (1u))), (uvec4(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))) | uvec4(0u, 0u, 0u, 0u))))))), (uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), 0u ^ (~ ((1u))))))), (0u ^ 1u), _GLF_IDENTITY(1u, (1u) | (1u))), (uvec4(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))) | uvec4(0u, 0u, 0u, 0u)))))))) >> 0u)), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), 0u ^ (~ ((1u))))))), (0u ^ 1u), _GLF_IDENTITY(1u, (1u) | (1u))), (uvec4(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))) | uvec4(0u, 0u, 0u, 0u))))))), (uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), 0u ^ (~ ((1u))))))), (0u ^ 1u), _GLF_IDENTITY(1u, (1u) | (1u))), (uvec4(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))) | uvec4(0u, 0u, 0u, 0u)))))))) >> 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), 0u ^ (~ ((1u))))))), (0u ^ 1u), _GLF_IDENTITY(1u, (1u) | (1u))), (uvec4(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))) | uvec4(0u, 0u, 0u, 0u))))))), (uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), 0u ^ (~ ((1u))))))), (0u ^ 1u), _GLF_IDENTITY(1u, (1u) | (1u))), (uvec4(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), clamp(max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u), max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) * 1u))))))) | uvec4(0u, 0u, 0u, 0u)))))))) >> 0u))))) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uint(_GLF_FUZZED(subgroup_size)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (subgroup_id) ^ 0u), subgroup_id, subgroup_id)), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))) * 1u) ^ 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) | (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) ^ 0u), 0u ^ (1u))))), max(uvec4(subgroup_id, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) + 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) + 0u), uint(uvec4(_GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) + 0u), (0u << _GLF_IDENTITY(uint(6u), uint(6u))), (170198u & 0u), 1u)))))), (_GLF_IDENTITY(0u, (0u) * 1u) ^ _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, (0u) * 1u)), 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))), uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((1u) + 0u, ~ (~ ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(1u, ~ (~ (1u)))), 0u, 0u), uvec3(uvec3(uvec3(~ (_GLF_IDENTITY(1u, ~ (~ (1u)))), 0u, 0u))))))))) + 0u))))) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))), _GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u, max(_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u, _GLF_IDENTITY(0u, (0u) * 1u) ^ 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), min(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) | 0u), 0u))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u))) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), _GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, uint(uint(1u)))) ^ 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))))))))))) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id, subgroup_id)), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) ^ 0u), 0u ^ (1u))))), max(uvec4(subgroup_id, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) + 0u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) ^ (1u))))), uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) * (1u ^ 0u)), (_GLF_IDENTITY(1u, (1u) + 0u)) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))), _GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u, max(_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) * 1u) ^ 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), min(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u), ((false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u)) - 0u))) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), _GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, uint(uint(1u)))) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), 0u ^ ((1u)))) - 0u))) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))))))))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u, (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u) >> 0u) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), 0u ^ (1u))))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id, subgroup_id))) * 1u), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) ^ 0u), 0u ^ (1u))))), max(uvec4(subgroup_id, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) + 0u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), uvec4(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_id, 1u, 0u, 0u))))), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u) : _GLF_FUZZED((virtual_gid - subgroup_size)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, (1u) + 0u)) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))), _GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u, max(_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u, _GLF_IDENTITY(0u, (0u) * 1u) ^ 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), min(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u)))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u))))) ^ 1u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u)))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u))))) ^ 1u)) ^ (0u & 111135u)), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), ~ (~ (0u ^ (1u)))))))), _GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, uint(uint(1u)))) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u)))), 0u + (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))))))))))) * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id, subgroup_id)), _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ((1u)) | ((1u)))), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) ^ 0u), 0u ^ (1u))))), max(uvec4(subgroup_id, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) + 0u)), (_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))), _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, (1u) + 0u)) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))), _GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u, max(_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, 0u | (1u))) ^ _GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(0u, (0u) * 1u) ^ 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), min(uvec4(subgroup_id, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u))) ^ 1u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u))) ^ 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u))) ^ 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(subgroup_size) : (0u) * 1u))) ^ 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), _GLF_IDENTITY(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, uint(uint(1u)))) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) * 1u) ^ 1u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u))))))))))))))) * subgroup_size)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) | (0u ^ 1u))) ^ 0u)) | (0u ^ 1u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) * 1u))), ~ (~ (1u)))))))))) * subgroup_size)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))) >> 0, 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))) >> 0, ((_GLF_IDENTITY(1, 1 * (1))) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))) >> 0, ~ (~ ((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))) >> 0))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), 1))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), 0 | ((1))))) >> 0)) : _GLF_FUZZED((~ 197275u))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec4(_GLF_IDENTITY(int(5), int(5)), 1, (0 >> _GLF_IDENTITY(int(4), int(4))), 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, clamp(1 & 1, 1 & 1, 1 & 1)), 1 & 1, 1 & 1))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0)) + (0 ^ 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0)) + (0 ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0)) + (0 ^ 0))), (min(_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0)) + (0 ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) << 0)) + (0 ^ 0)))) ^ 0)), (1 ^ 1))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((1 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) - 0))), int(int(1)))))), 1, 0), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3((1 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) - 0))), int(int(1)))))), 1, 0), (ivec3((1 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) - 0))), int(int(1)))))), 1, 0)) - _GLF_IDENTITY(ivec3(0, 0, 0), max(_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(1, 1, 1) * (ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(0, 0, 0), clamp(ivec3(0, 0, 0), ivec3(0, 0, 0), ivec3(0, 0, 0)))))))), ivec3(0, 0, 0) ^ (ivec3((_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ (0 & -61401))) | (1 ^ 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY((1) - (0 >> _GLF_IDENTITY(int(0), int(0))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((1) - (0 >> _GLF_IDENTITY(int(0), int(0))), 0 | ((1) - (0 >> _GLF_IDENTITY(int(0), int(0)))))))), 0)))))); _injected_loop_counter --)
                  {
                   buf[virtual_gid] = 1;
                  }
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-86979), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-86979), max(true ? 1 : _GLF_FUZZED(-86979), _GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-86979), clamp(true ? 1 : _GLF_FUZZED(-86979), true ? 1 : _GLF_FUZZED(-86979), true ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(-86979)))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) >> 0)))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))), (bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) && true))))))) || false)))))
              {
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), (false ? _GLF_FUZZED(clamp(-93313, 22210, -52469)) : int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0, max((int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0, (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)))) | 0) ^ (1)), uint(_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(exp(0.0)), 0.0))))) ^ (1))), ~ (~ (uint(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-30.88, -2.9)) : injectionSwitch)).x)) ^ (1)), max(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-30.88, (true ? _GLF_IDENTITY(-30.88, exp(0.0) * (-30.88)) : _GLF_FUZZED(3107.9410))), -2.9), max(vec2(_GLF_IDENTITY(-30.88, (true ? -30.88 : _GLF_FUZZED(3107.9410))), -2.9), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-30.88, max(-30.88, -30.88)), (true ? -30.88 : _GLF_FUZZED(3107.9410))), -2.9), (vec2(_GLF_IDENTITY(-30.88, (true ? -30.88 : _GLF_FUZZED(3107.9410))), -2.9)) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((3.0 - -3.7), ((3.0 - -3.7)) / 1.0)), _GLF_FUZZED(45.98)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).x)) ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-30.88, -2.9)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)), clamp(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-30.88, -2.9)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-30.88, -2.9)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-30.88, -2.9)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)))).x)))) ^ (1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-30.88, min(-30.88, -30.88)), -2.9)) : injectionSwitch)).x)) ^ (1)), min(false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << _GLF_IDENTITY(0, (0) >> 0))) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))) || (false)) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-30.88, min(-30.88, -30.88)), -2.9)) : injectionSwitch)).x)) ^ _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), 0 | ((1)))))), false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | (0)))))) : _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-30.88, _GLF_IDENTITY(min(-30.88, -30.88), max(min(-30.88, -30.88), min(-30.88, -30.88)))), -2.9)) : injectionSwitch)).x)) ^ (1)))))))))))))) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (1u ^ 0u) * (~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (true ? _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size)))), (uint(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))))) | (uint(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size)))), (uint(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))))) | (uint(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), (uvec3(subgroup_size, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))))), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), 0u | (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | (_GLF_IDENTITY((~ (subgroup_size)), uint(uvec2((~ (subgroup_size)), 0u)))))))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) + 0u)) | (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) - 0u))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))))))))) && true)), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true))) || false))
                          {
                           buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(0 | (2), (false ? _GLF_FUZZED((true ? 77415 : _injected_loop_counter)) : 0 | (2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(0 | (2), (false ? _GLF_FUZZED((true ? 77415 : _injected_loop_counter)) : 0 | (2)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (true ? _GLF_IDENTITY(2, min(2, 2)) : _GLF_FUZZED(_injected_loop_counter))), 1))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0) | (2), (false ? _GLF_FUZZED((true ? 77415 : _injected_loop_counter)) : 0 | (2)))))))), (false ? _GLF_FUZZED(-48729) : _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(0 | (2), (false ? _GLF_FUZZED((true ? 77415 : _injected_loop_counter)) : 0 | (2))))))))) >> 0);
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                   for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (0 ^ 0)))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), (int(3)) | 0)))); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               do
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       do
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(float(-27728))))))))
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                {
                                                }
                                               else
                                                {
                                                 do
                                                  {
                                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (_GLF_IDENTITY(0, max(0, 0)))))))); _injected_loop_counter --)
                                                        {
                                                         do
                                                          {
                                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                {
                                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))))
                                                                  {
                                                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                                                    {
                                                                    }
                                                                   else
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                                      {
                                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                                        {
                                                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                          {
                                                                           subgroupAll(false);
                                                                          }
                                                                         else
                                                                          {
                                                                          }
                                                                        }
                                                                       else
                                                                        {
                                                                        }
                                                                      }
                                                                     else
                                                                      {
                                                                      }
                                                                    }
                                                                  }
                                                                 else
                                                                  {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                         while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b), (false ? _GLF_FUZZED((false ? -5.4 : 1.0)) : _GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-497.499, -294.937, _GLF_IDENTITY(2.2, (2.2) - 0.0)).b), (false ? _GLF_FUZZED((false ? -5.4 : 1.0)) : _GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b), (_GLF_IDENTITY(false ? _GLF_FUZZED((false ? -5.4 : 1.0)) : _GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b), mix(float(_GLF_FUZZED(2.7)), float(false ? _GLF_FUZZED((false ? -5.4 : 1.0)) : _GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b)), bool(true))))) : _GLF_FUZZED(20.78))), _GLF_IDENTITY(_GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b), (false ? _GLF_FUZZED((false ? -5.4 : 1.0)) : _GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b))), _GLF_IDENTITY(_GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b), (false ? _GLF_FUZZED((false ? -5.4 : 1.0)) : _GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b)))))) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(2938.9930)), (_GLF_IDENTITY(true, (true) || false) ? vec2((injectionSwitch)[0], _GLF_FUZZED(2938.9930)) : _GLF_FUZZED(injectionSwitch))), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false)))))).y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b), (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)), mat2(1.0) * (vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)), mat2(1.0) * (vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), 0.0, abs(1.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(5554.2510, 976.565, -8406.5216, -802.536, 48.69, -878.385)) : mat2x3(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), 0.0, abs(1.0), 1.0, 0.0)))))) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)))), 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))))[0], _GLF_FUZZED(2938.9930)), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(acos(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))))) * sqrt(vec2(1.0, 1.0)))[0], _GLF_FUZZED(2938.9930)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)))), 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0))) + vec2(0.0, 0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))), false, true, true)), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.6)), float(injectionSwitch.y), bool(true)))) / _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0)))))) || (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-497.499, -294.937, 2.2).b), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_FUZZED(2938.9930)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) + vec2(0.0, 0.0)).y))))), false, true, true))))));
                                                        }
                                                      }
                                                    }
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) && (! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-818.022) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2509.9983))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > injectionSwitch.y))))))), false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false, false)))))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false, false)))))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, length(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0), 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))))))))), false))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, length(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0), 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))))))))), false))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, length(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) / 1.0), 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))))))))), false))), false))))), true))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! _GLF_IDENTITY(_GLF_IDENTITY((! ((false) && true)), true && ((! ((false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY((! ((false) && true)), true && ((! ((false) && true)))), bool(bvec4(_GLF_IDENTITY((! ((false) && true)), true && ((! ((false) && true)))), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)) && true), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-42929))), bool(false)))))))))))), true && ((injectionSwitch.x > injectionSwitch.y))), true, false)))))))));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       do
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(int(int(3)))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! (false)) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))))))))), true, true))))))), bool(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! (false)) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))))))))), true, true))))))), true))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))
                                {
                                }
                               else
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), true)), ! (! (bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true)))))))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                  {
                                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                    {
                                                     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0)))) ^ 0)) | 0))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))) / 1), _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, ((1) | 0) << 0)))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))) / 1), _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | (6))))))))) || false); _injected_loop_counter ++)
                                                      {
                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                        {
                                                         _GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) / 1u);
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(583.958))), _GLF_FUZZED(_GLF_IDENTITY((true ? 2721.3174 : -2.3), max(_GLF_IDENTITY((true ? 2721.3174 : -2.3), min((true ? 2721.3174 : -2.3), (true ? 2721.3174 : -2.3))), (true ? 2721.3174 : -2.3))))), vec2(_GLF_FUZZED(vec2(6.3, -2.6).t), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-88.93) : injectionSwitch[0])), injectionSwitch[1])).y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y)))), (false ? _GLF_FUZZED(-15.65) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(1.7, 37.09)) : _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(38.79)), mix(vec2(_GLF_FUZZED(384.420), (vec2((injectionSwitch)[0], _GLF_FUZZED(38.79)))[1]), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(38.79)))[0], _GLF_FUZZED(97.43)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))), vec2(_GLF_FUZZED(8474.4325), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), injectionSwitch), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), injectionSwitch), (false ? _GLF_FUZZED(mix(injectionSwitch, vec2(-6.2, 9.5), -73.46)) : min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(26.29)), float(0.0), bool(true))))), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), injectionSwitch))) : _GLF_FUZZED(vec2(-369.065, 9.6))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || _GLF_IDENTITY(false, ! (! (false))))))));
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   else
                    {
                    }
                   do
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter != _GLF_IDENTITY(0, 0 | (0))), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), _GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)), false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, true)))))), false, true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != 0), false || (bool(_injected_loop_counter != 0))), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), true, false, true))))) || false))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) - _GLF_IDENTITY(0, (0) | (0))) != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), (~ (0)) * 1), _GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), true, false, true)))), (bool(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), true, false, true))))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) - _GLF_IDENTITY(0, (0) | (0)), clamp((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) - _GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) - _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) - _GLF_IDENTITY(0, (0) | (0)), ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) - _GLF_IDENTITY(0, (0) | (0))) | 0)))) != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), (~ (0)) * 1), _GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), true, false, true)))), (bool(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), true, false, true))))) || false))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))) << 0), _GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), true, false, true))), (_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))) << _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), true, false, true)))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != 0), (bool(_injected_loop_counter != 0)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), true, false, true))))), bool(bvec4((bool(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), true, false, true))))), true, false, true))) || false))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))) << 0), _GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), true, false, true))), (_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))) << _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), true, false, true)))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != 0), (bool(_injected_loop_counter != 0)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), true, false, true))))), bool(bvec4((bool(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), true, false, true))))), true, false, true))) || false))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))) << 0), _GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), true, false, true))), (_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))) << _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(~ (0), (~ (0)) + 0)))))), true, false, true)))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != 0), (bool(_injected_loop_counter != 0)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), true, false, true))))), bool(bvec4((bool(_GLF_IDENTITY(bool(_injected_loop_counter != 0), bool(bvec4(bool(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))), true, false, true))))), true, false, true))) || false))), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --) << (0 << _GLF_IDENTITY(int(7), int(7))), ~ (~ ((_injected_loop_counter --) << (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) / 1), ~ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) / 1))))))))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               do
                                {
                                 subgroupAll(true);
                                }
                               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
                              }
                             else
                              {
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(abs(vec2(8129.8461, -56.13))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), mat2(1.0) * ((false ? _GLF_FUZZED(abs(vec2(8129.8461, -56.13))) : injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), (_GLF_FUZZED((-901.861 * 56.35))) / abs(1.0)))) : injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.1, -7.0)) : injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(abs(vec2(8129.8461, -56.13))) : injectionSwitch, (true ? false ? _GLF_FUZZED(abs(vec2(8129.8461, -56.13))) : injectionSwitch : _GLF_FUZZED(atan(injectionSwitch, injectionSwitch))))), mat2(1.0) * ((false ? _GLF_FUZZED(abs(vec2(8129.8461, -56.13))) : injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), (_GLF_FUZZED((-901.861 * 56.35))) / abs(1.0)))) : injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.1, -7.0)) : injectionSwitch)))), _GLF_IDENTITY((false ? _GLF_FUZZED(abs(vec2(8129.8461, -56.13))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(abs(vec2(8129.8461, -56.13))) : injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), (_GLF_FUZZED((-901.861 * 56.35))) / abs(1.0)))) : injectionSwitch.y)))), true, true)), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.1, -7.0)) : injectionSwitch)))), _GLF_IDENTITY((false ? _GLF_FUZZED(abs(vec2(8129.8461, -56.13))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(abs(vec2(8129.8461, -56.13))) : injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), (_GLF_FUZZED((-901.861 * 56.35))) / abs(1.0)))), (false ? _GLF_FUZZED(sqrt(-8.5)) : _GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((-901.861 * 56.35)), (_GLF_FUZZED((-901.861 * 56.35))) / abs(1.0)))))) : injectionSwitch.y)))), true, true)))))))) && true)));
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
