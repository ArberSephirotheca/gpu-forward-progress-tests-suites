#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + _GLF_IDENTITY(0.0, (0.0) - 0.0)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)))) - 0.0), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)))) - 0.0), determinant(mat3(0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), cos(0.0)))) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), false || ((false))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || false), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) || false), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize)))).x, (gl_WorkGroupSize.x) >> 0u)) / 1u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(80.95, -951.919), vec2(0.0, 0.0) + (vec2(80.95, -951.919)))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(80.95, -951.919), vec2(0.0, 0.0) + (vec2(80.95, -951.919))), clamp(_GLF_IDENTITY(vec2(80.95, -951.919), vec2(0.0, 0.0) + (vec2(80.95, -951.919))), _GLF_IDENTITY(vec2(80.95, -951.919), vec2(0.0, 0.0) + (vec2(80.95, -951.919))), _GLF_IDENTITY(vec2(80.95, -951.919), vec2(0.0, 0.0) + (vec2(80.95, -951.919)))))) : injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(80.95, -951.919), vec2(0.0, 0.0) + (vec2(80.95, -951.919)))) : injectionSwitch)).x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-297.443)), vec2(_GLF_FUZZED(-129.777), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) << 0u), _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, int(ivec4(4, 1, 1, 1))))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ((_GLF_IDENTITY(! (false), (! (false)) && true))) && true)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) + 0.0) : _GLF_FUZZED(-5.3)))), true), true), bvec3(bvec4(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), true), bvec3(bvec4(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), true), true), true)))))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(-595.457)), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], float(vec3((max(injectionSwitch, injectionSwitch))[1], 1.0, 0.0)))), bvec2(true, true))))) + vec2(0.0, 0.0)), injectionSwitch)), 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0)), min(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)), 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp(injectionSwitch)) : max(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)) / vec2(1.0, 1.0))), injectionSwitch)), 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) || false), ((bool(false))) && true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(243.328), _GLF_FUZZED(float(52167u))), bvec2(false, false))).y)) || (true)), false))))) || false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), sin(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), exp(0.0), 0.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), sin(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), exp(0.0), 0.0, 1.0)))), min(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), sin(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), exp(0.0), 0.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), sin(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), exp(0.0), 0.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), sin(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), exp(0.0), 0.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), sin(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), exp(0.0), 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0))), (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(-9646.8132)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))
    return;
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch)))), min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch)))), mix(vec2(_GLF_FUZZED(-4.9), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch)))))[1]), vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch)))))[0], _GLF_FUZZED(0.8)), bvec2(true, false)))))).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(37.84) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mat4x3(mat4x3(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-3.9, 811.301), clamp(vec2(-3.9, 811.301), _GLF_IDENTITY(vec2(-3.9, 811.301), vec2(mat4(vec2(-3.9, 811.301), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))), vec2(-3.9, 811.301)))))).y))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, true)), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))) || false), true, false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, true)), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))) || false), true, false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))))) || false), true, true), bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, true)), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))) || false), true, false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, true)), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9589.4826, -2.2)) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))) || false), true, false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))))) || false), true, true), true)))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) || false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((803.711 + -4.7))), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), (false ? _GLF_FUZZED(-1.9) : intBitsToFloat(-68408)))), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_FUZZED(2.3)), bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(intBitsToFloat(-68408)), float(_GLF_FUZZED(-0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(intBitsToFloat(-68408)), float(_GLF_FUZZED(-0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(intBitsToFloat(-68408)), float(_GLF_FUZZED(-0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(intBitsToFloat(-68408)), float(_GLF_FUZZED(-0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)))))))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(intBitsToFloat(-68408)), float(_GLF_FUZZED(-0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(intBitsToFloat(-68408)), float(_GLF_FUZZED(-0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(intBitsToFloat(-68408)), float(_GLF_FUZZED(-0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(intBitsToFloat(-68408)), float(_GLF_FUZZED(-0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)))))))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), 0.0 + (_GLF_FUZZED(intBitsToFloat(-68408)))), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, ~ (_GLF_IDENTITY(~ (-68408), ~ (~ (~ (-68408)))))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_FUZZED(2.3), min(_GLF_FUZZED(2.3), _GLF_FUZZED(2.3)))), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), min(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), min(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) * 1.0))))), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y)), true, false)))) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), 0.0 + (_GLF_FUZZED(intBitsToFloat(-68408)))), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, ~ (_GLF_IDENTITY(~ (-68408), ~ (~ (~ (-68408)))))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_FUZZED(2.3), min(_GLF_FUZZED(2.3), _GLF_FUZZED(2.3)))), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), min(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), min(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) * 1.0))))), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y)), true, false)))) && true)))), true, true, false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_FUZZED(2.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.9) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(3.9) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(mat4(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(83.03, -3.7, 2.0, 6.7)) : mat2(injectionSwitch, 1.0, 0.0)))))))).y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-58.75) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))) / 1.0)))), injectionSwitch.y), 0.0, cos(0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), 1.0)), 0.0, 0.0), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(transpose(transpose(mat3(1.0))), transpose(transpose(transpose(transpose(mat3(1.0))))))) * (mat4x3(_GLF_FUZZED(2.3), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0))))) * 1.0)) / 1.0))), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec2(bvec2(bool(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, max(_GLF_IDENTITY(-68408, (false ? _GLF_FUZZED(93260) : -68408)), -68408)))), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_FUZZED(2.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(2.3, min(2.3, 2.3))) : _GLF_FUZZED(8.0))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0))))) * 1.0)) / 1.0))), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(_GLF_FUZZED(-1.4)), float(intBitsToFloat(-68408)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) : injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, max(_GLF_IDENTITY(-68408, (false ? _GLF_FUZZED(93260) : -68408)), -68408)))), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_FUZZED(2.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(2.3, min(2.3, 2.3))) : _GLF_FUZZED(8.0))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0))))) * 1.0)) / 1.0))), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(_GLF_FUZZED(-1.4)), float(intBitsToFloat(-68408)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (false ? _GLF_FUZZED(faceforward(5432.0239, exp2(-3.9), 0.5)) : max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, max(_GLF_IDENTITY(-68408, (false ? _GLF_FUZZED(93260) : -68408)), -68408)))), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), mix(float(_GLF_FUZZED(-77.99)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0)), float(_GLF_FUZZED(-77.21)), bool(false)))), bool(true))), 0.0, 0.0, 0.0, length(sqrt(0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(0.0, (0.0) + log(1.0))), bool(true)))), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(2.3, min(2.3, 2.3))) : _GLF_FUZZED(8.0))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0))))) * 1.0)) / 1.0)), (_GLF_IDENTITY(_GLF_FUZZED(2.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(dot(vec4(-676.167, 5404.6773, 8.2, 6.3), vec4(7.8, 0.1, 477.812, -73.34))))))) ? _GLF_FUZZED(_GLF_IDENTITY(2.3, min(2.3, 2.3))) : _GLF_FUZZED(8.0))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))), (_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0))))) * 1.0)) / 1.0))) + length(vec2(0.0, 0.0)))), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(_GLF_FUZZED(-1.4)), float(intBitsToFloat(-68408)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) : injectionSwitch.y)) : _GLF_FUZZED(4.7)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) : _GLF_FUZZED(2381.8546))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, int(ivec3(-68408, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, _GLF_IDENTITY(int(ivec3(-68408, 1, 0)), (int(ivec3(-68408, 1, 0))) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, int(ivec3(-68408, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, _GLF_IDENTITY(int(ivec3(-68408, 1, 0)), (int(ivec3(-68408, 1, 0))) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), min(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, int(ivec3(-68408, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, _GLF_IDENTITY(int(ivec3(-68408, 1, 0)), (int(ivec3(-68408, 1, 0))) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, int(ivec3(-68408, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, _GLF_IDENTITY(int(ivec3(-68408, 1, 0)), (int(ivec3(-68408, 1, 0))) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408))))))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_FUZZED(2.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8.8 - -8.5))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)))), (mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8.8 - -8.5))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))))) * mat3(1.0)) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(float(0.0))), cos(0.0), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-1.3)), float(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))), 0.0, 0.0, determinant(mat3(1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), 0.0, 0.0, sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-1.3)), float(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))), 0.0, 0.0, determinant(mat3(1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), 0.0, 0.0, sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-1.3)), float(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))), 0.0, 0.0, determinant(mat3(1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), 0.0, 0.0, sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0))))))))))), transpose(transpose(mat3(1.0)))) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED((180.712 + 759.962)) : cos(0.0))), 1.0, 0.0, 0.0))))) * 1.0)) / 1.0))), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) + tan(abs(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.3)), float(0.0), bool(true))), 0.0))))), (_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (false ? _GLF_FUZZED(uintBitsToFloat(num_workgroup)) : _GLF_FUZZED(intBitsToFloat(-68408)))), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), min(_GLF_IDENTITY(_GLF_FUZZED(-0.9), (_GLF_FUZZED(-0.9)) - 0.0), _GLF_FUZZED(-0.9)))), float(_GLF_IDENTITY(intBitsToFloat(-68408), max(intBitsToFloat(-68408), intBitsToFloat(-68408)))), bool(true)))), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_FUZZED(2.3)) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0), (false ? _GLF_FUZZED(-7.4) : _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-347.189) : 1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(fract(54.68)))), (1.0) + _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.5)), bool(false))))), 0.0)), exp(0.0)), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))), dot(vec2(0.0, exp(0.0)), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), 0.0, cos(0.0), 1.0, 0.0, 0.0))))) * 1.0)) / 1.0))), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))))), _GLF_FUZZED(intBitsToFloat(-68408)))) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) : _GLF_FUZZED(2381.8546))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, int(ivec3(-68408, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, _GLF_IDENTITY(int(ivec3(-68408, 1, 0)), (int(ivec3(-68408, 1, 0))) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, int(ivec3(-68408, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, _GLF_IDENTITY(int(ivec3(-68408, 1, 0)), (int(ivec3(-68408, 1, 0))) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), min(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, int(ivec3(-68408, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, _GLF_IDENTITY(int(ivec3(-68408, 1, 0)), (int(ivec3(-68408, 1, 0))) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, int(ivec3(-68408, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-68408, _GLF_IDENTITY(int(ivec3(-68408, 1, 0)), (int(ivec3(-68408, 1, 0))) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(true)))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408))))))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_FUZZED(2.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8.8 - -8.5))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)))), (mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8.8 - -8.5))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))))) * mat3(1.0)) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(float(0.0))), cos(0.0), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-1.3)), float(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))), 0.0, 0.0, determinant(mat3(1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), 0.0, 0.0, sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-1.3)), float(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))), 0.0, 0.0, determinant(mat3(1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), 0.0, 0.0, sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-1.3)), float(float(mat4x3((1.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))), 0.0, 0.0, determinant(mat3(1.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), 0.0, 0.0, sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0))))))))))), transpose(transpose(mat3(1.0)))) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED((180.712 + 759.962)) : cos(0.0))), 1.0, 0.0, 0.0))))) * 1.0)) / 1.0))), bool(false))), _GLF_FUZZED(intBitsToFloat(-68408)))) : injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), max(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) + tan(abs(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.3)), float(0.0), bool(true))), 0.0))))), (_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (false ? _GLF_FUZZED(uintBitsToFloat(num_workgroup)) : _GLF_FUZZED(intBitsToFloat(-68408)))), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, length(sqrt(0.0)), 0.0), (mat2x3(_GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-68408)), (_GLF_FUZZED(intBitsToFloat(-68408))) / 1.0), 0.0, 0.0, 0.0, length(sqrt(0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0), _GLF_FUZZED(intBitsToFloat(-68408)))), clamp(_GLF_FUZZED(intBitsToFloat(-68408)), _GLF_FUZZED(_GLF_IDENTITY(intBitsToFloat(-68408), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.9), min(_GLF_IDENTITY(_GLF_FUZZED(-0.9), (_GLF_FUZZED(-0.9)) - 0.0), _GLF_FUZZED(-0.9)))), float(_GLF_IDENTITY(intBitsToFloat(-68408), max(intBitsToFloat(-68408), intBitsToFloat(-68408)))), bool(true)))), _GLF_FUZZED(intBitsToFloat(-68408))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_FUZZED(2.3)) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(2.3), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0), (false ? _GLF_FUZZED(-7.4) : _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp(injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)) ? _GLF_FUZZED(2.3) : _GLF_FUZZED(8.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-347.189) : 1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(2.3), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(fract(54.68)))), (1.0) + _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.5)), bool(false))))), 0.0)), exp(0.0)), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))), dot(vec2(0.0, exp(0.0)), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))) * (mat4x3(_GLF_FUZZED(2.3), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), 0.0, cos(0.0), 1.0, 0.0, 0.0))))) * 1.0)) / 1.0))), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))))), _GLF_FUZZED(intBitsToFloat(-68408)))) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))))) || false)) || false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.8))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(1.0), 1.0), mat2(mat3(mat2(injectionSwitch.x, 1.0, sqrt(1.0), 1.0))))))) - 0.0) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true, _GLF_IDENTITY(false, ! (! (false)))))) || false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-614.110)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool((bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool((bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(! _GLF_IDENTITY((bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool((bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-0.0, 7.2)) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-0.0, 7.2)) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.9)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false)))))), (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))) || false)))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))) || false)), (bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))))), (! (bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true && (false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))) || false)), (bool((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-1846.0187, -1.0))))[0], injectionSwitch[1])).x < injectionSwitch.y))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))))))) && true)))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, log(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1811.2893)), vec2(_GLF_FUZZED(-1730.1586), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch)))[1])).x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], clamp(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[_GLF_IDENTITY(0, (0) / 1)])), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-31.89)), bool(false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1))])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1])))).x < injectionSwitch.y)), (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))) || false)))))), ! (! (! (bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), bool(bvec4(bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true, _GLF_IDENTITY(false, true && (false)), true))), (bool((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), (bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))) || false)) ? injectionSwitch[0] : _GLF_FUZZED(-637.507))), injectionSwitch[1])).x < injectionSwitch.y))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED((9.9 + (-30.41 * -4.5)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(0.1))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, log(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), exp(0.0), sqrt(0.0), 1.0)))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), bool(bvec3((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), true, true)))) && true))))), _GLF_IDENTITY(false, (false) && true), true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.8) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(885.715) : injectionSwitch.y))) / 1.0)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - determinant(mat4(0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
