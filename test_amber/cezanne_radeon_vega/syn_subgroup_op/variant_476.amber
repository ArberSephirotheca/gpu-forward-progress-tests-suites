#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5081.3978)), bool(false)))))), bvec2(bvec2(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(true && (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(bool(bool(true && (_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (bool(bvec3(bool(bool(true && (_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)), true, true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-465.768, 453.097)) : injectionSwitch))), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-465.768, 453.097)) : injectionSwitch)))) * mat2(1.0), clamp(_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-465.768, 453.097)) : injectionSwitch)))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-4.6, 4.9)) : (min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-465.768, 453.097)) : injectionSwitch)))) * mat2(1.0))), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-465.768, 453.097)) : injectionSwitch)))) * mat2(1.0), max((min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-465.768, 453.097)) : injectionSwitch)))) * mat2(1.0), (min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-465.768, 453.097)) : injectionSwitch)))) * mat2(1.0))), (min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-465.768, 453.097)) : injectionSwitch)))) * mat2(1.0))))).x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! (! (injectionSwitch.x > injectionSwitch.y)))), (! (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.3))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.5)), float(injectionSwitch.y), bool(true)))))))))))) && true))))))) || _GLF_IDENTITY(false, bool(bool(false)))), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true), false, true, false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec2((_GLF_DEAD(false)) && true, _GLF_IDENTITY(true, (true) && true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x))), float(_GLF_FUZZED((vec4(-43.29, -232.497, -8.0, -8.4) * mat4(5.9, -7.2, -4520.5179, 5038.4123, _GLF_IDENTITY(-57.68, clamp(-57.68, -57.68, -57.68)), -0.0, 497.263, -2.9, -142.726, -4679.2671, -2.8, 660.010, -2.5, -4.1, -4.3, 952.095)).g)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(- 1.6, (- 1.6) - 0.0)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y, true)), false, true, true)), (bool(bvec4(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED((- 1.6))), (_GLF_IDENTITY(true ? float(_GLF_FUZZED((- 1.6))) : _GLF_FUZZED(37.96), clamp(true ? float(_GLF_FUZZED((- 1.6))) : _GLF_FUZZED(37.96), true ? float(_GLF_FUZZED((- 1.6))) : _GLF_FUZZED(37.96), _GLF_IDENTITY(true ? float(_GLF_FUZZED((- 1.6))) : _GLF_FUZZED(37.96), min(true ? float(_GLF_FUZZED((- 1.6))) : _GLF_FUZZED(37.96), true ? float(_GLF_FUZZED((- 1.6))) : _GLF_FUZZED(37.96))))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) > injectionSwitch.y, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, true))) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), ~ (~ (workgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), 1u * ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))))), (((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) | (((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) ^ 0u, max(((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) ^ 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) ^ 0u, (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(87089u) : ~ (workgroup_base))))))) ^ 0u) << 0u))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) : _GLF_FUZZED(workgroup_id), max(true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))))), true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (0u & 68107u)), workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_size)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) ^ 0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) ^ 0u, 0u + (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) ^ 0u)), 1u, 1u, 1u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_size))) - 0u), _GLF_IDENTITY(0u, (0u | 0u) | (0u)), 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (subgroup_size) ^ 0u)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (subgroup_size) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (subgroup_size) ^ 0u)))))), ~ (~ ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (subgroup_size) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (subgroup_size) ^ 0u)))))))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_size))) ^ 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_size)), 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))))))) ^ 0u)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) | (subgroup_size), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ((subgroup_size)) | ((subgroup_size))) | (subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))) | ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))) | ((subgroup_size)))) << 0u) | (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) | (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) | (subgroup_size))), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(0u, min(0u, 0u)))), 0u)))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), true && (_GLF_IDENTITY(bool(bvec2((! (false)), false)), (bool(bvec2((! (false)), false))) && true)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && _GLF_IDENTITY((! (! (false))), true && (_GLF_IDENTITY((! (! (false))), bool(bvec4((! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false), false, false)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(875.301)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : log(vec2(1.0, 1.0)))) + (injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(8u), uint(8u)))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u | 0u) | (subgroup_local_id)) + 1), max((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(90644u))), 0u, 0u)) : _GLF_FUZZED(workgroup_id))), 0u, 0u))))) | _GLF_IDENTITY(0u, ~ (~ (0u)))) | (subgroup_local_id)) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u | 0u) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (0u | 0u) | (subgroup_local_id))) / 1u) + 1))) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1)) % subgroup_size), _GLF_IDENTITY(max(((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)))), (_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)))), (true ? max(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), min(uvec2((subgroup_local_id + 1), 0u), uvec2((subgroup_local_id + 1), 0u)))), (uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), min(uvec2((subgroup_local_id + 1), 0u), uvec2((subgroup_local_id + 1), 0u))))) | 0u)) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)))) : _GLF_FUZZED(workgroup_id)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicCompSwap(workgroup_base, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), 188737u)) : uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicCompSwap(workgroup_base, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), 188737u)) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(atomicCompSwap(workgroup_base, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), 188737u), (atomicCompSwap(workgroup_base, _GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))))), 0u, 1u))), 188737u)) * 1u)) : uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicCompSwap(workgroup_base, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 1u))), 188737u)) : uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)) + 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(-60816)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-56.97))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) / vec2(1.0, 1.0)).x)) < injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(abs(vec2(7.8, -43.41))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))), (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), ((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u))) | 0u), (_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), clamp(~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), ~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), ~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))))))) | 0u)) | 0u)))) + 1 < subgroup_size, false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), ((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u))) | 0u), (_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), clamp(~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), ~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), ~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))))))) | 0u)) | 0u)))) + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), ((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u))) | 0u), (_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), clamp(~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), ~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), ~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))))))) | 0u)) | 0u)))) + 1 < subgroup_size, true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), ((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u))) | 0u), (_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), clamp(~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), ~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))), ~ (((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) >> 0u)))))))) | 0u)) | 0u)))) + 1 < subgroup_size, true, false, false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || _GLF_IDENTITY(false, false || (false)))) && (_GLF_IDENTITY((false), bool(bool((false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, true && (true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, true && (true)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, true && (true)))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(-269.727) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)) > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), _GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), (false ? _GLF_FUZZED(mat2(70.36, 8825.7229, 929.737, -0.3)) : _GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), mat2(mat3x2(mat2(injectionSwitch, 1.0, sqrt(0.0))))) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), _GLF_IDENTITY(mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7)))))))))), (_GLF_IDENTITY(true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)), (true ? true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)) : _GLF_FUZZED(mat2(mat2x3(-62.55, 760.414, -7.3, -33.61, 7103.5729, 71.47))))))))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), _GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), (false ? _GLF_FUZZED(mat2(70.36, 8825.7229, 929.737, -0.3)) : _GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), mat2(mat3x2(mat2(injectionSwitch, 1.0, sqrt(0.0))))) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), _GLF_IDENTITY(mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7)))))))))), (_GLF_IDENTITY(true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)), (true ? true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)) : _GLF_FUZZED(mat2(mat2x3(-62.55, 760.414, -7.3, -33.61, 7103.5729, 71.47))))))))))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), _GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), (false ? _GLF_FUZZED(mat2(70.36, 8825.7229, 929.737, -0.3)) : _GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), mat2(mat3x2(mat2(injectionSwitch, 1.0, sqrt(0.0))))) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), _GLF_IDENTITY(mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7)))))))))), (_GLF_IDENTITY(true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)), (true ? true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)) : _GLF_FUZZED(mat2(mat2x3(-62.55, 760.414, -7.3, -33.61, 7103.5729, 71.47))))))))))))))[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-2.4)), bvec2(false, false))).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), _GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), (false ? _GLF_FUZZED(mat2(70.36, 8825.7229, 929.737, -0.3)) : _GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), mat2(mat3x2(mat2(injectionSwitch, 1.0, sqrt(0.0))))) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), _GLF_IDENTITY(mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7)))))))))), (_GLF_IDENTITY(true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)), (true ? true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)) : _GLF_FUZZED(mat2(mat2x3(-62.55, 760.414, -7.3, -33.61, 7103.5729, 71.47))))))))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), _GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), (false ? _GLF_FUZZED(mat2(70.36, 8825.7229, 929.737, -0.3)) : _GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), mat2(mat3x2(mat2(injectionSwitch, 1.0, sqrt(0.0))))) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), _GLF_IDENTITY(mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7)))))))))), (_GLF_IDENTITY(true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)), (true ? true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)) : _GLF_FUZZED(mat2(mat2x3(-62.55, 760.414, -7.3, -33.61, 7103.5729, 71.47))))))))))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), _GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), (false ? _GLF_FUZZED(mat2(70.36, 8825.7229, 929.737, -0.3)) : _GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(injectionSwitch, 1.0, sqrt(0.0)), mat2(mat3x2(mat2(injectionSwitch, 1.0, sqrt(0.0))))) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))), _GLF_IDENTITY(mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4((true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7)))))))))), (_GLF_IDENTITY(true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)), (true ? true ? (true ? mat2(injectionSwitch, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat2(319.505, -251.244, -4.4, 5.7))) : _GLF_FUZZED((mat2(32.72, -4.4, 3.9, -92.38) - -88.41)) : _GLF_FUZZED(mat2(mat2x3(-62.55, 760.414, -7.3, -33.61, 7103.5729, 71.47))))))))))))))[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-2.4)), bvec2(false, false))).x)) > injectionSwitch.y))))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))), true && (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) + vec2(0.0, 0.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-253.538)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, false, true)), false, false)))), (injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false) || false, (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false) || false) || false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false) ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(566.706)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - abs(0.0)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.1, 3.9)) : injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(ldexp(injectionSwitch, findLSB(ivec2(-22741, -80392)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) * mat2(1.0)))))).y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false, false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.x)), 1.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.x)), 1.0)) * mat2(1.0), max((vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.x)), 1.0)) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.x)), 1.0)) * mat2(1.0))))), 1.0 * (float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.x)), 1.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.x)), 1.0)) * mat2(1.0), max((vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.x)), 1.0)) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.x)), 1.0)) * mat2(1.0)))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (false), false || (! (false)))))))) || false)))) || false), true, true)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, injectionSwitch.x)) > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
