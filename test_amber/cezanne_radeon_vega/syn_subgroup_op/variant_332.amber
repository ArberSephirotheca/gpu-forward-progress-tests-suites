#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 bvec4 _f0;
 bvec3 _f1;
 uvec2 _f2;
 bool _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 uvec4 _f1;
 bvec4 _f2;
 vec3 _f3;
 int _f4;
} ;

struct _GLF_struct_22 {
 _GLF_struct_19 _f0;
 int _f1;
 uvec4 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_17 {
 ivec4 _f0;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
 mat4 _f1;
 int _f2;
 mat4x3 _f3;
 uvec3 _f4;
 mat2x3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
} ;

struct _GLF_struct_14 {
 float _f0;
 vec3 _f1;
 uint _f2;
 mat3 _f3;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 mat2 _f1;
 bvec2 _f2;
 ivec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 vec4 _f1;
 mat2x4 _f2;
 bvec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 bvec4 _f2;
 uvec4 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_23 {
 uint next_virtual_gid;
 _GLF_struct_15 _f0;
 _GLF_struct_18 _f1;
 mat4 _f2;
 _GLF_struct_22 _f3;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 uint workgroup_base;
 ivec2 _f1;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_7 {
 float _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 ivec2 _f1;
 _GLF_struct_5 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_8 {
 uint workgroup_id;
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_2 {
 int _f0;
 ivec4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 _GLF_struct_2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uint _f1;
 mat3x4 _f2;
 mat2 _f3;
 mat3x2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 uint workgroup_size;
 _GLF_struct_3 _f1;
 vec3 _f2;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(6.9, 4752.8314, 84.09, 6973.6524))))) / mat2(1.0, 1.0, 1.0, 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))), injectionSwitch[1]))), (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(clamp(injectionSwitch, -8924.0817, -904.438)) : (injectionSwitch)))) / sqrt(vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(_GLF_struct_0(1u, 1u, mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470))), min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470))), (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - 0.0)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) * (0.0)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(float(vec2((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), (false ? _GLF_FUZZED(451.845) : float(vec2((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY(_GLF_IDENTITY((0.0), max((0.0), (0.0))), min((0.0), (0.0)))))), sqrt(0.0)))))) : _GLF_FUZZED(964.010))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7534.2470), clamp(_GLF_FUZZED(7534.2470), _GLF_IDENTITY(_GLF_FUZZED(7534.2470), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(7534.2470), (_GLF_FUZZED(7534.2470)) - 0.0))), _GLF_FUZZED(7534.2470))), min(_GLF_FUZZED(7534.2470), _GLF_FUZZED(7534.2470)))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(57.56)), float((0.0)), bool(true))), tan(sin(0.0)), 1.0, 1.0), clamp(vec4(_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(57.56)), float((0.0)), bool(true))), tan(sin(0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(946.467)), float(1.0), bool(true)))), vec4(_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(57.56)), _GLF_IDENTITY(float((0.0)), mix(float(float((0.0))), float(_GLF_FUZZED(((+ -7442.3561) * -2.0))), bool(false))), bool(true))), tan(sin(0.0)), 1.0, 1.0), vec4(_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(57.56)), float((0.0)), bool(true))), tan(sin(0.0)), 1.0, 1.0)))), (false ? _GLF_FUZZED(-2.8) : float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(3.8)), float((0.0)), bool(true))), mix(float(_GLF_FUZZED(57.56)), float((0.0)), bool(true))), tan(sin(0.0)), 1.0, 1.0), clamp(vec4(_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(57.56)), float((0.0)), bool(true))), tan(_GLF_IDENTITY(sin(0.0), float(mat3x4(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(-8636.7150)), float(sin(0.0)), bool(true))), cos(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0), vec4(_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(57.56)), float((0.0)), bool(true))), tan(sin(0.0)), 1.0, 1.0), vec4(_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(57.56)), float((0.0)), bool(true))), tan(sin(0.0)), 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0))), min((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0))), min(1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0))), (1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))) / 1.0)))), (_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), min(1.0 * (0.0), _GLF_IDENTITY(1.0 * (0.0), clamp(1.0 * (0.0), 1.0 * (0.0), 1.0 * (0.0))))))))) / 1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), min(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))))), 1.0, 1.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), min(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))))), 1.0, 1.0)))), (float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), min(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))))), 1.0, 1.0))))) - 0.0), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), min(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), abs(sqrt(0.0))))), 1.0, 1.0))))))), 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat2x3(max(1.0, 1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0))), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0))))), 0.0, 1.0, 0.0)), (float(mat2x3(max(1.0, 1.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0))), 0.0, 1.0, 0.0))) * 1.0))) : _GLF_FUZZED(7534.2470))), mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat2x3(max(1.0, 1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0))), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0))))), 0.0, 1.0, 0.0)), (float(mat2x3(max(1.0, 1.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0))), 0.0, 1.0, 0.0))) * 1.0))) : _GLF_FUZZED(7534.2470)))), float(_GLF_FUZZED(78.05)), bool(false)))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0), mix(float(_GLF_FUZZED(53.74)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) / 1.0))))) / 1.0)), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), cos(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), cos(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(5933.7178, 742.152, 10.33, -5.7, 550.544, -7061.3366, -58.78, 56.24, -6.5))))), max(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), cos(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), cos(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(5933.7178, 742.152, 10.33, -5.7, 550.544, -7061.3366, -58.78, 56.24, -6.5))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), cos(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), float(mat4x2(mix(float(_GLF_FUZZED(-8.7)), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0))), bool(true)), cos(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(5933.7178, 742.152, 10.33, -5.7, 550.544, -7061.3366, -58.78, 56.24, -6.5)))))))))) * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0, 1.0), clamp(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) * 1.0))))), min((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0 * (0.0)))), (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(7534.2470), clamp(_GLF_FUZZED(7534.2470), _GLF_FUZZED(7534.2470), _GLF_FUZZED(7534.2470)))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0, 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), min((0.0), (0.0)))))), mix(float((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), min((0.0), (0.0))))))), float(_GLF_FUZZED(0.2)), bool(false))), min((_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(645.913))))) - 0.0))) : _GLF_FUZZED(7534.2470)), _GLF_IDENTITY(min((true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470))), mix(float(_GLF_FUZZED(-8.1)), float(_GLF_IDENTITY(min((true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470))), clamp(_GLF_IDENTITY(min((true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470))), (false ? _GLF_FUZZED(1368.1408) : min((true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470))))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470))), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(7534.2470)))))), bool(true)))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, tan(0.0) + (0.0))) + 0.0))))), (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.0)), float(0.0), bool(true))), 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), clamp(1.0 * (0.0), 1.0 * (0.0), _GLF_IDENTITY(1.0 * (0.0), (true ? 1.0 * (0.0) : _GLF_FUZZED(59.09)))))))), min((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470), min(true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470), true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0))), (1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))) - 0.0)), (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(2470.8763)), bool(false)))) : _GLF_IDENTITY(_GLF_FUZZED(7534.2470), min(_GLF_FUZZED(7534.2470), _GLF_FUZZED(7534.2470)))))) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0, 1.0), mat3(1.0) * (vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470)))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), min((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470), min(true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7534.2470), true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat4x2(max(1.0, 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, tan(0.0))), min(float(mat4x2(max(1.0, 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, tan(0.0))), float(mat4x2(max(1.0, 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, tan(0.0))))))) : _GLF_FUZZED(7534.2470)))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(7534.2470)))), 0.0 + ((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(7534.2470)))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0, 1.0))))))))), mat2(1.0), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, log(1.0), 0.0, 0.0), mat2(mat2(mat2(1.0, log(1.0), 0.0, 0.0))))))), (vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((69.36 - -7879.0846))), float(1.0), bool(true))), log(1.0), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), 0.0), mat2(mat2(mat2(1.0, log(1.0), 0.0, 0.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((69.36 - -7879.0846))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-86.27 / 34.26))), float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true))), log(1.0), 0.0, 0.0), mat2(mat2(mat2(1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))), (true ? float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((69.36 - -7879.0846))), float(1.0), bool(true))), log(1.0), 0.0, 0.0), (mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((69.36 - -7879.0846))), float(1.0), bool(true))), log(1.0), 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat2(mat2(1.0, log(1.0), 0.0, 0.0))))) : _GLF_FUZZED(7476.4852))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((69.36 - -7879.0846))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), log(1.0), 0.0, 0.0), mat2(mat2(mat2(1.0, log(1.0), 0.0, 0.0)))))))))) * vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (0u | 1u) * (gl_WorkGroupSize.x))) ^ _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_struct_3(mat3(1.0), _GLF_struct_2(1, ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 | ((1))), clamp(_GLF_IDENTITY((1), 0 | ((1))), _GLF_IDENTITY((1), 0 | ((1))), _GLF_IDENTITY((1), 0 | ((1))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 1 * (1))))), ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), max((1), (1))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 1 * (1)))))) / 1) ^ 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) ^ (0 >> _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), 0 | ((1))), (_GLF_IDENTITY((1), 0 | ((1)))) | (0 ^ 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1), 0 | ((1))), int(ivec4(_GLF_IDENTITY((1), 0 | ((1))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1))), _GLF_IDENTITY((1), 0 | ((1))), _GLF_IDENTITY((1), 0 | ((1))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 1 * (1))))), _GLF_IDENTITY(((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(1 * (1), (_GLF_IDENTITY(1 * (1), min(1 * (1), 1 * (1)))) | (1 * (1)))))))) / 1, min(((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1)))))), 1 * (1)))))) / 1, _GLF_IDENTITY(((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 1 * (1)))))) / 1, (((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 1 * (1)))))) / 1) / 1)))) ^ 0) : _GLF_FUZZED(-8588)))), uvec4(1u)), bvec3(_GLF_IDENTITY(true, ! (! (true))))), vec3(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(-706.956, _GLF_IDENTITY(12.02, 1.0 * (_GLF_IDENTITY(12.02, clamp(12.02, _GLF_IDENTITY(12.02, 0.0 + (12.02)), 12.02)))), -1.2).x)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1819.2138))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(gl_WorkGroupID.x, _GLF_struct_6(ivec4(_GLF_IDENTITY(1, (1) + 0)), ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_struct_5(mat3(1.0), mat3x4(1.0)), mat2(_GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), _GLF_struct_7(1.0, bvec4(true)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((9.1 * -888.682)), _GLF_FUZZED(3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((9.1 * -888.682)), _GLF_FUZZED(3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((9.1 * -888.682)), _GLF_FUZZED(3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), float(_GLF_FUZZED(-5.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((9.1 * -888.682)), _GLF_FUZZED(3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((9.1 * -888.682)), _GLF_FUZZED(3.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x : _GLF_FUZZED(-48.47))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(vec2(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.0))), 0.0, 1.0, sqrt(1.0), tan(0.0), 1.0)))), _GLF_struct_9(bvec2(true), _GLF_struct_replacement_4.workgroup_size * _GLF_struct_replacement_8.workgroup_id, ivec2(1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_11._f0._f1.workgroup_base, min(_GLF_struct_replacement_11._f0._f1.workgroup_base, _GLF_struct_replacement_11._f0._f1.workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(num_workgroup), min(true ? subgroup_id : _GLF_FUZZED(num_workgroup), true ? subgroup_id : _GLF_FUZZED(num_workgroup))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_replacement_11._f0._f1.workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, 1u))), subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size), _GLF_struct_15(_GLF_struct_12(mat2(1.0), vec4(1.0), mat2x4(1.0), bvec3(true), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))), _GLF_struct_13(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, true && (true)))))))), mat2(1.0), bvec2(true), ivec2(1), bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))), false))))))))), bvec4(true), uvec4(1u), _GLF_struct_14(1.0, vec3(1.0), 1u, mat3(1.0))), _GLF_struct_18(_GLF_struct_16(mat3x4(1.0), mat4(1.0), _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), clamp((1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))), mat4x3(1.0), uvec3(1u), mat2x3(1.0), mat4(1.0)), _GLF_struct_17(ivec4(1))), mat4(1.0), _GLF_struct_22(_GLF_struct_19(ivec2(1), uvec4(1u), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, false || (false)), true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, false || (false)), true))), ! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, false || (false)), true)))))))))), vec3(1.0), 1), 1, uvec4(1u), _GLF_struct_20(vec3(1.0)), _GLF_struct_21(bvec4(true), bvec3(true), uvec2(1u), true, mat4x3(1.0)), uvec2(1u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) && true)) || false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), true, true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false || (! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-75.18, 88.79)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), true)))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.y), bool(true)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   buf[_GLF_struct_replacement_23.next_virtual_gid] = 2;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.1)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))) : _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, vec2(-0.3, -6.1))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.4) : injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) * 1.0) > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(uintBitsToFloat(uvec2(51317u, 160748u))))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.3, 7.0)))).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(uintBitsToFloat(uvec2(51317u, 160748u))))).y))) && true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), true, false, _GLF_IDENTITY(false, (false) || false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, abs(0.0), 0.0, 0.0, 1.0)))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true)) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / exp(0.0)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   buf[_GLF_struct_replacement_23.next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(1.0))))), tan(vec2(0.0, 0.0)) + (vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(1.0)))))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
