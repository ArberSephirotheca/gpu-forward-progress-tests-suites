#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(98.52)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), true))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.3))) > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-44.79) : injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))))))), (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, false, _GLF_IDENTITY(true, false || (true))))))) || false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, false || ((false) || false))), true && (! (_GLF_IDENTITY((false) || false, false || ((false) || false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(99.95)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2(mat2(1.0) * (injectionSwitch), abs(1.0), sqrt(1.0))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bool(true))), false || (_GLF_IDENTITY((false) && true, false || ((false) && true))))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, true, true))), (! (bool(bvec4(_GLF_DEAD(false), false, true, true)))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(pow(865.447, 4.1)) : injectionSwitch.y))))))) || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(false, true && (false)) || (! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.1), _GLF_FUZZED(6540.3613)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec3(bool(bvec2(true, false)), true, true))))))), (injectionSwitch.x < injectionSwitch.y))))).y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-5184) : 0))], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(14.97), _GLF_FUZZED(7.0)), bvec2(false, false))).x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(4397.1167)), bool(false))), injectionSwitch[1])))), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) * mat2(1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) * mat2(1.0))).y) + 0.0)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.3, -9641.9129)) : injectionSwitch)))) - vec2(0.0, 0.0))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), vec2(vec2(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), mix(vec2((min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))[0], (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))[1]), vec2(_GLF_FUZZED(21.34), _GLF_FUZZED(2457.6838)), bvec2(false, false)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), vec2(1.0, 1.0) * (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))), (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.3, -9641.9129)) : injectionSwitch)))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.8))), 0.0))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.3, -9641.9129)) : injectionSwitch)))) - vec2(0.0, 0.0))).y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) || false)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((false ? injectionSwitch : vec2(-96.49, -8.1))))).x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, abs(0.0), 1.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, cos(0.0), 0.0, cos(0.0), abs(0.0), 0.0), _GLF_IDENTITY((mat4x2(injectionSwitch, 1.0, cos(0.0), 0.0, cos(0.0), abs(0.0), 0.0)) * mat4(1.0), transpose(transpose((mat4x2(injectionSwitch, 1.0, cos(0.0), 0.0, cos(0.0), abs(0.0), 0.0)) * mat4(1.0)))))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(cos(0.0), float(_GLF_IDENTITY(mat4x2(cos(0.0), exp(sqrt(0.0)), 0.0, 1.0, cos(0.0), 1.0, 1.0, exp(0.0)), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(cos(0.0), _GLF_IDENTITY(exp(sqrt(0.0)), (exp(sqrt(0.0))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, cos(0.0), 1.0, 1.0, exp(0.0)))))), abs(0.0), 0.0), _GLF_IDENTITY((mat4x2(injectionSwitch, 1.0, cos(0.0), 0.0, cos(0.0), abs(0.0), 0.0)) * mat4(1.0), transpose(transpose((mat4x2(injectionSwitch, 1.0, cos(0.0), 0.0, cos(0.0), abs(0.0), 0.0)) * mat4(1.0))))))) - vec2(0.0, 0.0))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, true))) || false, (_GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) ? injectionSwitch.x : _GLF_FUZZED(-3.6))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-3.6), float(mat4x3(true ? injectionSwitch.x : _GLF_FUZZED(-3.6), tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, tan(0.0)))))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.6))), 1.0, abs(1.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.6))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.6)))))), float(_GLF_FUZZED(73.74)), bool(false))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(30.23, -57.55), min(_GLF_IDENTITY(vec2(30.23, -57.55), vec2(mat2(vec2(30.23, -57.55), 1.0, 0.0))), vec2(30.23, -57.55)))) : injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(30.23, -57.55), min(_GLF_IDENTITY(vec2(30.23, -57.55), vec2(mat2(vec2(30.23, -57.55), 1.0, 0.0))), vec2(30.23, -57.55)))) : injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(30.23, (30.23) - 0.0), -57.55), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2(30.23, -57.55), vec2(mat2(vec2(30.23, -57.55), 1.0, 0.0))), vec2(30.23, -57.55)), vec2(mat3x2(min(_GLF_IDENTITY(vec2(30.23, -57.55), vec2(mat2(vec2(30.23, -57.55), 1.0, 0.0))), vec2(30.23, -57.55)), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 1.0))))) : injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (true ? (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) : _GLF_FUZZED(-84.02))))) / 1.0)))) && true) && true))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8133.1067))), bool(false))), 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), (uint(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u))) | (uint(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))))))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) >> 0u, max((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) >> 0u, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) >> 0u))) | 0u)) + _GLF_IDENTITY(1, ~ (~ (1)))))), ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), (uint(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u))) | (uint(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))))))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) >> 0u, max((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) >> 0u, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) >> 0u))) | 0u)) + _GLF_IDENTITY(1, ~ (~ (1))))))) * 1u) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) + (0 | 0))))) >> 0), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, (1u & 1u)))) + 1))), _GLF_IDENTITY(0u, (0u) | (0u)) | ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) >> 0u)) + 0u), uint(uvec3(subgroup_local_id, 0u, (1u & 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u))) ^ 0u))) >> 0u)) + 0u), uint(uvec3(subgroup_local_id, 0u, (1u & 1u))))) << 0u) + 1))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0))))) && true), true, false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-6.7 / -850.946))), float(injectionSwitch.y), bool(true))), log(1.0), 1.0, 0.0)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false))))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false, true)))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-93.79), _GLF_FUZZED(-5148.3885)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)), clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0))))))[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(44.12), _GLF_FUZZED(vec4(3807.3731, 3.4, _GLF_IDENTITY(1.9, mix(float(1.9), float(_GLF_FUZZED(13.57)), bool(false))), -1347.9696).b)), bvec2(_GLF_IDENTITY(false, (false) && true), false))).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-77.08)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true)))), true, false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), true)))), true)))), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true)))), true, false)))))), false || (false)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true)))), true, false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), true)))), true)))), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true)))), true, false)))))), false || (false)), false, false, true))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0))), sqrt(1.0), 1.0, 1.0, tan(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-23.11)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true, (true) || false) ? next_virtual_gid : _GLF_FUZZED(virtual_gid)))) | (next_virtual_gid))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(7u), 1u, 1u), ~ (~ _GLF_IDENTITY((uvec3(uint(7u), 1u, 1u)), clamp((uvec3(uint(7u), 1u, _GLF_IDENTITY(1u, (1u) * 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), 1u, 1u), max(uvec3(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), 1u, 1u), uvec3(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), 1u, 1u)))), (uvec3(uint(7u), 1u, 1u))))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(7u), 1u, 1u), ~ (~ (uvec3(uint(7u), 1u, _GLF_IDENTITY(1u, (1u) - (0u | 0u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(7u), 1u, 1u), ~ (~ (uvec3(uint(7u), 1u, 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(7u), 1u, 1u), ~ (~ (uvec3(uint(7u), 1u, 1u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(uint(7u), 1u, 1u), ~ (~ (uvec3(uint(7u), 1u, 1u)))), (0u ^ 1u)), ~ (~ (uvec4(_GLF_IDENTITY(uvec3(uint(7u), 1u, 1u), ~ (~ (uvec3(uint(7u), 1u, 1u)))), (0u ^ 1u))))))), _GLF_IDENTITY(uvec3(uint(7u), 1u, 1u), ~ (~ (uvec3(uint(7u), 1u, 1u))))))), (uint(_GLF_IDENTITY(uvec3(uint(7u), 1u, 1u), ~ (~ (uvec3(uint(7u), 1u, 1u)))))) | (uint(_GLF_IDENTITY(uvec3(uint(7u), 1u, 1u), ~ (~ (uvec3(uint(7u), 1u, 1u)))))))) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(packSnorm4x8(vec4(1.9, 4.6, -78.86, 71.18))), uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(packSnorm4x8(vec4(1.9, 4.6, -78.86, 71.18))), clamp(_GLF_FUZZED(packSnorm4x8(vec4(1.9, 4.6, -78.86, 71.18))), _GLF_IDENTITY(_GLF_FUZZED(packSnorm4x8(vec4(1.9, 4.6, -78.86, 71.18))), (_GLF_FUZZED(packSnorm4x8(vec4(1.9, 4.6, -78.86, 71.18)))) | 0u), _GLF_FUZZED(packSnorm4x8(vec4(1.9, 4.6, -78.86, 71.18))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), ((1u)) - 0u)))) | (1u)) << _GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(7u))), clamp(uint(7u), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(5678u) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(_GLF_IDENTITY(7u, 1u * (7u))), uint(7u), uint(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u))), ((false ? _GLF_FUZZED(5678u) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(_GLF_IDENTITY(7u, 1u * (7u))), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))) | ((false ? _GLF_FUZZED(5678u) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(_GLF_IDENTITY(7u, 1u * _GLF_IDENTITY((7u), 0u ^ (_GLF_IDENTITY((7u), 0u + ((7u))))))), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u))))))) * 1u)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(7u, ~ (~ (7u)))))), uint(7u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(~ (~ (uint(7u))), clamp(_GLF_IDENTITY(~ (~ (uint(7u))), max(~ (~ (uint(7u))), _GLF_IDENTITY(~ (~ (uint(7u))), max(~ (~ (uint(7u))), ~ (~ (uint(7u))))))), _GLF_IDENTITY(~ (~ (uint(7u))), ~ (~ (~ (~ (uint(7u)))))), _GLF_IDENTITY(~ (~ (uint(7u))), (true ? ~ (~ (uint(7u))) : _GLF_FUZZED(workgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)), ~ (~ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u))))), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(5678u) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(_GLF_IDENTITY(7u, 1u * (7u))), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, 0u + (_GLF_IDENTITY(7u, (7u) << 0u))))) ^ 0u)), max(false ? _GLF_FUZZED(5678u) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(_GLF_IDENTITY(7u, 1u * _GLF_IDENTITY((7u), ((7u)) | 0u))), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)), false ? _GLF_FUZZED(5678u) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) / 1u), 1u * (7u))), uint(7u), uint(7u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)) >> 0u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u))))))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(5678u, (_GLF_IDENTITY(5678u, uint(uvec2(5678u, 0u)))) | (5678u))) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(1u, max(1u, 1u)) * (7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) | 0u), uint(7u))), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))) | ((false ? _GLF_FUZZED(5678u) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(_GLF_IDENTITY(7u, 1u * (7u))), uint(7u), uint(_GLF_IDENTITY(7u, (7u) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(subgroup_local_id))))), (uint(7u)) ^ 0u))))))) * 1u)))) | (1u ^ 1u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u ^ (0u))), min((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u ^ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u ^ (0u))))) | _GLF_IDENTITY(0u, (0u) / 1u)) ^ (_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, (7u) | (7u)), 7u))))))), max(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u ^ (0u))), min((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u ^ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u ^ (0u))))) | _GLF_IDENTITY(0u, (0u) / 1u)) ^ (_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, (7u) | (7u)), 7u))))))), uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u ^ (0u))), min((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u ^ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u ^ (0u))))) | _GLF_IDENTITY(0u, (0u) / 1u)) ^ (_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, (7u) | (7u)), 7u))))))))), ~ (~ (uint(7u))))))), _GLF_IDENTITY((next_virtual_gid), uint(uvec3(_GLF_IDENTITY((next_virtual_gid), uint(uint(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid)))))), 0u, 0u))) << (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))) || (false))))) && true))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, sin(0.0)), min(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, sin(0.0)), vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, sin(0.0))))), max(float(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, sin(0.0))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, sin(0.0))), _GLF_IDENTITY(1.0 * (float(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, sin(0.0)))), clamp(1.0 * (float(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, sin(0.0)))), 1.0 * (float(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, sin(0.0)))), 1.0 * (float(vec4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, sin(0.0))))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false, true, false)))))) && _GLF_IDENTITY(true, false || (true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))))), false || (bool(bool((_GLF_DEAD(false))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false) || false)), false)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false) && true)), true && (! _GLF_IDENTITY((! ((false) && true)), _GLF_IDENTITY(true, false || (true)) && ((! ((false) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((false) && true)), true && (! _GLF_IDENTITY((! ((false) && true)), _GLF_IDENTITY(true, false || (true)) && ((! ((false) && true)))))), (_GLF_IDENTITY(! (! ((false) && true)), true && (! _GLF_IDENTITY(_GLF_IDENTITY((! ((false) && true)), _GLF_IDENTITY(true, false || (true)) && ((! ((false) && true)))), ! (! (_GLF_IDENTITY((! ((false) && true)), _GLF_IDENTITY(true, false || (true)) && ((! ((false) && true)))))))))) || false)) && true)))), ! (! (_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((331.909 * 5.0)), _GLF_FUZZED(12.95)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), true, _GLF_IDENTITY(true, false || (true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, true, true))), bool(bool(! (bool(bvec3(false, true, true)))))))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), float(vec2(injectionSwitch.y, 0.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), false, true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.0)), float(0.0), bool(true)))), length(sin(0.0)), 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(2.3), (true ? _GLF_FUZZED(2.3) : _GLF_FUZZED(6.2)))), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(float(68914))), float(sin(0.0)), bool(true))), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), clamp((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(4347.2846) : sin(0.0))), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), min((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0)))))))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 0.0)))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED((790.520 * 3702.6492))), bool(false))), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true))), (_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), float(mat3(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0))), length(_GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0)))), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2(_GLF_FUZZED(2.7), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))[1]), vec2(_GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], float(_GLF_IDENTITY(mat2x4((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0), (true ? mat2x4((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(9.2, 4.8, -7.7, 6925.1743, 41.61, 8.1, -73.16, -49.56)))))), _GLF_FUZZED(-4.6)), bvec2(true, false))))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), min(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1], min((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1], (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]))), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))))))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)))), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[_GLF_IDENTITY(0, 0 | (0))], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true)))))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.0)), float(0.0), bool(true)))), length(sin(0.0)), 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(2.3), (true ? _GLF_FUZZED(2.3) : _GLF_FUZZED(6.2)))), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(float(68914))), float(sin(0.0)), bool(true))), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), clamp((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(4347.2846) : sin(0.0))), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), min((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0)))))))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 0.0)))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED((790.520 * 3702.6492))), bool(false))), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true))), (_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), float(mat3(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0))), length(_GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0)))), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2(_GLF_FUZZED(2.7), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))[1]), vec2(_GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], float(_GLF_IDENTITY(mat2x4((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0), (true ? mat2x4((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(9.2, 4.8, -7.7, 6925.1743, 41.61, 8.1, -73.16, -49.56)))))), _GLF_FUZZED(-4.6)), bvec2(true, false))))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), min(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1], min((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1], (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]))), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))))))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)))), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[_GLF_IDENTITY(0, 0 | (0))], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.0)), float(0.0), bool(true)))), length(sin(0.0)), 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(2.3), (true ? _GLF_FUZZED(2.3) : _GLF_FUZZED(6.2)))), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(float(68914))), float(sin(0.0)), bool(true))), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), clamp((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(4347.2846) : sin(0.0))), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), min((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0)))))))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 0.0)))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED((790.520 * 3702.6492))), bool(false))), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true))), (_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), float(mat3(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0))), length(_GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0)))), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2(_GLF_FUZZED(2.7), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))[1]), vec2(_GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], float(_GLF_IDENTITY(mat2x4((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0), (true ? mat2x4((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(9.2, 4.8, -7.7, 6925.1743, 41.61, 8.1, -73.16, -49.56)))))), _GLF_FUZZED(-4.6)), bvec2(true, false))))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), min(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1], min((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1], (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]))), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))))))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)))), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[_GLF_IDENTITY(0, 0 | (0))], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.0)), float(0.0), bool(true)))), length(sin(0.0)), 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(2.3), (true ? _GLF_FUZZED(2.3) : _GLF_FUZZED(6.2)))), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(float(68914))), float(sin(0.0)), bool(true))), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), clamp((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(4347.2846) : sin(0.0))), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), min((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0))), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), 0.0)))))))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 0.0)))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED((790.520 * 3702.6492))), bool(false))), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true))), (_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), float(mat3(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0))), length(_GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0)))), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2(_GLF_FUZZED(2.7), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))[1]), vec2(_GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], float(_GLF_IDENTITY(mat2x4((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0), (true ? mat2x4((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(9.2, 4.8, -7.7, 6925.1743, 41.61, 8.1, -73.16, -49.56)))))), _GLF_FUZZED(-4.6)), bvec2(true, false))))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), min(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), _GLF_IDENTITY((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1], min((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1], (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]))), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))))))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)))), 0.0)), mix(vec2((vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[_GLF_IDENTITY(0, 0 | (0))], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(412.382), (vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), length(sin(0.0)), 0.0)))[1]), bvec2(false, true)))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(! (! (_GLF_DEAD(false))))), (! (bool(! (! (_GLF_DEAD(false)))))) || false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.5)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), false || (bool(bvec4(_GLF_DEAD(false), false, true, true))))))
        return;
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
