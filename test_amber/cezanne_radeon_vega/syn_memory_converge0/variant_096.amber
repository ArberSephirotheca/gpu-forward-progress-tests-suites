#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id;
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size) : _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u) ^ (GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))), ((false ? _GLF_FUZZED(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size) : _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size, uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u) ^ (GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))))) + uvec3(0u, 0u, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id, (GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, (_GLF_IDENTITY((subgroup_id) + 0u, uint(uvec4((subgroup_id) + 0u, 1u, 1u, 1u)))) | (_GLF_IDENTITY((subgroup_id) + 0u, ((subgroup_id) + 0u) - 0u))))) | 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id, (GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id, _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id), 0u | ((GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id))) | 0u)), ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id, (true ? GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id : _GLF_FUZZED((2377u + 54554u))))), 0u | ((GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = subgroup_id))) | 0u))) << 0u) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, float(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, sqrt(1.0), 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(54253) : 0))]) - 0.0), _GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-32.35) : injectionSwitch[1])))))).y, 1.0, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.0, 680.150)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, sin(0.0)))))) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true))))) && (false))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, abs(0.0)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true), ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz.y = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))) || false)), _GLF_IDENTITY(bool(bvec2((false) || false, false)), bool(bvec3(bool(bvec2((false) || false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), (bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))) && true)))), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_IDENTITY(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0)))))), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * mat2(1.0))), injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_IDENTITY(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0)))))), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * mat2(1.0))), injectionSwitch), mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(vec3(8.0, 36.26, -2.9).s)), vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_IDENTITY(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0)))))), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * mat2(1.0))), injectionSwitch))[0], (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_IDENTITY(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0)))))), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * mat2(1.0))), injectionSwitch))[1]), bvec2(true, true))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), vec2(_GLF_IDENTITY(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(vec2((injectionSwitch)[0], _GLF_FUZZED(46.22)), 1.0, 1.0, 1.0, 0.0)))))), vec2(_GLF_FUZZED(597.391), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * mat2(1.0))), injectionSwitch)))).y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), false)))) || false)))) ? _GLF_FUZZED(uvec3(129015u, 80837u, 22773u)) : GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz)).z * GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz.y, uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz, _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), false)))) || false)))) ? _GLF_FUZZED(uvec3(129015u, 80837u, 22773u)) : GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz), uvec3(uvec3((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), false)))) || false)))) ? _GLF_FUZZED(uvec3(129015u, 80837u, 22773u)) : GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz))))).z * GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz.y, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz.x = workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz.x = workgroup_base, (GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz.x = workgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-731.801), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((-3.6 - 69.14)), (true ? _GLF_IDENTITY(_GLF_FUZZED((-3.6 - 69.14)), (_GLF_FUZZED(_GLF_IDENTITY((-3.6 - 69.14), min((-3.6 - 69.14), _GLF_IDENTITY((-3.6 - 69.14), max((-3.6 - 69.14), (-3.6 - 69.14))))))) - 0.0) : _GLF_FUZZED(-5210.8752)))), bvec2(true, false))).x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz.x + GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w * subgroup_size + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(((~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) | 0)) ^ (0 | 0)))) / 1, ~ (~ (((_GLF_IDENTITY(~ (64), clamp(_GLF_IDENTITY(~ (64), (true ? _GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(62255) : ~ (64))) : _GLF_FUZZED(71268))), ~ (64), ~ (64))))) / 1)))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ (64))) / 1)))), ((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(3831))))) / 1))))) << 0)))) >> 0)) ^ 0))), 0 | (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(_GLF_IDENTITY(((~ (64))) / 1, min(((~ (64))) / 1, ((~ (64))) / 1)), (_GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, ~ _GLF_IDENTITY((~ (((~ (64))) / 1)), ~ (~ _GLF_IDENTITY(((~ (((~ (64))) / 1))), (((~ (((~ (64))) / 1)))) >> 0))))) >> 0)) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), 0 | (~ (64))))))))))) << 0)), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(((~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) | 0)) ^ (0 | 0)))) / 1, ~ (~ (((_GLF_IDENTITY(~ (64), clamp(_GLF_IDENTITY(~ (64), (true ? _GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(62255) : ~ (64))) : _GLF_FUZZED(71268))), ~ (64), ~ (64))))) / 1)))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ (64))) / 1)))), ((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(3831))))) / 1))))) << 0)))) >> 0)) ^ 0))), 0 | (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(_GLF_IDENTITY(((~ (64))) / 1, min(((~ (64))) / 1, ((~ (64))) / 1)), (_GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, ~ _GLF_IDENTITY((~ (((~ (64))) / 1)), ~ (~ _GLF_IDENTITY(((~ (((~ (64))) / 1))), (((~ (((~ (64))) / 1)))) >> 0))))) >> 0)) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), 0 | (~ (64))))))))))) << 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(((~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) | 0)) ^ (0 | 0)))) / 1, ~ (~ (((_GLF_IDENTITY(~ (64), clamp(_GLF_IDENTITY(~ (64), (true ? _GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(62255) : ~ (64))) : _GLF_FUZZED(71268))), ~ (64), ~ (64))))) / 1)))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ (64))) / 1)))), ((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(3831))))) / 1))))) << 0)))) >> 0)) ^ 0))), 0 | (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(_GLF_IDENTITY(((~ (64))) / 1, min(((~ (64))) / 1, ((~ (64))) / 1)), (_GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, ~ _GLF_IDENTITY((~ (((~ (64))) / 1)), ~ (~ _GLF_IDENTITY(((~ (((~ (64))) / 1))), (((~ (((~ (64))) / 1)))) >> 0))))) >> 0)) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), 0 | (~ (64))))))))))) << 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(((~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) | 0)) ^ (0 | 0)))) / 1, ~ (~ (((_GLF_IDENTITY(~ (64), clamp(_GLF_IDENTITY(~ (64), (true ? _GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(62255) : ~ (64))) : _GLF_FUZZED(71268))), ~ (64), ~ (64))))) / 1)))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ (64))) / 1)))), ((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(3831))))) / 1))))) << 0)))) >> 0)) ^ 0))), 0 | (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(_GLF_IDENTITY(((~ (64))) / 1, min(((~ (64))) / 1, ((~ (64))) / 1)), (_GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, ~ _GLF_IDENTITY((~ (((~ (64))) / 1)), ~ (~ _GLF_IDENTITY(((~ (((~ (64))) / 1))), (((~ (((~ (64))) / 1)))) >> 0))))) >> 0)) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), 0 | (~ (64))))))))))) << 0))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(((~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) | 0)) ^ (0 | 0)))) / 1, ~ (~ (((_GLF_IDENTITY(~ (64), clamp(_GLF_IDENTITY(~ (64), (true ? _GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(62255) : ~ (64))) : _GLF_FUZZED(71268))), ~ (64), ~ (64))))) / 1)))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ (64))) / 1)))), ((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(3831))))) / 1))))) << 0)))) >> 0)) ^ 0))), 0 | (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(_GLF_IDENTITY(((~ (64))) / 1, min(((~ (64))) / 1, ((~ (64))) / 1)), (_GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, ~ _GLF_IDENTITY((~ (((~ (64))) / 1)), ~ (~ _GLF_IDENTITY(((~ (((~ (64))) / 1))), (((~ (((~ (64))) / 1)))) >> 0))))) >> 0)) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), 0 | (~ (64))))))))))) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(((~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) | 0)) ^ (0 | 0)))) / 1, ~ (~ (((_GLF_IDENTITY(~ (64), clamp(_GLF_IDENTITY(~ (64), (true ? _GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(62255) : ~ (64))) : _GLF_FUZZED(71268))), ~ (64), ~ (64))))) / 1)))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ (64))) / 1)))), ((_GLF_IDENTITY(((~ (64))) / 1, ~ (~ (((~ _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(3831))))) / 1))))) << 0)))) >> 0)) ^ 0))), 0 | (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), _GLF_IDENTITY(_GLF_IDENTITY(((~ (64))) / 1, min(((~ (64))) / 1, ((~ (64))) / 1)), (_GLF_IDENTITY(((~ (64))) / 1, (_GLF_IDENTITY(((~ (64))) / 1, ~ _GLF_IDENTITY((~ (((~ (64))) / 1)), ~ (~ _GLF_IDENTITY(((~ (((~ (64))) / 1))), (((~ (((~ (64))) / 1)))) >> 0))))) >> 0)) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), 0 | (~ (64))))))))))) << 0)))))))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, true && ((false) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, true && ((false) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, true && ((false) || false)), ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false)))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, true && ((false) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, true && ((false) || false)), ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(811.926)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, true)))), false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), false), true)))))), bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(8687.2987, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(8687.2987, (8687.2987) / 1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0))), (mat4(_GLF_IDENTITY(8687.2987, (8687.2987) / 1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(8687.2987)), _GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))))))) - abs(0.0))), 1.0 * (injectionSwitch.x))) / cos(0.0)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, uint(uvec3(write_val, 0u, 1u))), (write_val) ^ 0u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
