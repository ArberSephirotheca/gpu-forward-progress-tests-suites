#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(radians(vec2(4.5, 4.7))) : injectionSwitch)).x < injectionSwitch.y)), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, log(1.0), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat4(injectionSwitch, log(1.0), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 1.0))), max(mat2(1.0) * (vec2(mat4(injectionSwitch, log(1.0), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 1.0))), mat2(1.0) * (vec2(mat4(injectionSwitch, log(1.0), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 0.0, 1.0))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0), 1.0)))))))), mat2(1.0) * (injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))).y, injectionSwitch.y)) / _GLF_ONE(1.0, injectionSwitch.y)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), max(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(vec3(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0)))))))))).y, injectionSwitch.y)) / _GLF_ONE(1.0, injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true))), bool(bool(! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true, true)), true && (bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true, true))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9997.9117)), vec2(_GLF_FUZZED(365.582), (injectionSwitch)[1]), bvec2(false, true))).y)) || false))) || false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(413.567)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-97.60), (_GLF_FUZZED(-97.60)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(injectionSwitch[1]), mix(float(_GLF_FUZZED(3840.2715)), float(float(injectionSwitch[1])), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(103.167)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(103.167)), max(float(_GLF_FUZZED(103.167)), float(_GLF_FUZZED(103.167)))) : _GLF_FUZZED(50.26))), bool(false))))).y, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(413.567)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-97.60), (_GLF_FUZZED(-97.60)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(103.167)), bool(false))))).y, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec3(bvec3(true && (false), false, true)))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ((_GLF_IDENTITY(false, true && (false))) && true) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bool(true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(330.726)), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4227.4059)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))), bool(bool(! (! (! (false))))))))), bool(bvec2(false, false))), false, false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, false || ((injectionSwitch.x > injectionSwitch.y) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(1.0))), 0.0, 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_size * workgroup_id));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id)) * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(false)), false, false)), ! (! (bool(bvec3(bool(_GLF_DEAD(false)), false, false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(false)), false, false)), ! (! (bool(bvec3(bool(_GLF_DEAD(false)), false, false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1175.5712)), vec2(_GLF_FUZZED(8.1), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-9.0)), bool(false)))), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, 1u, 0u)), 0u | (uint(uvec4(subgroup_base, 0u, 1u, 0u))))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_base, 0u)), max(uint(uvec2(workgroup_base + subgroup_base, 0u)), uint(uvec2(workgroup_base + subgroup_base, 0u))))) - 0u)), workgroup_base + subgroup_base))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))), max((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), workgroup_base)) + subgroup_base), (workgroup_base + subgroup_base))) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 1u * (0u)) : _GLF_FUZZED((workgroup_base % subgroup_local_id)))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u))) + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 1u * (0u)) : _GLF_FUZZED((workgroup_base % subgroup_local_id)))))), (147050u & (1u ^ 1u)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u))) + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 1u * (0u)) : _GLF_FUZZED((workgroup_base % subgroup_local_id)))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u))) + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 1u * (0u)) : _GLF_FUZZED((workgroup_base % subgroup_local_id))))))))))))) ^ 0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))) ^ 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))), false, true, true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! (_GLF_IDENTITY(false, true && (false))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2093.6276), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(2093.6276, float(mat3x4(_GLF_IDENTITY(2093.6276, clamp(2093.6276, 2093.6276, 2093.6276)), 1.0, 1.0, tan(0.0), sin(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2093.6276), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)), min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2093.6276), _GLF_FUZZED(-4.4)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(mat2x4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), abs(0.0), 1.0, 0.0, 0.0, 1.0, 0.0))), bvec2(true, true))).x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2093.6276), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2093.6276), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2093.6276), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2093.6276), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)))), (float(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2093.6276), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))))) + 0.0))))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(697.181)), vec2(_GLF_FUZZED(-2347.1288), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0))) * 1.0)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0))) * 1.0)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0))) * 1.0)))) > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0))) * 1.0)))) > injectionSwitch.y)) && true))))), _GLF_IDENTITY(bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(53.74)))))))) * 1.0)))) > injectionSwitch.y)), true, false)), bool(bool(bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), 1.0)), (false ? _GLF_FUZZED(62.23) : float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), 1.0))))), 1.0, 0.0, 1.0, 0.0, 0.0))) * 1.0)))) > injectionSwitch.y)), true, false)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(569.840) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 535.483))), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 535.483))), float(injectionSwitch.y), bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-581.890, 79.88)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x < injectionSwitch.y)), false || ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), (workgroup_base) >> 0u) + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0), (ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0)) | (ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0))), min(ivec3(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, ~ (~ (1)))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0), (ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0)) | (ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0))), min(ivec3(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, ~ (~ (1)))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0), (ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0)) | (ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0))), min(ivec3(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, ~ (~ (1)))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0), (ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0)) | (ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.1)), float(1.0), bool(true))) : _GLF_FUZZED(653.816))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-83127) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0))), min(ivec3(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, ~ (~ (1)))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))) / 1))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), min(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), 0), ivec3(_GLF_IDENTITY(1, (1) | (1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), (int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), min(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(174.115))))), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), 0), min(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), ~ (~ (_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), 0), min(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))))))) % _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) : _GLF_FUZZED(subgroup_base)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) - 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) - 0u)) / 1u) + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) % subgroup_size), workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(1, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, min(0, 0))), min(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(int(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) << ivec3(0, 0, 0)), ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / abs(1.0)), min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), float(mat4x2(_GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0), mat2x3(mat4x3(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))), 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) / abs(1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(55.58)))))) / abs(1.0)))), injectionSwitch.y)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | (0)))), 0)))))))) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))), 0), min(ivec3(_GLF_IDENTITY(1, 0 + (1)), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) << 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))), 0), min(ivec3(_GLF_IDENTITY(1, 0 + (1)), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) << 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ (_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), sin(0.0), 0.0)), min(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), sin(0.0), 0.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0), vec2(0.0, 0.0))), 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0)))), vec3(1.0, 1.0, 0.0)))), sin(0.0), 0.0)))), vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6288.2053) : 0.0)))))), sin(0.0), 0.0))))).y)), 0), min(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) - 0.0))), _GLF_IDENTITY(0, max(0, 0))), ivec3(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ (int(4)), (0 ^ (int(4))) | 0)))) | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, clamp((1) >> 0, _GLF_IDENTITY((1) >> 0, 0 ^ ((1) >> 0)), (1) >> 0))))))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))) % subgroup_size), min((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((15761u), 0u ^ ((15761u)))) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), (false ? _GLF_FUZZED((15761u)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) >> 0u)) << 0u))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (74561 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1)), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))), ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((15761u)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), uint(uint(subgroup_local_id))))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), min(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), clamp(int(ivec4(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, 0 | (0)))) ^ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) | ((1))), _GLF_IDENTITY((1), ((1)) << 0)))), 0)), int(ivec4(1, 0, 1, 0)), int(ivec4(1, 0, 1, 0))))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), 0))))))) | ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((15761u)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), min(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), _GLF_IDENTITY(min(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(530.086) : _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), log(1.0), 1.0, 0.0, 0.0, 1.0))))))), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), min(_GLF_IDENTITY(min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(_GLF_IDENTITY(1, min(1, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), ivec3(1, 1, 1) * (min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), 0, 0))), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) % subgroup_size)))) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) * 1)), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, clamp(0, 0, 0))), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.7))))), _GLF_IDENTITY(0, (0) * 1)), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), ivec3(ivec4(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1)), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), 1)))))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1)), min(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(40955) : _GLF_IDENTITY(1, 0 | (1)))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) % subgroup_size)), _GLF_IDENTITY(uint(uvec2((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), (false ? _GLF_FUZZED(-7456) : ~ ((1)))))))), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) * 1)), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) << 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(_GLF_IDENTITY(1, (1) << 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) % subgroup_size, 1u)), clamp(uint(uvec2((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))).y), _GLF_IDENTITY(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(mat3(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0)))), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, clamp(_GLF_IDENTITY((0) * 1, ((0) * 1) ^ 0), (0) * 1, _GLF_IDENTITY((0) * 1, 1 * ((0) * 1)))))), min(ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) * 1.0)), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1)), ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))).y), _GLF_IDENTITY(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(mat3(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0)))), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, clamp(_GLF_IDENTITY((0) * 1, ((0) * 1) ^ 0), (0) * 1, _GLF_IDENTITY((0) * 1, 1 * ((0) * 1)))))), min(ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) * 1.0)), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1)), ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1)))), (_GLF_IDENTITY(ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))).y), _GLF_IDENTITY(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(mat3(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0)))), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, clamp(_GLF_IDENTITY((0) * 1, ((0) * 1) ^ 0), (0) * 1, _GLF_IDENTITY((0) * 1, 1 * ((0) * 1)))))), min(ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) * 1.0)), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1)), ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1))))) | (_GLF_IDENTITY(ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))).y), _GLF_IDENTITY(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(mat3(float(mat3x2(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, abs(0.0), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0)))), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, clamp(_GLF_IDENTITY((0) * 1, ((0) * 1) ^ 0), (0) * 1, _GLF_IDENTITY((0) * 1, 1 * ((0) * 1)))))), min(ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) * 1.0)), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1)), ivec3(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(59.82)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) * 1))))))))), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 0)))))) % subgroup_size, 1u)), uint(uvec2((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (_GLF_IDENTITY(0, 0 ^ (0))))) * _GLF_IDENTITY(1, (1) | (1)))), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) % subgroup_size, 1u)), uint(uvec2((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, ((0) * 1) >> 0))), min(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), _GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) | ivec3(0, 0, 0))))))) % subgroup_size, 1u)))))))), _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) | (0))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) | (0))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) | (0))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size))), _GLF_IDENTITY((~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)))), (_GLF_IDENTITY((~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)))), clamp((~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)))), (~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)))), (~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size))))))) / (0u ^ 1u)) / 1u)))), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) | (0))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) | (0))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size))), _GLF_IDENTITY((~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)))), (_GLF_IDENTITY((~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)))), clamp((~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)))), (~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size)))), (~ ((workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), min(ivec3(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), 0), ivec3(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), clamp(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), 0)))))) % subgroup_size))))))) / (0u ^ 1u)) / 1u))))) << 0u))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1), true && (_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1)), false || (! (_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1)))))))), false || (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) / 1), ! (! (_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), clamp(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), min(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) / 1))))) : _GLF_FUZZED(_injected_loop_counter))))))))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) ^ (-55395 & 0)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x : _GLF_FUZZED(uintBitsToFloat(148368u)))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false), bvec3(bvec4(bvec3(bvec2(false, false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), false)))))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, 0.0, 0.0))), injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).y)))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(52.97) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-2.8)), bool(false))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-2.8)), bool(false))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-2.8)), bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-2.8)), bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(-37.01)), bvec2(false, false))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), (! ((injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-947.835, -71.15)))).y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), (! ((injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))), true))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-947.835, -71.15)))).y)))))) || false), true, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-52872)))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), (_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), min((2), (2)))))) >> _GLF_IDENTITY((0 | 0), min((0 | 0), (0 | 0))))))), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
