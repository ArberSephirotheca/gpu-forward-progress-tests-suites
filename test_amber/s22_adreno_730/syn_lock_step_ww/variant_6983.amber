#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5235.9323)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) && true), false), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(895.967), _GLF_FUZZED(591.094)), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(895.967, mix(float(_GLF_FUZZED(488.260)), float(_GLF_IDENTITY(895.967, clamp(895.967, _GLF_IDENTITY(895.967, max(_GLF_IDENTITY(895.967, (895.967) * 1.0), 895.967)), 895.967))), bool(true)))), _GLF_FUZZED(591.094))), (mat2(1.0) * (vec2(_GLF_FUZZED(895.967), _GLF_FUZZED(591.094)))) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec2(3.9, 723.468).s))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(vec2(70.54, 5498.8460))))))[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true), true), false, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.6), _GLF_FUZZED(float(5003u))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true), false, false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true), false, false)))))), (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true), false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | _GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? (uvec3(5u)) : _GLF_FUZZED(uvec3(107549u, 188583u, 162535u)))))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))))).x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, min(_GLF_IDENTITY(5u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(num_workgroup) : uint(5u)))), (uint(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(num_workgroup) : uint(5u))))) << 0u)), 5u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) + (uvec3(5u))), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u))), (gl_WorkGroupID) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) >> 0u)))), 0u) | (uvec3(5u)))) | (uvec3(5u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u))))) + uvec3(0u, 0u, 0u))), uvec3(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u))))), max(~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u))))), ~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u))))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(uvec4(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) << uvec3(0u, 0u, 0u)), (1u ^ 1u)))), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) / uvec3(1u, 1u, 1u))) ^ (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) | (uvec3(5u))))), ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) / uvec3(1u, 1u, 1u))) ^ (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) | (uvec3(5u)))))) >> uvec3(0u, 0u, 0u)) + uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))))))))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)))))))) | (uvec3(5u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u) | (uvec3(5u)))) | _GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), min((uvec3(5u)), (uvec3(5u))))) | ((uvec3(5u))))) ^ uvec3(0u, 0u, 0u))))) + uvec3(0u, 0u, 0u))), uvec3(uvec3(~ (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) / uvec3(1u, 1u, 1u))) ^ (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) | (uvec3(5u))))), ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) / uvec3(1u, 1u, 1u))) ^ (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) | (uvec3(5u)))))) >> uvec3(0u, 0u, 0u)) + uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))))))))), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u))))) | uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u))))) | uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(59209u, 22964u, 67644u))))) + uvec3(0u, 0u, 0u))), uvec3(uvec3(~ (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (min(0u, 0u)))))))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : 5u))), (uvec3(5u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec3(uvec3(1u, 1u, 1u)))))) ^ (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) | (uvec3(5u))))), ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) / uvec3(1u, 1u, 1u))) ^ (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) | (_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))))) >> uvec3(0u, 0u, 0u)) + uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)))))))))) | uvec3(0u, 0u, 0u))))) ^ (uvec3(48442u, 142206u, 143564u) & uvec3(0u, 0u, 0u))))).x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + (uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) | (uvec3(5u)))) | (uvec3(5u)))))).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[_GLF_IDENTITY(0, min(0, 0))]) - 0.0)) * 1.0), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(740.410), _GLF_FUZZED(-81.93)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u) + _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id)))))), min(subgroup_local_id, subgroup_local_id)))))), min((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY(min(min(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id))))), 0u | (min(min(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id)))))))), min(subgroup_local_id, subgroup_local_id)))))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id)))))), min(subgroup_local_id, subgroup_local_id)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && ((_GLF_IDENTITY(false, ! (! (false)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, sin(0.0), round(length(normalize(1.0))), 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, sin(0.0), round(length(normalize(1.0))), 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-171.028, 75.42, -3.6, -4.8, 0.9, 6715.0553, 2.3, 0.1, -6.9, 8.8, 2085.5763, 42.87, 9.1, 321.006, 0.1, 5345.6414)))))).x < injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))), bvec3(bvec3(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false, true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false, true, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false, true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false, true, false))))), true))))), false, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))) ^ 0u)) | 0u) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), bool(bvec2(! _GLF_IDENTITY((bool(bvec4(false, false, true, false))), ((bool(bvec4(false, false, true, false)))) && true), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5151.0480))) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), bool(bvec4(false, true, true, _GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) | (virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(~ (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)), uint(_GLF_IDENTITY(uint(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))), (uint(~ (virtual_gid))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u * (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))))), _GLF_IDENTITY(~ (~ (min(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), uint(_GLF_IDENTITY(uint(~ (virtual_gid)), (uint(~ (virtual_gid))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 1u, 1u)))) ^ 0u)))), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 1u, 1u)))) ^ 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 1u, 1u)))) ^ 0u)))), 0u ^ ((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 1u, 1u)))) ^ 0u))))))))))))), uint(uvec4(~ (~ (min(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), uint(_GLF_IDENTITY(uint(~ (virtual_gid)), (uint(~ (virtual_gid))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 1u, 1u)))) ^ 0u)))), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 1u, 1u)))) ^ 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 1u, 1u)))) ^ 0u)))), 0u ^ ((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(uvec3(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 1u, 1u)))) ^ 0u))))))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, (0u) | (0u)), (1u ^ (1u & 1u)))))), (min(~ (virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), uint(_GLF_IDENTITY(uint(~ (virtual_gid)), (uint(~ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(((virtual_gid)), uint(uint(((virtual_gid))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(true ? ((virtual_gid)) / 1u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).w), clamp(true ? ((virtual_gid)) / 1u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).w), true ? ((virtual_gid)) / 1u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).w), _GLF_IDENTITY(true ? ((virtual_gid)) / 1u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).w), (true ? ((virtual_gid)) / 1u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u)))))), (_GLF_IDENTITY(uvec4(151511u, 189113u, 96858u, 47163u), ~ (_GLF_IDENTITY(~ (uvec4(151511u, 189113u, 96858u, 47163u)), (~ (uvec4(151511u, 189113u, 96858u, 47163u))) | (~ (uvec4(151511u, 189113u, 96858u, 47163u))))))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).w)) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? ((virtual_gid)) / 1u : _GLF_FUZZED(uvec4(151511u, 189113u, 96858u, 47163u).w), (true ? ((virtual_gid)) / 1u : _GLF_FUZZED(uvec4(151511u, 189113u, 96858u, 47163u).w)) * 1u), uint(uvec3(_GLF_IDENTITY(true ? ((virtual_gid)) / 1u : _GLF_FUZZED(uvec4(151511u, 189113u, 96858u, 47163u).w), uint(uvec3(true ? ((virtual_gid)) / 1u : _GLF_FUZZED(uvec4(151511u, 189113u, 96858u, 47163u).w), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u))), 1u, 0u)))) << 0u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u * (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))))) - 0u))))], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) ^ 0), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, abs(1.0), abs(0.0)))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.2), float(mat4(_GLF_FUZZED(3.2), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(-6884.9832)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))), 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), float(0.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(90.71) : float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.9)), bool(false))), 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.9)), bool(false))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) / 1.0), 1.0)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
