#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(98.08, -7497.8752)) : max(injectionSwitch, injectionSwitch)))).x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0, 0.0, length(log(1.0))))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2873.7379), (true ? _GLF_FUZZED(2873.7379) : _GLF_FUZZED(2.3))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(922.914), (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(_GLF_FUZZED(922.914), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(922.914), 1.0, 0.0, 1.0)), (float(vec4(_GLF_FUZZED(922.914), 1.0, 0.0, 1.0))) / 1.0))))), _GLF_IDENTITY(float(_GLF_FUZZED(2873.7379)), mix(float(_GLF_FUZZED(float(121266u))), float(float(_GLF_FUZZED(2873.7379))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), bool(true)), clamp(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(922.914, (_GLF_IDENTITY(922.914, (922.914) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - log(1.0)))), float(_GLF_FUZZED(2873.7379)), bool(true)), float(_GLF_IDENTITY(vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(5.3)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7625.3901)), float(_GLF_IDENTITY(1.0, float(mat3(1.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))) / _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), vec4(mat3x4(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0))))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(922.914, (_GLF_IDENTITY(922.914, (922.914) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - log(1.0)))), float(_GLF_FUZZED(2873.7379)), bool(true)), float(_GLF_IDENTITY(vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(5.3)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7625.3901)), float(_GLF_IDENTITY(1.0, float(mat3(1.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))) / _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), vec4(mat3x4(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0))))))), 1.0, 1.0)), min(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(922.914, (_GLF_IDENTITY(922.914, (922.914) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - log(1.0)))), float(_GLF_FUZZED(2873.7379)), bool(true)), float(_GLF_IDENTITY(vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(5.3)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7625.3901)), float(_GLF_IDENTITY(1.0, float(mat3(1.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))) / _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), vec4(mat3x4(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0))))))), 1.0, 1.0)), (true ? float(vec3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(922.914, (_GLF_IDENTITY(922.914, (922.914) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - log(1.0)))), float(_GLF_FUZZED(2873.7379)), bool(true)), float(_GLF_IDENTITY(vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(5.3)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7625.3901)), float(_GLF_IDENTITY(1.0, float(mat3(1.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))) / _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), vec4(mat3x4(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0))))))), 1.0, 1.0)) : _GLF_FUZZED(-58.93))), float(vec3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(922.914, (_GLF_IDENTITY(922.914, (922.914) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - log(1.0)))), float(_GLF_FUZZED(2873.7379)), bool(true)), float(_GLF_IDENTITY(vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(5.3)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(mix(float(_GLF_FUZZED(922.914)), float(_GLF_FUZZED(2873.7379)), bool(true)), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7625.3901)), float(_GLF_IDENTITY(1.0, float(mat3(1.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))) / _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), vec4(mat3x4(mat4(1.0) * (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0))))))), 1.0, 1.0)))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))), true, false, true))), true)))))), false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))), false || (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))), false || (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))), false || (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))), false || (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))) || false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), false, true, true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)))) && true), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false))))))))), false, true, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), false, true, true)))))), (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), false, true, true))))))) || false), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), false, true, true)))))), (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))), ! (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))))))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), false, true, true))))))) || false)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), false, true, true)))))), (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, true && (false))), false, true, true))))))) || false), false, true)))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), false, true, true)))))), bool(bvec4(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, true)))))), true, true, true)))) || false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), (! (! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))) : _GLF_FUZZED(uvec3(81013u, 166092u, 98378u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))), false, true, true))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-4686.0344, -2101.2917))))) + vec2(0.0, 0.0))))) - vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), false || ((! (_GLF_IDENTITY(false, bool(bool(false)))))))) || false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec3(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))), true, true))), false)))))))))), true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))) + subgroup_base)) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), (1) >> 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), (1) >> 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), (1) >> 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), (1) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), (1) >> 0)))))) | 0)) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true, false, false))), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) ^ 0)))))))) : _GLF_IDENTITY(64, (64) / 1)), (false ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), (false ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))) ^ 0), 0, 1)))) - 0)))))), (false ? _GLF_FUZZED(84322) : _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), max((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), (false ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))) ^ 0), 0, 1)))) - 0)))))), (false ? _GLF_FUZZED(84322) : _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), max((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), (false ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))) ^ 0), 0, 1)))) - 0)))))), (false ? _GLF_FUZZED(84322) : _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), max((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), (false ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))) ^ 0), 0, 1)))) - 0)))))), (false ? _GLF_FUZZED(84322) : _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), max((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)))))))))))) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), (false ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))) ^ 0), 0, 1)))) - 0)))))), (false ? _GLF_FUZZED(84322) : _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), max((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), (false ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))) ^ 0), 0, 1)))) - 0)))))), (false ? _GLF_FUZZED(84322) : _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), max((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), (false ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)), (_GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))) ^ 0), 0, 1)))) - 0)))))), (false ? _GLF_FUZZED(84322) : _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(52037, int(ivec2(52037, 1)))) : _GLF_IDENTITY(64, (64) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), max((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) ? _GLF_FUZZED(-25649) : (false ? _GLF_FUZZED(52037) : _GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1))))))))))))))) : _GLF_FUZZED(-16978))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)))), true)))) || _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).x > injectionSwitch.y), true)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).x > injectionSwitch.y), true)), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && _GLF_IDENTITY(true, false || (true))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((4), clamp((4), (4), (4))), _GLF_IDENTITY(1, 0 | (1))), ivec2(ivec3(ivec2(_GLF_IDENTITY((4), clamp((4), (4), (4))), _GLF_IDENTITY(1, 0 | (1))), 0)))), 1 * (int(ivec2(_GLF_IDENTITY((4), clamp((4), (4), (4))), 1)))))), 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_DEAD(false)))), false || (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false))), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_DEAD(false)), true))))))))))))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), tan(0.0), 1.0))), injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, sqrt(0.0), tan(0.0), 1.0))), injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, true)))))))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch.x)) > injectionSwitch.y))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4649.9253) : injectionSwitch.x)) > injectionSwitch.y))) && true, bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4649.9253) : injectionSwitch.x)) > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4649.9253) : injectionSwitch.x)) > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bool(true)))) || false)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.6, -6.4)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-8.0, -8.6))) : injectionSwitch)))).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true)) && true))))))))) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
