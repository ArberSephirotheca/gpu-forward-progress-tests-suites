#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true)))))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))) && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))) && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))) && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), false || (bool(bvec4(! (false), false, true, false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) && true))), ((! (! (false)))) && true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false)))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(1.0, 1.0)).x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))) || false)) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY(true, (true) && true) && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec2(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec2((bool(bvec2(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), true))) || false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))), false || (bool(bool(_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(gl_WorkGroupSize))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2191.2138) : injectionSwitch.y)), (injectionSwitch.y) / 1.0))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, length(0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)), max(float(mat4x2(injectionSwitch.y, length(0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, length(0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x2(injectionSwitch.y, length(0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)), clamp(float(mat4x2(injectionSwitch.y, length(0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)), float(mat4x2(injectionSwitch.y, length(0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)), float(mat4x2(injectionSwitch.y, length(0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)))), float(mat4x2(injectionSwitch.y, length(0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)), float(mat4x2(injectionSwitch.y, length(0.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false, true, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(bool(bvec4(false, false, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(sin(0.0), 1.0, abs(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(sin(0.0), 1.0, abs(1.0)))), determinant(mat4(0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)) || false))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))), 1u))), (true ? workgroup_size : _GLF_FUZZED(workgroup_id))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(bool((true))))))))))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(356.970, -45.51)) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-5797.1744, (false ? _GLF_FUZZED(-6.2) : -5797.1744)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y : _GLF_FUZZED(-5797.1744))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), 1u), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), 1u))))) + subgroup_base, uint(uint(workgroup_base + subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), ((workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))) >> 0u)), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), subgroup_base)), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), subgroup_base)), (workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), subgroup_base))) << 0u))), workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (workgroup_base), _GLF_IDENTITY((0u | (workgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((0u | (workgroup_base)), clamp((0u | (workgroup_base)), _GLF_IDENTITY((0u | (workgroup_base)), 0u + ((0u | (workgroup_base)))), (0u | (workgroup_base)))))) | (0u | (workgroup_base)))))) + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u))) + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(30.10)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(30.10)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(30.10)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))) && true)) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true)))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true)))), (bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true))))) || false))))), false, _GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true)))), false || (bool(bool(_GLF_IDENTITY((! (! (false))) && true, _GLF_IDENTITY(true, ! (! (true))) && ((! (! (false))) && true)))))))), false, _GLF_IDENTITY(false, true && (false)))), false || (bool(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true)))), false || (bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true, true && ((! (! (false))) && true)))))))), false, _GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (! (false))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true)))), false || (bool(bool(_GLF_IDENTITY((! (! (false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true && ((! (! (false))) && true)))))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))), false)))))))))), false || (bool(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY((! (! (false))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (false))) && true, ((! (! (false))) && true) || false)), (! (_GLF_IDENTITY((! (! (false))) && true, ((! (! (false))) && true) || false))) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bool(false)))))) && true, ! (! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false)), ! (! (bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false)))))) || false)))) && true))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true)), bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true))))), false, true, false)))))))))))), false, _GLF_IDENTITY(false, true && (false))))))))), ! (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY((! (! (false))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! ((false)))))))) && true)))), false || (bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! (! (false))) && true)))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, false, false)), ! (! (bool(bvec4(! (false), true, false, false)))))))), true && (false)))), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (false))) && true, _GLF_IDENTITY(true && ((! (! (false))) && true), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY((! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (! (false))), bool(bool((! (! (false)))))))), bool(bvec3((! (_GLF_IDENTITY((! (! (false))), bool(bool((! (! (false)))))))), true, true)))) && true), (true && ((! (! (false))) && true)) && true))))))), false || (bool(bool(_GLF_IDENTITY((! (! (false))) && true, true && ((! _GLF_IDENTITY((! (false)), true && ((! (false))))) && true)))))))), false, _GLF_IDENTITY(false, true && (false))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(num_workgroup))) + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) ^ 0)) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), min(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))))).x < injectionSwitch.y))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), _GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), (false || (bool(bool(_GLF_IDENTITY((bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((bool(_GLF_DEAD(false)))), (! ((bool(_GLF_DEAD(false))))) && true))))))) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (bool(bool((bool(_GLF_DEAD(false)))))), (false || (bool(bool((bool(_GLF_DEAD(false))))))) && true)) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (false || (bool(bool((bool(_GLF_DEAD(false))))))), bool(bool(! (false || (bool(bool((bool(_GLF_DEAD(false))))))))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (false || (bool(bool((bool(_GLF_DEAD(false))))))), bool(bool(! (false || (bool(bool((bool(_GLF_DEAD(false))))))))))))) && true)), true && ((_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (false || (bool(bool((bool(_GLF_DEAD(false))))))), bool(bool(! (false || (bool(bool((bool(_GLF_DEAD(false))))))))))))) && true))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (false || (bool(bool((bool(_GLF_DEAD(false))))))), bool(bool(! (false || (bool(bool((bool(_GLF_DEAD(false))))))))))))) && true)), true && ((_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(false || (bool(bool((bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (false || (bool(bool((bool(_GLF_DEAD(false))))))), bool(bool(! (false || (bool(bool((bool(_GLF_DEAD(false))))))))))))) && true)))))))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) || ((bool(_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), false || (bool(bool((bool(_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), false || (bool(bool((bool(_GLF_DEAD(false)))))))), true, false)), (bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) && true), true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) && true), true))))))))), true && (bool(_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), false || (bool(bool((bool(_GLF_DEAD(false)))))))), true, false))) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true, (true) && true), true))), true, true, true)))), bool(bvec4((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), false || (_GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), bool(_GLF_IDENTITY(bvec3(bool(bool((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool((bool(_GLF_DEAD(false))))), false, true), bvec3(bvec4(bvec3(bool(bool((bool(_GLF_DEAD(false))))), false, true), true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), false || (_GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec3(bool(bool((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool((bool(_GLF_DEAD(false))))), false, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(bool(bool((bool(_GLF_DEAD(false))))), false, true), true))))))))))), true && (_GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), false || (_GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec3(bool(bool((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool((bool(_GLF_DEAD(false))))), false, true), bvec3(bvec4(bvec3(bool(bool((bool(_GLF_DEAD(false))))), false, true), true)))))))))))))))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), false || _GLF_IDENTITY((bool(bool((bool(_GLF_DEAD(false)))))), false || ((bool(bool((bool(_GLF_DEAD(false)))))))))), _GLF_IDENTITY(true, (true) && true), true)), bool(bool(bool(bvec3(! _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))), false || _GLF_IDENTITY((bool(bool((bool(_GLF_DEAD(false)))))), false || ((bool(bool((bool(_GLF_DEAD(false)))))))))), _GLF_IDENTITY(true, (true) && true), true)))))), true, true, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec4(! _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))))), false || (bool(bool((bool(_GLF_DEAD(false)))))))), true, true, true)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bool(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_DEAD(false))), true, _GLF_IDENTITY(true, bool(bvec2(true, true))), true)), false || (bool(bvec4(! (bool(_GLF_DEAD(false))), true, _GLF_IDENTITY(true, bool(bvec2(true, true))), true)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (bool(_GLF_DEAD(false))), true, true, true)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))), bool(bvec4(! (bool(_GLF_DEAD(false))), true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! _GLF_IDENTITY((bool(_GLF_DEAD(false))), ((bool(_GLF_DEAD(false)))) || false), true, true, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (bool(_GLF_DEAD(false))), true, true, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (bool(_GLF_DEAD(false))), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (bool(_GLF_IDENTITY(bool(true), ! (! _GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), bool(bvec2((bool(true)), false)))))))))) || false)))))))), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), bool(bool(false)))))))) || false))))))), true, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) / 1.0))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-5.8), _GLF_IDENTITY(_GLF_FUZZED(-71.77), (false ? _GLF_FUZZED(dot(vec4(-1.2, -1898.8055, 93.65, 44.59), vec4(2.0, 5907.3723, 300.442, -634.940))) : _GLF_IDENTITY(_GLF_FUZZED(-71.77), clamp(_GLF_FUZZED(-71.77), _GLF_FUZZED(-71.77), _GLF_FUZZED(-71.77)))))), bvec2(false, false)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec3(64, 0, 1)))) >> 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(false)), (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (_GLF_DEAD(false))) && true), false || (true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9989.3156) : injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) && true))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), false || (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bvec4((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), false)))))), ((! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)))))) || false)), false || (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(bvec2((! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)))), (bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))) || false)), bool(bool(! (_GLF_IDENTITY(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)))), (bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))) || false)))))))))) || false)), false))))))) && true))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.4), _GLF_FUZZED(7159.4731)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(abs(9166), max(abs(9166), abs(9166))), (abs(_GLF_IDENTITY(_GLF_IDENTITY(9166, 0 + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))), max(_GLF_IDENTITY((_GLF_IDENTITY(9166, _GLF_IDENTITY((true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)), ~ (~ ((true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878))))), (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))))), ~ (~ ((_GLF_IDENTITY(9166, _GLF_IDENTITY((true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)), min((true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)), (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))), (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878))))))))), _GLF_IDENTITY((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))), ((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878))))) * 1))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((_GLF_IDENTITY(9166, (9166) ^ 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(9166, (9166) ^ 0)), (false ? _GLF_FUZZED(-66664) : _GLF_IDENTITY((_GLF_IDENTITY(9166, (9166) ^ 0)), 0 ^ ((_GLF_IDENTITY(9166, (9166) ^ 0))))))))) >> 0) : _GLF_FUZZED(-17878)))), max((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))), _GLF_IDENTITY((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(_GLF_IDENTITY(9166, (_GLF_IDENTITY(9166, max(9166, _GLF_IDENTITY(9166, ~ _GLF_IDENTITY((~ (9166)), ((~ (9166))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0), 0 ^ (_GLF_IDENTITY(9166, (9166) >> 0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-17878, (-17878) | 0)), (false ? _GLF_FUZZED(90889) : _GLF_FUZZED(_GLF_IDENTITY(-17878, (-17878) | 0))))))), ((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878))))) * 1)))), 0 ^ ((_GLF_IDENTITY((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((_GLF_IDENTITY(9166, (9166) ^ 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(9166, (9166) ^ 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(9166, (9166) ^ 0), clamp(_GLF_IDENTITY(9166, (9166) ^ 0), _GLF_IDENTITY(9166, (9166) ^ 0), _GLF_IDENTITY(9166, (9166) ^ 0)))))), (false ? _GLF_FUZZED(-66664) : _GLF_IDENTITY((_GLF_IDENTITY(9166, (9166) ^ 0)), 0 ^ ((_GLF_IDENTITY(9166, (9166) ^ 0))))))))) >> 0) : _GLF_FUZZED(-17878)))), max((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (_GLF_IDENTITY(9166, min(9166, _GLF_IDENTITY(9166, (false ? _GLF_FUZZED(-33429) : 9166))))) >> 0) : _GLF_FUZZED(-17878)))), _GLF_IDENTITY((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(_GLF_IDENTITY(9166, (_GLF_IDENTITY(9166, max(9166, _GLF_IDENTITY(9166, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (9166)), ((~ (9166))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((~ (9166)), ((~ (9166))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))) >> 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(9166, (9166) * 1), (9166) >> 0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-17878, (-17878) | 0)), (false ? _GLF_FUZZED(90889) : _GLF_FUZZED(_GLF_IDENTITY(-17878, (-17878) | 0))))))), ((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878))))) * 1)))))) / 1), _GLF_IDENTITY(((_GLF_IDENTITY(9166, _GLF_IDENTITY((true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, _GLF_IDENTITY(int(int((9166) >> 0)), (int(int((9166) >> 0))) << 0))) : _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878)))))), 0 | ((true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, _GLF_IDENTITY(int(_GLF_IDENTITY(int((9166) >> 0), (int((9166) >> 0)) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-75335))))), _GLF_IDENTITY((int(int((9166) >> _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0))))))), 0 | ((int(int((9166) >> _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0))))))))) << 0))) : _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(9166, (_GLF_IDENTITY(true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_IDENTITY(_GLF_FUZZED(-17878), _GLF_IDENTITY(max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878)))), min(_GLF_IDENTITY(max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878)))), clamp(_GLF_IDENTITY(max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878)))), (max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878))))) * 1), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878)))), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878)))))), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878)))))))))))), 0 ^ ((_GLF_IDENTITY(9166, (_GLF_IDENTITY(true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> _GLF_IDENTITY(0, min(0, 0)))))) : _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_IDENTITY(_GLF_FUZZED(-17878), ~ (~ (_GLF_FUZZED(-17878)))), _GLF_IDENTITY(_GLF_FUZZED(-17878), (false ? _GLF_FUZZED(26175) : _GLF_FUZZED(-17878))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), _GLF_IDENTITY(max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878)), ~ (~ (max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878)))))))))))))))), 0 ^ (((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(-17878))))))))))), int(ivec2(((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(_GLF_IDENTITY(-17878, min(-17878, -17878))))), max(_GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(_GLF_IDENTITY(-17878, min(-17878, -17878))))), _GLF_IDENTITY(_GLF_FUZZED(-17878), max(_GLF_FUZZED(-17878), _GLF_FUZZED(_GLF_IDENTITY(-17878, min(-17878, -17878))))))))))))), 1)))) / 1) * 1)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(9166, 0 + _GLF_IDENTITY((_GLF_IDENTITY(9166, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))), ((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, _GLF_IDENTITY(int(int((9166) >> 0)), (int(int((9166) >> 0))) >> 0))) : _GLF_IDENTITY(_GLF_FUZZED(-17878), int(ivec4(_GLF_FUZZED(-17878), (1 | 0), 0, 1))))))) * 1)), int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.3) : 1.0)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), min(int(ivec2(_GLF_IDENTITY(9166, 0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9166, (false ? _GLF_FUZZED(-37596) : 9166)), (9166) | 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(9166, (9166) / 1), (9166) >> 0) : _GLF_FUZZED(-17878))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(-17878, max(-17878, -17878))))), int(int(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(-17878, max(-17878, -17878))))), int(int(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))))), 0, 1, 1)))) << 0), _GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9166, (false ? _GLF_FUZZED(-37596) : 9166)), (9166) | 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(9166, (9166) / 1), (9166) >> 0) : _GLF_FUZZED(-17878))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(-17878, max(-17878, -17878))))), int(int(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(-17878, max(-17878, -17878))))), int(int(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))))), 0, 1, 1)))) << 0), _GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878))))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9166, (false ? _GLF_FUZZED(-37596) : 9166)), (9166) | 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(9166, (9166) / 1), (9166) >> 0) : _GLF_FUZZED(-17878))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(-17878, max(-17878, -17878))))), int(int(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(_GLF_IDENTITY(-17878, max(-17878, -17878))))), int(int(_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))))), 0, 1, 1)))) << 0), _GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_FUZZED(-17878)))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(9166, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(9166, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(9166, min(9166, 9166))) >> _GLF_IDENTITY(0, (0) << 0), int(int((9166) >> 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((9166) >> 0, int(int((9166) >> _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, _GLF_IDENTITY(0, (0) | (0))))))), clamp(_GLF_IDENTITY((9166) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(_GLF_IDENTITY(0, min(0, 0)), 0)), int(int((9166) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY((9166) >> 0, int(int((_GLF_IDENTITY(9166, (9166) + (0 >> _GLF_IDENTITY(int(5), int(5))))) >> 0))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(9166, min(_GLF_IDENTITY(9166, 0 ^ (9166)), 9166))) >> 0, int(int((_GLF_IDENTITY(9166, int(ivec3(9166, 0, 1)))) >> 0))))), _GLF_IDENTITY((9166) >> 0, int(int(_GLF_IDENTITY((9166), max(_GLF_IDENTITY((9166), min((9166), (9166))), (9166))) >> 0))))), _GLF_IDENTITY((9166) >> 0, int(int(_GLF_IDENTITY((9166) >> 0, ((9166) >> 0) / 1)))), _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))))) : _GLF_FUZZED(-17878))))) * 1, 1 * (_GLF_IDENTITY(((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_FUZZED(-17878))))) * 1, (_GLF_IDENTITY(((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_FUZZED(-17878))))) * 1, ~ (~ (((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_FUZZED(-17878))))) * 1)))) ^ 0))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(9166, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true))))) ? _GLF_IDENTITY(9166, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(9166, (9166) / 1), min(9166, 9166))) >> _GLF_IDENTITY(0, (0) << 0), int(int((9166) >> 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((9166) >> 0, int(int((9166) >> _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (0) / 1), 0, _GLF_IDENTITY(0, (0) | (0))))))), clamp(_GLF_IDENTITY((9166) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(_GLF_IDENTITY(0, min(0, 0)), 0)), int(int((9166) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY((9166) >> 0, int(int((_GLF_IDENTITY(9166, (9166) + (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), max(0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5))))))) >> 0))), 1 * (_GLF_IDENTITY((9166) >> 0, int(int((_GLF_IDENTITY(9166, int(ivec3(9166, 0, 1)))) >> 0))))), _GLF_IDENTITY((9166) >> 0, int(int(_GLF_IDENTITY((9166), max(_GLF_IDENTITY((9166), min(_GLF_IDENTITY((_GLF_IDENTITY(9166, ~ (~ (9166)))), min((_GLF_IDENTITY(9166, ~ (~ (9166)))), (_GLF_IDENTITY(9166, ~ (~ (9166)))))), (9166))), (9166))) >> 0))))), _GLF_IDENTITY((9166) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | 0), clamp(0, 0, 0)), int(int((_GLF_IDENTITY(9166, max(_GLF_IDENTITY(9166, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(9166, max(9166, 9166)), 0, 1, 1), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(9166, max(9166, 9166)), 0, 1, 1))))), 9166))) >> 0))), _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))))) : _GLF_FUZZED(-17878))))) * 1, _GLF_IDENTITY(1 * (((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_FUZZED(-17878))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0) * (((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_FUZZED(-17878))))) * 1), int(ivec4(1 * (((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_FUZZED(-17878))))) * 1), 1, 0, 0)))) | (1 * (((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY(_GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0))), 0 + (_GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))))) : _GLF_FUZZED(-17878))))) * 1)))) : _GLF_FUZZED(92563))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec2(_GLF_IDENTITY(9166, 0 + _GLF_IDENTITY((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, (9166) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(-17878), (_GLF_FUZZED(-17878)) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY(_GLF_IDENTITY((9166) >> 0, (true ? (9166) >> 0 : _GLF_FUZZED(-12886))), int(_GLF_IDENTITY(int((9166) >> 0), max(int((9166) >> 0), int((9166) >> 0)))))) : _GLF_FUZZED(-17878)))), min((_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((_GLF_IDENTITY(9166, (9166) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0, int(int((9166) >> 0)))) : _GLF_FUZZED(-17878)))), (_GLF_IDENTITY(9166, (true ? _GLF_IDENTITY(9166, _GLF_IDENTITY((9166) >> 0, int(int((9166) >> 0)))) : _GLF_FUZZED(-17878))))))) * 1)), int(_GLF_ONE(1.0, injectionSwitch.y))))))))) >> 0))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, _GLF_IDENTITY(4, 0 | (4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))))))), bvec3(bvec3(bvec3(false, false, true)))))) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), (bool(bvec3(false, false, true))) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(true, (true) || false)))))), (bool(bvec3(false, false, true))) || false)))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(486.569)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(929.478), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(5688.3162, 3918.1877, -5470.2583).x)), bvec2(true, false))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(injectionSwitch.y), float(mat4x3(float(injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(805.633))))), float(_GLF_FUZZED(2.9)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(2.9), float(float(_GLF_FUZZED(2.9))))), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.9)), bool(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_DEAD(false))))))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) && true)), true && (! (_GLF_IDENTITY(false, (false) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))), false), false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), (bool(bool(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))) || false))), _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY((bool(bvec4(false, true, false, false))), (_GLF_IDENTITY((bool(bvec4(false, true, false, false))), false || ((bool(bvec4(false, true, false, false)))))) && true) && true)))) || false)) || false)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))), ! (! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))), ! (! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))))))))), ! (! ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))), ! (! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))))))))))))))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false, bool(bvec3((_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false, true, false)))) || false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), false || ((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) && true))))) || false)) || false)) || false)))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || false)) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3((! (false)), false, true), false))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false)))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.0))), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, tan(0.0), 0.0), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))))) / 1.0), 0.0, 0.0)), dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
