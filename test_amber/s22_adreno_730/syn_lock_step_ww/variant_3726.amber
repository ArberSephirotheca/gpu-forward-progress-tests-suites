#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat4 _f0;
 bvec3 _f1;
 uint subgroup_size;
 vec2 _f2;
 vec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_3 {
 int _f0;
 vec4 _f1;
 _GLF_struct_2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 vec4 _f1;
 ivec2 _f2;
 vec4 _f3;
 uint _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat4x3(1.0), _GLF_struct_1(mat4x3(1.0), _GLF_struct_0(mat2(1.0), _GLF_IDENTITY(vec4(1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 0) | (1)), _GLF_IDENTITY((1) + 0, max((1) + 0, _GLF_IDENTITY((1) + 0, int(ivec4((1) + 0, 0, 0, _GLF_IDENTITY(0, (0) >> 0)))))))), vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), 1u, uvec3(1u))), _GLF_struct_3(1, vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.7)), float(0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))), bool(bvec2(bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), mix(float(_GLF_FUZZED(float(49650u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))), ! (! (! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))), ! (! (! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))), ! (! (! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), max(float(_GLF_FUZZED(float(49650u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(49650u))), (float(_GLF_FUZZED(float(49650u)))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8)))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false))))) && true)))))), (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(743.173)), bool(false)), clamp(mix(float(injectionSwitch.y), float(_GLF_FUZZED(743.173)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-717.777) : float(injectionSwitch.y))), float(_GLF_FUZZED(743.173)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(743.173)), bool(false))))))))) && true)), bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(49650u)), float(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(float(49650u)), min(_GLF_FUZZED(float(49650u)), _GLF_FUZZED(float(49650u)))), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, abs(0.0), 1.0, 1.0, log(1.0), sin(0.0))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))), (bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4459.7016, -11.04)) : injectionSwitch)))).y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(bool(true), (bool(true)) && true))))) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(49650u))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.01), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-30.64))), bvec2(true, false))).y)) && true)))) && true)), true, false))))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(243.758) : 0.0)), 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 1.0)), mix(float(float(vec4(0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(6.3)), bool(_GLF_IDENTITY(false, ! (! (false))))))) * 1.0)), 1.0)), 0.0 + (float(mat3x2(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 1.0)))))), _GLF_struct_2(mat4(1.0), bvec3(true), gl_SubgroupSize, vec2(1.0), vec2(1.0), true), vec2(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0)) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true)), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 0u, 1u))), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 0u, 1u))), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 0u, 1u))), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 0u, 1u))))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))) || false))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))) || false))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))) || false))))), true))), bvec2(bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))) || false))))), true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))), ! (! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))) || false))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))), ! (! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))) || false))))), true, false, false))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))) || false, ! (! ((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))))))))))))))))) || false)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, true))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), false))))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bool(true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))) || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))) || (false))), bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))) || (false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))) || false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))) && true)))))))), ! (! (_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))) && true)))))))), bool(bvec2((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))) && true)))))))), false)))))) || false))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))), bvec2(bvec4(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))) || false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))) && true)))))))), ! (! (_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))) && true)))))))), bool(bvec2((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))) && true)))))))), false)))))) || false))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(bool(bvec3(false, true, true)), true))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y)) && _GLF_IDENTITY((false), bool(bvec3((false), true, true))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_4._f2._f2.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-3.6 / -1.5))), vec2(_GLF_FUZZED(7.0), (injectionSwitch)[1]), bvec2(false, true))), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0))), min(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-3.6 / -1.5))), vec2(_GLF_FUZZED(7.0), (injectionSwitch)[1]), bvec2(false, true))), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-3.6 / -1.5))), vec2(_GLF_FUZZED(7.0), (injectionSwitch)[1]), bvec2(false, true))), 1.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0)))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ((false)) || false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true)))))))), bool(bvec2(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))))), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) && true, ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))))), (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, false)))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base)))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base)))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base)))))))))) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base))) | 0u)))))), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base)))), ((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base))))) | ((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base)))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base))) | 0u)))))), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base)))), ((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base))))) | ((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base))))))))))), max(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base))) | 0u)))))), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base)))), ((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base))))) | ((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base))))))))))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base))) | 0u)))))), max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base)))), ((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base))))) | ((_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 1u))))))) : ~ (subgroup_base))))))))))))))) << 0u) + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f2._f2.subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))), max(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u) + subgroup_base) + 0u), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base))))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), (true ? (subgroup_base) : _GLF_FUZZED(num_workgroup))), (subgroup_base), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : ~ (subgroup_base))))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) + 1))))) % _GLF_struct_replacement_4._f2._f2.subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), _GLF_IDENTITY(max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base)))))), (max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base))))))) | (max(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : ~ (subgroup_base))))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_4._f2._f2.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f2._f2.subgroup_size) + 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u), (uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u)) | uvec2(0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u), (uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u)) | uvec2(0u, 0u)))))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 1u), min(uvec2(2u, 1u), uvec2(2u, 1u)))))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u), (uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u)) | uvec2(0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u), (uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u)) | uvec2(0u, 0u)))))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 1u), min(uvec2(2u, 1u), uvec2(2u, 1u)))))))), max(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u), (uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u)) | uvec2(0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u), (uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u)) | uvec2(0u, 0u)))))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 1u), min(uvec2(2u, 1u), uvec2(2u, 1u)))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u), (uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u)) | uvec2(0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u), (uvec2(_GLF_IDENTITY(uint(2u), uint(2u)), 0u)) | uvec2(0u, 0u)))))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 1u), min(uvec2(2u, 1u), uvec2(2u, 1u))))))))))) | 0u)), _GLF_IDENTITY(min(uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) / 1u) ^ (1u)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(next_virtual_gid) : uint(1))), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << 0u)), uint(3u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) - 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), max((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), clamp(_GLF_IDENTITY(min(uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(uint(1), 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(virtual_gid) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (true ? (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(virtual_gid)))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), ~ (_GLF_IDENTITY(~ (min(uvec4(uint(1), _GLF_IDENTITY(0u, (0u) / 1u), ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) * 1u)), uint(3u))), ((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u))), uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), 0u | (uint(2u)))))))), (false ? _GLF_FUZZED(uvec4(198753u, _GLF_IDENTITY(160209u, (160209u) | (1u ^ 1u)), 90200u, 45252u)) : ~ (min(uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), (false ? _GLF_FUZZED(178893u) : ~ (uint(2u)))))), uint(2u)))), uvec4(_GLF_IDENTITY(uint(1), (uint(1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) / 1u)), _GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), min(uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(uint(1), 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) | (2u))) | (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), min(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 1u, 1u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(min(uvec4(_GLF_IDENTITY(uint(1), (uint(1)) >> (1u ^ 1u)), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec2(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u)))), 1u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, ~ (~ (3u)))))), uint(3u))), max(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec2(_GLF_IDENTITY(uint(3u), uint(3u)), 1u)))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), uint(3u)), uint(uvec2(_GLF_IDENTITY(uint(3u), uint(3u)), 1u)))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) / 1u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(uint(1), 0u, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) - (0u | 0u)), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) - (0u | 0u)))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))))), (min(uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, (0u ^ 1u), _GLF_IDENTITY(1u, (1u) * 1u)))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u))), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(uint(1), 0u, ((_GLF_IDENTITY(1u, (1u) - 0u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), uint(uvec2(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), 0u))), (0u & 73981u) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), uint(uvec2(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), 0u)))))) ^ (0u | 0u)))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (2u))), uint(2u)))))) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) | (uvec4(uint(1), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ uvec4(0u, 0u, 0u, 0u)), min(uvec4(uint(1), 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uint(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) - 0u)) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 1u * (uint(2u))), uint(2u)))))) ^ 0u)), uvec4(uint(1), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u * (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), max((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))))), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), max((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), max((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), max((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u)))))) ^ 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), max((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(2u, 2u), max(max(2u, 2u), max(2u, 2u))))), uint(2u))))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), max((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(2u, 2u), max(max(2u, 2u), max(2u, 2u))))), uint(2u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) / 1u))))))) ^ 0u)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u), (uint(2)) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (true) || false))), ! _GLF_IDENTITY((! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) && _GLF_IDENTITY(true, (true) || false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) && _GLF_IDENTITY(true, (true) || false))) || false))))), ! (! (! ((! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) && _GLF_IDENTITY(true, (true) || false))) || false))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
