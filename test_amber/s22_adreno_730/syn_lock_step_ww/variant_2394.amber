#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), ((0 >> _GLF_IDENTITY(int(8), int(8)))) << 0) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)) || false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, log(1.0))))) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), clamp((_GLF_FUZZED(injectionSwitch)), (_GLF_FUZZED(injectionSwitch)), (_GLF_FUZZED(injectionSwitch)))) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) * sqrt(vec2(1.0, 1.0)))) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0)), max(vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0)), vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0))))) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, log(1.0))))) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), clamp((_GLF_FUZZED(injectionSwitch)), (_GLF_FUZZED(injectionSwitch)), (_GLF_FUZZED(injectionSwitch)))) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) * sqrt(vec2(1.0, 1.0)))) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0)), max(vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0)), vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0))))) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-98.27) : 1.0))) + tan(0.0))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), 0.0, 1.0, abs(abs(1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec4(1.0, abs(0.0), sqrt(0.0), 0.0), vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), dot(vec4(1.0, abs(0.0), sqrt(0.0), 0.0), vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, log(1.0))))) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), clamp((_GLF_FUZZED(injectionSwitch)), (_GLF_FUZZED(injectionSwitch)), (_GLF_FUZZED(injectionSwitch)))) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) * sqrt(vec2(1.0, 1.0)))) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0)), max(vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0)), vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0))))) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0)))))) + vec2(0.0, 0.0)) : _GLF_FUZZED((injectionSwitch - -9564.3963)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))))))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0))) * cos(vec2(0.0, 0.0))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) : injectionSwitch))))))) / vec2(1.0, 1.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false)), mix(float(_GLF_FUZZED(0.3)), float(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false))), bool(true))), float(mat3(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(true ? clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))))) : _GLF_FUZZED(-170.380), mix(float(true ? clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))))) : _GLF_FUZZED(-170.380)), float(_GLF_FUZZED(-11.59)), bool(false))))))), float(_GLF_FUZZED(6115.8955)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-6027.7515, 148.053)) : _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-72.46)), float(1.0), bool(true)))) : _GLF_FUZZED(mat3(_GLF_IDENTITY(-69.91, clamp(-69.91, -69.91, -69.91)), -2907.0173, 2.8, _GLF_IDENTITY(-6.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(-6.0, 0.0, 1.0, 1.0), (mat2(-6.0, 0.0, 1.0, 1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0.0 + (float(_GLF_IDENTITY(mat2(-6.0, 0.0, 1.0, 1.0), (mat2(-6.0, 0.0, 1.0, 1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), 6.6, 148.137, 8.7, 7.7, -73.70))))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((uvec4(22460u, 149894u, 194009u, 64514u) != uvec4(147570u, 15839u, 93105u, 179472u)) ? vec3(396.137, -9886.4684, 82.75).p : 5.3)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), mix(vec2((_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((uvec4(22460u, 149894u, 194009u, 64514u) != uvec4(147570u, 15839u, 93105u, 179472u)) ? vec3(396.137, -9886.4684, 82.75).p : 5.3)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))[0], (_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((uvec4(22460u, 149894u, 194009u, 64514u) != uvec4(147570u, 15839u, 93105u, 179472u)) ? vec3(396.137, -9886.4684, 82.75).p : 5.3)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))[1]), vec2(_GLF_FUZZED(6.3), _GLF_FUZZED((- -7.7))), bvec2(false, false))) : injectionSwitch))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2(mat2(1.0))), _GLF_IDENTITY(mat2(mat3x4(mat2(mat2(mat2(1.0))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4(mat2(mat2(mat2(1.0))))))))) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-12.58), _GLF_FUZZED(-0.2)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(984.700) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(_GLF_IDENTITY(false, (false) && true)))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), 1.0, abs(1.0), 1.0, abs(1.0))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(float(-89279))), bool(false))), injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(float(-89279))), bool(false))), injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(float(-89279))), bool(false))), injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380)))) - 0.0)), float(_GLF_FUZZED(-2.4)), bool(false))))), float(_GLF_FUZZED(_GLF_IDENTITY(6115.8955, (false ? _GLF_FUZZED(5.3) : 6115.8955)))), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380), clamp(_GLF_IDENTITY(true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((-61.57 < -260.512)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : _GLF_FUZZED(-170.380), max(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380), _GLF_IDENTITY(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380), mix(float(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380)), float(_GLF_FUZZED(20.81)), bool(false))))), true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x) : _GLF_FUZZED(-170.380), true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))))), float(_GLF_FUZZED(6115.8955)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(true, (true) && true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-3.4, -638.520, -0.8).g)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * mat2(1.0))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-8080.4229))), 0.0), (mat3x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 1.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(mat2(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x3(mat2(1.0)) : _GLF_FUZZED(mat4x3(72.38, -4.6, -503.129, -808.484, -1872.8815, -0.2, 513.443, 4.5, -1718.0288, 6.1, 47.84, -3710.7202)))))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mat2(1.0) * (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.5))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.2)), vec2(_GLF_FUZZED(5.8), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x, injectionSwitch.x), (true ? _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) : _GLF_FUZZED(-170.380))), (_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))).x) : _GLF_IDENTITY(_GLF_FUZZED(-170.380), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-170.380)), float(_GLF_FUZZED(9.3)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-170.380)), float(_GLF_FUZZED(9.3)), bool(false)), max(mix(float(_GLF_FUZZED(-170.380)), float(_GLF_FUZZED(9.3)), bool(false)), mix(float(_GLF_FUZZED(-170.380)), float(_GLF_FUZZED(9.3)), bool(false))))) / 1.0))))) + 0.0))), float(_GLF_FUZZED(6115.8955)), bool(false)))))), 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * mat2(1.0))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-8080.4229))), 0.0), (mat3x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 1.0, 1.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(mat2(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x3(mat2(1.0)) : _GLF_FUZZED(mat4x3(72.38, -4.6, -503.129, -808.484, -1872.8815, -0.2, 513.443, 4.5, -1718.0288, 6.1, 47.84, -3710.7202)))))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mat2(1.0) * (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.5))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.2)), vec2(_GLF_FUZZED(5.8), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x, injectionSwitch.x), (true ? _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) : _GLF_FUZZED(-170.380))), (_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))).x) : _GLF_IDENTITY(_GLF_FUZZED(-170.380), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-170.380)), float(_GLF_FUZZED(9.3)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-170.380)), float(_GLF_FUZZED(9.3)), bool(false)), max(mix(float(_GLF_FUZZED(-170.380)), float(_GLF_FUZZED(9.3)), bool(false)), mix(float(_GLF_FUZZED(-170.380)), float(_GLF_FUZZED(9.3)), bool(false))))) / 1.0))))) + 0.0))), float(_GLF_FUZZED(6115.8955)), bool(false)))))))) / cos(0.0)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(injectionSwitch)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), (injectionSwitch), (injectionSwitch))), mix(vec2((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))[0], _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(-528.370), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, 1.0)).x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x) : _GLF_FUZZED(-170.380))))), mix(float(_GLF_FUZZED(845.893)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x) : _GLF_FUZZED(-170.380)))))), bool(true))), float(_GLF_FUZZED(6115.8955)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-78.36)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(true))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-521.361), _GLF_IDENTITY(_GLF_FUZZED(98.28), clamp(_GLF_FUZZED(98.28), _GLF_IDENTITY(_GLF_FUZZED(98.28), min(_GLF_FUZZED(98.28), _GLF_IDENTITY(_GLF_FUZZED(98.28), max(_GLF_FUZZED(98.28), _GLF_FUZZED(98.28))))), _GLF_FUZZED(98.28)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))).x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), _GLF_IDENTITY(float(_GLF_FUZZED(6115.8955)), _GLF_IDENTITY(float(mat3x4(float(_GLF_FUZZED(6115.8955)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (true ? mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED((mat3(755.895, -5719.4927, -2.1, -5.9, 949.513, -49.57, 2.8, 89.38, 9586.7236)))))), (false ? _GLF_FUZZED(mat3(498.630, -20.56, -98.06, 2.7, 75.74, -70.61, -4.7, -2.4, -1.2)) : mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(179.670)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0)), (true ? float(mat3x4(float(_GLF_IDENTITY(_GLF_FUZZED(6115.8955), mix(float(_GLF_FUZZED(6115.8955)), float(_GLF_FUZZED(_GLF_IDENTITY(-391.200, clamp(_GLF_IDENTITY(-391.200, clamp(-391.200, -391.200, -391.200)), _GLF_IDENTITY(-391.200, max(-391.200, -391.200)), -391.200)))), bool(false)))), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(376.962) : 1.0)))), 0.0, determinant(mat4(1.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0)), float(_GLF_FUZZED(640.992)), bool(false)), (true ? mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), mix(float(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), float(_GLF_FUZZED(1665.5818)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0)), float(_GLF_FUZZED(640.992)), bool(false)) : _GLF_FUZZED(0.3)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0), (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0)) * 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY((vec3(0.0, 0.0, 1.0)) * mat3(1.0), vec3(mat3x4((vec3(0.0, 0.0, 1.0)) * mat3(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0), (false ? _GLF_FUZZED(6.3) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0))), 1.0, 1.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - sqrt(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), tan(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-76.34)))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mix(_GLF_IDENTITY(vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), min((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), clamp(vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], mix(float(_GLF_FUZZED((_GLF_IDENTITY(2.3 - 532.875, clamp(_GLF_IDENTITY(2.3 - 532.875, (2.3 - 532.875) + 0.0), 2.3 - 532.875, 2.3 - 532.875))))), float(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], mix(float(_GLF_FUZZED(-3.6)), float((_GLF_FUZZED(injectionSwitch))[1]), bool(true)))), bool(true)))), vec2(_GLF_FUZZED(-7562.1077), _GLF_FUZZED(vec2(-648.306, -58.90).t)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : injectionSwitch)[1]), vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-9.4), _GLF_FUZZED(-75.18)), bvec2(false, false)))), mix(vec2(((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], min((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0])), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 1.0, 0.0))) : _GLF_FUZZED(radians(vec2(-196.912, -7.9)))))[1]), clamp(vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], mix(float(_GLF_FUZZED((2.3 - 532.875))), float(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], mix(float(_GLF_FUZZED(-3.6)), float((_GLF_FUZZED(injectionSwitch))[1]), bool(true)))), bool(true)))), vec2(_GLF_FUZZED(-7562.1077), _GLF_FUZZED(vec2(-648.306, -58.90).t)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : injectionSwitch)[1]), vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 0.0, exp(0.0), 0.0, 1.0)), vec2(_GLF_IDENTITY(mat3x4(vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 0.0, exp(0.0), 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(vec2(mat3x2(_GLF_FUZZED(injectionSwitch), 0.0, exp(0.0), 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))) : injectionSwitch)))[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-9.4), _GLF_FUZZED(-75.18)), bvec2(false, false)))))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(-1.8), ((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mix(_GLF_IDENTITY(vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), clamp(vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], mix(float(_GLF_FUZZED((2.3 - 532.875))), float(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], mix(float(_GLF_FUZZED(-3.6)), float((_GLF_FUZZED(injectionSwitch))[1]), bool(true)))), bool(true)))), vec2(_GLF_FUZZED(-7562.1077), _GLF_FUZZED(vec2(-648.306, -58.90).t)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], mix(float(_GLF_FUZZED((2.3 - 532.875))), float(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], mix(float(_GLF_FUZZED(-3.6)), float((_GLF_FUZZED(injectionSwitch))[1]), bool(true)))), bool(true)))), vec2(_GLF_FUZZED(-7562.1077), _GLF_FUZZED(vec2(-648.306, -58.90).t)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1], mix(float(_GLF_FUZZED((2.3 - 532.875))), float(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], mix(float(_GLF_FUZZED(-3.6)), float((_GLF_FUZZED(injectionSwitch))[1]), bool(true)))), bool(true)))), vec2(_GLF_FUZZED(-7562.1077), _GLF_FUZZED(vec2(-648.306, -58.90).t)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * vec2(1.0, 1.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) : injectionSwitch)))[0], clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) : injectionSwitch)))[0], _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) : injectionSwitch)))[0], _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) : injectionSwitch)))[0])), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-9.4), _GLF_FUZZED(-75.18)), bvec2(false, false)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) / vec2(1.0, 1.0)).x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) : _GLF_FUZZED(-170.380))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), true, false)), false || (bool(bvec3(true && (false), true, false)))))) ? _GLF_FUZZED(64.61) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(vec3(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), (true ? float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) : _GLF_FUZZED(_GLF_IDENTITY(-170.380, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-170.380, (-170.380) / 1.0), 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0)))), max(float(mat3(_GLF_IDENTITY(-170.380, (-170.380) / 1.0), 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0)))), float(mat3(_GLF_IDENTITY(-170.380, (-170.380) / 1.0), 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0)))))))))))) : _GLF_FUZZED(8686.5901))))), float(_GLF_FUZZED(6115.8955)), bool(false))))), _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(sqrt(vec2(1.0, 1.0)))).y), 1.0, 1.0, 1.0, 0.0)), (transpose(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3670.4303, _GLF_IDENTITY(692.321, min(_GLF_IDENTITY(692.321, max(692.321, 692.321)), _GLF_IDENTITY(692.321, mix(float(692.321), float(_GLF_FUZZED(15.10)), bool(false)))))))))[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false)), mix(float(_GLF_FUZZED(-9.2)), float(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false))), bool(true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-170.380))))), float(_GLF_FUZZED(6115.8955)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-95.42), _GLF_FUZZED((-3977.5345 + _GLF_IDENTITY(-108.241, (-108.241) - 0.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0))), 1.0)), 1.0, 1.0)), 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-95.42), _GLF_FUZZED((-3977.5345 + _GLF_IDENTITY(-108.241, (-108.241) - 0.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0))), 1.0)), 1.0, 1.0)), 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-95.42), _GLF_FUZZED((-3977.5345 + _GLF_IDENTITY(-108.241, (-108.241) - 0.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0))), 1.0)), 1.0, 1.0)), 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((-43.32 - -58.20))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-170.380, (-170.380) * 1.0)), mix(float(_GLF_IDENTITY(true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) : _GLF_FUZZED(_GLF_IDENTITY(-170.380, (-170.380) * 1.0)), max(true ? clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) : _GLF_FUZZED(_GLF_IDENTITY(-170.380, (-170.380) * 1.0)), true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) : _GLF_FUZZED(_GLF_IDENTITY(-170.380, (-170.380) * 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED((-194.188 - -4.3))), bool(false))))), bool(_GLF_IDENTITY(false, (false) || false)))))))), float(_GLF_FUZZED(6115.8955)), bool(false))))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(90.77)), bool(false))), 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0))) * mat3(1.0)))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.5)), bool(false))) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        break;
       if(_GLF_DEAD(false))
        break;
       break;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-505.047, 9.3)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-505.047, 9.3)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-505.047, 9.3)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))) || false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 ^ 1) & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   break;
                  }
                 return;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))), (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6737.9253) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(33846) : _GLF_IDENTITY(1, ~ (~ (1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, true, true))); _injected_loop_counter ++)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), (bool(bvec2((false), true))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.0)), vec2(_GLF_FUZZED(1170.5962), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                return;
               if(_GLF_DEAD(false))
                continue;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-102.796) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) - 0)); _injected_loop_counter --)
    {
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
      }
     return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), (bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))) || false))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            continue;
           continue;
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(183.197, 8.7)))).x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          continue;
         do
          {
           do
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), max(((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0)) << 0)) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0), min(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0)))))) >> _GLF_IDENTITY(int(7), int(7))), ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
          return;
        }
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(9.7)), bool(false))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float((injectionSwitch.x) - 0.0), float(_GLF_FUZZED(-6419.5206)), bool(false))))), float(_GLF_FUZZED(9.7)), bool(false))) > injectionSwitch.y))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(9.7)), bool(false))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float((injectionSwitch.x) - 0.0), float(_GLF_FUZZED(-6419.5206)), bool(false))))), float(_GLF_FUZZED(9.7)), bool(false))) > injectionSwitch.y)))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(26.55))), 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-88.85))), injectionSwitch.y))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 + (1)))), 0u ^ (subgroup_local_id + 1))) % subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), false), true))))))
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false))), true))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
        break;
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false)))), false)))))))) && (false)), _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true), (injectionSwitch.x > injectionSwitch.y))))), true)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(297.512) : 0.0)), injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, bitfieldReverse(13982))) : int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (0 | 0)))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, true, true))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     return;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-33.55) : injectionSwitch.y))))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                 return;
                }
              }
            }
           else
            {
            }
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), min(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), min(int(1), int(1))))) * 1)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), _GLF_IDENTITY(~ (64), ~ (~ (_GLF_IDENTITY(~ (64), clamp(~ (64), ~ _GLF_IDENTITY((64), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((64))), ~ (64)))))))), min(_GLF_IDENTITY(~ (64), max(~ (64), _GLF_IDENTITY(~ (64), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (64), clamp(~ (64), _GLF_IDENTITY(~ (64), 0 ^ (_GLF_IDENTITY(~ (64), (~ (64)) - 0))), ~ (64))))), ((~ (_GLF_IDENTITY(~ (64), clamp(~ _GLF_IDENTITY((64), ((64)) | (_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) | 0)) * ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(~ (64), 0 ^ (_GLF_IDENTITY(~ (64), (~ (64)) - 0))), ~ (64)))))) | ((~ (_GLF_IDENTITY(~ (64), clamp(~ (64), _GLF_IDENTITY(~ (64), 0 ^ (_GLF_IDENTITY(~ (64), (~ (64)) - 0))), ~ (64)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), _GLF_IDENTITY(~ (64), ~ (~ (_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64)))))))), (_GLF_IDENTITY(~ (64), max(~ (64), _GLF_IDENTITY(~ (64), ~ (~ (_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64))))))))) / 1))))), 4);
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           return;
          }
        }
       do
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))); _injected_loop_counter --)
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(67821, ~ (_GLF_IDENTITY(~ (67821), 1 * (~ (67821))))) & 0)); _injected_loop_counter --)
          {
           do
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(8473.5632)), vec2(_GLF_FUZZED(5.2), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) << 0), 4)));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false))))
    break;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-6.0)), _GLF_IDENTITY(bool(false), (bool(false)) && true))), injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) / 1), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, false)), (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(false))), true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true, true, false)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
