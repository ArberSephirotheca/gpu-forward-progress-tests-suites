#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_5 {
 float _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 vec2 _f1;
 float _f2;
 bvec3 _f3;
 uint workgroup_size;
 vec4 _f4;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 uvec2 _f3;
 mat3x2 _f4;
 uvec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 _GLF_struct_2 _f1;
 mat2x4 _f2;
 bool _f3;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 uvec4 _f1;
 vec3 _f2;
 bvec3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 int _f1;
} ;

struct _GLF_struct_4 {
 uint workgroup_id;
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(1.0, uvec4(1u)), vec2(1.0), 1.0, bvec3(true), gl_WorkGroupSize.x, vec4(1.0));
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_WorkGroupID.x, _GLF_struct_1(_GLF_struct_0(vec4(1.0), uvec4(1u), vec3(1.0), bvec3(true), bvec4(true)), 1), _GLF_struct_3(ivec3(1), _GLF_struct_2(mat4x3(1.0), mat4x3(1.0), bvec2(true), uvec2(1u), mat3x2(1.0), uvec4(1u), bvec2(true)), mat2x4(1.0), true));
 uint workgroup_base = _GLF_struct_replacement_6.workgroup_size * _GLF_struct_replacement_4.workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y + 1) % subgroup_size);
 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x = next_virtual_gid;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x], uint(2), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
