#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat4x3 _f0;
 mat3 _f1;
 mat3 _f2;
 mat2x3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 bvec3 _f1;
 uvec3 _f2;
 uvec4 _f3;
 mat3x4 _f4;
 vec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_11 {
 int _f0;
} ;

struct _GLF_struct_10 {
 bool _f0;
 mat2x3 _f1;
 mat4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 vec2 _f1;
 uvec2 _f2;
 mat2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_8 {
 uint _f0;
 mat4 _f1;
 bvec2 _f2;
 vec3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 bvec4 _f4;
 _GLF_struct_12 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 mat2x4 _f1;
 mat3 _f2;
 ivec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_5 {
 float _f0;
 mat3 _f1;
 ivec2 _f2;
 uvec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_4 {
 uint _f0;
 uvec4 _f1;
 mat4x3 _f2;
 vec2 _f3;
 bool _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_3 {
 bool _f0;
 uint _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 ivec2 _f1;
 uint subgroup_local_id;
 mat4 _f2;
 _GLF_struct_4 _f3;
 bvec3 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 bool _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_14 _f4;
 mat3 _f5;
 vec3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-8.4), ((injectionSwitch) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))[0], _GLF_FUZZED(-118.531)), bvec2(true, false))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4779.3410)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-54.13) : injectionSwitch.y)), bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(251.359)), bool(false))))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), false, true), bvec3(bvec4(bvec3(! (! (false)), false, true), true)))))), _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) || false), bool(bvec3((false) || false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(sqrt(vec2(0.0, 0.0))) * (injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(sqrt(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0)), clamp(float(mat2x4(0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0)), _GLF_IDENTITY(float(mat2x4(0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0)), (float(mat2x4(0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0))) / 1.0), _GLF_IDENTITY(float(mat2x4(0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0)), 1.0 * (float(mat2x4(0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0))))))), 0.0))) * (injectionSwitch)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size, (true ? _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size) - 0u) : _GLF_FUZZED(56u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size, 0u ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size))), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size)) + 0u)))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat4(1.0), true, _GLF_struct_2(_GLF_struct_0(mat3(1.0), mat4x2(1.0), ivec3(1), bvec2(true)), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(ivec2(-82194, 96689)) : ivec2(1))), _GLF_IDENTITY(ivec2(ivec3(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-82194, 96689)) : ivec2(1))), (0 | 0))), ivec2(ivec4(ivec2(ivec3(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-82194, 96689)) : ivec2(1))), (0 | 0))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true))))), _GLF_struct_7(_GLF_struct_3(true, 1u), ivec2(1), gl_SubgroupInvocationID, mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), float(mat4x2(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? -45.85 : 128.745))), bool(false))))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(trunc(tanh(-903.998))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-77.33)), bool(false)))) / 1.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(9.5))), clamp(1.0, 1.0, 1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(9.5))), clamp(1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(9.5))), clamp(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(9.5))), clamp(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(9.5))), clamp(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-77.24))), 1.0, 1.0)), 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9440.6041) : 0.0)), 0.0))) / 1.0))), 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-9125.8283))))) ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), max((1.0), (1.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-505.203)), bool(false))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), min((_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, sin(0.0), determinant(mat3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sign(6.4)) : 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((+ -723.521)))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0))))), clamp(1.0, 1.0, 1.0))))))))), _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) << 0u), uvec4(1u), mat4x3(1.0), vec2(1.0), true, mat3x2(1.0)), bvec3(true), _GLF_struct_5(1.0, mat3(1.0), ivec2(1), uvec2(1u), mat4x3(1.0)), _GLF_struct_6(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((39.74))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), mat2x4(1.0), mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (float(mat2(1.0, 1.0, 0.0, 0.0))) + 0.0)), 1.0))), ivec4(1), ivec2(1))), _GLF_struct_14(_GLF_struct_8(_GLF_IDENTITY(1u, 1u * (1u)), mat4(1.0), bvec2(true), vec3(1.0), mat4x2(1.0)), _GLF_struct_9(vec2(1.0), vec2(1.0), uvec2(1u), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-688.277)), min(float(_GLF_FUZZED(-688.277)), _GLF_IDENTITY(float(_GLF_FUZZED(-688.277)), (float(_GLF_FUZZED(-688.277))) * 1.0))), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(-688.277)), float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-74.17)))) - 0.0)))), bool(true)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-688.277), max(_GLF_IDENTITY(_GLF_FUZZED(-688.277), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_FUZZED(-688.277), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_FUZZED(-688.277) : _GLF_FUZZED(-3812.5992), min(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(_GLF_FUZZED(-688.277), (_GLF_FUZZED(-688.277)) + length(vec2(0.0, 0.0))) : _GLF_FUZZED(-3812.5992), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) && true)))) ? _GLF_FUZZED(-688.277) : _GLF_FUZZED(-3812.5992))))), 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(-772.206, -5.3, 5763.5334, -9348.4525, 5.0, 9824.8845, _GLF_IDENTITY(83.59, (83.59) - 0.0), -2114.8176, -9.1)) : mat3(_GLF_IDENTITY(_GLF_FUZZED(-688.277), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_FUZZED(-688.277) : _GLF_FUZZED(-3812.5992), min(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(_GLF_FUZZED(-688.277), (_GLF_FUZZED(-688.277)) + length(vec2(0.0, 0.0))) : _GLF_FUZZED(-3812.5992), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))) ? _GLF_FUZZED(-688.277) : _GLF_FUZZED(-3812.5992))))), 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(false ? _GLF_FUZZED(mat3(-772.206, -5.3, 5763.5334, -9348.4525, 5.0, 9824.8845, _GLF_IDENTITY(83.59, (83.59) - 0.0), -2114.8176, -9.1)) : mat3(_GLF_IDENTITY(_GLF_FUZZED(-688.277), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_FUZZED(-688.277) : _GLF_FUZZED(-3812.5992), min(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(_GLF_FUZZED(-688.277), (_GLF_FUZZED(-688.277)) + length(vec2(0.0, 0.0))) : _GLF_FUZZED(-3812.5992), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))) ? _GLF_FUZZED(-688.277) : _GLF_FUZZED(-3812.5992))))), 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0), mat3(mat3(false ? _GLF_FUZZED(mat3(-772.206, -5.3, 5763.5334, -9348.4525, 5.0, 9824.8845, _GLF_IDENTITY(83.59, (83.59) - 0.0), -2114.8176, -9.1)) : mat3(_GLF_IDENTITY(_GLF_FUZZED(-688.277), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_FUZZED(-688.277) : _GLF_FUZZED(-3812.5992), min(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(_GLF_FUZZED(-688.277), (_GLF_FUZZED(-688.277)) + length(vec2(0.0, 0.0))) : _GLF_FUZZED(-3812.5992), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))) ? _GLF_FUZZED(-688.277) : _GLF_FUZZED(-3812.5992))))), 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 1.0))))))))))), _GLF_FUZZED(_GLF_IDENTITY(-688.277, float(_GLF_IDENTITY(mat4x2(-688.277, 0.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(-688.277, 0.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0)))))))))), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-688.277)), float(1.0), bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((true)))))), (true ? mix(float(_GLF_FUZZED(-688.277)), float(1.0), bool(true)) : _GLF_FUZZED(2.8))))))) - _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(-6.9))), min(_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(-6.9))), _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? tan(0.0) : _GLF_FUZZED(-6.9))))))), ivec2(1)), _GLF_struct_10(true, mat2x3(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))), mat3x4(1.0)), _GLF_struct_11(_GLF_IDENTITY(1, (1) - 0)), bvec4(true), _GLF_struct_12(uvec4(1u), bvec3(true), uvec3(1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (1u) | (1u)), (1u ^ 1u), 0u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (1u) | (1u)), (1u ^ 1u), 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))))))))), mat3x4(1.0), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(1.0)), (vec3(1.0)), (vec3(1.0)))) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((- -891.065)), _GLF_FUZZED(_GLF_IDENTITY((vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)), clamp((vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)), (vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)), _GLF_IDENTITY((vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)), clamp((vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)), (vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)), (vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)))))).t), _GLF_FUZZED((- 9.3))), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-590.456))), mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-590.456))), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-590.456))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-590.456))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-590.456)))))), bool(true)))))[1], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec3(_GLF_FUZZED(6410.6733), (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(-8.0, 2053.4243, -84.16, -8.1).z) : 0.0)), 0.0, 0.0)), 0.0))))[1], _GLF_FUZZED(43.32)), vec3((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(183.438), _GLF_IDENTITY((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2], min((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2], (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2]))), bvec3(true, false, true)))), clamp((_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec3(_GLF_FUZZED(6410.6733), (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(-8.0, 2053.4243, -84.16, -8.1).z) : 0.0)), 0.0, 0.0)), 0.0))))[1], _GLF_FUZZED(43.32)), vec3((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(183.438), _GLF_IDENTITY((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2], min((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2], (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2]))), bvec3(true, false, true)))), (_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec3(_GLF_FUZZED(6410.6733), (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(-8.0, 2053.4243, -84.16, -8.1).z) : 0.0)), 0.0, 0.0)), 0.0))))[1], _GLF_FUZZED(43.32)), vec3((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(183.438), _GLF_IDENTITY((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2], min((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2], (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2]))), bvec3(true, false, true)))), (_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec3(_GLF_FUZZED(6410.6733), (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(-8.0, 2053.4243, -84.16, -8.1).z) : 0.0)), 0.0, 0.0)), 0.0))))[1], _GLF_FUZZED(43.32)), vec3((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(183.438), _GLF_IDENTITY((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2], min((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2], (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2]))), bvec3(true, false, true))))))[2], 1.0 * ((_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))), mix(vec3(_GLF_FUZZED(6410.6733), (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[1], _GLF_FUZZED(_GLF_IDENTITY(43.32, clamp(43.32, 43.32, _GLF_IDENTITY(43.32, clamp(43.32, 43.32, 43.32)))))), vec3((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(183.438), (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[2]), bvec3(true, false, true))))[2]))), bvec3(true, true, true))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(1.0)), (vec3(1.0)), (vec3(1.0)))) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((- -891.065)), _GLF_FUZZED((vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)).t), _GLF_FUZZED((- 9.3))), _GLF_IDENTITY(vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)), 1.0, 1.0, 1.0), (mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0))[2]), (vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)), 1.0, 1.0, 1.0), (mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0))[2])) * mat3(1.0)), bvec3(true, true, true))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(-55.08, 1332.3096, 2616.7135)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-36.56), _GLF_FUZZED(6.4), (vec3(1.0))[2]), vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_FUZZED(9.8)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), clamp(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0))), (mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 116.509))), bool(false))))))) * cos(vec3(0.0, 0.0, 0.0)))), (vec3(1.0)), (vec3(1.0)))) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((- -891.065)), _GLF_FUZZED((vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)).t), _GLF_FUZZED((- 9.3))), vec3((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))[_GLF_IDENTITY(0, 0 ^ (0))], (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), bvec3(true, true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-36.56), _GLF_FUZZED(6.4), (vec3(1.0))[2]), vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_FUZZED(9.8)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), clamp(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0) * ((vec3(1.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat3(1.0) * ((vec3(1.0))), (mat3(1.0) * ((vec3(1.0)))) / vec3(1.0, 1.0, 1.0))), min(vec3(_GLF_IDENTITY(mat3(1.0) * ((vec3(1.0))), (mat3(1.0) * ((vec3(1.0)))) / vec3(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(mat3(1.0) * ((vec3(1.0))), (mat3(1.0) * ((vec3(1.0)))) / vec3(1.0, 1.0, 1.0)))))), (vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat3(1.0) * ((vec3(1.0))), (mat3(1.0) * ((vec3(1.0)))) / vec3(1.0, 1.0, 1.0))), min(vec3(_GLF_IDENTITY(mat3(1.0) * ((vec3(1.0))), (mat3(1.0) * ((vec3(1.0)))) / vec3(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(mat3(1.0) * ((vec3(1.0))), (mat3(1.0) * ((vec3(1.0)))) / vec3(1.0, 1.0, 1.0))))))) - vec3(0.0, 0.0, 0.0))), (mat3(1.0) * ((vec3(1.0)))) * cos(vec3(0.0, 0.0, 0.0)))), (vec3(1.0)), (vec3(1.0)))) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((- -891.065)), _GLF_FUZZED((vec2(91.79, -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)).t), _GLF_FUZZED((- 9.3))), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), bvec3(true, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.3)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(vec3(_GLF_FUZZED(-36.56), _GLF_IDENTITY(_GLF_FUZZED(6.4), clamp(_GLF_FUZZED(6.4), _GLF_IDENTITY(_GLF_FUZZED(6.4), 1.0 * (_GLF_FUZZED(6.4))), _GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(6.4), 1.0)), max(float(vec2(_GLF_FUZZED(6.4), 1.0)), float(vec2(_GLF_FUZZED(6.4), 1.0))))))), (vec3(1.0))[2]), vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_FUZZED(9.8)), bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true, false)))), clamp(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0))), (mat3(1.0) * ((vec3(1.0)))) * cos(vec3(0.0, 0.0, 0.0)))), (vec3(1.0)), (vec3(1.0)))) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_IDENTITY(_GLF_FUZZED((- -891.065)), float(mat4(_GLF_IDENTITY(_GLF_FUZZED((- -891.065)), max(_GLF_FUZZED((- -891.065)), _GLF_IDENTITY(_GLF_FUZZED((- -891.065)), mix(float(_GLF_FUZZED(2809.0382)), float(_GLF_FUZZED((- -891.065))), bool(true))))), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), abs(1.0), 0.0))), _GLF_FUZZED((vec2(_GLF_IDENTITY(91.79, 1.0 * (91.79)), -2.0) * mat4x2(1491.5645, 98.41, -92.45, 33.57, -6.3, -3.1, -19.09, -1730.5068)).t), _GLF_FUZZED((- 9.3))), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), bvec3(true, true, true)))))))))))), mat2x3(1.0)), _GLF_struct_13(mat4x3(1.0), mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(477.584, -2025.7363, 7089.3689, -4.1, 5.8, 5.3, _GLF_IDENTITY(-3299.0283, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(-3299.0283, max(-3299.0283, -3299.0283)))), _GLF_IDENTITY(3.4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-537.352) : 3.4)), -1.1)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(mat3x4(_GLF_FUZZED(mat3(477.584, -2025.7363, 7089.3689, -4.1, 5.8, 5.3, _GLF_IDENTITY(-3299.0283, (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(-3299.0283, max(-3299.0283, -3299.0283)))), _GLF_IDENTITY(3.4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-537.352) : _GLF_IDENTITY(3.4, max(3.4, 3.4)))), -1.1)))), (false ? _GLF_FUZZED(mat3(mat3x2(740.859, 2.0, 8.9, -5159.6010, -67.37, -9206.4856))) : mat3(mat3x4(_GLF_FUZZED(mat3(477.584, -2025.7363, 7089.3689, -4.1, 5.8, 5.3, _GLF_IDENTITY(-3299.0283, (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(-3299.0283, max(-3299.0283, -3299.0283)))), _GLF_IDENTITY(3.4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-537.352) : _GLF_IDENTITY(3.4, max(3.4, 3.4)))), -1.1)))))), mat3(mat4(mat3(mat3x4(_GLF_FUZZED(mat3(477.584, -2025.7363, 7089.3689, -4.1, 5.8, 5.3, _GLF_IDENTITY(-3299.0283, (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(-3299.0283, max(-3299.0283, -3299.0283)))), _GLF_IDENTITY(3.4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-537.352) : 3.4)), -1.1)))))))) : _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))))), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(694.860) : 1.0))), uvec4(1u))), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), injectionSwitch.y))), max(float(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), vec3(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.z, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.z));
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, uvec2(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base[0], GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base[1])))) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)), clamp((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)), (true ? _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)), ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u))) | uvec2(0u, 0u)) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)))))))))))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | _GLF_IDENTITY((1u ^ 1u), clamp((1u ^ 1u), (1u ^ 1u), _GLF_IDENTITY((1u ^ 1u), uint(_GLF_IDENTITY(uvec4((1u ^ 1u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec4((1u ^ 1u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4((1u ^ 1u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4((1u ^ 1u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u))))))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)))))), max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)))))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)))))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)))))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) * _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u))))))))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), _GLF_IDENTITY((~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)), ((~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base))) | ((~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)))) * _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (1u ^ 1u))))) / 1u), 1u))))), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) << 0u) : (1u) / 1u))), 1u)))))))))) / uvec2(1u, 1u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, determinant(mat2(cos(0.0), log(1.0), 0.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, determinant(mat2(cos(0.0), log(1.0), 0.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base) >> 0u) + _GLF_struct_replacement_15._f3.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.1)), mix(float(_GLF_FUZZED(6.2)), float(float(_GLF_FUZZED(7.1))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), min(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base))))).y + subgroup_base, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), subgroup_base)), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base, (true ? GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base : _GLF_FUZZED(91864u))))))) | _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base), ~ (~ (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base), ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base)) | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base), max((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base), (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_base)))))))))) << 0u) + ((_GLF_struct_replacement_15._f3.subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false))), true))))), ! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)), _GLF_IDENTITY(! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), true && (_GLF_IDENTITY(! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), (! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false))))) && true)))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, (true) && true), false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false))))), ! (! (! (! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))))))))), true && (_GLF_IDENTITY(! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), ! (_GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))), true)))))))))))))))), ! (! (! (! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, false)))))))))))))))) && true))) && true), false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(260.323)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupvirtual_gidworkgroup_id.y], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1))))), uint(1)), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (_GLF_IDENTITY(uint(1), 1u * (uint(1))))))), uint(1)), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u + (uint(1))), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) - 0))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u)))))), uint(1)), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u + (uint(1))), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) - 0))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u)))))), uint(1)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u + (uint(1))), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) - 0))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u)))))), uint(1)), uint(uvec4(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u + (uint(1))), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) - 0))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u)))))), uint(1)), 1u, 1u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u + (uint(1))), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) - 0))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u)))))), uint(1))))))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1))))), uint(1)), (min(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(((uint(1))), clamp(((uint(1))), _GLF_IDENTITY(((uint(1))), clamp(((uint(1))), ((_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))))), ((uint(1))))), ((uint(1))))) / 1u), (uint(1))))), uint(1))) * 1u), min(min(_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))))))) / 1u), (uint(1))), uint(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1))), (min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(_GLF_IDENTITY(1, (1) | (0 | 0)))))) - 0u), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), uint(1)), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(subgroup_base)))) - 0u)), ((uint(1))) / 1u), (uint(1)))), clamp(0u | _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)))), 0u | _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)))), 0u | _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1))))))), uint(1)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) << 0)), 0u | _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(1, max(1, 1)))), ((uint(1))) / 1u), (uint(_GLF_IDENTITY(1, (1) / 1)))))), uint(1))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
