#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 ivec4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_18 {
 mat4x2 _f0;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 mat2x3 _f3;
 ivec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_16 {
 uint _f0;
 uvec3 _f1;
 mat2x3 _f2;
 mat4x3 _f3;
 mat2x4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 mat4x3 _f1;
 vec3 _f2;
 mat2x4 _f3;
 uvec2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 bvec4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 mat3x2 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 ivec4 _f4;
 int _injected_loop_counter;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_15 _f0;
 uvec2 _f1;
 uvec3 _f2;
 _GLF_struct_17 _f3;
 vec3 _f4;
 _GLF_struct_20 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 mat2 _f1;
 ivec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 bvec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 uint workgroup_base;
 mat2x4 _f1;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 uint _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 mat2 _f1;
 uvec3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 vec4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_10 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 uvec2 _f1;
 vec4 _f2;
 mat4x2 _f3;
 vec3 _f4;
 uint _f5;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 _GLF_struct_1 _f1;
 mat3 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 uint next_virtual_gid;
 ivec2 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(ivec2(-64591, -33421)[0]) : _injected_loop_counter ++)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 ^ _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 1 * ((~ (1)))))))) | 0), 0 + (((1 ^ _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 1 * ((~ (1)))))))) | 0)))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), (_GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) >> 0)) | 0) << 0))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (false) || false)))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((0 | 1), 0 + ((0 | 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7912.3120)), bvec2(true, false))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))));
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3264.3749)))))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3264.3749)))))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), false || (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3264.3749)))))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), false, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)) || false), ! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false), true, false), bvec3(bvec3(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, false))))))))))) && true)) || false)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)) || false))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))) && true, ! (! ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))) && true)) || false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) && true)))))))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(147514u, 149529u, 174313u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))))) | uvec3(0u, 0u, 0u))))))), ((_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))) * uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 1u * (2u))), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) << 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))) << uvec3(0u, 0u, 0u)).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))) && true));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (0 & 91783) + (_injected_loop_counter ++))) + 0))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_7(_GLF_struct_6(mat2x3(1.0), 1u), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.5, -9.5, 2983.7647, 7684.6590)))) : _GLF_FUZZED(mat2(-6.1, 3.3, 9.5, -4.6)))))), (_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))) * mat2(1.0)), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(10.02), _GLF_FUZZED(9.1)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y)))) ? mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-995.061)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))) : _GLF_FUZZED(mat4(2.9, 3580.6564, -0.0, 0.8, -43.19, 984.903, 5097.4170, 5530.8704, _GLF_IDENTITY(-2.7, (-2.7) * 1.0), -6.2, 6.7, 4408.5552, _GLF_IDENTITY(-6.5, float(mat2x3(-6.5, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))), 0.3, -0.4, -9.9))))), vec4(1.0), _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))))), bvec3(bvec3(bvec3(true)))), workgroup_size * workgroup_id, mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-67.26)), (_GLF_IDENTITY(float(_GLF_FUZZED(-67.26)), (false ? _GLF_FUZZED(-8.1) : float(_GLF_FUZZED(-67.26))))) * 1.0), bool(false))))))), _GLF_struct_10(_GLF_struct_9(_GLF_IDENTITY(ivec3(1), (ivec3(1)) >> ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(1.0), ivec4(1), mat2x4(1.0)), bvec2(true), uvec2(1u)), mat3x4(1.0));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base, (_GLF_struct_replacement_11._f2.workgroup_base) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base, (_GLF_struct_replacement_11._f2.workgroup_base) ^ 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base, (_GLF_struct_replacement_11._f2.workgroup_base) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base, (_GLF_struct_replacement_11._f2.workgroup_base) ^ 0u)))) | (_GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base, (_GLF_struct_replacement_11._f2.workgroup_base) ^ 0u))))) + subgroup_base + subgroup_local_id, ~ (~ (_GLF_struct_replacement_11._f2.workgroup_base + subgroup_base + subgroup_local_id))), min(_GLF_struct_replacement_11._f2.workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base, 0u ^ (_GLF_struct_replacement_11._f2.workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_id), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), min((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), 0u), (uvec4(_GLF_FUZZED(workgroup_id), 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)) | uvec4(0u, 0u, 0u, 0u)))) : subgroup_base), ((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_id), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), min((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), 0u), (uvec4(_GLF_FUZZED(workgroup_id), 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)) | uvec4(0u, 0u, 0u, 0u)))) : subgroup_base)) ^ 0u)), 1u, (0u | 0u))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) : subgroup_base)), 1u, (0u | 0u))), (uint(uvec3(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u)) / 1u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), uint(uvec3(subgroup_base, 1u, (0u | 0u)))))) / _GLF_IDENTITY(1u, (1u) ^ 0u))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u, min((uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u, (uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u)))) / 1u, ((_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u, min((uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u, (uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u)))) / 1u) >> 0u)))), (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), min((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)))), 1u, _GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), _GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u))))))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : uint(1u))))), (0u | 0u))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u, min((uint(uvec3(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u, (uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u)))) / 1u)))) / 1u), (~ (_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), 0u | (_GLF_IDENTITY(0u, (0u) / 1u)))) ^ 0u))))))) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u))), (uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u)) / 1u))), (~ (_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, (0u | 0u)))))) / 1u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u))), (uint(uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)), 1u, (0u | 0u)))) / 1u)) / 1u))), (~ (_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, (0u | 0u)))))) / 1u))) | 0u)))) + subgroup_local_id));
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_0(uvec4(1u), _GLF_struct_replacement_11._f2.workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), ivec2(1)), _GLF_struct_4(uvec3(1u), _GLF_struct_1(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(1u))), uvec2(1u), vec4(1.0), mat4x2(1.0), vec3(1.0), 1u), mat3(1.0), _GLF_struct_2(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), ~ (~ (uvec3(1u))))))), min(max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) << uvec3(0u, 0u, 0u))), ~ (~ (uvec3(1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), ~ (~ (uvec3(1u))))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), ~ (~ (uvec3(1u))))))), min(max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), ~ (~ (uvec3(1u))))))), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), ~ (~ (uvec3(1u))))))))))), max(max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)))), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u))))))), min(uvec3(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)))), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u))))))), uvec3(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)))), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u))))))))))), (false ? _GLF_FUZZED(clamp(uvec3(146514u, 176338u, 80164u), subgroup_local_id, subgroup_id)) : (uvec3(1u)))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), ~ (~ (uvec3(1u))))))), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)), (false ? _GLF_FUZZED(uvec3(95645u, 55720u, 91872u)) : (uvec3(1u)))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), ~ (~ (uvec3(1u))))))))))))), _GLF_struct_3(mat3x4(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec4(int(2), 0, 0, 1))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))
      {
       for(int _injected_loop_counter = (0 | (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) * 1.0) > injectionSwitch.y)))))))))
      barrier();
     for(int _injected_loop_counter = (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(_GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_15(mat4x3(1.0), mat3x2(1.0), _GLF_struct_12(mat2x4(1.0), mat4x2(1.0), mat4x3(1.0), bvec4(true), mat3x2(1.0)), _GLF_struct_13(mat3x4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-2.8 + 824.808))), bool(false))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0)))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)) * (1.0))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-42.59) : 1.0)), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-42.59) : _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), (false ? _GLF_FUZZED(-42.59) : 1.0)), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-42.59) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-42.59) : 1.0))))))) * 1.0), abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-42.59) : 1.0))) * 1.0), abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-42.59) : 1.0))) * 1.0), abs(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-57.47)), bool(false)))) * 1.0) : _GLF_FUZZED(-779.506)))))), mat4x3(1.0), vec3(1.0), mat2x4(1.0), uvec2(1u), uvec4(1u)), ivec4(1), 1, _GLF_struct_14(bvec4(true))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), uvec3(1u), _GLF_struct_17(_GLF_struct_16(1u, uvec3(1u), mat2x3(1.0), mat4x3(1.0), mat2x4(1.0), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), 1u, 1u)), ~ (~ (1u)))))), vec3(1.0), _GLF_struct_20(_GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(-3.2, _GLF_IDENTITY(589.672, float(_GLF_IDENTITY(float(589.672), (float(589.672)) / 1.0))), 0.0)))), _GLF_struct_18(mat4x2(1.0)), _GLF_struct_19(ivec4(1), mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))))))), mat2x3(1.0), ivec3(1), ivec2(1)), _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))), uvec3(0u, 0u, 0u) + (~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u))))), uvec3(1u)))))))) | (~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))))) << uvec3(0u, 0u, 0u))))))), (false ? _GLF_FUZZED(uvec3(12382u, 124496u, _GLF_IDENTITY(_GLF_IDENTITY(113540u, (true ? 113540u : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(113540u, (113540u) | (113540u))) | (113540u)))) : uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), ~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))))))))))))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_21._f0._injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, (true ? (0) | _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(-62332))))); _GLF_struct_replacement_21._f0._injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, true)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                {
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED((_injected_loop_counter >> _injected_loop_counter)))))
                                  {
                                   barrier();
                                  }
                                }
                              }
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                             barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mat2(1.0) * ((injectionSwitch) / vec2(1.0, 1.0)))).y))));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))))))), false, true, false))) && true)))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(9.4, -6.1)) : _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-4.6, _GLF_IDENTITY(2491.0610, max(2491.0610, 2491.0610)))) : _GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0))))), tan(vec2(0.0, 0.0)) + (normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0))))))))))))), determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), clamp(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0))))), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))), max(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), clamp(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0))))), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), clamp(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0))))), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))), log(1.0), 0.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-2.4, -4.5, 8.9, 8161.8027)) : mat2(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(_GLF_IDENTITY(0.0, (0.0) - 0.0)))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-7436))), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), (mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))) + vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.8) : 1.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), min(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))) / 1.0), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), clamp(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.8) : 1.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), min(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))) / 1.0), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.8) : 1.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), min(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))) / 1.0), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.8) : 1.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), min(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))) / 1.0), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0))), clamp(vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), float(mat3x4(float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, _GLF_IDENTITY(50.50, clamp(50.50, 50.50, 50.50)), 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), mat4(1.0) * (vec4(0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(exp2(vec4(4.2, 933.208, 15.66, -9.8))))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-954.231) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, length(0.0))))) - 0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(-6.1, 50.50, 63.38, 6791.4576)))), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), min(float(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), float(vec4(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))) - 0.0), 0.0, 0.0)), 0.0, 0.0, 0.0)))))), 0.0, 0.0))))), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))), log(1.0), 0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), determinant(mat2(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.7) : 0.0)), 0.0, 0.0)))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), log(1.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4409.3876))))), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) * 1.0)) > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                              {
                               atomicStore(buf[_GLF_struct_replacement_5._f0.next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(58312), max(_GLF_IDENTITY(_GLF_FUZZED(58312), (_GLF_FUZZED(58312)) | (_GLF_FUZZED(58312))), _GLF_FUZZED(58312))) : 1))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58312) : 1))), ~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58312) : 1))), ~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58312) : 1)))), (clamp(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58312) : 1))), ~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58312) : 1))), ~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58312) : 1))))) >> 0))))) / 1), _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(ivec3(-38092, -89481, -59460).p)))), (clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, (0 | 0))))) | (1)))) ^ 0))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 0))), max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, min(4, 4)))));
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5606.7660)), float(injectionSwitch.y), bool(true)))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, ~ (~ (64)))))), 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 do
  {
   subgroupBarrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (true ? _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), clamp(_GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), (int(ivec4(4, 0, 0, 1))) | (_GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), min(int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))))), int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))))) ^ 0))), 1 * _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(1, ~ (~ (1))) * (~ (4))))), ((~ (_GLF_IDENTITY(~ (4), 1 * _GLF_IDENTITY((~ (4)), ((~ (4))) - 0))))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), clamp(int(ivec4(4, 0, 0, 1)), _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), min(int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))), int(ivec4(4, 0, 0, 1)))))) ^ 0))), 1 * _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(1, ~ (~ (1))) * (_GLF_IDENTITY(~ (4), clamp(~ (4), _GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(80892) : ~ (4))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))))))), max(~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(1, ~ (~ (1))) * (_GLF_IDENTITY(~ (4), clamp(~ (4), _GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(80892) : ~ (4))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4)))))))), ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(1, ~ (~ (1))) * (_GLF_IDENTITY(~ (4), clamp(~ (4), _GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(80892) : ~ (4))), _GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))))))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 1 * _GLF_IDENTITY((~ (4)), ((~ (4))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), 1 * _GLF_IDENTITY((~ (4)), ((~ (4))) - 0))) >> 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 1 * _GLF_IDENTITY((~ (4)), ((~ (4))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), 1 * _GLF_IDENTITY((~ (4)), ((~ (4))) - 0))) >> 0))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) / 1)), 1 * (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), clamp(int(ivec4(4, 0, 0, 1)), _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), max(int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))), int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (_GLF_IDENTITY(ivec4(4, 0, 0, 1), max(ivec4(4, 0, 0, 1), ivec4(4, 0, 0, 1)))) | (ivec4(4, 0, 0, 1)))))))) ^ 0))), 1 * _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(1, ~ (~ (1))) * (~ (4))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0)) << 0)), 1 * _GLF_IDENTITY((~ (4)), ((~ (4))) - 0))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0)) << 0)), 1 * _GLF_IDENTITY((~ (4)), ((~ (4))) - 0)))) ^ 0))) / 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), min(ivec4(4, 0, 0, 1), ivec4(4, 0, 0, 1)))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), min(ivec4(4, 0, 0, 1), ivec4(4, 0, 0, 1)))), ~ (~ (int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), min(ivec4(4, 0, 0, 1), ivec4(4, 0, 0, 1))))))), int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), min(ivec4(4, 0, 0, 1), ivec4(4, 0, 0, 1)))))), int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))))) ^ 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), clamp(int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))))) ^ 0))), (~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), clamp(int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))))) ^ 0)))) | (~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), clamp(int(ivec2(4, 0)), int(ivec2(4, 0)), int(ivec2(4, 0))))), _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), clamp(int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))))) ^ 0)))))) | (~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), clamp(_GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), min(int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))), int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)))))) ^ 0))))), _GLF_IDENTITY(1 * _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(1, ~ (~ (1))) * (~ (4))))), ((~ (_GLF_IDENTITY(~ (4), 1 * _GLF_IDENTITY((~ (4)), ((~ (4))) - 0))))) / 1), (true ? 1 * _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(1, ~ (~ (1))) * (~ (4))))), ((~ (_GLF_IDENTITY(~ (4), 1 * _GLF_IDENTITY((~ (4)), ((~ (4))) - 0))))) / 1) : _GLF_FUZZED(-59600))))))), 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true, false))), true, false, true))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 do
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))));
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))) && true));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
