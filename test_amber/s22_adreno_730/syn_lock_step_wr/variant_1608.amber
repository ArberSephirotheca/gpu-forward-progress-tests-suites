#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), max(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), 0u | (~ (workgroup_base + subgroup_base))))), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)))) >> ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ _GLF_IDENTITY((55175u & 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) : (55175u & 0u)), clamp((false ? _GLF_FUZZED(workgroup_base) : (55175u & 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : (55175u & 0u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : (55175u & 0u)), ((false ? _GLF_FUZZED(workgroup_base) : (55175u & 0u))) | 0u)) << 0u), (false ? _GLF_FUZZED(workgroup_base) : (55175u & 0u))))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u), _GLF_IDENTITY((clamp(subgroup_size, subgroup_size, subgroup_size)) * 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ ((clamp(subgroup_size, subgroup_size, subgroup_size)) * 1u)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec4(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u, 1u), (uvec4(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u, 1u)) * uvec4(1u, 1u, 1u, 1u))))) * 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((clamp(subgroup_size, subgroup_size, subgroup_size)) * 1u))))) / 1u)), max(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), min(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) + 1) | 0u, ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) + 1) | 0u) >> 0u)))), min(~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) | (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) + 1)))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED((true ? virtual_gid : workgroup_size)) : (subgroup_local_id + 1))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), min(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), 0u | (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), min(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), 0u | (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))))))))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) + 1) | 0u))), min(~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1)))))), 0u))) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(! (true), false || (! (true))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((1080.0480)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(atan(84.41, 0.0)))), 1.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) - 0.0))))) > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false)))), ! (! (true))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_base : _GLF_FUZZED(workgroup_size))), subgroup_base))) | 0u), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y)), false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y)), false, true)))))) || false)))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) || false)) && true)), false)))), ! (! (true))) ? _GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)) : _GLF_FUZZED(subgroup_id))), workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(subgroup_base, subgroup_base), (false ? _GLF_FUZZED(35399u) : _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) ^ 0u))))), (max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y)))))), true, _GLF_IDENTITY(false, (false) && true), false)))), ! (! (true))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) >> 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | 0u), (subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), 1.0, 0.0))) > injectionSwitch.y)))))), true, _GLF_IDENTITY(false, (false) && true), false)))), ! (! (true))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(461.458)), bool(false))), 1.0, 0.0))) > injectionSwitch.y)))))), true, _GLF_IDENTITY(false, (false) && true), false)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), false || (! (! (! (true))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), false || (! (! (! (true))))))), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), false || (! (! (! (true))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), false || (! (! (! (true))))))), false)))))))), true && (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), false || (! (! (! (true))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ((! (true))) || false)))), false || (! (! (! (true))))))), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))))), false || (! (! (! (true))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (true)), ((! (true))) || false)), false || (! (! (! (true))))))), false))))))))))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) >> 0u), 1u, 1u)) | (uvec3(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y)))))), true, _GLF_IDENTITY(false, (false) && true), false)))), ! (! _GLF_IDENTITY((true), true && ((true))))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), (max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y)))) && true)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(bool(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y)))) && true)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false, (false) && true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(bool(bvec4(bool(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y)))) && true)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false, (false) && true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))), ! (! (true))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) >> 0u), 1u, 1u))))), ~ (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), (_GLF_IDENTITY(true, ! (! (true))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base + subgroup_base), (max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) | (workgroup_base)))) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_id)), max((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)) : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))))))), workgroup_base + subgroup_base)) + 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base + subgroup_base), (max(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base + subgroup_base))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, 0u))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, 1u, 0u)), (uint(uvec4(subgroup_base, 0u, 1u, 0u))) / 1u)), _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))), ! (! (_GLF_IDENTITY((true), _GLF_IDENTITY(false, (false) && true) || ((true)))))))) ? _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u) : _GLF_FUZZED(subgroup_id))), workgroup_base + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base)))))) << 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 1u * (subgroup_base))) | 0u)) | (subgroup_base))))), (0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))) | 0u)) | (subgroup_base)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 1u * _GLF_IDENTITY((subgroup_base), ((subgroup_base)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)) | (subgroup_base), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))) | 0u)) | (subgroup_base), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))) | 0u)) | (subgroup_base), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))) | 0u), (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))) | 0u)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (subgroup_base), (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u * (subgroup_base), (1u * (subgroup_base)) | 0u))) | 0u)) | (subgroup_base)))))) << 0u)))))))) + 0u)), max(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, false))), (injectionSwitch.x > injectionSwitch.y)))))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id)), uint(uvec3((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && true)) ? workgroup_base + subgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u) - (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) / 1u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) / 1u, max((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u) - (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) / 1u, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, 0u | (6u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) + (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))))))) / 1u)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id))))) ^ 0u) - _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))) << _GLF_IDENTITY(uint(6u), uint(6u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))) << _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(~ ((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))) << _GLF_IDENTITY(uint(6u), uint(6u)))), ~ ((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))) << _GLF_IDENTITY(uint(6u), uint(6u)))), ~ ((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))) << _GLF_IDENTITY(uint(6u), uint(6u)))))))))) / 1u))))), 0u, 0u)))), workgroup_base + subgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((1u | 0u), min(_GLF_IDENTITY((1u | 0u), ((1u | 0u)) / 1u), _GLF_IDENTITY((1u | 0u), uint(uint((1u | 0u)))))) ^ 1u) ^ (subgroup_size), (((1u | _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) ^ 1u) ^ (subgroup_size)) - 0u))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)) | 0u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)) | 0u, uint(uvec3((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)) | 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ (_GLF_IDENTITY(0u | 0u, clamp(0u | 0u, 0u | 0u, 0u | 0u)))), 0u)), 0u))), 1u, 1u))))), (false ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(((1u | 0u) ^ 1u) ^ (subgroup_size), (((1u | 0u) ^ 1u) ^ (subgroup_size)) - 0u)), clamp((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(((1u | 0u) ^ 1u) ^ (subgroup_size), (((1u | 0u) ^ 1u) ^ (subgroup_size)) - 0u)), _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(((1u | 0u) ^ 1u) ^ (subgroup_size), (((1u | 0u) ^ 1u) ^ (subgroup_size)) - 0u)), 1u * ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(((1u | 0u) ^ 1u) ^ (subgroup_size), (((1u | 0u) ^ 1u) ^ (subgroup_size)) - 0u)))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(((1u | 0u) ^ 1u) ^ (subgroup_size), (((1u | 0u) ^ 1u) ^ (subgroup_size)) - 0u))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 0u, 1u, 0u))) | 0u))) % subgroup_size), (true ? ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 0u, 1u, 0u))) | 0u))) % subgroup_size) : _GLF_FUZZED(subgroup_base))) >> 0u)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))))))), max(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(3), int(3))))))), (_GLF_IDENTITY(1, (1) ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (1 | 0) * (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) * 1)) / int(_GLF_ONE(1.0, injectionSwitch.y))))), int(3)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (1 | 0) * (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) * 1)) / int(_GLF_ONE(1.0, injectionSwitch.y))))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (1 | 0) * (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) * 1)) / int(_GLF_ONE(1.0, injectionSwitch.y))))), int(3))) + 0), 1, 1))), min(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))), 0 >> _GLF_IDENTITY(int(3), int(3))))))) * 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (false ? _GLF_FUZZED(-44682) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(37427))))), min(1, 1))))), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), ~ (~ (_GLF_IDENTITY(min(1, 1), (min(1, 1)) ^ 0)))), min(min(1, 1), min(1, 1)))))) << 0)))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + 1 : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(subgroup_local_id)), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(subgroup_local_id))) << 0u))))) % subgroup_size), ~ (~ _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), max((((subgroup_local_id + 1) % subgroup_size)), (((subgroup_local_id + 1) % subgroup_size))))))))) / 1u);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) * 1u), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], buf[virtual_gid]), (clamp(buf[virtual_gid], buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(subgroup_size)), uint(uvec3(_GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(subgroup_size)), uint(uint((true ? virtual_gid : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u)), (~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u))) | (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u)), (~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u))) * uvec2(1u, 1u))))))))])) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], buf[virtual_gid]), (clamp(buf[virtual_gid], buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(subgroup_size)), uint(uvec3(_GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(subgroup_size)), uint(uint((true ? virtual_gid : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u)), (~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u))) | (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u)), (~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u))) * uvec2(1u, 1u))))))))])) * 1u)), (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], buf[virtual_gid]), (clamp(buf[virtual_gid], buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(subgroup_size)), uint(uvec3(_GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(subgroup_size)), uint(uint((true ? virtual_gid : _GLF_FUZZED(subgroup_size))))), 1u, 1u)))), 0u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u)), (~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u))) | (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u)), (~ (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))), 0u))) * uvec2(1u, 1u))))))))])) * 1u))) << 0u)) << 0u), 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) * 1), 2)), 2)), (false ? _GLF_FUZZED(-38570) : ~ (max(_GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), clamp(_GLF_IDENTITY(min(2, 2), (true ? min(2, 2) : _GLF_FUZZED(54825))), min(2, 2), _GLF_IDENTITY(min(2, 2), int(ivec2(min(2, 2), 0)))))), 2))))))));
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(4, (4) | (4))), 0, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, min(1, 1))), (4) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * 1)) << (0 >> _GLF_IDENTITY(int(1), int(1))))))), 0, 1), (ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, min(1, 1))), (4) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * 1)) << (0 >> _GLF_IDENTITY(int(1), int(1))))))), 0, 1)) - ivec3(0, 0, 0))), clamp(_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4))), 0, 1)), max(int(ivec3(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4))), 0, 1)), int(ivec3(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4))), 0, 1)))), int(ivec3(int(_GLF_IDENTITY(4, (4) | (4))), 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (0 << _GLF_IDENTITY(int(4), int(4))) / 1))), 0 << _GLF_IDENTITY(int(4), int(4)))))))), int(ivec3(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((4) | (4)), 0 | (~ ((4) | (4)))), (false ? _GLF_FUZZED(91501) : ~ (_GLF_IDENTITY((4) | (4), 0 ^ ((_GLF_IDENTITY(4, (4) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (4)))))))))), 0, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | 0) : _GLF_FUZZED(52945)))))))), 1 * (~ (_GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(4, (4) | (4))), 0, 1)), clamp(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), int(ivec3(_GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4))), 0, 0)))) | (clamp(4, 4, 4))))) | (4))))), 0, 1)), int(ivec3(int(_GLF_IDENTITY(4, (4) | (4))), 0, 1)), int(ivec3(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) * 1)))) | (4))), 0, 1)))))))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
