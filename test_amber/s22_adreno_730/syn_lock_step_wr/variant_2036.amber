#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-47.38), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))) - 0.0), _GLF_FUZZED((-93.18 * vec4(2.8, -319.982, -81.01, -36.99).w))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0)), mix(vec2((vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0)))[1]), vec2(_GLF_FUZZED(82.70), _GLF_FUZZED(-6347.0792)), bvec2(false, false)))).x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, abs(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, abs(0.0), 1.0, 0.0)))) > injectionSwitch.y))))) || false)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), false, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (false), true, false, true)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))) < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1197.8929) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) ^ uvec3(0u, 0u, 0u)))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.0)), bool(false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(92.08) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, false)))), false)), bool(bvec3(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, false)))), false)), false, true)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, (false ? _GLF_FUZZED(-16.58) : (injectionSwitch.y) / 1.0)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9337.8965, -2166.2261)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), false, false, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? injectionSwitch.y : _GLF_FUZZED(1.1)))))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(false, false))), true, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-6698.1020 - 850.480)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.4)), bvec2(true, false))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true)), true, false, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0))), mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0))))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), bvec2(true, true)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(vec3((injectionSwitch.y), sin(0.0), 0.0))) / 1.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0))), mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0))))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), bvec2(true, true)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(vec3((injectionSwitch.y), sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))) / 1.0)))) || false), true, false, true))), ! _GLF_IDENTITY((! (bool(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8669.0996) : 0.0))), (vec3(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8669.0996) : 0.0)))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), mix(vec3((vec3(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(1.5), (vec3(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[2]), vec3(_GLF_FUZZED(8.1), (vec3(vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(1780.1522)), bvec3(false, true, false)))) - vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec3(-6.6, 6.9, _GLF_IDENTITY(-76.88, float(vec4(-76.88, sin(0.0), 1.0, 1.0))))) : vec3(_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), mix(vec3((vec3(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(1.5), (vec3(vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(8.1), (vec3(vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(1780.1522)), bvec3(false, true, false)))), (false ? _GLF_FUZZED(vec3(-123.369, -424.335, -541.411)) : (_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), mix(vec3((vec3(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(1.5), (vec3(vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(8.1), (vec3(vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(1780.1522)), bvec3(false, true, false)))))) - vec3(0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])), 0.0)))[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(_GLF_IDENTITY(-3889.6888, clamp(_GLF_IDENTITY(-3889.6888, float(mat2x4(-3889.6888, 1.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0))), -3889.6888, _GLF_IDENTITY(-3889.6888, (_GLF_IDENTITY(-3889.6888, 0.0 + (-3889.6888))) - 0.0))))), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1))]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true))) / vec2(1.0, 1.0))), (true ? (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(_GLF_IDENTITY(-3889.6888, clamp(_GLF_IDENTITY(-3889.6888, float(mat2x4(-3889.6888, 1.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0))), -3889.6888, _GLF_IDENTITY(-3889.6888, (_GLF_IDENTITY(-3889.6888, 0.0 + (-3889.6888))) - 0.0))))), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1))]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true))) / vec2(1.0, 1.0))) : _GLF_FUZZED((injectionSwitch)))) - vec2(0.0, 0.0)))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), mix(vec3((vec3(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(1.5), (vec3(vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(8.1), (vec3(vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(1780.1522)), bvec3(false, true, false)))) - vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec3(-6.6, 6.9, -76.88)) : vec3(_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), mix(vec3((vec3(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(1.5), (vec3(vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(8.1), (vec3(vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(1780.1522)), bvec3(false, true, false)))) - vec3(0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), 0.0)))[1]), bvec2(true, true))) / vec2(1.0, _GLF_IDENTITY(1.0, round(length(normalize(round(length(normalize(vec3(1.0, 1.0, 1.0))))))) * (1.0)))), (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), _GLF_IDENTITY(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), vec2(mat4x2(_GLF_IDENTITY(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), (vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1])) / vec2(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bvec2(true, true))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).x > injectionSwitch.y), true, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY(vec3(vec3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6368.1444)), bool(false))))), mix(vec3((vec3(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(1.5), (vec3(vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(8.1), (vec3(vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(1780.1522)), bvec3(false, true, false)))) - vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec3(-6.6, 6.9, -76.88)) : vec3(_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), mix(vec3((vec3(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(1.5), (vec3(vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(8.1), (vec3(vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(1780.1522)), bvec3(false, true, false)))) - vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), mix(vec2((vec2(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))[0], (vec2(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.4) : 0.0))) - 0.0), 1.0, 0.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))[1]), vec2(_GLF_FUZZED(-717.061), _GLF_FUZZED(-39.21)), bvec2(false, false)))))), 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], min((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]))), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && true), false, false), true)))))) || false), true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.2)), vec2(_GLF_FUZZED(3954.4016), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch, injectionSwitch))[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | 0)))))])), 0.0)))[1]), bvec2(true, true))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))) - vec2(0.0, 0.0)))).x > injectionSwitch.y), true, false, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), mix(vec3((vec3(vec3(injectionSwitch, 0.0)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(1.5), (vec3(vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(8.1), (vec3(vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(1780.1522)), bvec3(false, true, false)))) - vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec3(-6.6, 6.9, -76.88)) : vec3(_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY(vec3(vec3(injectionSwitch, 0.0)), mix(vec3((vec3(vec3(injectionSwitch, 0.0)))[0], _GLF_FUZZED(1.5), (vec3(vec3(injectionSwitch, 0.0)))[2]), vec3(_GLF_FUZZED(8.1), (vec3(vec3(injectionSwitch, 0.0)))[1], _GLF_FUZZED(1780.1522)), bvec3(false, true, false)))) - vec3(0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[_GLF_IDENTITY(0, (0) | 0)], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, _GLF_IDENTITY(true, true && (true)))), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), 0.0)))[1]), bvec2(true, true))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).x > injectionSwitch.y), true, false, true)), false, true, true))), false))))), true, false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1] : _GLF_FUZZED(-7.9)))) - _GLF_ZERO(0.0, injectionSwitch.x))), bvec2(true, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(degrees(injectionSwitch)) : vec2(1.0, 1.0)))))).x > injectionSwitch.y)), true, false, true))))), false || ((! (bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1] : _GLF_FUZZED(-7.9)))) - _GLF_ZERO(0.0, injectionSwitch.x))), bvec2(true, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(degrees(injectionSwitch)) : vec2(1.0, 1.0)))))).x > injectionSwitch.y)), true, false, true))))))), false || (_GLF_IDENTITY((! (bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)) : _GLF_FUZZED(injectionSwitch))), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], _GLF_IDENTITY((_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1] : _GLF_FUZZED(-7.9)))) - _GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY((_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1] : _GLF_FUZZED(-7.9)))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + ((_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))))[1], (true ? (vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1] : _GLF_FUZZED(-7.9)))) - _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0))), bvec2(true, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(degrees(injectionSwitch)) : vec2(1.0, 1.0)))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)) : _GLF_FUZZED(injectionSwitch))), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], _GLF_IDENTITY((_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1] : _GLF_FUZZED(-7.9)))) - _GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY((_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1] : _GLF_FUZZED(-7.9)))) - _GLF_ZERO(0.0, injectionSwitch.x), 0.0 + ((_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))))[1], (true ? (vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1] : _GLF_FUZZED(-7.9)))) - _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0))), bvec2(true, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(degrees(injectionSwitch)) : vec2(1.0, 1.0)))))).x), float(_GLF_FUZZED(874.800)), bool(false))) > injectionSwitch.y)), true, false, true))))), false || ((! (bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED((7.7 + (vec2(5.3, -8036.7683) + 5.4))))), 0.0)))[0], _GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)))[1], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(1823.8686))))), 0.0)))[1] : _GLF_FUZZED(-7.9)))) - _GLF_ZERO(0.0, injectionSwitch.x))), bvec2(true, true))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(degrees(injectionSwitch)) : vec2(1.0, 1.0)))))).x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, (true) || false)))))))))), ! (! ((! (bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))))[0], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / sqrt(1.0)), injectionSwitch[1])), 0.0)))[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-2075.3444), _GLF_FUZZED(-3889.6888)), vec2((vec2(vec3(injectionSwitch, 0.0)))[0], _GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[1])), 0.0)))[1], max((vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[1])), 0.0)))[1], (vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[1])), 0.0)))[1]))), bvec2(true, true))) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), true, false, true)))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), 0u | ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), clamp(_GLF_IDENTITY((~ (subgroup_size)), clamp(_GLF_IDENTITY((~ (subgroup_size)), 1u * (_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size)))))), _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) ^ 0u), (~ (subgroup_size)))), (~ (subgroup_size)), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (1u ^ 1u) + (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (1u ^ 1u) + (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (1u ^ 1u) + (subgroup_size)))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (1u ^ 1u) + (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (1u ^ 1u) + (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (1u ^ 1u) + (subgroup_size)))))))), ((~ (subgroup_size))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) >> 0u), subgroup_size)))));
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0, min(0, 0)))) | (4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1241.2784)), bool(false))), 0.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2x3(vec2(0.0, 0.0), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0)))).x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), false)), bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), false)))))))))), true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), false || (bool(bvec2(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0))))))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), float(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * cos(vec2(0.0, 0.0))).x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-88.58)), bool(false))), 1.0, 0.0, 1.0)))))))) > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || _GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
