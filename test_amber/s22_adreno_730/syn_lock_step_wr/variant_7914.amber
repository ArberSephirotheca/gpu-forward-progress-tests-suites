#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 int _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 mat2x3 _f3;
 vec2 _f4;
 mat4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 uint _f1;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 mat4x3 _f1;
 mat3x4 _f2;
 float _f3;
 uint _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 ivec2 _f1;
 bvec4 _f2;
 vec2 _f3;
 mat2 _f4;
 uint _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 uvec3 _f1;
 bvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_0 {
 float _f0;
 float _f1;
 uvec2 _f2;
 uint _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 bvec3 _f1;
 _GLF_struct_1 _f2;
 mat2x3 _f3;
 _GLF_struct_2 _f4;
 mat3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 vec3 _f1;
 uint _f2;
 uint subgroup_local_id;
 _GLF_struct_7 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-0.3 / -3627.1925))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true, true)), true, true, false))))))))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-0.3 / -3627.1925))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-0.3 / -3627.1925))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))).y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-0.3 / -3627.1925))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true, true)), true, true, false))))))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-0.3 / -3627.1925))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true, true)), true, true, false))))))))) > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-0.3 / -3627.1925))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-0.3 / -3627.1925))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))).y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(_GLF_struct_0(1.0, 1.0, uvec2(1u), 1u, vec2(1.0)), bvec3(true), _GLF_struct_1(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))), uvec3(1u), bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))), mat3x2(1.0)), mat2x3(1.0), _GLF_struct_2(mat2x4(1.0), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1), ivec2(1, 1) * (ivec2(1)))), ~ (~ (_GLF_IDENTITY(ivec2(0, 0) | (ivec2(1)), min(ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, min(1, 1)))), ivec2(0, 0) | (ivec2(1)))))))), bvec4(true), vec2(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), 1u, ivec2(1)), _GLF_IDENTITY(mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4.1 / 303.905)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch)).y)) ? mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))) : _GLF_FUZZED(mat3(9.8, 841.442, 681.745, -9166.5220, -4658.6482, 83.43, -4209.1596, 67.60, -4.2)))), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / cos(vec3(0.0, 0.0, 0.0)))), vec3(1.0), _GLF_IDENTITY(1u, max(1u, 1u)), gl_SubgroupInvocationID, _GLF_struct_7(_GLF_struct_4(mat4(1.0), mat4x3(1.0), mat3x4(1.0), 1.0, 1u, mat3x2(1.0)), mat4x2(1.0), mat4x3(1.0), _GLF_struct_5(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(mat3x2(-88.30, 3938.2375, 9927.1349, -0.5, -5.6, 4.2))) : mat3(1.0))), 1u), _GLF_struct_6(1, mat4x3(1.0), mat2x3(1.0), mat2x3(1.0), vec2(1.0), mat4(1.0), mat4x3(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))))))) || false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false), true), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))), false || (bool(bool(bool(_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-187.751)), vec2(_GLF_FUZZED(-5591.6730), (injectionSwitch)[1]), bvec2(false, true))))).y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9974.0881)), float(0.0), bool(true))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sin(0.0), 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(6569.0328))), 0.0), (vec2(1.0, 0.0)) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), vec2(sin(0.0), 1.0))), 1.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0))), _GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(47.97) : tan(0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))) > injectionSwitch.y)))), true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), (bool(bvec4(true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id))))), max(workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(uint(false)) : workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)) * workgroup_id)), workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * workgroup_id)), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(subgroup_size))), workgroup_size * workgroup_id)), workgroup_size * workgroup_id), (_GLF_IDENTITY(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) | 0u)) / 1u)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), workgroup_size * workgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u), min(uvec4(workgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u), uvec4(workgroup_size, 0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))))))) * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id)) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (_GLF_IDENTITY(uint(uvec2(0u, 1u)), (true ? uint(uvec2(0u, 1u)) : _GLF_FUZZED(subgroup_size)))) - 0u)) >> _GLF_IDENTITY(uint(7u), uint(7u))), (1u | _GLF_IDENTITY(0u, ~ (~ (0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), 0u + (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), min(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0))), 0.0)), injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), (min(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) | 0u)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(160095u) : _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), (min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u), workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id))), (min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size * workgroup_id)) : _GLF_FUZZED(subgroup_size))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), (min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) ^ 0u))))) | 0u))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(9.3)), bool(false)))) - 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))) > injectionSwitch.y)) ? _GLF_FUZZED(160095u) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), clamp((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) + 0u), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) | (_GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), max((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), (min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), clamp((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) + 0u), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) | (_GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), max((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), (min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), clamp((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) + 0u), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) | (_GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), max((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), (min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x))))), (uint(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), clamp((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) + 0u), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) | (_GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), max((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), (min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)))))) | (uint(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), clamp((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) + 0u), _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), ((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id))))))) | (_GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), max((min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))), (min(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) ^ 0u))), 0u | (workgroup_size * workgroup_id)))))))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)))))))) << 0u))))) * 1u)))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, false)), false || (bool(bvec3(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(false))))), bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))))) || false))) && true)) && _GLF_IDENTITY(true, bool(bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(2.6, 4.1)) : injectionSwitch)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))), bool(bvec3((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))), false, false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), true, false), true))))))), bool(bvec3(bool(bvec3(_GLF_IDENTITY((! (false)), true && ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(! (false), false, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), abs(0.0), 1.0, 0.0, cos(0.0), tan(0.0)), (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), abs(0.0), 1.0, 0.0, cos(0.0), tan(0.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), abs(0.0), 1.0, 0.0, cos(0.0), tan(0.0)), (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), abs(0.0), 1.0, 0.0, cos(0.0), tan(0.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)) && true)))), true))))))), true, false)), true, false))))) || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), int(ivec2(_GLF_IDENTITY(1, int(int(1))), 0))))), 1, 1, 0))), 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((_GLF_struct_replacement_8.subgroup_local_id + 1)), min(_GLF_IDENTITY(~ ((_GLF_struct_replacement_8.subgroup_local_id + 1)), clamp(~ ((_GLF_struct_replacement_8.subgroup_local_id + 1)), ~ ((_GLF_struct_replacement_8.subgroup_local_id + 1)), ~ ((_GLF_struct_replacement_8.subgroup_local_id + 1)))), _GLF_IDENTITY(~ ((_GLF_struct_replacement_8.subgroup_local_id + 1)), (~ (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), _GLF_IDENTITY((true ? (_GLF_struct_replacement_8.subgroup_local_id + 1) : _GLF_FUZZED((++ subgroup_base))), 0u + ((true ? (_GLF_struct_replacement_8.subgroup_local_id + 1) : _GLF_FUZZED((++ subgroup_base)))))))))) ^ 0u))))) % subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size))) >> 0u), clamp(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u) % subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size), (min(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(71782))))) | 0u) % subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, 1 * (8))), int(8))))) % subgroup_size)) - 0u))) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - _GLF_IDENTITY(0u, (0u) | (0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) - _GLF_IDENTITY(0u, (0u) | (0u)), min((0u) - _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY((0u) - _GLF_IDENTITY(0u, (0u) | (0u)), min((0u) - _GLF_IDENTITY(0u, (0u) | (0u)), (0u) - _GLF_IDENTITY(0u, (0u) | (0u)))))))), ((0u) - _GLF_IDENTITY(0u, (0u) | (0u))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) / 1u)) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false, false))))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), 0u | ((_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))))))) % subgroup_size)), (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, ~ (~ (_GLF_struct_replacement_8.subgroup_local_id))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (_GLF_struct_replacement_8.subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (_GLF_struct_replacement_8.subgroup_local_id + 1)), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (_GLF_struct_replacement_8.subgroup_local_id + 1))) - 0u)), uint(uvec2(uint(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (_GLF_struct_replacement_8.subgroup_local_id + 1)), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && (true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (_GLF_struct_replacement_8.subgroup_local_id + 1))) - 0u)), 1u)))))) % subgroup_size))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), ~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), ~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), ~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))), 0u))) : _GLF_FUZZED(13939u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size))) | 0u), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size))) | 0u), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)))), 1u, 1u)))) + _GLF_IDENTITY(0u, (0u) | 0u))) >> 0u)) >> 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1))) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) | (_GLF_struct_replacement_8.subgroup_local_id))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(0u ^ (2u), (0u ^ (2u)) >> 0u))), uint(2u)))) + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), (false ? _GLF_FUZZED(uint(-12759)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), clamp(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)))))), (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size))) | 0u), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, 0u ^ (2u)), (_GLF_IDENTITY(_GLF_IDENTITY(2u, 0u ^ (2u)), clamp(_GLF_IDENTITY(2u, 0u ^ (2u)), _GLF_IDENTITY(2u, 0u ^ (2u)), _GLF_IDENTITY(2u, 0u ^ (2u))))) | (_GLF_IDENTITY(2u, 0u ^ (2u))))), uint(2u)))) + 1) % subgroup_size))))) + 0u)) >> 0u)) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) | (_GLF_struct_replacement_8.subgroup_local_id + 1))) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, min(_GLF_struct_replacement_8.subgroup_local_id + 1, _GLF_struct_replacement_8.subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), ~ (~ (uint(_GLF_IDENTITY(2u, 0u ^ (2u)))))), uint(2u)))) + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, max(_GLF_struct_replacement_8.subgroup_local_id, _GLF_struct_replacement_8.subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) | 0u)) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1)))) % subgroup_size))) | 0u), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size))))) + 0u)) >> 0u)) >> 0u, uint(uvec2((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, 0u ^ (2u)), uint(uvec2(_GLF_IDENTITY(2u, 0u ^ (2u)), 1u)))), uint(2u)))) + 1) % subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))), uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u))))))) + 1) % subgroup_size)), (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (true ? _GLF_struct_replacement_8.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size))), _GLF_struct_replacement_8.subgroup_local_id + 1, _GLF_struct_replacement_8.subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size))) | 0u), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))) + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), 0u | (uint(2u))), uint(2u)))))) + 1) % subgroup_size))))) + 0u)) >> 0u)) >> 0u, 0u)))) / 1u) : _GLF_FUZZED(uvec3(179358u, 17953u, 53858u)[1])))), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, ((_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - sin(0.0)), injectionSwitch.x)))) % subgroup_size) + 0u), min((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size))) >> 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(1), max(uint(1), uint(1)))), max((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), (_GLF_IDENTITY(max(uint(1), uint(1)), (max(uint(1), uint(1))) | (max(uint(1), uint(1))))) ^ 0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) << 0)), max(uint(1), uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(90218)))))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), false, true, false)))) && true)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(-72787, ~ (~ (_GLF_IDENTITY(-72787, max(_GLF_IDENTITY(-72787, int(ivec4(-72787, 0, 0, 0))), -72787)))))) : 64)))))), 2);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false || (! (_GLF_DEAD(false))), (false || (! (_GLF_DEAD(false)))) && true)))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), (true && (_GLF_IDENTITY(false, false || (false)))) || false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-64.59), mix(float(_GLF_FUZZED(8.4)), float(_GLF_FUZZED(-64.59)), bool(true)))), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false)), float(mat2x3(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false)), tan(0.0), exp(0.0), exp(0.0), 0.0, 1.0)))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.8) : injectionSwitch.y))))))), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (false)))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0) + (_GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true)))))))))) < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-603.833) : injectionSwitch.y)) : _GLF_FUZZED(-3602.2307)))))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat3x2(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0))))) : _GLF_FUZZED((+ mat2(6404.3194, -20.02, 60.19, -26.39))))), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false)), max(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false)), float(vec2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false)), 0.0))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false)))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))) && (_GLF_IDENTITY(false, false || (false))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), (false ? _GLF_FUZZED((mat2(-5.9, 0.3, 10.60, -645.328) - 298.412)) : transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))))) < injectionSwitch.y))), true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < injectionSwitch.y))), true)), false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))), min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))) < injectionSwitch.y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-64.59)), bool(false))), 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), true))))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false))))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! (! ((_GLF_IDENTITY(false, ! (! (false)))) && true)))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((-9075.4217 - 755.667))), bool(false)))), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(float(57227))), bvec2(false, false))).y, float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), bool(bvec4(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && true))), (bool(bool(_GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && true)))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(79.40), _GLF_FUZZED(-153.024)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.8))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.0)), bool(false)))))))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), false, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), false, true)))), false, false))))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), false, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false), true), false, true)))), false, false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).x, 0.0)), (float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])).x, 0.0))) - 0.0)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(44.26) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-24.68)), bool(false))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
