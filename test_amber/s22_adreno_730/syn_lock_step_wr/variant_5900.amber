#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-507.775) : 0.0)) : _GLF_FUZZED(862.077))), injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uvec4 GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true, false))))))
  barrier();
 GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), true && (bool(bvec4(false, false, false, true)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0)))) + vec2(0.0, 0.0), vec2(_GLF_IDENTITY(vec4((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0)))) + vec2(0.0, 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(sin(0.0), abs(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), abs(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), clamp(vec4((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0)))) + vec2(0.0, 0.0), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(sin(0.0), abs(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), abs(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))), vec4((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0)))) + vec2(0.0, 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7769.5390)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), abs(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), abs(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), vec4((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0)))) + vec2(0.0, 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mat3(1.0) * (vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(sin(0.0), abs(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), abs(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-19637), clamp(_GLF_FUZZED(-19637), _GLF_FUZZED(-19637), _GLF_IDENTITY(_GLF_FUZZED(-19637), (_GLF_FUZZED(-19637)) | (1 ^ 1)))) : _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) << 0))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), max(float(mat4x3(injectionSwitch.x, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), float(mat4x3(injectionSwitch.x, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0))))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), max(float(mat4x3(injectionSwitch.x, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), float(mat4x3(injectionSwitch.x, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0))))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), max(float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), abs(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(1.0), 1.0)), float(mat4x3(injectionSwitch.x, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.y = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(82.44)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-8.7))))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(4)), (int(int(4))) * 1)), (int(_GLF_IDENTITY(int(int(4)), (int(int(4))) * 1))) | 0)), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-53203) : int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.z = _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u, min((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u))) ^ 0u)), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))) ^ 0u) : _GLF_FUZZED(subgroup_size)))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(ivec3(1, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.z = GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.z;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! ((_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))), ((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! ((_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))), ((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! ((_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))), ((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false))))) || false)))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false)), ((_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false))) && true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false, bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false, false), bvec2(bvec4(bvec2(((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false, false), false, true))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (bool(false)))), _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false, bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false, false), bvec2(bvec4(bvec2(((_GLF_IDENTITY(bool(false), false || (bool(false))))) || false, false), false, true))))))))), false, true)))), true))), true))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.4)), bool(false)))) + 0.0) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = (1 & ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   do
    {
     for(int _injected_loop_counter = (0 & -19947); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy.x = subgroup_local_id;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((0 << _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w = GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.z, _GLF_IDENTITY((GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w = GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.z), ((GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w = GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.z)) * 1u) << 0u);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -84992)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w = GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id) / uvec4(1u, 1u, 1u, 1u)), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id) / uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id) / uvec4(1u, 1u, 1u, 1u)))).w, (true ? GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w : _GLF_FUZZED(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w))), clamp(workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w, (true ? GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w : _GLF_FUZZED(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w))), workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w, _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id)).w : _GLF_FUZZED(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w)), clamp(_GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w : _GLF_FUZZED(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w)), ((true ? GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w : _GLF_FUZZED(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w))) / 1u), (true ? GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w : _GLF_FUZZED(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w)), (true ? GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w : _GLF_FUZZED(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w))))), workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w, (true ? GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.w : _GLF_FUZZED(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.w)))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.y * GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x = subgroup_base, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x = subgroup_base)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x = subgroup_base, (GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x = subgroup_base) ^ 0u)) << 0u);
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0)))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.x = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x, min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id, (GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id) / uvec3(1u, 1u, 1u)).x, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x, min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.x))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(bvec3(false, true, false), true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.x + GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy.x;
 do
  {
   GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.y = virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy.y = GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_basevirtual_gidworkgroup_id.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
      barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.x + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy) << uvec2(0u, 0u)), max(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy) << uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy) << uvec2(0u, 0u)))).x, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy) << uvec2(0u, 0u)).x) << 0u) + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.z), ~ (~ (workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.x + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id) >> uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)).xy) << uvec2(0u, 0u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id) >> uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)).xy) << uvec2(0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy) << uvec2(0u, 0u)).x), 0u | ((_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy) << uvec2(0u, 0u)).x))) << 0u, 0u ^ ((_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy) << uvec2(0u, 0u)).x) << 0u))) + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_12subgroup_basesubgroup_idsubgroup_sizeworkgroup_id.z))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
    }
  }
 uint read = _GLF_IDENTITY(atomicLoad(buf[GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy.y], 4, 64, 2), (atomicLoad(buf[GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy.y], _GLF_IDENTITY(4, (4) ^ 0), 64, 2)) | 0u);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), sqrt(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0)))))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))) * (injectionSwitch)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0)))) < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))
                barrier();
               subgroupBarrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.7) : _GLF_FUZZED(3.1)))), float(0.0), bool(true))), 1.0, 0.0, 1.0, sin(0.0), length(vec3(0.0, 0.0, 0.0)), log(1.0), 0.0, 0.0)), max(float(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true))), 1.0, 0.0, 1.0, sin(0.0), length(vec3(0.0, 0.0, 0.0)), log(1.0), 0.0, 0.0)), float(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(0.0), bool(true))), 1.0, 0.0, 1.0, sin(0.0), length(vec3(0.0, 0.0, 0.0)), log(1.0), 0.0, 0.0))))), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3197.7478)), bool(false))), injectionSwitch.x, injectionSwitch.x))), 0.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0))))), min(float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0))))), float(mat3x2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0)))))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(inversesqrt(-4304.2794)) : _GLF_ZERO(0.0, injectionSwitch.x))), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1))))))))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0))), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, _GLF_IDENTITY(1.9, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(7.1) : 1.9)), 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1))))), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.664) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(6.7, min(6.7, 6.7))))))), float(vec3(0.0, 0.0, 1.0)))) + 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), mix(float(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), float(_GLF_FUZZED(4.5)), bool(false))))), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, _GLF_IDENTITY(3.5, float(mat2x3(_GLF_IDENTITY(3.5, (true ? _GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)) : _GLF_FUZZED(139.736))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0))), 474.730, -46.41, -3.4, -0.1))))), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.664) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.7))))), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-186.853)), bool(false))))) + 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (false ? _GLF_FUZZED(mat3(209.874, -6.0, 3.6, -4254.8583, -251.122, -458.126, 7179.1843, 8.5, 99.26)) : mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.664) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.7))))), _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-186.853)), bool(false))))) + 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-7.3) : 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1))))), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), min(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.664) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.7))))), float(vec3(0.0, 0.0, 1.0)))) + 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-9.0) : _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(504.203)), bool(false))), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, _GLF_IDENTITY(-3.4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6803.9862) : -3.4)), _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))))))) * mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED((mat4x2(774.593, 0.3, -7.4, -691.769, 610.559, 2877.4209, -64.30, -0.4) * vec4(702.865, -2.1, 936.239, 4.9)).t)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0))))), bool(true))))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), 0.0)), injectionSwitch.x), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1), (true ? mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1) : _GLF_FUZZED((+ (mat3(-10.76, -171.495, 730.369, 1.0, -4.0, -6.6, -5.2, -64.73, -6099.1489) + -765.779))))))))), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (true ? dot(vec2(0.0, 0.0), vec2(1.0, 1.0)) : _GLF_FUZZED(-2.1)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.664) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (true ? 0.0 : _GLF_FUZZED(6.7))))), float(vec3(0.0, 0.0, 1.0)))) + 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(round(27.68)) : 1.0)), 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))))))) * mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y))))))).x)) > injectionSwitch.y)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1))))), mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1)))))), mat3(mat3(mat3(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1))))))))))), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.664) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.7))))), float(vec3(0.0, 0.0, 1.0)))) + 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, _GLF_IDENTITY(-69.71, mix(float(-69.71), float(_GLF_FUZZED(-6037.3084)), bool(false))), 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, log(1.0)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fma(8.0, 428.040, -2.5)) : 1.0)), 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1)))), ((true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fma(8.0, 428.040, -2.5)) : 1.0)), 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1))))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (0.0) - length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.664) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.7))))), float(vec3(0.0, 0.0, 1.0)))) + 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))), transpose(_GLF_IDENTITY(transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573)))))), (transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), transpose(transpose(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))), transpose(_GLF_IDENTITY(transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573)))))), (transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))), transpose(transpose(_GLF_IDENTITY((_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))), transpose(_GLF_IDENTITY(transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573)))))), (transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), transpose(transpose(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))), transpose(_GLF_IDENTITY(transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573)))))), (transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))), mat3(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))), transpose(_GLF_IDENTITY(transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573)))))), (transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), transpose(transpose(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))), transpose(_GLF_IDENTITY(transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573)))))), (transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))), transpose(transpose((_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))), transpose(_GLF_IDENTITY(transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573)))))), (transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), transpose(transpose(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))), transpose(_GLF_IDENTITY(transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573)))))), (transpose(mat4x3(_GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (true ? _GLF_IDENTITY(mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12), (mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.9, -954.997, 1.1, -8.9, -9.9, 51.57, -50.12, -7.8, -8711.0573))))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0)))))))))))))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0))), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-63.90)), float(1.0), bool(true))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, _GLF_IDENTITY(474.730, clamp(474.730, _GLF_IDENTITY(474.730, min(_GLF_IDENTITY(474.730, mix(float(474.730), float(_GLF_FUZZED(211.531)), bool(false))), 474.730)), _GLF_IDENTITY(474.730, float(mat3x4(474.730, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), -46.41, -3.4, -0.1))))), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.664) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(6.7)), float(mat2x4((true ? 0.0 : _GLF_FUZZED(6.7)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))), float(vec3(0.0, 0.0, 1.0)))) + 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(ceil(80.35))))), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(2.9)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (0.0)), 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (0.0)), 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(mat3x4(mat4(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (0.0)), 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), mat3x4(mat4(mat3x4(mat4(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (0.0)), 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))))), (false ? _GLF_FUZZED(mat3(-6.6, 1950.1671, -949.079, 4.8, 886.543, 9.5, 7.2, 890.652, 91.05)) : mat3(_GLF_IDENTITY(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (0.0)), 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(mat3x4(mat4(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (0.0)), 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), mat3x4(mat4(mat3x4(mat4(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (0.0)), 0.0), vec2(1.0, 1.0)), 0.0 + (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))))))))))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, -0.1))))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.9)), vec2(_GLF_FUZZED(-2.6), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat4x3(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(328.664) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7))))))), float(vec3(0.0, 0.0, 1.0)))) + 0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : _GLF_FUZZED((mat3(9.8, -0.1, -7.6, 742.556, -69.71, 14.34, -27.52, 1.9, 74.12) + mat3(43.53, -9.3, -9850.2065, 852.896, 3.5, 474.730, -46.41, -3.4, _GLF_IDENTITY(-0.1, clamp(-0.1, -0.1, _GLF_IDENTITY(-0.1, (-0.1) / 1.0))))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))).x)) > injectionSwitch.y))) && true))))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), clamp(vec2(mat4x3((injectionSwitch), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), vec2(mat4x3((injectionSwitch), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), vec2(mat4x3((injectionSwitch), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)))))[0], _GLF_FUZZED(-9723.4297)), vec2(_GLF_FUZZED(7.7), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / cos(0.0))), bvec2(false, true))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(7), int(7))) | 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy, ~ (~ (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidsubgroup_sizeworkgroup_id.xy))).y], read, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true))))), false)))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), int(ivec2(int(7), 0))), int(7)))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), ~ (~ (_GLF_IDENTITY(clamp(int(7), int(7), int(7)), (clamp(int(7), int(7), int(7))) | (clamp(int(7), int(7), int(7))))))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < (0 ^ 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, ~ (~ (5)))) >> 0)), int(5))), (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))) | (0 >> _GLF_IDENTITY(int(7), int(7)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) || false, ! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) || false)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(int(5), int(5))) | 0) : _GLF_FUZZED(-51385)))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0)) << _GLF_IDENTITY(int(5), int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
