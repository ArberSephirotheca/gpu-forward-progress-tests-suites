#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 mat3x2 _f0;
 uint subgroup_local_id;
 mat2x3 _f1;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 vec2 _f1;
 vec4 _f2;
 vec3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_1 {
 int _f0;
 mat2x3 _f1;
 uvec2 _f2;
 bool _f3;
 bvec3 _f4;
 bvec4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 mat2x3 _f1;
 uint _f2;
 uint _f3;
 uint _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 int _f2;
 vec4 _f3;
 _GLF_struct_1 _f4;
 uvec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_5 {
 uint subgroup_id;
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
 mat2x4 _f2;
 uvec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_SubgroupID, _GLF_struct_2(_GLF_struct_0(uvec4(1u), mat2x3(1.0), 1u, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), 0))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(0, 0, 0)))), min(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), 0))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), _GLF_IDENTITY(0, 0 ^ (0))))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))), 0)))), min(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(0, 0, 0))) | (_GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(0, 0, 0)))))), _GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), 0))), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)), ivec3(ivec3(_GLF_IDENTITY((ivec3(1)), ((ivec3(1))) | (ivec3(67744, -7878, -27924) & ivec3(0, 0, 0)))))) ^ ivec3(0, 0, 0)))))))), 1, vec4(1.0), _GLF_struct_1(_GLF_IDENTITY(1, (1) >> 0), mat2x3(1.0), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(64796u))))))), uint(uvec3(1u, 1u, 0u)))) / 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), min(0u, 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))))) - 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), uint(uvec3(1u, 1u, 0u)))) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)))) << 0u) << 0u)) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6281.2661)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.82) : 1.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(63.72) : injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6281.2661)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.82) : 1.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(63.72) : injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6281.2661)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.82) : 1.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(63.72) : injectionSwitch.y))))), (false ? _GLF_FUZZED(-6882.9952) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6281.2661)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.82) : 1.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(63.72) : injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6281.2661)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.82) : 1.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(63.72) : injectionSwitch.y))))), float(mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6281.2661)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.82) : 1.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(63.72) : injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6281.2661)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.82) : 1.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(63.72) : injectionSwitch.y))))), 0.0 + (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6281.2661)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-14.82) : 1.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(63.72) : injectionSwitch.y))))))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))), true, _GLF_IDENTITY(true, (true) && true)))))), bvec3(true), bvec4(true), uvec4(1u)), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(78110u))), uint(4u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), min((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u, 0u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u + (uint(4u))))) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, max(_GLF_IDENTITY((0u) << 0u, max((0u) << 0u, (0u) << 0u)), (0u) << 0u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), _GLF_IDENTITY(~ (0u), _GLF_IDENTITY(1u * (~ (0u)), min(_GLF_IDENTITY(1u * (~ (0u)), (1u * (~ (0u))) | (1u * (~ (0u)))), 1u * (~ (0u))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), (_GLF_IDENTITY(1u, (1u) + (106042u & 0u))) | 0u))), _GLF_IDENTITY((1u) | 0u, 1u * ((1u) | _GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) >> 0u)))), max((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u, 0u ^ ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u)))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (false ? _GLF_FUZZED(102050u) : _GLF_IDENTITY(uint(4u), uint(4u))))) ^ 0u) : _GLF_FUZZED(81352u)))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), min((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (4u) | (4u))))))), max((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u)) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, _GLF_IDENTITY((4u) | 0u, clamp((4u) | 0u, (4u) | 0u, (4u) | 0u)))))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u + _GLF_IDENTITY(_GLF_IDENTITY((uint(4u)), max((uint(4u)), (uint(4u)))), max((uint(4u)), (uint(4u))))))) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, max(_GLF_IDENTITY((0u) << 0u, max((0u) << 0u, (0u) << 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) ^ 0u)) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (~ (0u)) | (~ (0u))), _GLF_IDENTITY(~ (0u), 1u * (~ (0u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), (1u))) + (_GLF_IDENTITY(106042u & 0u, clamp(106042u & 0u, 106042u & 0u, 106042u & 0u))))) | 0u))), (1u) | 0u)), (false ? _GLF_FUZZED(50172u) : (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), min((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (true ? _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(98708u)))), (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec2(_GLF_IDENTITY(uint(4u), uint(uint(uint(4u)))), 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, (0u) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(max((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u + (uint(4u)))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u + (uint(4u))))) ^ 0u)) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((0u), 1u * ((0u))) << 0u, max((0u) << 0u, (0u) << 0u)), (0u) << 0u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), _GLF_IDENTITY(~ (0u), 1u * _GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u))), max(max(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), _GLF_IDENTITY(~ (0u), 1u * (~ (0u)))), max(_GLF_IDENTITY(~ (0u), (~ (0u)) | (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u)) | 0u))), _GLF_IDENTITY(~ (0u), 1u * (~ (0u))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) - 0u)))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), ~ (~ (max((_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u + (uint(4u)))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u + (uint(4u))))) ^ 0u)) + (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) << 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((0u), 1u * ((0u))) << 0u, max((0u) << 0u, (0u) << 0u)), (0u) << 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY((0u) << 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((0u), 1u * ((0u))) << 0u, max((0u) << 0u, (0u) << 0u)), (0u) << 0u)), uint(uvec3(_GLF_IDENTITY((0u) << 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((0u), 1u * ((0u))) << 0u, max((0u) << 0u, (0u) << 0u)), (0u) << 0u)), 0u, 0u))) : _GLF_FUZZED(122583u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), _GLF_IDENTITY(~ (0u), 1u * _GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u))), max(max(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ _GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), uint(uvec4((0u), 1u, 1u, 0u))))))), _GLF_IDENTITY(~ (0u), 1u * (~ (0u)))), max(_GLF_IDENTITY(~ (0u), (~ (0u)) | (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u)) | 0u))), _GLF_IDENTITY(~ (0u), 1u * (~ (0u))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))) << 0u, ((0u) << 0u) - 0u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))), (_GLF_IDENTITY(1u, (1u) + (106042u & 0u))) | 0u))), (1u) | 0u))))) * 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (1u) >> 0u)))), vec3(1.0)), _GLF_struct_4(_GLF_struct_3(ivec3(1), vec2(1.0), vec4(1.0), vec3(1.0), ivec2(1))), mat2x4(1.0), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))) << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat3x2(1.0), gl_SubgroupInvocationID, mat2x3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-196.427) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.9) : injectionSwitch.x))), max((false ? _GLF_FUZZED(-196.427) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.9) : injectionSwitch.x))), (false ? _GLF_FUZZED(-196.427) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.9) : injectionSwitch.x)))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).y) + 0.0) : _GLF_FUZZED(-38.50)), 1.0 * ((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).y) + 0.0) : _GLF_FUZZED(-38.50)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY((false ? _GLF_FUZZED(-522.754) : injectionSwitch.y), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-522.754) : injectionSwitch.y, min(_GLF_IDENTITY(false ? _GLF_FUZZED(-522.754) : injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(-522.754) : injectionSwitch.y, mix(float(false ? _GLF_FUZZED(-522.754) : injectionSwitch.y), float(_GLF_FUZZED(6595.1736)), bool(false))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(1.0), 0.0, 1.0)), min(float(mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(-522.754) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(-522.754) : injectionSwitch.y, (false ? _GLF_FUZZED(-522.754) : injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(6595.1736)), bool(false))), 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(-522.754) : injectionSwitch.y, mix(float(false ? _GLF_FUZZED(-522.754) : injectionSwitch.y), float(_GLF_FUZZED(6595.1736)), bool(false))), 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0))))), _GLF_IDENTITY(false ? _GLF_FUZZED(-522.754) : injectionSwitch.y, clamp(false ? _GLF_FUZZED(-522.754) : injectionSwitch.y, false ? _GLF_FUZZED(-522.754) : injectionSwitch.y, false ? _GLF_FUZZED(-522.754) : injectionSwitch.y)))))) - 0.0))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(2.5)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_struct_replacement_5.subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_struct_replacement_6.subgroup_local_id) - 0u)) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, 1u * (_GLF_struct_replacement_6.subgroup_local_id))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uvec4((0u), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4((0u), 0u, 1u, 0u))))) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))) + 1, min(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, 1u * (_GLF_struct_replacement_6.subgroup_local_id))), 0u + ((_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, 1u * (_GLF_struct_replacement_6.subgroup_local_id))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & _GLF_IDENTITY(0u, (0u) | (0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, 1u * (_GLF_struct_replacement_6.subgroup_local_id))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), (0u) | _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, 1u * (_GLF_struct_replacement_6.subgroup_local_id))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), (0u))) << 0u)))))))) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, min(_GLF_struct_replacement_6.subgroup_local_id, _GLF_struct_replacement_6.subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, 1u * (_GLF_struct_replacement_6.subgroup_local_id))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))) + 1, _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_6.subgroup_local_id), ((_GLF_struct_replacement_6.subgroup_local_id)) - 0u) | (_GLF_struct_replacement_6.subgroup_local_id)), 1u * (_GLF_struct_replacement_6.subgroup_local_id))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | ((0u))) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_6.subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, 1u * (_GLF_struct_replacement_6.subgroup_local_id))) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))) << (1u ^ 1u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> (_GLF_IDENTITY((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)), (92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)), (92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(191310u)))) | (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), min((0u) | (0u), (0u) | (0u))))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))) << (1u ^ 1u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> (_GLF_IDENTITY((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(92952u & 0u, min(92952u & 0u, _GLF_IDENTITY(92952u & 0u, (92952u & 0u) / 1u)))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 1u)))), (92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(191310u)))) | (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), min((0u) | (0u), (0u) | (0u))))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))))) - 0u)) + 1))) | (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, 1u * (_GLF_struct_replacement_6.subgroup_local_id))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> ((92952u & 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))))) + 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-338.305, -15.82)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))[0], injectionSwitch[1])).y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0)), mix(float(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(intBitsToFloat(ivec2(6636, -90628)), sign(injectionSwitch))) : injectionSwitch))[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0))), float(_GLF_FUZZED(26.82)), bool(false)))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], injectionSwitch[1])).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], injectionSwitch[1])).y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)))) > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-611.709))), injectionSwitch.y)))), true)), (bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), true, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)))) && _GLF_IDENTITY(true, false || (true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false, false, true))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))).y)) ^ 0), (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))).y)) ^ 0), (_GLF_IDENTITY(true, ! (! (true))) ? (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))))))) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))).y)) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) << (0 ^ 0))))) * 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.0, -0.9)) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), mix(float(_GLF_FUZZED(((- -4.9) + 5.6))), float(0.0 + (injectionSwitch.x)), bool(true)))), injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), false, true)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY(read, _GLF_IDENTITY((read), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(workgroup_base)))), ~ (~ ((_GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(workgroup_base))))))), ((read)) | _GLF_IDENTITY(((read)), (((_GLF_IDENTITY(read, clamp(read, _GLF_IDENTITY(read, uint(uvec2(read, 0u))), read))))) << 0u)) : _GLF_FUZZED(workgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, clamp(read, read, read)), uint(uvec2(read, _GLF_IDENTITY(1u, (1u) ^ 0u)))), max(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, uint(_GLF_IDENTITY(uvec2(read, 1u), (_GLF_IDENTITY(uvec2(read, 1u), max(uvec2(read, 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(read, 1u), min(uvec2(read, 1u), _GLF_IDENTITY(uvec2(read, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(read, 1u), uvec2(0u, 0u) ^ (uvec2(read, 1u)))) << uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(read, 1u), uvec2(0u, 0u) ^ (uvec2(read, 1u)))) << uvec2(0u, 0u), uvec2(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uvec2(read, 1u), uvec2(0u, 0u) ^ (uvec2(read, 1u)))) << uvec2(0u, 0u)), max(uvec2((_GLF_IDENTITY(uvec2(read, 1u), uvec2(0u, 0u) ^ (uvec2(read, 1u)))) << uvec2(0u, 0u)), uvec2((_GLF_IDENTITY(uvec2(read, 1u), uvec2(0u, 0u) ^ (uvec2(read, 1u)))) << uvec2(0u, 0u)))))), 1u, 1u)), uvec2(0u, 0u) | (uvec2(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(read, 1u), uvec2(0u, 0u) ^ (uvec2(read, 1u)))) << uvec2(0u, 0u), uvec2(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uvec2(read, 1u), uvec2(0u, 0u) ^ (uvec2(read, 1u)))) << uvec2(0u, 0u)), max(uvec2((_GLF_IDENTITY(uvec2(read, 1u), uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))), 0u) ^ (uvec2(read, 1u)))) << uvec2(0u, 0u)), uvec2((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) - 0u), 1u), uvec2(0u, 0u) ^ (uvec2(read, 1u)))) << uvec2(0u, 0u)))))), 1u, 1u)))))))), uvec2(0u, 0u) | (uvec2(read, 1u)))))) | (_GLF_IDENTITY(uvec2(read, 1u), (false ? _GLF_FUZZED(uvec2(15466u, 7451u)) : _GLF_IDENTITY(uvec2(read, 1u), min(uvec2(read, 1u), uvec2(read, 1u))))))))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, cos(0.0))), sin(0.0), _GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(1.3))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0)), mix(float(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) * 1.0), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6480.8707) : length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, cos(0.0))), sin(0.0), tan(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(978.878), (_GLF_FUZZED(978.878)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(abs(0.0), sin(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(abs(0.0), sin(0.0), 1.0, 0.0))))), bool(false)))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) - 0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0))), sin(0.0), tan(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), sqrt(1.0), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0))), sin(0.0), tan(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0)), clamp(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.0)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-19.99)), bool(false)))), bool(true))))), cos(0.0))), sin(0.0), tan(0.0), 1.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(abs(1.0), 1.0, 0.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(abs(1.0), 1.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), min(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))), (injectionSwitch.y) * 1.0), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0 * (round(length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0))), sin(0.0), tan(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(3.1)), bool(false))), 0.0, 1.0, 0.0)), min(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0))), sin(0.0), tan(0.0), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), 1.0, sqrt(1.0), 0.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0))), sin(0.0), tan(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0))), sin(0.0), tan(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(0.0))), sin(0.0), tan(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0)))), mix(float(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), sqrt(1.0), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-7.3)), bool(false))) : _GLF_FUZZED(-4.6))))), sin(0.0), tan(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(978.878), (false ? _GLF_FUZZED(94.19) : _GLF_IDENTITY(_GLF_FUZZED(978.878), clamp(_GLF_FUZZED(978.878), _GLF_FUZZED(978.878), _GLF_FUZZED(978.878)))))), bool(false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))[0], max((vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))[0], (vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))[0])), (vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED((6.3 + -3985.8702))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) * 1.0) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), false, false)), true && (bool(bvec4(false, false, false, false))))) || false)) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) * 1.0) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
