#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.7, -1530.9028)) : injectionSwitch)), injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.1))))))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, true, false, true)), true, true), bvec3(bvec3(bvec3(bool(bvec4(false, true, false, true)), true, true)))))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp2(vec2(-836.240, -3.7))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(2785.2958)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, cos(0.0), 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, cos(0.0), 1.0, 1.0)), transpose(transpose(transpose(mat2(1.0, cos(0.0), 1.0, 1.0))))))))), 0.0, 0.0, abs(1.0)))), injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(765.879)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))), float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)) : _GLF_FUZZED(3.3), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(765.879)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))), float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)) : _GLF_FUZZED(3.3), float(_GLF_IDENTITY(float(true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(765.879)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))), float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)) : _GLF_FUZZED(3.3)), min(float(true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(765.879)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))), float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)) : _GLF_FUZZED(3.3)), float(true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(765.879)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))), float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)) : _GLF_FUZZED(3.3))))))), float(_GLF_FUZZED((828.091 / 6154.2319))), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)))) > injectionSwitch.y)) || (! _GLF_IDENTITY((! (false)), ((! (false))) && true)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x))) - 0.0) > injectionSwitch.y)) || (! (! (false))))), true && _GLF_IDENTITY((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)) > injectionSwitch.y)) || (! (! (false)))))), false || ((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)))), injectionSwitch.x)) > injectionSwitch.y)) || (! (! (false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), vec2(_GLF_FUZZED(-3291.3935), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-87.98)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-77210) : 1)) * (1)), 1)), 1))) ^ 0), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1))))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)) / _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), _GLF_IDENTITY(ivec2(ivec3(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec2(-93949, 77504)) : ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), 0 ^ ((1)))), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1))), 0)), ivec2(_GLF_IDENTITY(ivec2(ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), 0))), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)))) | (_GLF_IDENTITY(ivec2(ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), 0))), ivec2(ivec3(ivec2(ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), 0))), 1)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), ivec2(1, 1) * ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) ^ 0), 1))), ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) ^ 0), _GLF_IDENTITY(1, (1) >> 0))) >> ivec2(0, 0))), (ivec2(0, 0) | ivec2(1, 1)) * (~ (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-34123) : 1)), 1))) ^ 0), 1), ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)) >> ivec2(0, 0)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)) / _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), _GLF_IDENTITY(ivec2(ivec3(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec2(-93949, 77504)) : ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1))), 0)), ivec2(ivec2(ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), 0)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) ^ 0), _GLF_IDENTITY(1, (1) >> 0))) >> ivec2(0, 0))), (ivec2(0, 0) | ivec2(1, 1)) * (~ (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), (_GLF_IDENTITY((ivec2(1, 0)), min((ivec2(1, 0)), (ivec2(1, 0)))) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)) >> ivec2(0, 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)) / _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), _GLF_IDENTITY(ivec2(ivec3(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec2(-93949, 77504)) : ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1))), 0)), ivec2(ivec2(ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), 0)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) ^ 0), _GLF_IDENTITY(1, (1) >> 0))) >> ivec2(0, 0))), (ivec2(0, 0) | ivec2(1, 1)) * (~ (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)) >> ivec2(0, 0)))))))), min(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)) / _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), _GLF_IDENTITY(ivec2(ivec3(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))) ? _GLF_FUZZED(ivec2(-93949, 77504)) : ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1))), 0)), ivec2(ivec2(ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), 1))) ^ 0), 1), 0)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) ^ 0), _GLF_IDENTITY(1, (1) >> 0))) >> ivec2(0, 0))), (ivec2(0, 0) | ivec2(1, 1)) * (~ (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) << 0))) ^ 0), 1), (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)) | ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)))) >> ivec2(0, 0)))))))), _GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)) / _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), _GLF_IDENTITY(ivec2(ivec3(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec2(-93949, 77504)) : ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1))), 0)), ivec2(ivec2(ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), 0)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1), ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) ^ 0), _GLF_IDENTITY(1, (1) >> 0))) >> ivec2(0, 0))), (ivec2(0, 0) | ivec2(1, 1)) * (~ (_GLF_IDENTITY((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), ~ (~ (min(1, 1)))))) ^ 0), 1), ((ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)) >> ivec2(0, 0))))))))))) << (ivec2(0, 0) | ivec2(0, 0))) : _GLF_FUZZED(ivec2(79600, -4296)))))))) | (uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, _GLF_IDENTITY(0, min(0, 0)))) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), min(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), min(1, 1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) << 0)) << 0)))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), min(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((1), ((1)) << 0))) ^ (0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) >> 0))))), min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), min(1, 1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(61007))), 1, 1)), 1))) << 0)) << 0)))))), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1))))) ^ 0), 1)))))), uint(uvec3((uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)))))) | (uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)))))), 0u, 0u)))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))), min(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))), 0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), (int(8)) * 1), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), _GLF_IDENTITY((true ? int(8) : _GLF_FUZZED(-33433)), ((true ? int(8) : _GLF_FUZZED(-33433))) | ((true ? int(8) : _GLF_FUZZED(-33433)))))) | (int(8)))))))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))), min(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))), 0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), (int(8)) * 1), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), _GLF_IDENTITY((true ? int(8) : _GLF_FUZZED(-33433)), ((true ? int(8) : _GLF_FUZZED(-33433))) | ((true ? int(8) : _GLF_FUZZED(-33433)))))) | (int(8))))))))))) | 0))), 0)) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1))))), clamp(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), 0 + (_GLF_IDENTITY(1, 0 + (1)))), min(1, 1))) ^ 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) ^ 0, (true ? (_GLF_IDENTITY(1, min(1, 1))) ^ 0 : _GLF_FUZZED(48002))), _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) ^ 0, max((_GLF_IDENTITY(1, min(1, 1))) ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) ^ 0, (true ? (_GLF_IDENTITY(1, min(1, 1))) ^ 0 : _GLF_FUZZED(11576)))))))), 1))))), uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) + ivec2(0, 0)) / ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(min(1, 1), (false ? _GLF_FUZZED(-75806) : min(1, _GLF_IDENTITY(1, ~ (~ (1)))))))) ^ 0, min((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (false ? _GLF_FUZZED(36157) : _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (_GLF_IDENTITY(1, min(1, 1))))))) ^ 0, (_GLF_IDENTITY(1, min(1, 1))) ^ 0))), 1)), (_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) / ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) ^ 0))) ^ 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) ^ 0, max((_GLF_IDENTITY(1, min(1, 1))) ^ 0, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1))))) ^ 0))), 1))) / ivec2(1, 1))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049)))))), (ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049)))), min(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049)))), _GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049)))))))))))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), min((_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), (false ? _GLF_FUZZED(85624) : (_GLF_IDENTITY(1, min(1, 1))))))) ^ 0), 1))))), max(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), min((ivec2(1, 0)), (ivec2(1, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), min((ivec2(1, 0)), (ivec2(1, 0)))), min(_GLF_IDENTITY((ivec2(1, 0)), min((ivec2(1, 0)), (ivec2(1, 0)))), _GLF_IDENTITY((ivec2(1, 0)), min((ivec2(1, 0)), (ivec2(1, 0))))))) >> ivec2(0, 0)), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(-32433, (-32433) | (-32433)), -1049)))))), (ivec2(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, min(1, 1)), 0), (ivec2(1, 0)) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (true ? (ivec2(1, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(-32433, -1049)), ivec2(0, 0) ^ (_GLF_FUZZED(ivec2(-32433, -1049))))))))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), 0), _GLF_IDENTITY((ivec2(1, 0)), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (_GLF_IDENTITY(int(ivec3(0, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-37722) : 1)))), (int(ivec3(0, 1, 1))) << 0)) + 0)))) : _GLF_FUZZED(ivec2(-32433, -1049)))))), _GLF_IDENTITY((ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) | (_GLF_IDENTITY((ivec2(1, 0)), max((ivec2(1, 0)), (ivec2(1, 0)))))), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049))))))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ((ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049))))))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / ivec2(1, 1)))) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))))), int(int(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 0)), ~ (~ (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 0)))))))))) ^ 0), 1)))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), 0), _GLF_IDENTITY((ivec2(1, 0)), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (_GLF_IDENTITY(int(ivec3(0, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-37722) : 1)))), (int(ivec3(0, 1, 1))) << 0)) + 0)))) : _GLF_FUZZED(ivec2(-32433, -1049)))))), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(39039))))), 0))) | (_GLF_IDENTITY((ivec2(1, 0)), max((ivec2(1, 0)), (ivec2(1, 0)))))), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049))))), min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(39039))))), 0))) | (_GLF_IDENTITY((ivec2(1, 0)), max((ivec2(1, 0)), (ivec2(1, 0)))))), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 1))) : _GLF_FUZZED(39039))))), 0))) | (_GLF_IDENTITY((ivec2(1, 0)), max((ivec2(1, 0)), (ivec2(1, 0)))))), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049))))))))) - _GLF_IDENTITY(ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - ivec2(0, 0))) / ivec2(1, 1)), ((ivec2(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 0), max(ivec2(1, 0), ivec2(1, 0)))), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049))))))) - ivec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x), _GLF_ZERO(0.0, injectionSwitch.x))) / ivec2(1, 1)))) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))))), int(int(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 0)), ~ (~ (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 0)))))))))) ^ 0), 1))))) + 0), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (_GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, 1, 1))) << 0)) + 0)))) : _GLF_FUZZED(ivec2(-32433, -1049)))))), (ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049))))))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(int(ivec3(0, 1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, 1, 1))) << 0)) + 0, ((_GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, 1, 1))) << 0)) + 0) - 0))))) : _GLF_FUZZED(ivec2(-32433, -1049)))))), _GLF_IDENTITY((ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049))))))), ivec2(0, 0) ^ ((ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(-32433, clamp(-32433, -32433, _GLF_IDENTITY(-32433, (0 ^ 0) | (_GLF_IDENTITY(-32433, min(-32433, -32433)))))), -1049))))))))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1)))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, int(int(0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (_GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), 1))) << 0)) + 0)))) : _GLF_FUZZED(ivec2(-32433, -1049)))))), (ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (_GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), 1))) << 0)) + 0)))) : _GLF_FUZZED(ivec2(-32433, -1049))))))) | (_GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (_GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), 1))) << 0)) + 0)))) : _GLF_FUZZED(ivec2(-32433, -1049)))))), (ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (_GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, _GLF_IDENTITY(1, (1) | 0), 1))) << 0)) + 0)))) : _GLF_FUZZED(ivec2(-32433, -1049))))))) / ivec2(1, 1)))), (ivec2(ivec2(_GLF_IDENTITY((ivec2(1, 0)), (true ? (ivec2(1, 0)) : _GLF_FUZZED(ivec2(-32433, -1049))))))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0), 1))))))))))) : _GLF_FUZZED(26196u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
     break;
    }
   if(_GLF_DEAD(false))
    break;
   if((subgroup_local_id % 2) == _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) ^ 0))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(2), int(2))) + (2))), 1u * (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(2), int(2))) + (2))), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(2), int(2))) + (2)))))));
    }
   else
    {
     read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))), _GLF_IDENTITY(clamp(min(buf[virtual_gid], buf[virtual_gid]), min(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(16462u, (16462u) << 0u), 133263u, 46346u).r) : _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_id) : virtual_gid))))]), min(buf[virtual_gid], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))])), (clamp(min(buf[virtual_gid], buf[virtual_gid]), min(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(16462u, _GLF_IDENTITY((16462u), min((16462u), (16462u))) << 0u), (_GLF_IDENTITY(16462u, (16462u) << 0u)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(16462u, _GLF_IDENTITY((16462u), min((16462u), (16462u))) << 0u), (_GLF_IDENTITY(16462u, (16462u) << 0u)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(16462u, _GLF_IDENTITY((16462u), min((16462u), (16462u))) << 0u), (_GLF_IDENTITY(16462u, (16462u) << 0u)) >> 0u)) << (0u | 0u))) << 0u), 133263u, 46346u).r) : _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_id) : virtual_gid))))]), min(buf[virtual_gid], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), min(uint(uint(virtual_gid)), _GLF_IDENTITY(uint(uint(virtual_gid)), (uint(uint(virtual_gid))) | (uint(uint(virtual_gid))))))), (virtual_gid) << 0u)))]))) ^ 0u))), 4, 64, 2);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) > injectionSwitch.y))))
        continue;
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), min(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(2.9) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(-6.3), (_GLF_IDENTITY(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), max(_GLF_IDENTITY(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), clamp(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(_GLF_IDENTITY(atanh(-9.2), mix(float(_GLF_FUZZED(-5.2)), float(atanh(-9.2)), bool(true)))), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)))), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2))))))), tan(0.0) + ((true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), min(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(2.9) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(-6.3), (_GLF_IDENTITY(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), max(_GLF_IDENTITY(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), clamp(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), true ? _GLF_FUZZED(_GLF_IDENTITY(-6.3, (-6.3) / 1.0)) : _GLF_FUZZED(atanh(-9.2)), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)))), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)))))))))), (false ? _GLF_FUZZED(27.33) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(6015.3355, (6015.3355) + 0.0), -283.299)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 1.0, abs(1.0), 0.0, sin(0.0), 0.0), _GLF_IDENTITY((mat2x3(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 1.0, abs(1.0), 0.0, sin(0.0), 0.0)) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ((mat2x3(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 1.0, abs(1.0), 0.0, sin(0.0), 0.0)) * mat2(1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), max(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, abs(1.0), 1.0, determinant(mat3(abs(1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), length(vec3(0.0, 0.0, 0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(-1859.6841) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) / 1.0, min((_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(-1859.6841) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) / 1.0, (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(-1859.6841) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))))) / 1.0))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-94.32))), min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))) - abs(vec2(0.0, 0.0))).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))) : _GLF_FUZZED(-6.3))), _GLF_IDENTITY((false ? _GLF_FUZZED(27.33) : injectionSwitch.x), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(27.33) : injectionSwitch.x, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(27.33) : injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(27.33) : injectionSwitch.x : _GLF_FUZZED(252.585)))), float(_GLF_FUZZED(-966.835)), bool(false)))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY((false ? _GLF_FUZZED(27.33) : injectionSwitch.x), mix(float(_GLF_FUZZED((- 2.0))), float((false ? _GLF_FUZZED(27.33) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), bool(true)))), clamp(float(_GLF_IDENTITY((false ? _GLF_FUZZED(27.33) : injectionSwitch.x), mix(float(_GLF_FUZZED((- 2.0))), float((false ? _GLF_FUZZED(27.33) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), bool(true)))), _GLF_IDENTITY(float(_GLF_IDENTITY((false ? _GLF_FUZZED(27.33) : injectionSwitch.x), mix(float(_GLF_FUZZED((- 2.0))), float((false ? _GLF_FUZZED(27.33) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), bool(true)))), (float(_GLF_IDENTITY((false ? _GLF_FUZZED(27.33) : injectionSwitch.x), mix(float(_GLF_FUZZED((- _GLF_IDENTITY(2.0, (2.0) * 1.0)))), float((false ? _GLF_FUZZED(27.33) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), bool(true))))) + 0.0), float(_GLF_IDENTITY((false ? _GLF_FUZZED(27.33) : injectionSwitch.x), mix(float(_GLF_FUZZED((- 2.0))), float((false ? _GLF_FUZZED(27.33) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), bool(true)))))), float(_GLF_FUZZED(7.3)), _GLF_IDENTITY(bool(false), false || (bool(false)))))))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6015.3355, -283.299)))).y) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), min(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-447.353))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))))), (false ? _GLF_FUZZED(2.9) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(-6.3), (_GLF_IDENTITY(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), max(_GLF_IDENTITY(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), clamp(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)))), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2))))))), tan(0.0) + ((true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x))), min(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(2.9) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(2.9) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), sqrt(0.0), 0.0, 1.0, log(1.0), 1.0))))))) : _GLF_IDENTITY(_GLF_FUZZED(-6.3), (_GLF_IDENTITY(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), clamp(true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(_GLF_IDENTITY(atanh(-9.2), (false ? _GLF_FUZZED(6184.9317) : atanh(-9.2)))))), true ? _GLF_FUZZED(-6.3) : _GLF_FUZZED(atanh(-9.2)))))))))), (false ? _GLF_FUZZED(27.33) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(6015.3355, min(_GLF_IDENTITY(6015.3355, clamp(6015.3355, 6015.3355, 6015.3355)), 6015.3355)), (6015.3355) + 0.0), -283.299)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) + length(0.0)), mix(float(_GLF_FUZZED(-3.4)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), bool(true))))), 1.0, abs(1.0), 0.0, sin(0.0), 0.0), _GLF_IDENTITY((mat2x3(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 1.0, abs(1.0), 0.0, sin(0.0), 0.0)) * mat2(1.0), ((mat2x3(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 1.0, abs(1.0), 0.0, sin(0.0), 0.0)) * mat2(1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) - 0.0)) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), (false ? _GLF_FUZZED(-28.25) : float(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))))))))), 0.0, round(length(normalize(1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) - 0.0)) - 0.0), 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), mix(float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(-77.47)), bool(false))), 0.0, round(length(normalize(1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), _GLF_IDENTITY((float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) - 0.0)) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, round(length(normalize(1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), min((float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) - 0.0)) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, round(length(normalize(1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), (float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) - 0.0)) - 0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, round(length(normalize(1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))) - 0.0), abs(1.0), 0.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(-1859.6841) : float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) / 1.0))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-94.32))), min(_GLF_IDENTITY(min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-94.32))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-94.32))))), min(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))) : _GLF_FUZZED(-6.3))), _GLF_IDENTITY((false ? _GLF_FUZZED(27.33) : injectionSwitch.x), 1.0 * (_GLF_IDENTITY((false ? _GLF_FUZZED(27.33) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(_GLF_IDENTITY((false ? _GLF_FUZZED(27.33) : injectionSwitch.x), mix(float(_GLF_FUZZED((- 2.0))), float((false ? _GLF_FUZZED(27.33) : injectionSwitch.x)), bool(true)))), float(_GLF_FUZZED(7.3)), bool(false)))))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6015.3355, -283.299)))).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), false), true, false)))), true)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         return;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
        return;
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(inversesqrt(vec2(2.0, _GLF_IDENTITY(35.41, max(35.41, _GLF_IDENTITY(35.41, min(35.41, 35.41))))))) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     break;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       return;
      }
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.7, 2.1)) : injectionSwitch)))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), false || (! (false))))), false || ((! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) || false)))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), false || (! (false))))), false || ((! (_GLF_IDENTITY(! (false), false || (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), _GLF_IDENTITY(bool(bool(false || (! (false)))), bool(bvec3(bool(bool(false || _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))))), false, false))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))))) || ((! (_GLF_IDENTITY(! (false), false || (! (false))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))))), true, true, true))))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
