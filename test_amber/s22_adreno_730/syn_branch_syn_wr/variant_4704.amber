#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.7)), bool(false)))), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.7)), bool(false))))), float(_GLF_FUZZED((9.0))), bool(false))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(float((injectionSwitch)[0]))), _GLF_FUZZED(-6.7)), vec2(_GLF_FUZZED(8451.2945), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), bool(bvec3((false), false, true))), ! (! (_GLF_IDENTITY(true && (false), true && (true && (false)))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (0u)), 0u)).x), clamp(min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (0u)), 0u)).x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u | (4u))), uint(4u))) | (0u)), 0u)).x), min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(55539u)))), 0u | (uint(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(55539u)))))))), uint(4u)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(55539u)))), 0u | (uint(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(55539u)))))))), uint(4u))))) - 0u))) | (0u)), 0u)).x)))))), gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), workgroup_size)), 0u ^ (workgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) | (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))), clamp(uint(_GLF_IDENTITY(uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) | (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(workgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) / 1.0))), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))), 0u, 0u)) | (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))), min(uint(_GLF_IDENTITY(uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) | (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) | (_GLF_IDENTITY(uvec4(workgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)), 1u)), (uint(uvec2(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) - 0u)), 1u))) ^ 0u)))), 0u, 0u), (uvec4(workgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)), _GLF_IDENTITY(uint(uvec2(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u))) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)))), 1u)), (uint(uvec2(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))) - 0u)), 1u))) ^ 0u)))), 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) | (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))), (uvec4(workgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-204.136))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-204.136)))), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-204.136)))), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-204.136)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-204.136)))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-204.136)))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-204.136)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-204.136))))))))) / exp(0.0))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-204.136)))))) + 0u)) >> 0u), 0u, 0u)) | (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), _GLF_IDENTITY((uvec4(workgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(vec3(-26.49, 2934.6888, -6412.9713), _GLF_IDENTITY(clamp(vec3(6320.3901, -7256.8214, 9.3), vec3(-9452.9909, -8800.1956, 5086.1530), vec3(6048.0935, 3.0, -2469.2678)), (true ? clamp(vec3(6320.3901, -7256.8214, 9.3), vec3(-9452.9909, -8800.1956, 5086.1530), vec3(6048.0935, 3.0, -2469.2678)) : _GLF_FUZZED(vec3(-9.8, -9275.4997, -4.3)))))))), injectionSwitch.x)), 0u, 0u)), (false ? _GLF_FUZZED(uvec4(52278u, 20364u, 30519u, 53178u)) : (uvec4(workgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(vec3(-26.49, 2934.6888, -6412.9713), clamp(vec3(6320.3901, -7256.8214, 9.3), vec3(-9452.9909, -8800.1956, 5086.1530), vec3(6048.0935, 3.0, -2469.2678)))))), injectionSwitch.x)), 0u, 0u)))) | (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))))))))), (workgroup_size) | (workgroup_size)), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, false || (true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(uint(true), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(true), (uint(true)) << 0u), (_GLF_IDENTITY(uint(true), (uint(true)) << 0u)) >> 0u) : _GLF_FUZZED(subgroup_size))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, 0u)))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id)))), ((workgroup_base)) | ((_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))))))))) | ((workgroup_base)))) | 0u) | 0u), workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), 0u)), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 1u, 0u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ((_GLF_IDENTITY(0u, (0u) >> 0u))) ^ 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ((_GLF_IDENTITY(0u, (0u) >> 0u))) ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ((_GLF_IDENTITY(0u, (0u) >> 0u))) ^ 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ((_GLF_IDENTITY(0u, (0u) >> 0u))) ^ 0u))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> 0u), 1u, 0u)), _GLF_IDENTITY(0u, (0u | 0u) ^ (0u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base))))), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(atomicExchange(subgroup_size, workgroup_size)))), ~ (~ (workgroup_base))), 0u, 1u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 1u, 0u)) : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))), 0u, 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 1u, 0u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> 0u), 1u, 0u)), 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u, 1u, 0u))))))) / 1u), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))), ~ (workgroup_base), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(uint(~ (workgroup_base)))))))), 0u, 1u, 0u))), min(~ (uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))), workgroup_base)))))), ~ (workgroup_base), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(uint(~ (workgroup_base)))))))), 0u, 1u, 0u))), ~ (uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base), ~ (~ _GLF_IDENTITY((~ (workgroup_base)), _GLF_IDENTITY(((~ (workgroup_base))), max(_GLF_IDENTITY(((~ (workgroup_base))), (((~ (workgroup_base)))) | (((~ (workgroup_base))))), ((~ (workgroup_base))))) | ((~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))))))), ~ (workgroup_base), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(uint(~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))))))), 0u, 1u, 0u)))))))))) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id, subgroup_local_id)) + 1) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) / 1u)), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) * 1u)) >> 0u)), (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) / 1u)), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) * 1u)) >> 0u))) | (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) / 1u)), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) * 1u)) >> 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, 0u | (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, ((_GLF_FUZZED(workgroup_base)) + 0u) - 0u), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, clamp((_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_FUZZED(workgroup_base)) + 0u))))))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) / 1u)), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(176825u))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(176825u))), 1u, 1u, 1u)) | (uvec4(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(176825u))), 1u, 1u, 1u))))))) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) - 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) * 1u))) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY(0u, (0u) + 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) * 1u)) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, 0u | (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, ((_GLF_FUZZED(workgroup_base)) + 0u) - 0u), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, clamp((_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_base)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u)))) + 0u))))))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), min((_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) / 1u)), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | (0u | 0u)), _GLF_FUZZED(workgroup_base)))) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), clamp((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), 1u * ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) | ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))))), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)), clamp((_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base))) ^ 0u), (_GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base))) | 0u) | (_GLF_FUZZED(workgroup_base))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))))), (_GLF_FUZZED(workgroup_base)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(_GLF_IDENTITY(uint(_GLF_FUZZED(workgroup_base)), clamp(uint(_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(uint(_GLF_FUZZED(workgroup_base)), 1u * (uint(_GLF_FUZZED(workgroup_base)))), uint(_GLF_FUZZED(workgroup_base))))))))) * 1u)) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, 0u | (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, ((_GLF_FUZZED(workgroup_base)) + 0u) - 0u), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, clamp((_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_FUZZED(workgroup_base)) + 0u))))))), 0u + (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, 0u | (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, ((_GLF_FUZZED(workgroup_base)) + 0u) - 0u), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, clamp((_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_FUZZED(workgroup_base)) + 0u))))))))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base))) | ((_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(min((_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (min((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base)))) | (_GLF_FUZZED(workgroup_base)))) / 1u)), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(uint(uvec3(_GLF_FUZZED(workgroup_base), 1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 1u * (uint(5u))))))), (0u ^ 0u) ^ (uint(uvec3(_GLF_FUZZED(workgroup_base), 1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 1u * (uint(5u))))))))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))), (clamp(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), max((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | (_GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) ^ 0u))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)))) * 1u)) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, 0u | (_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, min(_GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, ((_GLF_FUZZED(workgroup_base)) + 0u) - 0u), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) + 0u, clamp((_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_FUZZED(workgroup_base)) + 0u, (_GLF_FUZZED(workgroup_base)) + 0u))))))), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))))))) << 0u)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(false || (_GLF_IDENTITY(false, ! (! (false)))), false, false)))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 0.0, 0.0, 1.0))))), vec2(vec2(vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 0.0, 0.0, 1.0))))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(float(72312u)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (false ? _GLF_FUZZED((vec3(7.1, -3091.4495, -94.00) * mat2x3(4.9, -7.7, -42.06, -9.7, 8.2, -6.5))) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))[1]), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), bool(bvec2(true, true))))))) && true), false)))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(float(72312u)), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true)))))) && true, ! (! ((_GLF_IDENTITY(true, ! (! (true)))) && true)))), true)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, ! (! ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bvec2((true), true))), bool(bvec4(! _GLF_IDENTITY((true), bool(bvec2((true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) && true)))), _GLF_IDENTITY(true, (true) && true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)) * mat2(1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0))))))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(float(72312u)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_IDENTITY(true, true && (true))), true))))), max(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(float(72312u)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(float(72312u)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true), false, true)))))))))))).y))))))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (2))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.5)), vec2(_GLF_FUZZED(27.47), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec3(! (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true))), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(true, (true) || false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat2x4(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat2x4(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.8) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2383.6536)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(577.861) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(float(false))), bool(false))), injectionSwitch[1])), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, min((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false)), true)))))))) || false)))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0))))))), injectionSwitch)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, (true) || false)), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, (true) || false)), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true))))))))))), false || (_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, (true) || false)), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true))))))))))), (bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, (true) || false)), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true)))))))))))) && true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, (true) || false)), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true))))))))))), false || (_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, (true) || false)), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true))))))))))), (bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, (true) || false)), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true)))))))))))) && true)))), true, false, false))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), max(0 | (4), 0 | (4)))), max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, 0 | (4)))), 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), true && (bool(true))))))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)), ! (! (false || (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))), (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-7.3, max(-7.3, _GLF_IDENTITY(-7.3, max(_GLF_IDENTITY(-7.3, min(-7.3, -7.3)), -7.3)))), -443.577)))).x, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.3, -443.577)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-7.3, -443.577)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.3, -443.577))) - vec2(0.0, 0.0)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.2), (false ? _GLF_FUZZED(-5836.5133) : _GLF_FUZZED(-3.2)))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0))), (_GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0))), mix(float(_GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))), float(_GLF_FUZZED(7.7)), bool(false))), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(((_GLF_IDENTITY(1.0, (1.0) / 1.0))), clamp(((_GLF_IDENTITY(1.0, (1.0) / 1.0))), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))))) / 1.0)))) * 1.0), 0.0, 1.0, 0.0, exp(0.0), abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1182.4374)), float(1.0), bool(true))), 0.0, exp(0.0), abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(-9775.2205, 2.9, 279.862, -302.344, 6662.4829, 1.1, -8537.0157, 2064.9703, 9.4, 8549.5768, -993.547, 9115.1567))))), _GLF_IDENTITY(float(mat2x3(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0), 0.0, 1.0, 0.0, exp(0.0), abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0), 0.0, 1.0, 0.0, exp(0.0), abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(-9775.2205, 2.9, 279.862, -302.344, 6662.4829, 1.1, -8537.0157, 2064.9703, 9.4, 8549.5768, -993.547, 9115.1567))))), 0.0, 0.0, cos(0.0), 1.0, sqrt(0.0))), (float(mat2x3(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0), 0.0, 1.0, 0.0, exp(0.0), abs(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(51.44)), bool(false))))), 1.0, 0.0, 1.0), (true ? mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), ((_GLF_IDENTITY(1.0, (1.0) / 1.0))) / 1.0), 0.0, 1.0, 0.0, exp(0.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(-9775.2205, 2.9, 279.862, -302.344, 6662.4829, 1.1, -8537.0157, 2064.9703, 9.4, 8549.5768, -993.547, 9115.1567))))), 0.0, 0.0, cos(0.0), 1.0, sqrt(0.0)))) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) - 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), float(vec4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 1.0)))) * 1.0), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(6397.5534, 380.976, -105.696, -611.300, 236.343, -65.61, -91.03, 8.7, -558.325, 35.07, 9034.1917, -452.015, -3.0, -4594.8434, 69.07, 1630.1177)) : mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) : _GLF_FUZZED(smoothstep(injectionSwitch, vec2(5784.6316, -33.11), injectionSwitch))))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-896.534), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(-0.2)), bvec2(true, false))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8302.3812)), bool(false))), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, 0.0, 0.0, tan(0.0), 1.0, exp(0.0), sqrt(0.0)))) > injectionSwitch.y)))) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), (mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) + _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(-62.03, 956.773, 58.14, 4857.0734, 401.748, -6.9, -9.4, 6.2, 4.3))))))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-341.616)), float((injectionSwitch.y)), bool(true))))) / 1.0, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y) / 1.0))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true) || (false)) || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
