#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), false, true))), true, false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0), transpose(transpose(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), (transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_IDENTITY(vec2(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0), (vec2(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0)) / vec2(1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), 1.0))), (true ? _GLF_IDENTITY(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_IDENTITY(vec2(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0), (vec2(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0)) / vec2(1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), 1.0))), mat4(1.0) * (mat4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_IDENTITY(vec2(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0), (vec2(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0)) / vec2(1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), 1.0))))) : _GLF_FUZZED(mat4(-885.264, -0.9, 5.8, 5.2, 90.16, 7260.6922, -3.0, 687.478, 7395.1082, 7226.7878, -1.6, -0.4, 9.0, 407.649, -8551.1654, -96.59)))), transpose(transpose(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0)))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), vec2(mat2x4(vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0, abs(1.0))), max(float(vec3(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0, abs(1.0))), float(vec3(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0, abs(1.0)))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(9293.8856)) : 0.0))), min(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(9293.8856)) : 0.0))), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(9293.8856)) : 0.0))))), float(_GLF_FUZZED(-9.0)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log(-9.3)) : dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), sin(0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), vec2(mat2x4(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), vec2(mat2x4(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY((mat4x2(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), vec2(mat2x4(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)) * mat4(1.0), mat2(1.0) * ((mat4x2(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), vec2(mat2x4(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)) * mat4(1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))), injectionSwitch)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, abs(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), vec2(mat2x4(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.5) : 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3044.3638)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), vec2(mat2x4(vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-72.34)), bool(false))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), cos(0.0), 0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 1.0)))))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0)))) / _GLF_IDENTITY(dot(vec2(0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch), clamp((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-6.6, (_GLF_IDENTITY(-6.6, min(-6.6, -6.6))) / 1.0), -58.46)) : injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch, min(false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch, false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch)), false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch))), (false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch)))).y))) && true, false || ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))) / _GLF_IDENTITY(dot(vec2(0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch), clamp((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-6.6, (_GLF_IDENTITY(-6.6, min(-6.6, -6.6))) / 1.0), -58.46), min(vec2(_GLF_IDENTITY(-6.6, (_GLF_IDENTITY(-6.6, min(-6.6, -6.6))) / 1.0), -58.46), _GLF_IDENTITY(vec2(_GLF_IDENTITY(-6.6, (_GLF_IDENTITY(-6.6, min(-6.6, -6.6))) / 1.0), -58.46), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_IDENTITY(-6.6, (_GLF_IDENTITY(-6.6, min(-6.6, -6.6))) / 1.0), -58.46), log(1.0), log(1.0))), max(vec2(vec4(vec2(_GLF_IDENTITY(-6.6, (_GLF_IDENTITY(-6.6, min(-6.6, -6.6))) / 1.0), -58.46), log(1.0), log(1.0))), vec2(vec4(vec2(_GLF_IDENTITY(-6.6, (_GLF_IDENTITY(-6.6, min(-6.6, -6.6))) / 1.0), -58.46), log(1.0), log(1.0))))))))) : injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch, min(false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch, false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch)), false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch))), (false ? _GLF_FUZZED(vec2(-6.6, -58.46)) : injectionSwitch)))).y))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.8)), bool(false))) > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))) || false)), true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), (false ? _GLF_FUZZED((uvec3(22699u, 43362u, 62787u) + workgroup_size)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))))) | (gl_WorkGroupID)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) | (gl_WorkGroupID)).x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))) | (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) | (gl_WorkGroupID)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x) - 0u)) - 0u), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) / 1u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) - uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), max(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))) | (uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))), (0u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID)))))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | _GLF_IDENTITY((1u ^ 1u), (0u | 0u) ^ ((1u ^ 1u)))), 0u, 0u) | (gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (1u ^ 1u), min((0u) | (1u ^ 1u), (0u) | (1u ^ 1u)))), 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID), clamp(uvec3(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID), uvec3(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID), uvec3(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), max(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u), uint(uvec4((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u), 0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))) | (uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? 0u : _GLF_FUZZED(subgroup_id)))) | _GLF_IDENTITY((0u), 0u ^ (_GLF_IDENTITY((0u), ~ (~ ((0u))))))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-21.09)), bool(false)))) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 0u, 1u)))), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))), (0u) | (_GLF_IDENTITY(1u ^ 1u, (_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, 1u ^ 1u))) | (182324u & 0u)))), 0u, 0u) | (gl_WorkGroupID))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u, 0u) | (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(11942u, 126456u, 127341u)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))))))))))))) - uvec3(0u, 0u, 0u))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), clamp(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), clamp(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), clamp(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), clamp(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), clamp(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x)))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u ^ 0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u))), 0u, 0u) | (gl_WorkGroupID)).x) - _GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) * (0u | 1u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (uvec4(uvec3(0u, 0u, 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u, 0u), 1u), clamp(uvec4(uvec3(0u, 0u, 0u), 1u), _GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), min(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec3(0u, 0u, 0u), 1u))), _GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), min(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec4(uvec3(0u, 0u, 0u), 1u))))))) + (gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(132327u, 161152u, 176365u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u)))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), 0u))))) | uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), ~ (~ (uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))).x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), clamp(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | (gl_WorkGroupID)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), 1u))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(71922u, 23632u, 17238u))))))).x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(192821u))), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), uint(0u))), 0u)))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | (gl_WorkGroupID)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), 1u))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(71922u, 23632u, 17238u))))))).x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(192821u))), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), uint(0u))), 0u)))), 1u), uvec2(uvec4(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | (gl_WorkGroupID)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), 1u))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(71922u, 23632u, 17238u))))))).x) - 0u), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x)), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(192821u))), uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), uint(0u))), 0u)))), 1u), 1u, 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))))) || false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)), true)))))))) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) || false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(mat2(7.2, -4.0, 66.89, -37.43)) : transpose(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)))))))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(((subgroup_base)) >> _GLF_IDENTITY(0u, (0u) ^ 0u), (((subgroup_base)) >> _GLF_IDENTITY(0u, (0u) ^ 0u)) - 0u))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), max(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), max(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u))))), (_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), max(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), max(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u))))), ~ (~ (_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), max(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u)))))))))), 0u, 0u)))), _GLF_IDENTITY(((subgroup_base)), (true ? ((subgroup_base)) : _GLF_FUZZED(subgroup_id))) >> 0u), 0u ^ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base), _GLF_IDENTITY((subgroup_base), (true ? (subgroup_base) : _GLF_FUZZED(subgroup_base))))), _GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), max(uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (true ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(subgroup_base)))), uint(_GLF_IDENTITY(uvec3((true ? (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base))) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) - 0u))), 1u)), 1u) * (uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u), uvec2(_GLF_IDENTITY((true ? (subgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u) : _GLF_FUZZED(192945u))) : _GLF_FUZZED(subgroup_base)))), uint(_GLF_IDENTITY(uvec3((true ? (subgroup_base) : _GLF_FUZZED(workgroup_id)), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3((true ? (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) ^ 0u)) : _GLF_FUZZED(workgroup_id)), 1u, 1u))))), 0u)))))), _GLF_IDENTITY(((subgroup_base)), (true ? ((subgroup_base)) : _GLF_FUZZED(subgroup_id))) >> 0u))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(max(~ _GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) * 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base)))), 0u ^ (~ (~ (subgroup_base))))), 1u * (max(~ _GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) * 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base)))), 0u ^ (~ (~ (subgroup_base))))))), clamp(max(~ (~ (subgroup_base)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(28790u) : subgroup_base)))), 0u ^ (~ (~ _GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base))))))), max(~ (~ (subgroup_base)), _GLF_IDENTITY(~ (~ (subgroup_base)), 0u ^ (_GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) | 0u)))), _GLF_IDENTITY(max(~ _GLF_IDENTITY((~ (subgroup_base)), ~ (~ (_GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) >> 0u)))), _GLF_IDENTITY(~ (~ (subgroup_base)), _GLF_IDENTITY(0u, (0u) + 0u) ^ (~ (~ (subgroup_base))))), 0u | (max(~ (~ (subgroup_base)), _GLF_IDENTITY(~ (~ (subgroup_base)), 0u ^ (~ (~ (subgroup_base))))))))))))), 0u, 0u))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u);
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 0u)), (uint(uvec4(workgroup_base, 0u, 0u, 0u))) << 0u)) + subgroup_base) - 0u), workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))) + subgroup_base, _GLF_IDENTITY(1u * (workgroup_base + subgroup_base), (1u * _GLF_IDENTITY((workgroup_base + subgroup_base), min(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base)))) + (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), subgroup_base)), workgroup_base + subgroup_base)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)), (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) << 0u)) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)), (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) << 0u)) % subgroup_size, uint(uint((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)), (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) << 0u)) % subgroup_size)))) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-19417)), _GLF_FUZZED(-44.49)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-17015) : _GLF_IDENTITY(1, 0 ^ (1))))))], (injectionSwitch)[1]))), bvec2(true, true))), injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) % 2))) == 0)
  {
   read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) + 0u), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) + 0u)) + 0u), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) + 0u), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) + 0u)))], 4, 64, 2);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || (_GLF_IDENTITY((bool(_GLF_DEAD(false))), true && ((bool(_GLF_DEAD(false))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false, false))), true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))) && true))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.6) : injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (injectionSwitch.x)) > injectionSwitch.y))), false, true))))), (injectionSwitch.x > injectionSwitch.y) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), injectionSwitch.x)))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))) || false), false, true), false))))) || _GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec2(false, true)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
