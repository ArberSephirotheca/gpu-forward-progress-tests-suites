#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)) && true))), ! (! ((bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)) && true)))))) && true))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat4x3(injectionSwitch, 0.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0)))))) && _GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true)) || _GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true)) || _GLF_IDENTITY(false, (false) && true))) && true))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat4x3(injectionSwitch, 0.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0)))))) && _GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true)) || _GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true)) || _GLF_IDENTITY(false, (false) && true))) && true))))))), true, false))) && true), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), max(float(mat3(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat3(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat3(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), max(float(mat3(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat3(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))) - 0.0))))) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true), true, false))) || false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), min((0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), (0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u)))))))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u), (uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u), ~ (~ (uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), 0u | (_GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, 1u, 1u)) << 0u)))), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) + subgroup_base, 1u, 0u, 0u), (uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))))) : _GLF_FUZZED(workgroup_base)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)), _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) | 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), 1u, 0u, 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(79.31) : 1.0)), injectionSwitch.y))) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)))))), (~ (~ (_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (0u | 0u) ^ (4u))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(uvec4(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u))))) + subgroup_base, 1u, 0u, 0u)), 0u, 0u), (uvec3(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), 0u, 0u)) / (uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, uint(uvec3(1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))), 1u), uint(uint(max(_GLF_IDENTITY(1u, uint(uvec3(1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))), 1u)))))) | uvec3(1u, 1u, 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec3(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), 0u, 0u), (uvec3(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), 0u, 0u)) / (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u)))))))), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), 0u, 0u)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), min(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uint(92729)))))))))), 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), 1u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), uvec4(0u, 0u, 0u, 0u) + (uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 0u)), _GLF_IDENTITY(0u | (uint(uvec2(subgroup_local_id, 0u))), 0u + (_GLF_IDENTITY(0u | (uint(uvec2(subgroup_local_id, 0u))), (false ? _GLF_FUZZED(subgroup_size) : 0u | (uint(uvec2(subgroup_local_id, 0u)))))))))) : 1u)), 1u, 1u)), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(num_workgroup) : subgroup_base)), subgroup_base, subgroup_base)), 1u, 0u, 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), (uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))) / ((_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) + 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), _GLF_IDENTITY(0u, (0u) - 0u), 0u)), 0u ^ (uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), _GLF_IDENTITY(1u, 0u | (1u)), 1u)), 0u, 0u)))), uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))) | (1u)), 0u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + subgroup_base, 1u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec4(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + subgroup_base, 1u, 0u, 0u))))))), (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | 0u))), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, min(0u | 0u, 0u | 0u))) / 1u)) | (0u)), 0u) + (uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), 0u ^ (clamp(1u, 1u, 1u)))), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y))) + subgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u + (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (1u & 1u)), (uvec2(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (1u & 1u))) | (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))), ~ (1u)))))), 0u | (_GLF_IDENTITY(uint(1u), 0u | (uint(1u))))), (1u & 1u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (1u & 1u)), (uvec2(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (1u & 1u))) | (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))), ~ (1u)))))), 0u | (uint(1u))), (1u & 1u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (1u & 1u)), (uvec2(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (1u & 1u))) | (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), clamp(_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))), ~ (1u), ~ (1u))), ~ (1u)))), (false ? _GLF_FUZZED(usubBorrow(subgroup_base, subgroup_id, subgroup_local_id)) : (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), clamp(_GLF_IDENTITY(~ (1u), uint(uint(~ (1u)))), ~ (1u), ~ (1u))), ~ (1u)))))))), 0u | (uint(1u))), (1u & 1u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (1u & 1u)), (uvec2(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (1u & 1u))) | (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))), ~ (1u)))))), 0u | (uint(1u))), (1u & 1u)))))) / 1u)))))))), (uint(uvec2(workgroup_base + subgroup_base, 1u))) ^ 0u)))), 1u, 0u, 0u))))))))))))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 0u | (workgroup_base + subgroup_base)))), 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)) + 0u)) / 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u), 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u), 0u)), 0u)), (uint(uvec2(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), uint(0u))) | 0u), 0u)), 0u))) | (uint(uvec2(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(uint(0u), uint(0u)))) / 1u)))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), uint(uvec3(uint(uvec2(0u, 0u)), 0u, 1u))))), 0u)), 0u))))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)), max(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))) + 0u))), 0u | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)))), _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, 1u * (0u)), 0u)), uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u), (uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))), uint(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u * (uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(1u, ~ (~ (1u))) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))) - _GLF_IDENTITY(0u, (0u) << 0u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) + subgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY((1u) >> 0u, ((1u) >> 0u) - 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (1u) >> 0u))) * 1u) << 0u))), 1u)), 0u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY((1u) >> 0u, ((1u) >> 0u) - 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (1u) >> 0u))) * 1u) << 0u))), 1u)), 0u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY((1u) >> 0u, ((1u) >> 0u) - 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (1u) >> 0u))) * 1u) << 0u))), 1u)), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY((1u) >> 0u, ((1u) >> 0u) - 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (1u) >> 0u))) * 1u) << 0u))), 1u)), 0u, 0u))) ^ 0u), uint(uvec4(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) + subgroup_base, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY((1u) >> 0u, ((1u) >> 0u) - 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (1u) >> 0u))) * 1u) << 0u))), 1u)), 0u, 0u)))), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base + subgroup_base, 1u, 0u, 0u)))))))))))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))) - (0u ^ 0u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))), (((subgroup_local_id + 1) % subgroup_size)) << 0u) : _GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), subgroup_size)), (false ? _GLF_FUZZED(166975u) : _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, workgroup_base, subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, workgroup_base, subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, workgroup_base, subgroup_size)), (_GLF_FUZZED(uaddCarry(subgroup_id, workgroup_base, subgroup_size))) | 0u))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (0u ^ 0u))), max(uint(uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 0u))), uint(uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 0u))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, (1) >> 0))))) - (0u ^ 0u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))), ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, (1) >> 0))))) - (0u ^ 0u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))) ^ 0u), (((subgroup_local_id + 1) % subgroup_size)) << 0u) : _GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), subgroup_size)), (false ? _GLF_IDENTITY(_GLF_FUZZED(166975u), min(_GLF_FUZZED(166975u), _GLF_FUZZED(166975u))) : _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, workgroup_base, subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, workgroup_base, subgroup_size)), ~ (~ (_GLF_FUZZED(uaddCarry(subgroup_id, workgroup_base, subgroup_size))))))))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))));
 uint read = _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, ((0) / 1) - 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) / 1u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) / 1u)) ^ 0u) % 2) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) ^ 0)))))) == 0), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) % 2))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (_GLF_IDENTITY(subgroup_local_id % 2, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | 0u)))))), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (subgroup_local_id % 2)), (min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (subgroup_local_id % 2))) ^ 0u)))), _GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))))), clamp(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-3821) : 2))), clamp((subgroup_local_id % 2), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (subgroup_local_id % 2))), min(_GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u), clamp(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u), _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u), _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)))), (subgroup_local_id % 2))), _GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id % 2 : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))), (_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2)))) | (_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))))))), _GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2)), clamp(_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2)), max(_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))))))) - 0u)), (subgroup_local_id % 2))), min(_GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (subgroup_local_id % 2))), _GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) | 0u)))) - 0u)), (subgroup_local_id % 2))))), _GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))))), _GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (subgroup_local_id % 2))), min(_GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) % 2, subgroup_local_id % 2))) - 0u)), (subgroup_local_id % 2))), _GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (subgroup_local_id % 2))))), _GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))))))) == 0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) && true), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) && true), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) && true), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
