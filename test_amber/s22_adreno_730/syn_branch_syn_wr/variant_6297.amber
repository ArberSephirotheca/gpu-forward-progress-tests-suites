#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, true))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, true, true)))))) || false))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bool(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(bool(bool(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, ! (! (true))))))), false, true, false)))), _GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), _GLF_IDENTITY(false, (false) || false) || (false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(4092.2204)), bvec2(false, false))).x > injectionSwitch.y), true))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), (_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), _GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), _GLF_IDENTITY(false || (false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true)))), (false || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))) && true)), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(false, ! (! (false))) || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true), true))))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)))) || false), true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), _GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (false || _GLF_IDENTITY((bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY((bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), true && ((bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true)), true)))))) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y)))))))), true, true))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), true), false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (false || (bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y), true))))), true), true))))))), false, false, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))))))), true, true))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bool(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(bool(bool(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, ! (! (true))))))), false, true, false)))), _GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), _GLF_IDENTITY(false, (false) || false) || (false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(4092.2204)), bvec2(false, false))).x > injectionSwitch.y), true))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), (_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), _GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), _GLF_IDENTITY(false || (false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true)))), (false || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))) && true)), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(false, ! (! (false))) || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true), true))))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)))) || false), true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), _GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (false || _GLF_IDENTITY((bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY((bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), true && ((bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true)), true)))))) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y)))))))), true, true))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), true), false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (false || (bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y), true))))), true), true))))))), false, false, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))))))), true, true))))))), true)), false || (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bool(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(bool(bool(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(true, ! (! (true))))))), false, true, false)))), _GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), _GLF_IDENTITY(false, (false) || false) || (false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(4092.2204)), bvec2(false, false))).x > injectionSwitch.y), true))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), (_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), _GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), _GLF_IDENTITY(false || (false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true)))), (false || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))) && true)), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(false, ! (! (false))) || (false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true), true))))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)))) || false), true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), _GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), false || (false || _GLF_IDENTITY((bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY((bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), true && ((bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true)), true)))))) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y)))))))), true, true))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), true), false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (false || (bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y), true))))), true), true))))))), false, false, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y) || false), ! (! (bool((injectionSwitch.x > injectionSwitch.y) || false)))))))))))), true, true))))))), true))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), min(uint(uint(subgroup_id * subgroup_size)), uint(uint(subgroup_id * subgroup_size)))), max(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u))) : subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), 0u ^ (uint(subgroup_id * subgroup_size)))))));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), 0), (ivec2(_GLF_IDENTITY(64, (false ? _GLF_IDENTITY(_GLF_FUZZED(94970), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(94970))) : 64)), 0)) >> ivec2(0, 0)))), (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) ^ (0 | 0))))), (ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), 0)) >> ivec2(0, 0))))) - 0), 0, 0)))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(0, 0 ^ (0)), 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23524) : 64))))), 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), max(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, 0 + (0))), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), ~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, clamp(64, 64, 64))))), 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, 0 ^ (64)), 64)), 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))))))))), _GLF_IDENTITY(0, min(0, 0)), 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) * 1))), (false ? _GLF_FUZZED(-66826) : _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), ~ (~ (int(ivec2(64, 0)))))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-68731))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) * 1))))), 0, 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + int(_GLF_ZERO(0.0, injectionSwitch.x)), ((0) + int(_GLF_ZERO(0.0, injectionSwitch.x))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, 0))))), (true ? clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(0, 0 ^ (0)), 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23524) : 64))))), 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), max(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, 0 + (0))), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), ~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, clamp(64, 64, 64))))), 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, 0 ^ (64)), 64)), 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))))))))), _GLF_IDENTITY(0, min(0, 0)), 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) * 1))), (false ? _GLF_FUZZED(-66826) : _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), ~ (~ (int(ivec2(64, 0)))))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-68731))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) * 1))))), 0, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), _GLF_IDENTITY(ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23524) : 64))))), 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))), clamp(_GLF_IDENTITY(ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23524) : 64))))), 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))), (ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23524) : 64))))), 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))) ^ ivec2(0, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23524) : 64))))), 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23524) : 64))))), 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY((ivec2(64, 0)) - ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(98892, -28159)) : (ivec2(64, 0)) - ivec2(0, 0)))), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY((ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), min((ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (64) - 0), 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), min(ivec2(64, 0), ivec2(64, 0))), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(65684) : 0))))), clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) ^ ivec2(0, 0)), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))), (_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))), (_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))) - ivec2(0, 0))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), clamp(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), ~ (~ (ivec2(64, 0)))), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))), ivec2(ivec2(_GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))), (_GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))) * ivec2(1, 1)))))))), max(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, 0 + (0))), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) ^ 0)), 0)), ivec2(64, 0))))))))), ~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, clamp(64, 64, 64))))), 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, 0 ^ (64)), 64)), 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) / 1))), ivec2(64, 0)))))))))))))))), _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-75135) : 0))), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) * 1))), (false ? _GLF_FUZZED(-66826) : _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), ~ (~ (int(ivec2(64, 0)))))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(0, (0) / 1)))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-68731))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) * 1))))), 0, 0)))) * ivec3(1, 1, 1))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + int(_GLF_ZERO(0.0, injectionSwitch.x)), ((0) + int(_GLF_ZERO(0.0, injectionSwitch.x))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, 0)), (ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, 0))) << ivec3(0, 0, 0))))) : _GLF_FUZZED(36427))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), 0)) >> ivec2(0, 0), ((ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), 0)) >> ivec2(0, 0)) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(4), ivec2(4))))))), (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) ^ (0 | 0))))), (ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), 0)) >> ivec2(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec3(-14527, -18678, 35036)[2]) : 0))) << 0)))))) - 0), 0, 0)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(0, 0 ^ (0)), 0), ivec3(1, _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))), 1) * (ivec3(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) ^ ivec2(0, 0)))), 0, 0)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(0, 0 ^ (0)), 0), ivec3(1, _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))), 1) * (ivec3(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) ^ ivec2(0, 0)))), 0, 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(0, 0 ^ (0)), 0), ivec3(1, _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))), 1) * (ivec3(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) ^ ivec2(0, 0)))), 0, 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(0, 0 ^ (0)), 0), ivec3(1, _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))), 1) * (ivec3(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) ^ ivec2(0, 0)))), 0, 0)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, _GLF_IDENTITY(0, (0) >> (0 & 19012)))), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false))))))) ? _GLF_FUZZED(23524) : 64))))), 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), max(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, 0 + (0))), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), ~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, clamp(64, 64, 64))))), 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, 0 ^ (64)), 64)), 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))))))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), max(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, 0 + (0))), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), ~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, clamp(64, 64, 64))))), 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, 0 ^ (64)), 64)), 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), max(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, 0 + (0))), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), ~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, clamp(64, 64, 64))))), 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, 0 ^ (64)), 64)), 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))))))))))), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))), 0), ivec3(_GLF_IDENTITY(1, (1) * (1 | 0)), 1, 1) * (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), 0 | (int(ivec2(64, 0))))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), 0 | (int(ivec2(64, 0)))))))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) * 1))), (false ? _GLF_FUZZED(-66826) : _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), ~ (~ (int(ivec2(64, 0)))))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-68731))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) * 1))))), 0, 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - (0 | 0)), 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + int(_GLF_ZERO(0.0, injectionSwitch.x)), ((0) + int(_GLF_ZERO(0.0, injectionSwitch.x))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, 0))))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(0, 0 ^ (0))))), 0, 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), 0), (ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), 0)) >> ivec2(0, 0)))), (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(94970) : 64, min(false ? _GLF_FUZZED(94970) : 64, false ? _GLF_FUZZED(94970) : 64)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(0, 0, _GLF_IDENTITY(0, (0) ^ (0 | 0))))), (ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(94970) : 64)), 0)) >> ivec2(0, 0))))) - 0), 0, 0)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(0, 0 ^ (0)), 0), ivec3(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 1) * (ivec3(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0, 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) << 0), 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23524) : 64))))), 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec2(0, 0))), 0)))), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0 & -83309) | (0)))), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0), (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) | (_GLF_IDENTITY(ivec2(64, 0), max(ivec2(64, 0), ivec2(64, 0)))))) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0, clamp((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0, (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0, (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0))))))))), (~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))) ^ 0)))) | 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(12026)))), (ivec2(64, 0)) - _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec2(0, 0))), 0)), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0), ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec2(0, 0))), 0)), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0), 1, 1)))), ivec2(64, 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 0), max(ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), max(ivec2(64, 0), ivec2(64, 0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, (0) + (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(0), int(0)))), 0)), 0)), ivec2(64, 0))))))))), max(~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) >> 0), 0)), 0 + (0))), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(_GLF_IDENTITY(1, 0 | (1)), 1) * (min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), clamp(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0), ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))), ivec2(64, 0))))))))), ~ (int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - 0), 64))))), 0), ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) - ivec2(0, 0)), ivec2(64, 0)), ivec2(1, 1) * (min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (false ? _GLF_FUZZED((- -86137)) : 64)), _GLF_IDENTITY(64, 0 ^ (64)), 64)), 0), (ivec2(64, 0)) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), ivec2(64, 0)))))))))))))))), _GLF_IDENTITY(0, min(0, 0)), 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43450) : 0))), _GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) * 1))), (false ? _GLF_FUZZED(-66826) : _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), ~ (~ (int(ivec2(64, 0)))))), 0 + (_GLF_IDENTITY(64, int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), clamp(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) << 0), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-68731))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) / 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) * 1), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) * 1), 1, 0)), clamp(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) * 1), 1, 0)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) * 1), 1, 0)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), max(_GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(64, int(ivec2(64, 0)))))) * 1), 1, 0))))))))), 0, 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, 0 | (64)), 0), ivec2(ivec2(ivec2(_GLF_IDENTITY(64, 0 | (64)), 0)))))), 0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + int(_GLF_ZERO(0.0, injectionSwitch.x)), ((0) + int(_GLF_ZERO(0.0, injectionSwitch.x))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (ivec3(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, 0 | (64)), 0), ivec2(ivec2(ivec2(_GLF_IDENTITY(64, 0 | (64)), 0)))))), 0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) + int(_GLF_ZERO(0.0, injectionSwitch.x)), ((0) + int(_GLF_ZERO(0.0, injectionSwitch.x))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) - (1 ^ 1)), int(ivec2(64, 0))), 0, 0)))))))) | 0))), 4);
 if((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_local_id)), subgroup_local_id)) % 2) == 0)
  {
   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), (buf[virtual_gid]) << 0u), 4, 64, _GLF_IDENTITY(2, (2) / 1));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x3(4.3, -7161.4097, 3973.8272, -655.773, -5015.1537, 576.513)) : mat2x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0))))).y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-355.347, 5.5)) : (injectionSwitch) * mat2(1.0))), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)) && true), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) * mat2(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec2((injectionSwitch) * mat2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(vec2((injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2((injectionSwitch) * mat2(1.0))))) : _GLF_FUZZED(injectionSwitch)))), (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), (true ? mat2(mat4x2(mat2(1.0))) : _GLF_FUZZED(mat2(-98.39, 9.0, -816.352, -17.05))))), (injectionSwitch) * mat2(1.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y)) && true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)) && true), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) * mat2(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec2((injectionSwitch) * mat2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(vec2((injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2((injectionSwitch) * mat2(1.0))))) : _GLF_FUZZED(injectionSwitch)))), (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), (true ? mat2(mat4x2(mat2(1.0))) : _GLF_FUZZED(mat2(-98.39, 9.0, -816.352, -17.05))))), (injectionSwitch) * mat2(1.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y)) && true)))), true))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))))).y), true, true, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), tan(0.0)), max(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), tan(0.0)), vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), tan(0.0)))))) * mat2(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) * vec2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0))), max(vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0))), vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0))))))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0))), max(vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0))), vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0))))))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-0.8, 848.081, 937.860, 8.3, -4.3, -3.8, 4.8, 4782.3688, 0.6)) : mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0))), max(vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0))), vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0))))))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))))))) && true)))), false, true)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   _GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))], _GLF_IDENTITY(4, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(-75546) : 4)), _GLF_IDENTITY(64, (64) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 2), (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true, true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true, true))))))))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
