#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))))), (injectionSwitch.x > injectionSwitch.y))), false, false)))) || false))))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false), true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-83.06))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-83.06))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-83.06))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) || false))) && true)))) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.9) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), false || (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true), true))))))))), (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false, bool(bvec4((! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true))) || false)))))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, ! (! (true))))))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true))))))), false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true), true))))))))), (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false, bool(bvec4((! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true))) || false)))))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, ! (! (true))))))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true))))))), false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true), true))))))))), (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false, bool(bvec4((! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true))) || false)))))))) || false), _GLF_IDENTITY(true, bool(bool(true))), false, false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, ! (! (true))))))))), (injectionSwitch.x < injectionSwitch.y))), true, true, true))))))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, _GLF_IDENTITY(true, (true) || false)))), false || (bool(bool(false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(762.320), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(762.320), 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), clamp(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) * sqrt(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(-9151.1531), (vec3(1.0, 0.0, 0.0))[2]), vec3(_GLF_FUZZED(-5724.3897), (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED(6614.7517)), bvec3(false, true, false))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0) + (mat4(_GLF_FUZZED(762.320), 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-594.668))), 0.0)))))), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0)))), bool(true)), clamp(mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0)))), bool(true)), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0)))), bool(true)), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0 + (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-741.131) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, log(1.0)))), bool(true)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(6.7) : _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-1.0))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))))), bool(true))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) - determinant(mat2(0.0, 0.0, 0.0, tan(0.0))))))), bool(true)))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(6.7) : _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-1.0))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))))), bool(true))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) - determinant(mat2(0.0, 0.0, 0.0, tan(0.0))))))), bool(true)))), float(mat4x3(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(6.7) : _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-1.0))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))))), bool(true))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) - determinant(mat2(0.0, 0.0, 0.0, tan(0.0))))))), bool(true)))), 0.0, 0.0, exp(0.0), 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(6.7) : _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-1.0))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))))), bool(true))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) - determinant(mat2(0.0, 0.0, 0.0, tan(0.0))))))), bool(true)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(((- 44.21) / 2.8)), (_GLF_IDENTITY(_GLF_FUZZED(((- 44.21) / 2.8)), (_GLF_FUZZED(((- 44.21) / 2.8))) + abs(0.0))) * 1.0)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-2419.4410)), float(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))), clamp(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))), max(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))), mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))), mix(float(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false))))))), float(_GLF_FUZZED(5.7)), bool(false))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(sqrt(1.0) * (injectionSwitch.y), 0.0 + (sqrt(1.0) * (injectionSwitch.y)))), max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-9232.6074)))) / 1.0), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(((- 44.21) / 2.8)), (_GLF_IDENTITY(_GLF_FUZZED(((- 44.21) / 2.8)), (_GLF_FUZZED(((- 44.21) / 2.8))) + abs(0.0))) * 1.0)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-2419.4410)), float(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) && true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))), clamp(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(11.14) : 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec3(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))), float(_GLF_FUZZED(-0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false))), false, _GLF_IDENTITY(true, bool(bool(true))))))))), max(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))), mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))), mix(float(mix(float(_GLF_FUZZED(762.320)), float(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false))))))), float(_GLF_FUZZED(5.7)), bool(false))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) * cos(0.0)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) + 0.0), 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(true), false), false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(bool(true), false), false)), false), bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(bool(true), false), false)), false), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(bool(true), false), _GLF_IDENTITY(false, (false) || false))), false), bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(bool(true), false), false)), false), true)))))))))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(7.6) : 0.0), ((false ? _GLF_FUZZED(7.6) : 0.0)) - 0.0)), 1.0, 1.0)), (true ? float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.6) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) - 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), (false ? _GLF_FUZZED(7.6) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.6) : 0.0)), (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.6) : 0.0)) : _GLF_FUZZED(ldexp(1.4, 51269)))))), 1.0, 1.0)) : _GLF_FUZZED(-8.6)))), log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(76.04))), 0.0, log(1.0)))), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), _GLF_IDENTITY(false, (false) && true))))))))), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), float(_GLF_IDENTITY(vec2(clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), 1.0), min(vec2(clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), 1.0), vec2(clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), 1.0)))))), 1.0, 0.0, 0.0, 1.0)))))))) && true), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), clamp(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(mix(196.318, 8.7, -922.712)))), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(24.17)), bool(false))))))), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false))), false)))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), false)), true && (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7241.8663) : 0.0))), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(smoothstep(7.6, -3202.4514, 4915.2046)) : dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4912.3494)), bool(false))), 1.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7241.8663) : 0.0))), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(smoothstep(7.6, -3202.4514, 4915.2046)) : dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4912.3494)), bool(false))), 1.0, 1.0, 0.0, 0.0, 1.0)))))), bool(bvec2(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * cos(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7241.8663) : 0.0))), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(smoothstep(7.6, -3202.4514, 4915.2046)) : dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4912.3494)), bool(false))), 1.0, 1.0, 0.0, 0.0, 1.0)))))), false))))), false))))))), (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(7385.8397))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), mix(vec4(_GLF_FUZZED(vec3(3.0, 373.875, 8281.7311).g), _GLF_FUZZED(2.8), _GLF_FUZZED(-26.17), (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))[3]), vec4((vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))[0], (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))[1], (vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))[2], _GLF_FUZZED(4326.8668)), bvec4(true, true, true, false))), vec4(0.0, 1.0, 0.0, log(1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), log(1.0))), mix(float(_GLF_FUZZED(762.320)), float(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (bool(true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (bool(true)))), bool(bvec3(! (_GLF_IDENTITY(bool(true), false || (bool(true)))), true, true))))))), false), false)))))))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)))))))) && true), true)))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), max(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, 1u))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, sin(_GLF_IDENTITY(0.0, (0.0) / 1.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)))) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (0) | (0))), (4) + 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(bvec2((subgroup_local_id % 2) == 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), max(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), uint(_GLF_IDENTITY(uint(atomicLoad(buf[virtual_gid], 4, 64, 2)), (_GLF_IDENTITY(uint(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(4, (4) / ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(ivec2(2, 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2)))))), _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, 64)))), 2)), ~ (~ (uint(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(4, (4) / ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(ivec2(2, 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2)))))), _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, 64)))), 2)))))) << 0u)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) || false)))), ! (! ((_GLF_DEAD(false)) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, true)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)), true, true, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, true)), true, true, false)))), ! (! (bool(bool(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true))))), true, true, false))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4504.0776)), vec2(_GLF_FUZZED((82.83 + -337.938)), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
