#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3162.9055) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-185.580)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-3442.9946), _GLF_FUZZED(1111.6231)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(-1575.8384, -877.768, -872.710, 44.57), vec4(-3.1, -632.824, 9.4, -2.7))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(false, ! (! (false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))) || false)) || false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0)))), clamp(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0))))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0)))), clamp(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0))))))).x)) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, (true) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((uvec3(116296u, 1504u, _GLF_IDENTITY(_GLF_IDENTITY(4313u, uint(uint(4313u))), (4313u) + 0u)) + uvec3(119919u, _GLF_IDENTITY(42754u, 1u * (_GLF_IDENTITY(42754u, (false ? _GLF_FUZZED(subgroup_id) : 42754u)))), 3147u)), max((uvec3(116296u, 1504u, _GLF_IDENTITY(_GLF_IDENTITY(4313u, uint(uint(4313u))), (4313u) + 0u)) + uvec3(119919u, _GLF_IDENTITY(42754u, 1u * (_GLF_IDENTITY(42754u, (false ? _GLF_FUZZED(subgroup_id) : 42754u)))), 3147u)), _GLF_IDENTITY((uvec3(116296u, 1504u, _GLF_IDENTITY(_GLF_IDENTITY(4313u, uint(uint(4313u))), (4313u) + 0u)) + uvec3(119919u, _GLF_IDENTITY(42754u, 1u * (_GLF_IDENTITY(42754u, (false ? _GLF_FUZZED(subgroup_id) : 42754u)))), 3147u)), uvec3(0u, 0u, 0u) ^ ((uvec3(116296u, 1504u, _GLF_IDENTITY(_GLF_IDENTITY(4313u, uint(uint(4313u))), (4313u) + 0u)) + uvec3(119919u, _GLF_IDENTITY(42754u, 1u * (_GLF_IDENTITY(42754u, (false ? _GLF_FUZZED(subgroup_id) : 42754u)))), 3147u))))))), (_GLF_FUZZED((uvec3(116296u, 1504u, 4313u) + uvec3(119919u, 42754u, 3147u)))) | (_GLF_FUZZED((uvec3(116296u, 1504u, _GLF_IDENTITY(4313u, clamp(_GLF_IDENTITY(4313u, uint(uint(4313u))), _GLF_IDENTITY(4313u, clamp(4313u, 4313u, _GLF_IDENTITY(4313u, clamp(4313u, 4313u, 4313u)))), 4313u))) + uvec3(119919u, 42754u, _GLF_IDENTITY(3147u, min(_GLF_IDENTITY(3147u, (3147u) | (3147u)), _GLF_IDENTITY(3147u, uint(_GLF_IDENTITY(uint(3147u), (_GLF_IDENTITY(uint(3147u), (uint(3147u)) ^ 0u)) / 1u)))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - 0u), uint(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, (1u) - 0u)))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(_GLF_IDENTITY(5u, (5u) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | (5u))) | 0u)))), uint(5u))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(uint(5u), uint(5u)))))) | ((_GLF_IDENTITY(uint(5u), uint(5u))))), 1u, 1u), max(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(uint(5u), uint(5u)))))) | ((_GLF_IDENTITY(uint(5u), uint(5u))))), 1u, 1u), uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(uint(5u), uint(5u)))))) | ((_GLF_IDENTITY(uint(5u), uint(5u))))), 1u, 1u))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> _GLF_IDENTITY(0u, (0u) / 1u))), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))) | (_GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (5u), uint(_GLF_IDENTITY(uvec2(~ (5u), (1u ^ 1u)), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(~ (5u), (1u ^ 1u)), min(uvec2(~ (5u), (1u ^ 1u)), uvec2(~ (5u), (1u ^ 1u)))))))), (~ (5u)) * 1u)))), uint(5u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))), 0u + (_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), _GLF_IDENTITY((~ (5u)), min((~ (5u)), (~ (5u)))) * 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)))), ~ (~ (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)))), ~ (~ (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)))), ~ (~ (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)))), ~ (~ (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))))))))))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec3(194188u, 33211u, 131882u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)))), ~ (~ (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)))), ~ (~ (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)))), ~ (~ (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u))))))))))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))) >> 0u)), uint(5u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (5u), _GLF_IDENTITY((~ (5u)), (_GLF_IDENTITY((~ (5u)), ((~ (5u))) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)), 1u, 0u)), (uint(uvec3(~ (_GLF_IDENTITY(~ (5u), (~ (5u)) * 1u)), 1u, 0u))) | 0u))) ^ (0u ^ 0u)))), uint(5u))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, min(5u, 5u))), (uint(_GLF_IDENTITY(5u, min(5u, 5u)))) / 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) << 0u)))), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), _GLF_IDENTITY(0u, (0u) / 1u))))))))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) << 0u)))), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), _GLF_IDENTITY(0u, (0u) / 1u)))))))), uvec3(uvec3(uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) << 0u)))), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), _GLF_IDENTITY(0u, (0u) / 1u)))))))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) << 0u)))), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, clamp((0u) / 1u, (0u) / 1u, (0u) / 1u)))))))))), clamp(uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) << 0u)))), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, clamp((0u) / 1u, (0u) / 1u, (0u) / 1u)))))))))), _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) << 0u)))), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, clamp((0u) / 1u, (0u) / 1u, (0u) / 1u)))))))))), (uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) << 0u)))), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, clamp((0u) / 1u, (0u) / 1u, (0u) / 1u))))))))))) | (uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) << 0u)))), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, clamp((0u) / 1u, (0u) / 1u, (0u) / 1u)))))))))))), uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) << 0u)))), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, clamp((0u) / 1u, (0u) / 1u, (0u) / 1u)))))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u << _GLF_IDENTITY(uint(5u), uint(5u))))), 1u * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) / 1u), (true ? _GLF_IDENTITY(5u, (5u) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(subgroup_size))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) / 1u), (true ? _GLF_IDENTITY(5u, (5u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_size))), 1u, 1u)))), uint(5u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | (5u))) - (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, max(0u, 0u)), (0u ^ _GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)))), uint(5u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | (5u))) - (0u ^ _GLF_IDENTITY(0u, max(0u, 0u))))), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | (5u))) - (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), max(max(0u, 0u), max(0u, 0u))))))), uint(5u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | (5u))) - (0u ^ _GLF_IDENTITY(0u, max(0u, 0u))))), uint(5u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | (5u))) - (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), 1u * (max(0u, 0u))))))), uint(5u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | (5u))) - (0u ^ _GLF_IDENTITY(0u, max(0u, 0u))))), uint(5u)))))), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), max((1u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u), uint(5u))), clamp((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u)), 0u | (_GLF_IDENTITY(uint(5u), uint(5u))))))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) << 0u), ~ (~ (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uint(uint(5u)), max(uint(uint(5u)), uint(uint(5u)))))))))))))) ^ 0u)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(143926u, 185708u, _GLF_IDENTITY(7238u, ~ (~ (7238u))))) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), uint(5u))), 0u + ((_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), 1u * ((1u)))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(max(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(5u, max(_GLF_IDENTITY(5u, (5u) >> 0u), 5u))), (max(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(5u, max(_GLF_IDENTITY(5u, (5u) >> 0u), 5u)))) | (max(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(5u, max(_GLF_IDENTITY(5u, (5u) >> 0u), 5u))))))), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))) >> 0u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(uint(_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (~ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) / _GLF_IDENTITY(1u, (1u) | (1u)))) + 0u)))) | 0u))))))) ^ 0u)))))), (false ? _GLF_FUZZED(uvec3(143926u, 185708u, _GLF_IDENTITY(7238u, ~ (~ (7238u))))) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), uint(5u))), 0u + ((_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(5u, _GLF_IDENTITY(max(_GLF_IDENTITY(5u, (5u) >> 0u), 5u), max(max(_GLF_IDENTITY(5u, (5u) >> 0u), 5u), _GLF_IDENTITY(max(_GLF_IDENTITY(5u, (5u) >> 0u), 5u), (max(_GLF_IDENTITY(5u, (5u) >> 0u), 5u)) << 0u))))))), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(uint(_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(uint(5u), uint(5u))))), (~ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)) + 0u)))) | 0u))))))) ^ 0u))))))) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(104102u, 131563u, 58880u), ~ (_GLF_IDENTITY(~ (uvec3(104102u, 131563u, 58880u)), min(~ (uvec3(104102u, 131563u, 58880u)), _GLF_IDENTITY(~ (uvec3(104102u, 131563u, 58880u)), (false ? _GLF_FUZZED(uvec3(165085u, 38828u, 64956u)) : ~ (uvec3(104102u, 131563u, 58880u))))))))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, exp(0.0), 1.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (gl_WorkGroupSize.x)), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED((num_workgroup)) : (~ (gl_WorkGroupSize.x)))))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x)))), min(~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), _GLF_IDENTITY(min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x))), max(min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x))), min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x))))) : _GLF_FUZZED(subgroup_local_id)))), ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x)))))), ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (gl_WorkGroupSize.x)), (~ (gl_WorkGroupSize.x))))))) + 0u))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tan(73.97)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.2) : injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-622.483) : injectionSwitch.y)), 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), sqrt(0.0))), (true ? float(vec3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), sqrt(0.0))) : _GLF_FUZZED(48.91)))) : _GLF_FUZZED(99.00))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), 1.0)), 0.0 + (float(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-622.483) : injectionSwitch.y)), 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), sqrt(0.0))), (true ? float(vec3(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), sqrt(0.0))) : _GLF_FUZZED(48.91)))) : _GLF_FUZZED(99.00))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), 1.0))))), min(injectionSwitch.y, injectionSwitch.y)))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-622.483), (false ? _GLF_FUZZED(-1828.0078) : _GLF_FUZZED(-622.483))) : injectionSwitch.y)), _GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), (vec4(1.0, 0.0, 1.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), min(injectionSwitch.y, injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u, ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u) >> 0u), 0u | ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))))), 0u)), clamp(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u, 0u | ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u)), 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u, 0u | ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u)), 0u)), (uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u, 0u | ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u)), 0u))) >> 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u, 0u | ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u, 0u | ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), workgroup_id))) << 0u))))), 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))))), _GLF_IDENTITY((~ (workgroup_size * workgroup_id)), min((~ (workgroup_size * workgroup_id)), (~ (workgroup_size * workgroup_id)))) | (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u), 0u)) ^ (workgroup_id))))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u & 1u))))) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-7.5, 841.579)), (false ? _GLF_FUZZED(vec2(2333.7519, -2.2)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-7.5, 841.579)), vec2(vec3(_GLF_FUZZED(vec2(-7.5, 841.579)), 0.0))))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), (bool(bool(_GLF_IDENTITY(false, (false) && true)))) || false)), _GLF_IDENTITY(true, bool(bool(true))) && (false)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(94.10, -57.35, 84.62).s)), float(injectionSwitch.x), bool(true))))), (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x))) / 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(acos(308.394)), mix(float(true ? injectionSwitch.x : _GLF_FUZZED(acos(308.394))), float(_GLF_FUZZED(1.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3990.4487)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), mix(vec2((vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(223.269)), bool(false))), 1.0, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED((-5.6 * -536.489))), vec2(_GLF_FUZZED(-343.057), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.6) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))[1]), bvec2(false, true)))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), mix(float(min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(acos(308.394)), mix(float(true ? injectionSwitch.x : _GLF_FUZZED(acos(308.394))), float(_GLF_FUZZED(1.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3990.4487)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), mix(vec2((vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(223.269)), bool(false))), 1.0, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED((-5.6 * -536.489))), vec2(_GLF_FUZZED(-343.057), (vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.6) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec4(sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))[1]), bvec2(false, true)))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(8008.6910)), bool(false)))) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-805.326)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-805.326)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-805.326)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), bool(bvec2(! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-805.326)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), mix(vec2((max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(-30.42)), vec2(_GLF_FUZZED(6.0), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))[1], min((max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))[1], (max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))[1]))), bvec2(false, true)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x) - 0.0) < injectionSwitch.y)))), (bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x) - 0.0) < injectionSwitch.y))))) && true)) && (false)), true)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))))))) * 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true, true, true)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true, true, true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), ! (! (bool(bvec3(false, false, true))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), min(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uaddCarry(workgroup_id, 65228u, num_workgroup)) : workgroup_base)), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) / 1u))) + subgroup_base)))), (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), min(~ (workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uaddCarry(workgroup_id, 65228u, num_workgroup)) : workgroup_base)), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u)) / 1u))) + subgroup_base))))) / 1u)) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)), subgroup_local_id)), min(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(uvec3(_GLF_IDENTITY(199u, (199u) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(314.231)), bool(false))))))))), 110349u, _GLF_IDENTITY(174555u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(clamp(156033u, 135144u, subgroup_id)) : 0u)))) | (174555u))).r), max(true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(uvec3(199u, _GLF_IDENTITY(110349u, uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u))), 174555u).r, max(_GLF_IDENTITY(uvec3(199u, _GLF_IDENTITY(110349u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(110349u, _GLF_IDENTITY(min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u)), 0u | (min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))))), 1u), (uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u)) << uvec2(0u, 0u)))), 174555u).r, (uvec3(199u, _GLF_IDENTITY(110349u, uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u))), 174555u).r) | 0u), uvec3(199u, _GLF_IDENTITY(110349u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), (_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u)))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), (_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u)))) - 0u))), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))))), 174555u).r))), true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(uvec3(199u, 110349u, 174555u), (uvec3(199u, 110349u, 174555u)) | (uvec3(199u, 110349u, 174555u))).r))), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(uvec3(_GLF_IDENTITY(199u, (199u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 110349u, 174555u).r), max(true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(199u, _GLF_IDENTITY(110349u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(_GLF_IDENTITY(110349u, (110349u) ^ 0u), (true ? _GLF_IDENTITY(110349u, (110349u) ^ 0u) : _GLF_FUZZED(workgroup_id))))), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u)), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u))))), uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u)))), uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u)), uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u))))), 174555u), (uvec3(199u, _GLF_IDENTITY(110349u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u)), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(_GLF_IDENTITY(110349u, max(110349u, 110349u)), (110349u) ^ 0u))), 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u))))), uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u)))), uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u)), uint(uvec2(_GLF_IDENTITY(110349u, _GLF_IDENTITY(min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u)), (true ? _GLF_IDENTITY(min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u)), uint(uvec3(min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u)), 0u, 1u))) : _GLF_FUZZED(subgroup_local_id)))), 1u))))), 174555u)) << uvec3(0u, 0u, 0u)).r, max(_GLF_IDENTITY(uvec3(199u, _GLF_IDENTITY(110349u, uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, _GLF_IDENTITY(_GLF_IDENTITY((110349u), (true ? (110349u) : _GLF_FUZZED(workgroup_id))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(110349u, (110349u) << 0u)) ^ 0u), 0u ^ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(110349u, (110349u) << 0u)) ^ 0u), (~ ((_GLF_IDENTITY(110349u, (110349u) << 0u)) ^ 0u)) | (~ ((_GLF_IDENTITY(110349u, (110349u) << 0u)) ^ 0u)))))))))), 1u))), _GLF_IDENTITY(174555u, (174555u) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u)))).r, (_GLF_IDENTITY(uvec3(199u, _GLF_IDENTITY(110349u, uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, _GLF_IDENTITY((110349u), max(_GLF_IDENTITY((110349u), ~ (~ ((_GLF_IDENTITY(110349u, (110349u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (110349u))) ^ 0u))), 1u))), 174555u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(199u, _GLF_IDENTITY(110349u, uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, _GLF_IDENTITY((110349u), max(_GLF_IDENTITY((110349u), ~ (~ _GLF_IDENTITY(((110349u)), clamp(_GLF_IDENTITY(((110349u)), 1u * (((110349u)))), ((110349u)), ((110349u)))))), (110349u))) ^ 0u))), 1u))), 174555u), (uvec3(199u, _GLF_IDENTITY(110349u, uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(_GLF_IDENTITY(110349u, max(110349u, 110349u)), _GLF_IDENTITY(_GLF_IDENTITY((110349u), max(_GLF_IDENTITY((110349u), ~ (~ ((110349u)))), (110349u))), max(_GLF_IDENTITY((110349u), max(_GLF_IDENTITY((110349u), ~ (~ ((110349u)))), (110349u))), _GLF_IDENTITY(_GLF_IDENTITY((110349u), max(_GLF_IDENTITY((110349u), ~ (~ ((110349u)))), (110349u))), 0u ^ (_GLF_IDENTITY((110349u), max(_GLF_IDENTITY((110349u), ~ (~ ((110349u)))), (110349u))))))) ^ 0u))), 1u))), 174555u)) ^ uvec3(0u, 0u, 0u)))).r) | 0u), uvec3(199u, _GLF_IDENTITY(110349u, uint(uvec2(_GLF_IDENTITY(110349u, min(110349u, _GLF_IDENTITY(110349u, (110349u) ^ 0u))), 1u))), 174555u).r))), true ? subgroup_local_id : _GLF_FUZZED(uvec3(199u, 110349u, 174555u).r)))) + 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u + (workgroup_base), (0u + (workgroup_base)) | 0u)) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + 1))) % subgroup_size);
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) + (0 << _GLF_IDENTITY(int(3), int(3)))), 64, _GLF_IDENTITY(4, (4) + 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, log(1.0), 0.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))).y))))
    barrier();
   return;
  }
 if((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (true ? _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u) : _GLF_FUZZED(virtual_gid))) - 0u) % _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, 0 ^ (2)))))) == _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) ^ 0) >> 0), ~ (~ (0)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), max((0), (0))))))), 0)) : _GLF_FUZZED(-23180))), 1, 0))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), clamp(float(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), float(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), float(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0))))), injectionSwitch.x)))), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) || false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) && (_GLF_DEAD(false))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0))).y) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))));
  }
 else
  {
   _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (4) | 0), 1, 1)), min(int(ivec3(_GLF_IDENTITY(4, (4) | 0), 1, 1)), int(ivec3(_GLF_IDENTITY(4, (4) | 0), 1, 1))))), 64, 2), _GLF_IDENTITY(max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(1686) : 4)), ~ (~ (4))), 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)), uint(_GLF_IDENTITY(uint(max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (~ (4)) << 0)) | 0))), 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), min(uint(max(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), (_GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec2(virtual_gid, 0u)), 0u)), (uint(uvec2(uint(uvec2(virtual_gid, 0u)), 0u))) * 1u))) >> 0u))) / 1u)], _GLF_IDENTITY(4, ~ (~ (4))), 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), 4, 64, 2))), uint(max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / 1))), 64, 2)))))))), _GLF_IDENTITY((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(max(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (4)), int(int(max((4), (4))))))), _GLF_IDENTITY(int(ivec4((~ _GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (4)), int(int(max((4), (4))))))), 0, 1, 1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(ivec4((~ _GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (4)), int(int(max((4), (4))))))), 0, 1, 1)), 1, 0), (false ? _GLF_FUZZED(ivec3(44120, 41254, 74297)) : ivec3(int(ivec4((~ _GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (4)), int(int(max((4), (4))))))), 0, 1, 1)), 1, 0)))), ~ (~ (int(_GLF_IDENTITY(ivec3(int(ivec4((~ _GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (4)), int(int(max((4), (4))))))), 0, 1, 1)), 1, 0), (false ? _GLF_FUZZED(ivec3(44120, 41254, 74297)) : ivec3(int(ivec4((~ _GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (4)), int(int(max((4), (4))))))), 0, 1, 1)), 1, 0)))))))))), 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)), uint(_GLF_IDENTITY(uint(max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, int(ivec3(4, 1, 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) & 1), 1, (1 & 1)))), ~ (~ (4))), 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), min(uint(max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), uint(max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), min((~ (4)), (~ (4))))), 64, 2), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u)))) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))], 4, 64, 2))))))))), ~ (~ ((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(max(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (4)), int(_GLF_IDENTITY(int(max((4), (4))), (int(max((4), (4)))) ^ 0)))))), 64, 2), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 4, 64, 2)), uint(_GLF_IDENTITY(uint(max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), min(uint(max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(-37623)) : (4))))), 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), uint(max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)))))))))))) | 0u);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0 : _GLF_FUZZED(99.79)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0 : _GLF_FUZZED(99.79)))) > injectionSwitch.y)))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))) || ((! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y))))))) && true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(76.92), _GLF_FUZZED(-2.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(765.659)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat4x2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, 1.0, 1.0, 1.0)))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(76.92), _GLF_FUZZED(-2.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(765.659)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat4x2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, 1.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(76.92), _GLF_FUZZED(-2.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(765.659)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat4x2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, 1.0, 1.0, 1.0)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(76.92), _GLF_FUZZED(-2.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(765.659)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat4x2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, 1.0, 1.0, 1.0)))))).x) - _GLF_ZERO(0.0, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-6554.0493)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-6554.0493)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-6554.0493)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), mix(float(_GLF_FUZZED(-63.00)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-6554.0493)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), float(mat4x3(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, abs(1.0), 0.0))))) + (mat2(1.0))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.07) : injectionSwitch.y))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), float(mat4x3(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, abs(1.0), 0.0))))) + (mat2(1.0))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.07) : injectionSwitch.y))))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), float(mat4x3(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, abs(1.0), 0.0))))) + (mat2(1.0))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.07) : injectionSwitch.y))))))))))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (mat2(1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), float(mat4x3(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, abs(1.0), 0.0))))) + (mat2(1.0))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), float(mat4x3(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, abs(1.0), 0.0))))) + (mat2(1.0)))))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.07) : injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.07) : injectionSwitch.y))))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.07) : injectionSwitch.y)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.07) : injectionSwitch.y))))) * mat2(1.0)))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.07) : injectionSwitch.y)))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.07) : injectionSwitch.y)))))))))) / abs(vec2(1.0, 1.0))))).y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-65.45) : injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-65.45) : injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-65.45) : injectionSwitch.y), (true ? (false ? _GLF_FUZZED(-65.45) : injectionSwitch.y) : _GLF_FUZZED(-921.956)))) : _GLF_FUZZED(-1.6)))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-986.645), (false ? _GLF_FUZZED(4400.9376) : _GLF_IDENTITY(_GLF_FUZZED(-986.645), max(_GLF_FUZZED(-986.645), _GLF_FUZZED(-986.645)))))), bool(_GLF_IDENTITY(false, ! (! (false))))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, 0.0 + (1.0)))), float(_GLF_FUZZED(3.0)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
