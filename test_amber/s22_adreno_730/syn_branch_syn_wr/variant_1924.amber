#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 uint num_workgroup;
 int _f0;
 mat4x2 _f1;
 bvec4 _f2;
 bvec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 mat3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 vec3 _f1;
 ivec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 ivec4 _f1;
 vec4 _f2;
 float _f3;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 _GLF_struct_4 _f1;
 vec3 _f2;
 ivec2 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 bvec2 _f1;
 uvec3 _f2;
 uvec4 _f3;
 vec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 uvec4 _f1;
 vec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 ivec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_7 {
 uint next_virtual_gid;
 _GLF_struct_3 _f0;
 uvec3 _f1;
 mat2 _f2;
 _GLF_struct_6 _f3;
 bvec2 _f4;
 mat2x3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), false)))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-22.07)), float(injectionSwitch.y), bool(true))))), true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) || false)), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY((true) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))) || ((true) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))], (injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))]) + 0.0))).y)) || (true)), (injectionSwitch.x < injectionSwitch.y))))), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), bvec2(true, false))).y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), bvec2(true, false))).y), float(_GLF_FUZZED(4774.3137)), bool(false)))))), true))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-15.07)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-15.07)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-15.07)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, true)), true && (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-15.07)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, true))))))))) || (true)), (injectionSwitch.x < injectionSwitch.y))), true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-15.07)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-15.07)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-15.07)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, true)), true && (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-15.07)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, true))))))))) || (true)), (injectionSwitch.x < injectionSwitch.y))), true)), false, true)))))), _GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec2(0, 1))), 0))], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y))), true))))))), bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-99.30)), bool(false))))) > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false, false))), bool(bool(bool(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false, false)))))))))), true)))))), bool(bvec3(_GLF_IDENTITY((! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-99.30)), bool(false))))) > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false, false))), bool(bool(bool(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false, false)))))))))), true)))))), true && ((! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-99.30)), bool(false))))) > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false, false))), bool(bool(bool(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false, false)))))))))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(! (! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((true), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((true), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3((true), true, true), false)), false))))), (bool(_GLF_IDENTITY(bvec3((true), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((true), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3((true), true, true), false)), false)))))) || false))), (injectionSwitch.x < injectionSwitch.y))), true))))))), false, false))))))), false, false))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), bool(bvec3(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), (true) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(vec2(-1.2, 2781.6820), vec2(2387.8031, -5399.1851), log(vec2(2.5, 1.9)))))).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(vec2(-1.2, 2781.6820), vec2(2387.8031, -5399.1851), log(vec2(2.5, 1.9)))))).y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))))), true)))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) || false))) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) || (true)), (injectionSwitch.x < injectionSwitch.y))) && true)), true)))))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), false))))))))), true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
          continue;
         return;
         if(_GLF_DEAD(false))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - abs(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), vec2(1.0, 1.0) * (injectionSwitch))[_GLF_IDENTITY(1, (1) | (1))])), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(3.9)), float(mat2x3(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0) : _GLF_FUZZED(3.9)), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(3.9)), mix(float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(3.9))), float(_GLF_FUZZED(-8.5)), bool(false)))) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-800.311, -765.065, -8.9, 0.0, 2.0, 3.5, -2.4, -363.453, 90.93)) : mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (true ? determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(3832.4917))), clamp(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(7.7)))), float(_GLF_FUZZED(-4.0)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), float(mat2(log(1.0), 0.0, 0.0, 0.0))), log(1.0))), clamp(log(1.0), _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), log(1.0)))), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.0)), bool(false))), 0.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) - 0)))], injectionSwitch[1])), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(17291u))), float(0.0), bool(true)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0))), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0))) / 1.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.6))), 0.0, 0.0, 1.0))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(-4.0)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(_GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1763.3677)), bool(false))), 0.0)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), 0.0, 1.0, exp(0.0), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0) : _GLF_FUZZED(mat4(-7.5, 546.244, -65.96, -48.48, -1.4, 9.7, _GLF_IDENTITY(7.7, mix(float(_GLF_IDENTITY(_GLF_FUZZED(65.81), clamp(_GLF_IDENTITY(_GLF_FUZZED(65.81), (_GLF_FUZZED(65.81)) / 1.0), _GLF_FUZZED(65.81), _GLF_FUZZED(65.81)))), float(7.7), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 2922.6112, -2.3, 7.4, -6.2, 0.3, 26.12, _GLF_IDENTITY(-42.01, clamp(-42.01, _GLF_IDENTITY(-42.01, clamp(-42.01, _GLF_IDENTITY(-42.01, mix(float(-42.01), float(_GLF_FUZZED(133.387)), bool(false))), -42.01)), -42.01)), -58.03, -3.7)))), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1]))) - 0.0))), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-9.6, 1635.3952, 23.38, 174.506, 2091.2951, -7051.0087, -4.7, -56.89)) : transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY((true ? determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-9.6, 1635.3952, 23.38, 174.506, 2091.2951, _GLF_IDENTITY(-7051.0087, mix(float(_GLF_FUZZED(-9525.2738)), float(-7051.0087), bool(true))), -4.7, -56.89)) : transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.4) : 1.0)))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), clamp(_GLF_IDENTITY(_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), (_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1)))) + 0.0), _GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), _GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1)))))), max((true ? determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-9.6, 1635.3952, 23.38, 174.506, 2091.2951, _GLF_IDENTITY(-7051.0087, mix(float(_GLF_FUZZED(-9525.2738)), float(-7051.0087), bool(true))), -4.7, -56.89)) : transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.4) : 1.0)))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), clamp(_GLF_IDENTITY(_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), (_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1)))) + 0.0), _GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), _GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1)))))), _GLF_IDENTITY((true ? determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-9.6, 1635.3952, 23.38, 174.506, 2091.2951, _GLF_IDENTITY(-7051.0087, mix(float(_GLF_FUZZED(-9525.2738)), float(-7051.0087), bool(true))), -4.7, -56.89)) : transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.4) : 1.0)))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), clamp(_GLF_IDENTITY(_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), (_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1)))) + 0.0), _GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), _GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1)))))), mix(float(_GLF_FUZZED(-9.9)), float((true ? determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x2(-9.6, 1635.3952, 23.38, 174.506, 2091.2951, _GLF_IDENTITY(-7051.0087, mix(float(_GLF_FUZZED(-9525.2738)), float(-7051.0087), bool(true))), -4.7, -56.89)) : transpose(mat2x4(1.0, 0.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.4) : 1.0)))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), clamp(_GLF_IDENTITY(_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), (_GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1)))) + 0.0), _GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))), _GLF_FUZZED(distance(distance(vec4(0.1, -9.9, -51.10, -3151.7754), vec4(95.16, 3289.9588, 88.17, -8782.4318)), mix(77.60, -5.2, -4.1))))))), bool(true)))))), (determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) - 0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 1.0, abs(log(1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x), 0.0, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)))), (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-34.93))), 0.0, 0.0))) - 0.0) : _GLF_FUZZED(4.1))), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (1.0)), 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-706.750)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8136.0830))), 0.0)) - mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(640.767)), bool(false))), 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(22.60)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 0.0, 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, abs(0.0), 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(true))), 1.0)), 0.0, 1.0))), 0.0, 1.0, 1.0))), 1.0))), (true ? mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(int(false)) : _GLF_IDENTITY(0, 0 ^ (0))))))), (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(int(false)) : 0)))))) + _GLF_IDENTITY(0, 1 * (0)))], min(injectionSwitch[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(int(false)) : 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(int(false)) : 0), 1 * ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(int(false)) : 0))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(int(false)) : 0), 1 * ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(int(false)) : 0)))))) / 1)))))], injectionSwitch[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(int(false)) : 0)))))])), injectionSwitch[1])), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), round(length(normalize(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec3(-7685.3332, 4496.2864, -0.8), vec3(-31.73, -6.4, -6.7))) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, abs(log(1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), tan(0.0), 1.0), (false ? _GLF_FUZZED(mat4(-43.19, 65.07, -7.0, 3522.5569, -2.2, -1.8, -8.3, -699.231, 87.76, -54.87, 7.4, 3.1, 612.439, -4496.7421, 82.96, -6694.2312)) : mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), tan(0.0), 1.0))))), sin(determinant(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 1.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * vec2(1.0, 1.0)).y), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), 0.0, 1.0, exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0) : _GLF_FUZZED(mat4(-18.28, 611.528, 24.04, 65.55, 3077.2676, 3822.5081, 24.57, 42.59, -1766.8056, -4664.5949, -8.4, 6.3, 9943.9327, _GLF_IDENTITY(526.091, clamp(526.091, _GLF_IDENTITY(526.091, (false ? _GLF_FUZZED(9.6) : 526.091)), 526.091)), 8.8, 95.91)))))))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(62.75), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])))[0])), _GLF_FUZZED(-7.5)), bvec2(true, false))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(log(1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0, 1.0, exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(99.55))), 1.0, 1.0))), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sin(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(log(vec2(1.0, 1.0)))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(6434.2764) : _GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.4))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 2942.2725))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), abs(log(1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], injectionSwitch[1])), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)))), clamp(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-604.710)), bool(false))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)))), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)))), (vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false))))) * vec4(1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)))), (vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat2x3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false))))) * vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec4(-2.0, 52.83, -103.688, 856.674)) : _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)))), (vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)), (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false))))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false)))) * 1.0), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, sin(0.0), 1.0)), min(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false))), (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), float(_GLF_FUZZED(-998.475)), bool(false)))) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0))))))), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, sin(0.0), 1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-998.475)), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))) * 1.0), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, sin(0.0), 1.0))))))) * vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(vec4(1.6, 5.6, -8.1, -8.8))))))))), 1.0, _GLF_IDENTITY(abs(log(1.0)), (false ? _GLF_FUZZED(fma(-45.82, 81.83, degrees(-3.3))) : abs(log(1.0)))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_FUZZED(537.036)), min(float(_GLF_FUZZED(537.036)), float(_GLF_FUZZED(537.036)))), bool(false))), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))))), exp(_GLF_IDENTITY(0.0, (0.0) * 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0) : _GLF_FUZZED(mat4(_GLF_IDENTITY(-18.28, (true ? -18.28 : _GLF_FUZZED(54.20))), 611.528, 24.04, 65.55, 3077.2676, 3822.5081, 24.57, 42.59, -1766.8056, -4664.5949, -8.4, 6.3, 9943.9327, 526.091, 8.8, 95.91)))))), (transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), round(length(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(abs(0.0) + (1.0), mix(float(_GLF_IDENTITY(abs(0.0) + (1.0), float(mat3x2(abs(0.0) + (1.0), 1.0, 0.0, abs(0.0), abs(1.0), 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(vec2(959.899, -6.8).r)), clamp(float(_GLF_FUZZED(vec2(959.899, -6.8).r)), _GLF_IDENTITY(float(_GLF_FUZZED(vec2(959.899, -6.8).r)), clamp(float(_GLF_FUZZED(vec2(959.899, -6.8).r)), float(_GLF_FUZZED(vec2(959.899, -6.8).r)), float(_GLF_FUZZED(vec2(959.899, -6.8).r)))), _GLF_IDENTITY(float(_GLF_FUZZED(vec2(959.899, -6.8).r)), max(float(_GLF_FUZZED(vec2(959.899, -6.8).r)), float(_GLF_FUZZED(vec2(959.899, -6.8).r)))))), bool(false)))), 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(abs(log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0))) - 0.0), cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0)), float(mat3(float(mat4x3(1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0)), cos(0.0), abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), mix(float(float(mat4x3(1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0))), float(_GLF_FUZZED(-2.6)), bool(false)))))), float(vec2(_GLF_IDENTITY(abs(log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0)), float(mat3(float(mat4x3(1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0)), cos(0.0), abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), mix(float(float(mat4x3(1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-2.6, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(-2.6, exp(0.0), 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(-2.6, exp(0.0), 0.0, 1.0, 0.0, 0.0))))), min(float(_GLF_IDENTITY(mat3x2(-2.6, exp(0.0), 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(-2.6, exp(0.0), 0.0, 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(-2.6, exp(0.0), 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(-2.6, exp(0.0), 0.0, 1.0, 0.0, 0.0)))))))))), bool(false)))))), (abs(log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0)), float(mat3(float(mat4x3(1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 0.0)), cos(0.0), abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), mix(float(float(mat4x3(1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, tan(0.0), 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-2.6), clamp(_GLF_FUZZED(-2.6), _GLF_FUZZED(-2.6), _GLF_FUZZED(-2.6)))), bool(false))))))) * 1.0), 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(6.4))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), (_GLF_IDENTITY(true ? mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_IDENTITY(_GLF_FUZZED(4.4), float(float(_GLF_FUZZED(4.4)))))) : _GLF_FUZZED(8.4)))), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97937) : _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) | ((1))), (1), (1)))), 1, 1))))]), vec2(injectionSwitch[0], injectionSwitch[1])))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(77.76) : 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(log(1.0)), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0) : _GLF_FUZZED(mat4(-18.28, _GLF_IDENTITY(611.528, min(611.528, 611.528)), 24.04, 65.55, 3077.2676, 3822.5081, 24.57, 42.59, -1766.8056, -4664.5949, -8.4, _GLF_IDENTITY(6.3, (true ? 6.3 : _GLF_FUZZED(-961.478))), 9943.9327, 526.091, 8.8, 95.91)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (true ? mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-52396) : 1))))]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, _GLF_IDENTITY(abs(log(_GLF_IDENTITY(1.0, (1.0) - 0.0))), float(mat4x2(abs(log(_GLF_IDENTITY(1.0, (1.0) - 0.0))), tan(0.0), 0.0, 0.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))))))), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.0))), injectionSwitch.x), 0.0, 1.0, exp(0.0), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), float(vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))), 1.0) : _GLF_FUZZED(mat4(-18.28, 611.528, 24.04, 65.55, 3077.2676, 3822.5081, 24.57, 42.59, -1766.8056, -4664.5949, -8.4, 6.3, _GLF_IDENTITY(9943.9327, 1.0 * (9943.9327)), 526.091, 8.8, 95.91))))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat4(1.0) * (mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat4(1.0) * (mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat4(1.0) * (mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat4(1.0) * (mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat4(1.0) * (mat3x4(0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))) : _GLF_FUZZED(-8.2))))), 0.0))))))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_9(_GLF_struct_8(gl_NumWorkGroups.x, 1, mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / cos(0.0), 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (false ? _GLF_FUZZED(tanh(-2.8)) : clamp(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-71.80) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(149.184))))))) / cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.5)), float(0.0), bool(true)))))))), bvec4(true), bvec4(true), ivec2(1))), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), bvec2(true));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(98864u) : _GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupID.x)), max(((gl_WorkGroupID.x)), ((gl_WorkGroupID.x))))))))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 0))), (_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 0)))) * 1) != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) ^ 0)); _injected_loop_counter ++)
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - (1 ^ 1)), (1 | 1)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 1u, 1u, 1u))), subgroup_id * subgroup_size, subgroup_id * subgroup_size));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)))))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), 0u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), 0u, 1u))))))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), max(workgroup_base, workgroup_base))) | (workgroup_base)))))) + subgroup_base, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), 0u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), 0u, 1u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), 0u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), 0u, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), 0u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base), 0u, 1u))))))))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)))))) + subgroup_base))) + subgroup_local_id;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(54269) : 1))) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), uint(uvec3(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> 0u)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), _GLF_struct_3(_GLF_struct_0(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), _GLF_IDENTITY(1u, (1u) | (1u))))), min(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))))), uint(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) >> 0u)), _GLF_IDENTITY(1u, (1u) | (1u)))))))), (true ? uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))))), min(uint(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) - 0u))))), uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))), clamp(clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))), clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))), clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))))) | (clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))))) | (_GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))), (clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) : _GLF_FUZZED(subgroup_size)))), 1u))), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u)))))), clamp(min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u)))))), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u)))))), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))))))))), vec4(1.0), bvec4(true)), _GLF_struct_1(mat2(1.0), bvec2(true), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) >> 0u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uvec4(1u), uvec4(1u), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))))))))), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (false ? _GLF_FUZZED(5705.2476) : _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0))))), uvec4(1u)), _GLF_struct_2(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), 0u), _GLF_IDENTITY((uvec4(uvec3(1u), 0u)) - uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u, 0u), ((uvec4(uvec3(1u), 0u)) - uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), clamp(0u, 0u, 0u)), 0u, 0u, 0u)) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))), 0u + (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))))))))))), mat4x2(1.0)), ivec4(1), mat4x2(1.0)), _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(uvec2(155213u, 30303u), workgroup_size)) : uvec3(1u))), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(89.21)), bool(false))) : _GLF_FUZZED(6299.2753)), mix(float(_GLF_FUZZED(4207.0643)), float((true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(89.21)), bool(false))) : _GLF_FUZZED(6299.2753))), bool(true))))), float(_GLF_FUZZED(-25.80)), bool(false))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-412.677)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(89.21)), bool(false))) : _GLF_FUZZED(6299.2753)))), float(_GLF_FUZZED(-25.80)), bool(false))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0), sqrt(1.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0), sqrt(1.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(1.0), sqrt(1.0), 1.0))))), injectionSwitch.y)))))))), _GLF_struct_6(mat2x4(1.0), _GLF_struct_4(vec2(1.0), ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-66692) : 1))), vec4(1.0), 1.0), vec3(1.0), ivec2(_GLF_IDENTITY(1, (1) >> 0)), _GLF_struct_5(mat2x4(1.0), vec3(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) - 0.0)) / 1.0))) - 0.0)))))), _GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) >> 0)))))), true)), bvec2(true), mat2x3(1.0));
 uint read = 0;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_7.next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(97913) : 64)), 4);
 if((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) == 0)
  {
   read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ (1u ^ 1u)), 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_size)));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4)), _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, min(64, 64)))), 2);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && (false)), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false, true))) && (false))) || false), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), true))) && (false)), true, true, false)), ! (! (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && (false), (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)), false, true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))) || false)))))))) && true)), true, true, false)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) || false))))), (false) && true)))
        {
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(-82380) : int(8)))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(-82380) : int(8))), (_GLF_IDENTITY(int(8), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, (false) && true))))) ? _GLF_FUZZED(-82380) : int(8)))) - (0 | 0)))) * 1))); _injected_loop_counter --)
        {
         do
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-1.0, min(-1.0, -1.0)) : _GLF_FUZZED(_GLF_IDENTITY(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), (false ? _GLF_FUZZED(290.277) : _GLF_IDENTITY(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), (_GLF_IDENTITY(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), clamp(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z)))) - 0.0)))), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-1.0, min(-1.0, -1.0)) : _GLF_FUZZED(_GLF_IDENTITY(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), (false ? _GLF_FUZZED(290.277) : _GLF_IDENTITY(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), (_GLF_IDENTITY(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), clamp(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z)))) - 0.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-1.0, min(-1.0, -1.0)) : _GLF_FUZZED(_GLF_IDENTITY(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), (false ? _GLF_FUZZED(290.277) : _GLF_IDENTITY(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), (_GLF_IDENTITY(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), clamp(roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z), roundEven(vec4(-9302.6198, -62.48, -7510.8857, -9.7).z)))) - 0.0))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-88.18) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0), float(vec3(injectionSwitch.x, 0.0, 0.0))))) > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x))), float(vec4(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x))), abs(1.0), 1.0, 0.0)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x))), float(vec4(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0), _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x))), abs(1.0), 1.0, 0.0)))) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))))).x))), float(vec4(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x))), abs(1.0), 1.0, 0.0)))) > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
  }
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), false)), false)))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (clamp(0, 0, 0))))) - 0), (_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(0, 0, 0), (0 >> _GLF_IDENTITY(int(5), int(5))) ^ _GLF_IDENTITY((clamp(0, 0, 0)), min((clamp(0, 0, 0)), (clamp(0, 0, 0))))), min(_GLF_IDENTITY(clamp(0, 0, 0), (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (clamp(0, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0, 0, 0), (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (clamp(0, 0, 0))), clamp(_GLF_IDENTITY(clamp(0, 0, 0), (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (clamp(0, 0, 0))), _GLF_IDENTITY(clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0), (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))) ^ (_GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) | (clamp(0, 0, 0))))))), _GLF_IDENTITY(clamp(0, 0, 0), (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (clamp(0, 0, 0))))))))) - 0)) && true)); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      continue;
     continue;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
