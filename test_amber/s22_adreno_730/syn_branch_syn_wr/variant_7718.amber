#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uvec2 _f0;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
 mat2x4 _f1;
 bvec2 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 vec3 _f1;
 vec2 _f2;
 vec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 uvec4 _f1;
 vec4 _f2;
 mat2x4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 float _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 uint workgroup_base;
 mat4x3 _f5;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat4 _f1;
 ivec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 mat4x3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 bool _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_6 {
 float _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat2x3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 vec3 _f4;
 mat4x2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_2 _f0;
 bvec4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_11 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true)))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! ((! (_GLF_IDENTITY(false, true && (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_2(mat3x2(1.0), mat2x3(1.0), _GLF_struct_0(mat2(1.0)), _GLF_struct_1(mat4(1.0)), vec3(1.0), mat4x2(1.0), ivec3(1)), bvec4(true), _GLF_struct_6(1.0, _GLF_struct_3(vec3(1.0), true, mat3x2(1.0), mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.9) : 1.0)), 1.0, 1.0))), mat2x3(1.0)), _GLF_struct_4(ivec2(1), mat4x3(1.0), ivec4(1)), _GLF_struct_5(mat3(1.0), mat4(1.0), ivec3(1), true)), _GLF_struct_11(_GLF_struct_7(mat2(1.0), uvec4(1u), vec4(1.0), mat2x4(1.0), bvec3(true)), 1.0, _GLF_struct_8(mat4x2(1.0), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(11.37, -27.80, 69.56)))), vec3(1.0))), vec2(1.0), vec2(1.0), 1u), _GLF_struct_9(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2x4(1.0), bvec2(true), uvec4(1u), mat2x3(1.0), ivec3(1)), _GLF_struct_10(uvec2(1u)), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)) * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), mat4x3(1.0)));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, uint(uvec3(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u, 0u))))), (_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, uint(uvec3(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u, 0u)))))) ^ ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) + subgroup_local_id, _GLF_struct_replacement_12._f3.workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, uint(uvec3(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u, 0u))))), 0u + (_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u, 0u)), min(uint(uvec3(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u, 0u)), uint(uvec3(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u, 0u))))))))), (_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, uint(uvec3(_GLF_struct_replacement_12._f3.workgroup_base + subgroup_base, 0u, 0u)))))) ^ ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) + subgroup_local_id, _GLF_struct_replacement_12._f3.workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_local_id))))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_12._f3.workgroup_base, uint(uvec3(_GLF_struct_replacement_12._f3.workgroup_base, 0u, 1u))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) * _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))], uint(1), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-51439, (-51439) | (-51439)), (-51439) ^ 0)) : 64)), _GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-36429) : 64, max(false ? _GLF_FUZZED(-36429) : 64, _GLF_IDENTITY(false ? _GLF_FUZZED(-36429) : 64, (false ? _GLF_FUZZED(-36429) : 64) >> 0)))))))), ((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(-51439, (_GLF_IDENTITY(-51439, (true ? -51439 : _GLF_FUZZED(-95271)))) ^ 0)) : 64)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-36429) : _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, max(64, 64)))))))))) << 0), max(~ (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-51439) : 64)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-36429) : _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, 1 * (64))))))))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-51439) : 64)), _GLF_IDENTITY(64, (false ? _GLF_IDENTITY(_GLF_FUZZED(-36429), (false ? _GLF_FUZZED(ivec3(31537, -2798, -64)[0]) : _GLF_IDENTITY(_GLF_FUZZED(-36429), (_GLF_FUZZED(-36429)) | 0))) : _GLF_IDENTITY(64, (false ? _GLF_FUZZED((92625 | -27300)) : 64))))))))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], 0u))), 4, 64, 2);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(72.81, 456.818)) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true)))))))), false)))))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false, true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false, true)))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false, true)))), false)), true, false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false)), (bool(bvec4(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-770.436), _GLF_FUZZED(7.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false)), (bool(bvec4(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-770.436), _GLF_FUZZED(7.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false, true)))), false))))))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(72.81, 456.818)) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), false, true))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), bool(bool((_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), false, true))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false)), (bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8852.9455))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false)), (bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8852.9455))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))))), true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false)), (bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8852.9455))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))))), true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false)), (bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8852.9455))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))))), true), false)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false)), (bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8852.9455))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false)), (bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8852.9455))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))))), true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false)), (bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8852.9455))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))))), true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false)), (bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ((((injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8852.9455))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))))), true), false)))))))))), true))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(usubBorrow(subgroup_id, subgroup_size, read))))).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(usubBorrow(subgroup_id, subgroup_size, read))))).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(usubBorrow(subgroup_id, subgroup_size, read))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(usubBorrow(subgroup_id, subgroup_size, read))))).x > injectionSwitch.y))))))))), true)))))))) || false)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(vec2(0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), true)))))))), false)))))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)) && true), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false), bvec3(bvec4(bvec3(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false), bvec3(bvec4(bvec3(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false), false)))))))), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))), ((! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, (false) && true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false, true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || ((! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false, true)))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))), false, true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true && (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false, true)))), false)), true, false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false)), (bool(bvec4(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-770.436), _GLF_FUZZED(7.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x) + 0.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-770.436), _GLF_FUZZED(7.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-770.436), _GLF_FUZZED(7.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(26.95)), vec2(_GLF_FUZZED(19.49), ((injectionSwitch))[1]), bvec2(false, true)))))[1]), bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) && true)))).x) + 0.0))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))) && true))), true)), true)), false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false)), (bool(bvec4(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, false))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-770.436), _GLF_FUZZED(7.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x) + 0.0) > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), ((_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)), false, true)))), false)))))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-920.590), _GLF_FUZZED(-7.7)), bvec2(false, false))).x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false))))))))))))), true && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), true), true)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(-1.9, -664.065), injectionSwitch, 0.0)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(23.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.9)), bvec2(true, false)))) - vec2(0.0, 0.0)))).y)) ? _GLF_FUZZED(377.843) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) / 1u, ((virtual_gid) / 1u) * 1u), ~ (~ ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), _GLF_IDENTITY(uint(uint(uint(uvec2(virtual_gid, 0u)))), (uint(_GLF_IDENTITY(uint(uint(uvec2(virtual_gid, 0u))), ~ (~ (uint(uint(uvec2(virtual_gid, 0u)))))))) | 0u)))) / 1u))))], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (64) - 0)) | 0, int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) - 0)) | 0, int(int((_GLF_IDENTITY(64, (64) - 0)) | 0))), 1, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), 2);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0), mix(vec2(_GLF_FUZZED(7757.9408), _GLF_FUZZED(1.3)), vec2((vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0))[1]), bvec2(true, true))))))), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
