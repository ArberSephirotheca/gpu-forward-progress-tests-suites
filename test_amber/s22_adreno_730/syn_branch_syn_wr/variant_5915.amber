#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uvec4 GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size;
 _GLF_IDENTITY(GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size));
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z = GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat2(0.0, 0.0, 1.0, 0.0))), (true ? injectionSwitch.x : _GLF_FUZZED(-3809.5851)))) + 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.x = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))) || _GLF_IDENTITY(false, (false) && true)))))
  return;
 GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.x = GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false, true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, _GLF_IDENTITY(false, (false) && true), true))))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))))), true, false, true))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))))), true, false, true)))))))))), false, false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false, true))))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false, true))))))), false, false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true, false, true))))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false, true))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false, true))))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false, true))))))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))) && true))), true, false, true))))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false, true))))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))))) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false, true))))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false, true))))))), false, false)))))))))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), true, false))))))))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))), true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false, true))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))), false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))), false, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))), false, true))))))), false, false), false))))))))))) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w = workgroup_base;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid, max(GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid, GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid))) - uvec4(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (0u)) : _GLF_FUZZED(subgroup_id))), 0u)).xyz.y * GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w))) + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w + subgroup_base) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z), _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z), 0u, 0u)), (uint(uvec3(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z), 0u, 0u))) * 1u)), clamp(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z, ((subgroup_local_id + 1) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z) / 1u), (subgroup_local_id + 1) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z, _GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z, ((subgroup_local_id + 1) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z) ^ 0u)))), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.w + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec2(5131, 61053)[0])))) % GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.xyz.z)));
 GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid.w = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.y = read;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.7, -9.2)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.5), _GLF_FUZZED(89.91)), bvec2(false, false)), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.5), _GLF_FUZZED(89.91)), bvec2(false, false)), min(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.5), _GLF_FUZZED(89.91)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.5), _GLF_FUZZED(89.91)), bvec2(false, false))))) / vec2(1.0, 1.0))).y)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(837.382), (injectionSwitch)[1]), bvec2(false, true))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-4.0)))) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-4.0)))) * (injectionSwitch)))).y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))))), false || (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false || (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))), _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0)), injectionSwitch)), injectionSwitch, injectionSwitch)).y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(tan(0.0)), (cos(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(0.0, 1.0))))), 0.0)), mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.4))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), bool(true))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.x))) - 0.0), 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))))) > injectionSwitch.y)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), bool(true))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))))) > injectionSwitch.y)), false || (_GLF_IDENTITY((false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), bool(true))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))))) > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2047.5927)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(9.9))), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), bool(true))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))))) > injectionSwitch.y))) || false)))))) || false)))), (bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! (bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), _GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false) || false)))), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! (bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), _GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false) || false)))), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true)))))) && true))))))), _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(! ((false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), false, true))), false || (! (bool(bvec3(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (bool(bool(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))), true && (! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) / 1.0)))), 0.0)), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(tan(0.0)), (cos(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(0.0, 1.0))))), 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.4))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.4))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), bool(true)), min(mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.4))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), bool(true)), mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.4))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), bool(true))))) / 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.7, (-1.7) - sin(0.0))) : injectionSwitch.x))) - 0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(cos(tan(0.0)), max(cos(tan(0.0)), cos(tan(0.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-73.38), _GLF_FUZZED(-1.7)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))))))), 0.0))))) > injectionSwitch.y)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(498.584))), 1.0))))), 0.0)), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), clamp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), 0.0)), mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (false ? _GLF_FUZZED(68.08) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), mix(float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0))), bool(true))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(_GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(0.0, 1.0)), min(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(float(125322u))), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), sqrt(vec2(0.0, 0.0)) + (vec2(0.0, 1.0))))))), 0.0))))) > injectionSwitch.y)), false || (_GLF_IDENTITY((false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(335.622)), float(1.0), bool(true))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), _GLF_IDENTITY(bool(true), true && (bool(true))))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))))) > injectionSwitch.y)), (_GLF_IDENTITY((false), true && ((false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))))), 1.0), min(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))))), 1.0), vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))))), 1.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2047.5927, clamp(-2047.5927, _GLF_IDENTITY(-2047.5927, max(-2047.5927, -2047.5927)), _GLF_IDENTITY(-2047.5927, float(mat3x4(-2047.5927, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0, 0.0))))))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0)), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(mat4x2(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, sin(0.0), 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat4x2(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, sin(0.0), 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), min(dot(_GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY((vec2(0.0, 1.0)) * mat2(1.0), ((vec2(0.0, 1.0)) * mat2(1.0)) / vec2(1.0, 1.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(100.963)))))), 0.0)), mix(float(_GLF_FUZZED(-396.884)), float(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(9.9))), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))), bool(true))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, cos(tan(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-7.2), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-1.1)), bvec2(true, false)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0))))) > injectionSwitch.y))) || false)))))) || false)))), (_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false)))), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y)))))), ! (_GLF_IDENTITY(! (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! (bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), true, true)), (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), true, true))) && true))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false) || false)))), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(! (! (! (bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (! (! (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), bool(_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) + (injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), bool(bvec2(bool(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), bool(bvec2(bool(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), false)))))))) || false)))), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true)), false || (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(! (! (! (bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (! (! (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), bool(_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) + (injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), bool(bvec2(bool(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), bool(bvec2(bool(_GLF_IDENTITY((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), false)))))))) || false)))), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true)))))))) && true))))))), _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY(bool(bvec3(! ((false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(! ((false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), false, true)), (bool(bvec3(! ((false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), false, true))) && true)), false || (! (bool(bvec3(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))))))) || false)) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x < injectionSwitch.y))))))
  return;
 atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid, (false ? _GLF_FUZZED(uvec4(57741u, 175673u, 174286u, 169997u)) : GLF_merged2_0_3_69_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_sizenext_virtual_gid)).w], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((64) | _GLF_IDENTITY((64), _GLF_IDENTITY(((64)), (((64))) / 1) | 0), ((64) | (64)) ^ 0), 0, 1), ~ (~ (ivec3(_GLF_IDENTITY((64) | (64), ((_GLF_IDENTITY(64, max(64, 64))) | (64)) ^ 0), 0, 1))))))), 4);
 if(_GLF_DEAD(false))
  return;
 if((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) << 0u)) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) << 0u)) | (subgroup_local_id))) << 0u) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) << 0u)) | (subgroup_local_id)) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) * 1), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (true ? _GLF_IDENTITY(~ (~ (subgroup_local_id)), min(_GLF_IDENTITY(~ (~ (subgroup_local_id)), clamp(~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id)))), _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) >> 0u))) : _GLF_FUZZED(workgroup_id))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (true ? _GLF_IDENTITY(~ (~ (subgroup_local_id)), min(_GLF_IDENTITY(~ (~ (subgroup_local_id)), clamp(~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id)))), _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) >> 0u))) : _GLF_FUZZED(workgroup_id)))))), (~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (true ? _GLF_IDENTITY(~ (~ (subgroup_local_id)), min(_GLF_IDENTITY(~ (~ (subgroup_local_id)), clamp(~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id)))), _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) >> 0u))) : _GLF_FUZZED(workgroup_id))))))) - 0u))) << 0u)) | (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) | 0u), subgroup_local_id)))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, 0 ^ (0)))) * 1), 0u, 1u, 1u))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) << _GLF_IDENTITY(0u, (0u) / 1u))) | (subgroup_local_id)) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) * 1)))) == _GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), (0))) | (0)))
  {
   GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.y = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, 2, 2))))), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)));
  }
 else
  {
   GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.y = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ _GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), max((~ (uint(uvec2(virtual_gid, 0u)))), _GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), (_GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), _GLF_IDENTITY(((~ (uint(uvec2(virtual_gid, 0u))))) >> 0u, ~ (~ (((~ (uint(uvec2(virtual_gid, 0u))))) >> 0u))))) | ((~ (uint(uvec2(virtual_gid, 0u)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ _GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), max((~ (uint(uvec2(virtual_gid, 0u)))), _GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), (_GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), _GLF_IDENTITY(((~ (uint(uvec2(virtual_gid, 0u))))) >> 0u, ~ (~ (((~ (uint(uvec2(virtual_gid, 0u))))) >> 0u))))) | ((~ (uint(uvec2(virtual_gid, 0u)))))))))), ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ _GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), max((~ (uint(uvec2(virtual_gid, 0u)))), _GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), (_GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), _GLF_IDENTITY(((~ (uint(uvec2(virtual_gid, 0u))))) >> 0u, ~ (~ (((~ (uint(uvec2(virtual_gid, 0u))))) >> 0u))))) | ((~ (uint(uvec2(virtual_gid, 0u))))))))))))))))], _GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(virtual_gid, 0u), max(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u)))), ~ (~ (uint(uvec2(virtual_gid, 0u))))))], clamp(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(virtual_gid, 0u))), (~ (uint(uvec2(virtual_gid, 0u)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), ((uint(uvec2(virtual_gid, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) * 1u))))))) ^ 0u), min(_GLF_IDENTITY(~ (uint(uvec2(virtual_gid, 0u))), 0u ^ (~ (uint(uvec2(virtual_gid, 0u))))), _GLF_IDENTITY(~ (uint(uvec2(virtual_gid, 0u))), max(~ (uint(uvec2(virtual_gid, 0u))), ~ (uint(uvec2(virtual_gid, 0u))))))))))))], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(virtual_gid, 0u))), (~ (uint(uvec2(virtual_gid, 0u)))) - _GLF_IDENTITY(0u, ~ (~ (0u)))))))]) << 0u), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))), ~ (~ (_GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> 0u))))))))))], 0u | (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))]))) >> 0u), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))], clamp(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)), 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)), 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))]))), buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u))), ~ (~ (uint(uvec2(virtual_gid, 0u))))))], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))], 0u ^ (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))) | 0u, ((_GLF_IDENTITY(0u, uint(uint(0u)))) | 0u) ^ 0u)))), ~ (~ (uint(uvec2(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u))))))]))))))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))]), max(_GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, _GLF_IDENTITY(0u, max(0u, 0u)))))))), (false ? _GLF_FUZZED((subgroup_id)) : _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))), (_GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ _GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), ((~ (uint(uvec2(virtual_gid, 0u))))) | ((~ (uint(uvec2(virtual_gid, 0u)))))))) / _GLF_IDENTITY(1u, ~ (~ (1u)))))))]), ((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(uvec2(virtual_gid, 0u), ~ (~ (_GLF_IDENTITY(uvec2(virtual_gid, 0u), max(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u))))))))), uint(uvec3(_GLF_IDENTITY((~ (uint(uvec2(virtual_gid, 0u)))), ((~ (uint(uvec2(virtual_gid, 0u))))) ^ 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))])) / 1u), _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY((uvec2(virtual_gid, 0u)), _GLF_IDENTITY(uvec2(uvec3((uvec2(virtual_gid, 0u)), 0u)), clamp(_GLF_IDENTITY(uvec2(uvec3((uvec2(virtual_gid, 0u)), 0u)), (uvec2(uvec3((uvec2(virtual_gid, 0u)), 0u))) / uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(uvec3((uvec2(virtual_gid, 0u)), 0u)), (uvec2(uvec3((uvec2(virtual_gid, 0u)), 0u))) << uvec2(0u, 0u)), uvec2(uvec3((uvec2(virtual_gid, 0u)), 0u))))) - (uvec2(0u, 0u) | uvec2(0u, 0u)))) << (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) - (uvec2(0u, 0u) | uvec2(0u, 0u)))) << (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) | uvec2(0u, 0u))))) - 0u)))))]), ~ (~ _GLF_IDENTITY(((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))])), (((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))]))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) | 0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))]) | 0u, ((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))]) | 0u) << 0u), 0u ^ (_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), max(uint(uvec2(virtual_gid, 0u)), uint(uvec2(virtual_gid, 0u)))), ~ (~ (uint(uvec2(virtual_gid, 0u))))))]) | 0u, ((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (~ (uint(uvec2(virtual_gid, 0u))))))]) | 0u) << 0u)))))) | _GLF_IDENTITY(((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(virtual_gid, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicExchange(workgroup_base, workgroup_size), 1u * (atomicExchange(workgroup_base, workgroup_size)))) : _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), clamp(uint(uvec2(virtual_gid, 0u)), uint(uvec2(virtual_gid, 0u)), uint(uvec2(virtual_gid, 0u))))), (~ (uint(uvec2(_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))))), 0u)))) | _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(uvec2(virtual_gid, 0u), ~ (~ (uvec2(virtual_gid, 0u))))))), ((~ (uint(uvec2(virtual_gid, 0u))))) << 0u)))))))]) | 0u), ((_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(virtual_gid, 0u))), (false ? _GLF_FUZZED(atomicExchange(workgroup_base, workgroup_size)) : _GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), (_GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), ((uint(uvec2(virtual_gid, 0u)))) >> 0u)) / 1u), (0u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u, 1u)), (uint(uvec4(_GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), (_GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), ((uint(uvec2(virtual_gid, 0u)))) >> 0u)) / 1u), (0u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u, 1u))) * 1u)), (~ (uint(uvec2(virtual_gid, 0u)))) | (~ (uint(uvec2(virtual_gid, 0u))))))))))]) | 0u, ((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(virtual_gid, 0u))), (false ? _GLF_FUZZED(atomicExchange(workgroup_base, workgroup_size)) : _GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), (_GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), ((uint(uvec2(virtual_gid, 0u)))) >> 0u)) / 1u), (0u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u, 1u)), (uint(uvec4(_GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec2(virtual_gid, 0u))), ((uint(uvec2(virtual_gid, 0u)))) >> 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), clamp(uint(uvec2(virtual_gid, 0u)), uint(uvec2(virtual_gid, 0u)), uint(uvec2(virtual_gid, 0u))))), ((uint(uvec2(virtual_gid, 0u)))) >> 0u))))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((mix(workgroup_base, subgroup_id, false) ^ subgroup_base)) : 1u))), (0u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u, 1u))) * 1u)), (~ (uint(uvec2(virtual_gid, 0u)))) | (~ (uint(uvec2(virtual_gid, 0u))))))))))]) | 0u) + 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4, 64, _GLF_IDENTITY(2, (2) >> _GLF_IDENTITY(0, int(ivec2(0, 1)))));
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_14num_workgroupreadsubgroup_sizeworkgroup_base.y, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
