#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))) && true), false)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), clamp(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(mat2(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))), max(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), clamp(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(mat2(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), clamp(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(mat2(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))))))))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), clamp(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0))), 0.0), vec4(mat2(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))), max(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), clamp(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0), vec4(mat2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), clamp(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(mat2(vec4(injectionSwitch.x, 0.0, 0.0, 0.0)))))))))) > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0 + (float(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0))))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) || false)))))), false, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) || false)))))), false, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))), _GLF_IDENTITY(false, (false) || false) || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))))), false)))))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))))), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), true))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))))), false)))))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))))), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), true)))))))) || false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size)))) - 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), true), bvec3(bvec4(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))))), _GLF_IDENTITY(true, (true) || false)), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_IDENTITY(true, (true) || false)), true), true))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), true), bvec3(bvec4(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), true), bvec3(bvec4(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), true), true))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), true), bvec3(bvec4(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))), false))))))), _GLF_IDENTITY(true, (true) || false)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), true), bvec3(bvec4(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(true, (true) || false)), true), true))), false))))))), true, true))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true))), _GLF_IDENTITY(true, (true) || false)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true))), _GLF_IDENTITY(true, (true) || false)), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))) && true))), _GLF_IDENTITY(true, (true) || false)), true))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true))), _GLF_IDENTITY(true, (true) || false)), true))), true))))))), bvec3(bvec4(bvec3(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(true, (true) || false)), true), true))))))))), (bool(bvec2(bool(bvec2(false, true)), true))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)))), _GLF_IDENTITY(max(clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(-4780.8124)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x), float(_GLF_FUZZED(-6.7)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false))) - 0.0))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false))))), min(max(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-6.7)), max(float(_GLF_FUZZED(-6.7)), float(_GLF_FUZZED(-6.7)))), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)), (true ? mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)) : _GLF_FUZZED(30.36))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)))))))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false))))), max(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false))))))))), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-733.633))), float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-6.7)), bool(false)))), _GLF_IDENTITY(max(clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)), (mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-6.7)), 0.0 + (float(_GLF_FUZZED(-6.7)))), bool(false))) - 0.0))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false))))), min(max(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.2), _GLF_FUZZED(vec4(332.555, 4.9, 3892.6444, -1.8).r)), bvec2(false, false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)), (true ? mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)) : _GLF_FUZZED(30.36))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false)))))))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-6.7, min(_GLF_IDENTITY(-6.7, (-6.7) / 1.0), -6.7)))), _GLF_IDENTITY(bool(false), (bool(false)) && true))))), max(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(-6.7)), bool(false)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.7)), bool(false))))))))) : _GLF_FUZZED(-3827.4901))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false))), _GLF_IDENTITY(true, true && (true)) && (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false))))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))), bool(bool((_GLF_DEAD(false))))))))))), false || (true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 0u)));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(false, (false) || false), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) + 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u | 1u))) % subgroup_size)) ^ 0u)) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), ! (_GLF_IDENTITY(! (! (! (! (! (false))))), ! (_GLF_IDENTITY(! (! (! (! (! (! (false)))))), true && (! (! (! (! (! (! (false))))))))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false)))))) && true)))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true)), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true)), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), true, true)))))))))), bool(bool(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.1), max(_GLF_FUZZED(-3.1), _GLF_FUZZED(-3.1)))), bool(false))))) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (bool(bool(_GLF_DEAD(false)))) || false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, false)))), (bool(bool(_GLF_DEAD(false)))) || false)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), (bool(bool(_GLF_DEAD(false)))) || false))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))))))))))), ! (! (! (! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), true), _GLF_IDENTITY(true, true && (true)), false)))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))))), true, true)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || (_GLF_IDENTITY((bool(_GLF_DEAD(false))), ((bool(_GLF_DEAD(false)))) || false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true)))))))))))))) || false))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))), (bool(bool(_GLF_DEAD(false)))) || false))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))))))))), ! (! (! (! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false))), false || (false)), false))), true), _GLF_IDENTITY(true, true && (true)), false)))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), ! (! (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) || false))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) || false))) && true))))), ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) || false))) && true)))))))))), true && _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))), ! (! (! (bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))))))))))), false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))))))))), false, true)))))))))))))) || false)))))))))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(_GLF_DEAD(false)))) || false))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))))))))), ((! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(_GLF_DEAD(false)))) || false))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false))))))))))) && true), ! (! (_GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), true), _GLF_IDENTITY(true, true && (true)), false)))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true)))))))))))))) || false))))))), bool(bool(! (! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), true), _GLF_IDENTITY(true, true && (true)), false)))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true)))))))))))))) || false)))))))))))))))), bool(bvec4(! (! ((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))))))))), ! (! (! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, false)), false))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), true), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true))), false)))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), ! (! (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(true && ((! (bool(_GLF_DEAD(false))))), true && (true && _GLF_IDENTITY(((! (bool(_GLF_DEAD(false))))), bool(bool(((! (bool(_GLF_DEAD(false))))))))))), true, true))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), ((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))) || false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec3((bool(_GLF_DEAD(false))), false, true)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true)))))))))))))) || false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, false)), false))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), true), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true))), false)))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), ! (! (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(true && ((! (bool(_GLF_DEAD(false))))), true && (true && _GLF_IDENTITY(((! (bool(_GLF_DEAD(false))))), bool(bool(((! (bool(_GLF_DEAD(false))))))))))), true, true))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), ((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))) || false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec3((bool(_GLF_DEAD(false))), false, true)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true)))))))))))))) || false)))))), ! (! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, false)), false))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), true), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true))), false)))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), ! (! (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(true && ((! (bool(_GLF_DEAD(false))))), true && (true && _GLF_IDENTITY(((! (bool(_GLF_DEAD(false))))), bool(bool(((! (bool(_GLF_DEAD(false))))))))))), true, true))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), ((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))) || false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec3((bool(_GLF_DEAD(false))), false, true)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true)))))))))))))) || false)))))), (! ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, false)), false))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), true), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true))), false)))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), ! (! (! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), _GLF_IDENTITY(true && ((! (bool(_GLF_DEAD(false))))), true && (true && _GLF_IDENTITY(((! (bool(_GLF_DEAD(false))))), bool(bool(((! (bool(_GLF_DEAD(false))))))))))), true, true))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true))))), ((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))) || false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec3((bool(_GLF_DEAD(false))), false, true)))), bool(bvec3(_GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), true && ((! (bool(_GLF_DEAD(false)))))), true, true)))))), false, true)))))))))))))) || false))))))) && true)))))))))))))), false, true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))) && true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))) && true) || false), true, false))))))))) || false), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))) || false)) && true)), ! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))) && true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))) && true) || false), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))) && true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))) && true) || false), true, false))))))))))) || false)))), true && (_GLF_IDENTITY(false, (false) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uint(uint(1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), 0u ^ (_GLF_IDENTITY(uint(1), (uint(1)) * 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uint(1))))), uint(uvec4(uint(uint(uint(1))), 1u, 0u, 1u)))) / 1u)), uint(1))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(4, (4) << 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) >> 0))))) * (_GLF_IDENTITY(4, (4) | 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
  }
 if((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(-33251), _GLF_IDENTITY(clamp(_GLF_FUZZED(-33251), _GLF_FUZZED(-33251), _GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_FUZZED(_GLF_IDENTITY(-33251, min(-33251, -33251))), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (_GLF_IDENTITY(-33251, ~ (~ (-33251)))) / 1))))))), 0 | (clamp(_GLF_FUZZED(-33251), _GLF_FUZZED(-33251), _GLF_IDENTITY(_GLF_FUZZED(-33251), _GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(-33251, min(-33251, -33251))), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1))))), _GLF_IDENTITY((min(_GLF_FUZZED(_GLF_IDENTITY(-33251, min(-33251, -33251))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-33251, int(_GLF_IDENTITY(ivec3(-33251, ((0 ^ 0) | 0), (0 | 0)), max(ivec3(-33251, ((0 ^ 0) | 0), (0 | 0)), ivec3(-33251, ((0 ^ 0) | 0), (0 | 0)))))), max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1)))))) << 0, ((min(_GLF_FUZZED(_GLF_IDENTITY(-33251, min(-33251, -33251))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-33251, int(_GLF_IDENTITY(ivec3(-33251, ((0 ^ 0) | 0), (0 | 0)), max(ivec3(-33251, ((0 ^ 0) | 0), (0 | 0)), ivec3(-33251, ((0 ^ 0) | 0), (0 | 0)))))), max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1)))))) << 0) >> 0))))))) : 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), clamp((-33251), (-33251), (-33251))) ^ 0)), clamp(_GLF_FUZZED(-33251), _GLF_FUZZED(-33251), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1)))))), (_GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1))))))) | 0))) : _GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(2, (2) >> 0))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) >> 0)), ((_GLF_IDENTITY(2, (2) >> 0))) << 0))) / 1)))), clamp(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(-33251), clamp(_GLF_FUZZED(-33251), _GLF_FUZZED(-33251), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-33251), (_GLF_FUZZED(-33251)) * 1), _GLF_IDENTITY(min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(_GLF_IDENTITY(-33251, 0 | (-33251)), _GLF_IDENTITY(-33251, (-33251) / 1))))), (true ? min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(_GLF_IDENTITY(-33251, 0 | (-33251)), _GLF_IDENTITY(-33251, (-33251) / 1))))) : _GLF_FUZZED(12381)))))) : 2)), _GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(-33251), _GLF_IDENTITY(clamp(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, -33251))), _GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1))))))), _GLF_IDENTITY((clamp(_GLF_FUZZED(-33251), _GLF_FUZZED(-33251), _GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1)))))))), (false ? _GLF_FUZZED(96034) : _GLF_IDENTITY((clamp(_GLF_FUZZED(-33251), _GLF_FUZZED(-33251), _GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_IDENTITY(_GLF_FUZZED(-33251), _GLF_IDENTITY(max(_GLF_FUZZED(-33251), _GLF_IDENTITY(_GLF_FUZZED(-33251), clamp(_GLF_IDENTITY(_GLF_FUZZED(-33251), (_GLF_FUZZED(-33251)) | 0), _GLF_IDENTITY(_GLF_FUZZED(-33251), (_GLF_FUZZED(-33251)) - 0), _GLF_IDENTITY(_GLF_FUZZED(-33251), 1 * (_GLF_FUZZED(-33251)))))), (max(_GLF_FUZZED(-33251), _GLF_IDENTITY(_GLF_FUZZED(-33251), clamp(_GLF_IDENTITY(_GLF_FUZZED(-33251), (_GLF_FUZZED(-33251)) | 0), _GLF_IDENTITY(_GLF_FUZZED(-33251), (_GLF_FUZZED(-33251)) - 0), _GLF_IDENTITY(_GLF_FUZZED(-33251), 1 * (_GLF_FUZZED(-33251))))))) >> (0 << _GLF_IDENTITY(int(6), int(6))))), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (_GLF_IDENTITY(_GLF_IDENTITY(-33251, (-33251) + 0), (_GLF_IDENTITY(-33251, clamp(-33251, -33251, -33251))) - 0)) / 1)))))))), ((clamp(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, (-33251) | (-33251))), _GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(_GLF_IDENTITY(-33251, (-33251) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (-33251) / 1))))))))) ^ 0))) + 0)) : 2)), _GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(-33251), clamp(_GLF_FUZZED(_GLF_IDENTITY(-33251, _GLF_IDENTITY(int(ivec4(-33251, (1 | 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(int(ivec4(-33251, (1 | 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec4(-33251, (1 | 1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_FUZZED(-33251), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1)))))), (_GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(_GLF_IDENTITY(-33251, (-33251) / 1), (_GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), clamp((-33251), (-33251), _GLF_IDENTITY((-33251), _GLF_IDENTITY(((-33251)) / 1, (true ? ((-33251)) / 1 : _GLF_FUZZED(61066)))))) / 1)) | 0))))))) - 0))) : 2))))) | (_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(-33251), clamp(_GLF_FUZZED(_GLF_IDENTITY(-33251, ~ (~ (-33251)))), _GLF_IDENTITY(_GLF_FUZZED(-33251), (_GLF_FUZZED(-33251)) << _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(_GLF_FUZZED(-33251), min(_GLF_FUZZED(-33251), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-33251, (-33251) | 0), max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251) / 1, (true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1)), (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) / 1)) >> 0) : _GLF_FUZZED((+ 54429)))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(-33251, (-33251) | 0), max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251) / 1, (true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1)), (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) / 1)) >> 0) : _GLF_FUZZED((+ 54429)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(-33251, (-33251) | 0), max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251) / 1, (true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1)), (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) / 1)) >> 0) : _GLF_FUZZED((+ 54429)))))))))), int(ivec2(~ (_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))))), _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-91548) : 1))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)), clamp(true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)), _GLF_IDENTITY(true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)), clamp(true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)), true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)), true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)))), _GLF_IDENTITY(true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)), (true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0))) | 0), true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)), true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED(_GLF_IDENTITY((+ 54429), ((+ 54429)) | 0)))))))))))), int(ivec2(~ (_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))))), 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(_GLF_IDENTITY(-33251, (-33251) | 0), (_GLF_IDENTITY(-33251, 1 * (-33251))) / 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY(_GLF_IDENTITY((-33251), ((-33251)) | 0) / 1, (true ? _GLF_IDENTITY((-33251) / 1, _GLF_IDENTITY((_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0, ((_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) ^ (1 ^ 1))) : _GLF_FUZZED((+ 54429)))))))), int(ivec2(~ (_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))))), 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251) / 1, (true ? _GLF_IDENTITY((-33251) / 1, (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / 1))) >> 0) : _GLF_FUZZED((+ 54429)))))))), int(ivec2(~ (_GLF_IDENTITY(-33251, _GLF_IDENTITY(max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))), clamp(max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))), max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))), _GLF_IDENTITY(max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))), max(max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))), max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))))))))), 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, (-33251) / 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY(_GLF_IDENTITY((-33251) / 1, ~ (~ (_GLF_IDENTITY((-33251) / 1, ((-33251) / 1) / 1)))), (true ? _GLF_IDENTITY((-33251) / _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-79250) : 1)), 1)), _GLF_IDENTITY((_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0))) | (1))))), clamp((_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0))) | (1))))), (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0))) | (1))))), (_GLF_IDENTITY((-33251) / 1, 1 * ((-33251) / _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0))) | (1))))))) >> 0) : _GLF_FUZZED((+ 54429)))))))), int(ivec2(~ (_GLF_IDENTITY(-33251, max(-33251, _GLF_IDENTITY(-33251, _GLF_IDENTITY((-33251), ((-33251)) | (0 & 93959)) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42026) : 1)))))), 1)))))))))))))) : 2))))) == _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), 0 | ((~ (0)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((~ (0)))), (_GLF_IDENTITY((~ ((~ (0)))), ((~ ((~ (0))))) - 0)) | 0), 0 ^ (~ _GLF_IDENTITY((~ ((~ (0)))), (_GLF_IDENTITY((~ ((~ (0)))), ((~ ((~ (0))))) - 0)) | 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((~ (0)), 0 | ((~ (0)))), ~ (~ ((~ (0))))) : _GLF_FUZZED(-4852)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), 0 | ((~ (0)))), ~ (~ ((~ (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), 0 | ((~ _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(bitfieldReverse(69958))))))), _GLF_IDENTITY(~ (~ ((~ (0)))), (~ (~ ((~ (0))))) >> 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), 0 | ((~ (0)))), ~ (~ ((~ (0))))), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), 0 | ((~ (0)))), ~ (_GLF_IDENTITY(~ ((~ (0))), ~ (~ (~ ((~ (0)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (0), max(_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))), _GLF_IDENTITY(~ (0), 0 | (~ (0)))))), 0 | _GLF_IDENTITY(((~ (0))), ~ (~ (((~ (0))))))), ~ (~ ((~ (0))))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (0)), 0 | ((~ (0)))), ~ (~ ((~ (0)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), 0 | ((~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0)))))), ~ (~ ((~ (0))))))))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), _GLF_IDENTITY(0, (0) >> 0) | ((~ (0)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0))))) | 0)) << 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), _GLF_IDENTITY((_GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0))))) | 0, int(ivec2((_GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0))))) | 0, 1))))) << 0), 0 + (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), (_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), min((~ (0)), _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), min((~ (0)), _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0)))))), (_GLF_IDENTITY((~ (0)), min((~ (0)), _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))) | (_GLF_IDENTITY((~ (0)), min((~ (0)), _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))))) >> _GLF_IDENTITY(0, (0) | (0)))) | 0)) << 0)))), min((_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0))))) | 0)) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0))))) | 0)) << 0), (_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0))))) | 0)) << 0)) | 0)))), (_GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) - (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (0)), (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1))) ^ ((~ (0)))), min((~ (0)), (~ (0))))) | 0)) << 0))))))))) | 0))) | ((~ (0))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-46895) : 2)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4158.6983))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))[0]), float(_GLF_FUZZED(-836.012)), bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))]), float(_GLF_FUZZED(-836.012)), bool(false)))) - 0.0), injectionSwitch[1])).y), _GLF_IDENTITY((true ? float(injectionSwitch.y) : _GLF_FUZZED(_GLF_IDENTITY(3.7, 0.0 + (3.7)))), _GLF_IDENTITY(float(mat4x3((true ? float(injectionSwitch.y) : _GLF_FUZZED(_GLF_IDENTITY(3.7, 0.0 + (3.7)))), 1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (float(mat4x3((true ? float(injectionSwitch.y) : _GLF_FUZZED(_GLF_IDENTITY(3.7, 0.0 + (3.7)))), 1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) * 1.0)))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))) : _GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(5.4), (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))) : _GLF_FUZZED(injectionSwitch))[1]), vec2((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])), vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))))), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))))) / vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(-4.2)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false))))).y), (_GLF_IDENTITY(true ? float(injectionSwitch.y) : _GLF_FUZZED(3.7), mix(float(_GLF_FUZZED(-3.0)), _GLF_IDENTITY(float(true ? float(injectionSwitch.y) : _GLF_FUZZED(3.7)), mix(float(float(true ? float(injectionSwitch.y) : _GLF_FUZZED(3.7))), float(_GLF_FUZZED(-16.99)), bool(false))), bool(true))))))) - 0.0))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(0.7, 46.25)) : _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) - 0.0, ((injectionSwitch[0]) - 0.0) / 1.0)), injectionSwitch[1])).y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), bool(bvec3(bool((_GLF_DEAD(false))), false, false))))) && true))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) || false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt(injectionSwitch)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, length(vec2(0.0, 0.0))))).y)))) || false)) && true)))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) && true)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) - 0), 4, 4)), int(ivec4(4, 1, (0 << _GLF_IDENTITY(int(3), int(3))), 0))), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-75466) : 64)), 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     return;
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-99966) : (4))), int(ivec4(_GLF_IDENTITY((4), max((4), (4))), 1, 1, 0))), 1, 1, 1))) >> 0), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) | (0 << _GLF_IDENTITY(int(6), int(6))))), (~ (_GLF_IDENTITY(64, (64) / _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))))))) - (0 | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))), (false ? _GLF_FUZZED(1693) : _GLF_IDENTITY(0, (0) >> 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) | (_GLF_IDENTITY(0, (0) >> 0))))))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
