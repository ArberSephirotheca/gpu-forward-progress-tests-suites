#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.4), _GLF_IDENTITY(_GLF_FUZZED(-8115.5320), mix(float(_GLF_FUZZED(819.131)), float(_GLF_IDENTITY(_GLF_FUZZED(-8115.5320), min(_GLF_FUZZED(-8115.5320), _GLF_FUZZED(-8115.5320)))), bool(true)))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.1)), bool(false))) > injectionSwitch.y)))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true, false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))), false, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) * uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))))))), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(178820u, 160888u, 139749u)) : ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u))))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(468.677)))), float(_GLF_FUZZED(2.4)), bool(false))) : _GLF_FUZZED(2587.9368))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), 0.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0, 1.0)), (vec2(mat2x4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), 0.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0, 1.0))) - vec2(0.0, 0.0)))).y, (false ? _GLF_FUZZED(-153.705) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(143229u, 55810u, 66724u).spp) : gl_WorkGroupID)).x, 1u, 0u), _GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), ((uvec3(gl_WorkGroupID.x, 1u, 0u))) | (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))))), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u)), 0u))) / uvec3(1u, 1u, 1u))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u))))))))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) - 0u)), max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) - 0u)), uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) - 0u))))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ~ (~ ((0u)))))) - 0u)), max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u))))))))))), max(min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) | (1u)), 0u), uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, (0u ^ 1u), 1u))))), _GLF_IDENTITY(0u, uint(uvec4(0u, (192152u & (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))), clamp(uvec3(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, (0u ^ 1u), 1u))))), _GLF_IDENTITY(0u, uint(uvec4(0u, (192152u & (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(1.0), bool(true))), 1.0)), injectionSwitch.y)), 0u))))), uvec3(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (0u ^ 1u), 1u)), (uint(uvec4(1u, 1u, (0u ^ 1u), 1u))) / 1u)))), _GLF_IDENTITY(0u, uint(uvec4(0u, (192152u & (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, (0u ^ 1u), 1u))))), _GLF_IDENTITY(0u, uint(uvec4(0u, (192152u & (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), (uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, (0u ^ 1u), 1u))))), _GLF_IDENTITY(0u, uint(uvec4(0u, (192152u & (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))) / uvec3(1u, 1u, 1u)))))))))), _GLF_IDENTITY(min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u))), 0u)))), (min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u))))) | (min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u)))))))), clamp(_GLF_IDENTITY(min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(143229u, _GLF_IDENTITY(55810u, ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u) | (_GLF_IDENTITY(55810u, (55810u) ^ 0u))), 66724u).spp) : gl_WorkGroupID), ((false ? _GLF_FUZZED(uvec3(143229u, 55810u, 66724u).spp) : _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(87541u, 34755u, 90841u)))))) >> uvec3(0u, 0u, 0u))).x, 1u, 0u), _GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) >> 0u))), (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), uvec3(uvec3((uvec3(gl_WorkGroupID.x, 1u, 0u)))))) | (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), ((uvec3(gl_WorkGroupID.x, 1u, 0u))) / uvec3(_GLF_IDENTITY(1u, 1u * (1u)), 1u, 1u))))) << uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)), max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), clamp(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * uvec3(1u, 1u, 1u)))))))))))))), max(min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u), clamp(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))))))), min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u)))))), _GLF_IDENTITY(min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(143229u, 55810u, 66724u).spp) : gl_WorkGroupID)).x, _GLF_IDENTITY(1u, 0u | (1u)), 0u), _GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), ((uvec3(gl_WorkGroupID.x, 1u, 0u))) | (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), ((uvec3(gl_WorkGroupID.x, 1u, 0u))) / uvec3(1u, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(132470u, 114571u, 170321u)) : _GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), ((uvec3(gl_WorkGroupID.x, 1u, 0u))) | (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), ((uvec3(gl_WorkGroupID.x, 1u, 0u))) / uvec3(1u, 1u, 1u))))))) << uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), 1u, 0u))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) * 1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, (0u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) - (0u | 0u)), ((0u) - 0u) | ((0u) - 0u)))), 0u, 0u, 1u)), 0u | (uint(uvec4(_GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, (0u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) - (0u | 0u)), ((0u) - 0u) | ((0u) - 0u)))), 0u, 0u, 1u))))))), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u)))) - 0u), 1u * (_GLF_IDENTITY(0u, (0u) - 0u)))), uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)))), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u)) - 0u, max(_GLF_IDENTITY((0u) - 0u, min((0u) - 0u, (0u) - 0u)), (0u) - 0u))), 1u * (_GLF_IDENTITY(0u, (0u) - 0u)))), uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(99260u, 56971u, 188591u), max(uvec3(99260u, 56971u, 188591u), uvec3(99260u, 56971u, 188591u))))))))))))), max(_GLF_IDENTITY(min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec3(uvec3(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))))), max(min(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (uvec3(uvec3(gl_WorkGroupID))) * uvec3(1u, 1u, 1u))).x, uint(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) | (1u)), 0u), min(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))))), 0u))))))))), min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u)), ~ (~ (uvec3(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))))))))))), min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u)))))), _GLF_IDENTITY(min(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(143229u, 55810u, 66724u).spp) : gl_WorkGroupID)).x, 1u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - 0u) / _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) + (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), clamp((uvec3(gl_WorkGroupID.x, 1u, 0u)), (uvec3(gl_WorkGroupID.x, 1u, 0u)), (uvec3(gl_WorkGroupID.x, 1u, 0u))))) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), ((uvec3(gl_WorkGroupID.x, 1u, 0u))) | (_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), uvec3(0u, 0u, 0u) ^ ((uvec3(gl_WorkGroupID.x, 1u, 0u))))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(gl_WorkGroupID.x, 1u, 0u)), (~ (uvec3(gl_WorkGroupID.x, 1u, 0u))) - uvec3(0u, 0u, 0u)))))))), ((_GLF_IDENTITY((uvec3(gl_WorkGroupID.x, 1u, 0u)), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((uvec3(gl_WorkGroupID.x, 1u, 0u))), uvec3(uvec4(((uvec3(gl_WorkGroupID.x, 1u, 0u))), 1u)))))) ^ uvec3(0u, 0u, 0u)), 0u))) / uvec3(1u, 1u, 1u))))) << uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) >> uvec3(0u, 0u, 0u)), 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u | (_GLF_IDENTITY(0u, (0u) - 0u))))) >> uvec3(0u, 0u, 0u)), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(subgroup_local_id))))), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) >> uvec3(0u, 0u, 0u)), 1u)))) >> uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)))))), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) >> uvec3(0u, 0u, 0u)), 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u | (_GLF_IDENTITY(0u, (0u) - 0u))))) >> uvec3(0u, 0u, 0u)), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(subgroup_local_id))))))), (uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u))) >> uvec3(0u, 0u, 0u)), 1u)))) >> uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), max(uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u)))))))))))))), max(min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec3(uvec3(uvec3(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)), 0u))))))), min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u)))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2660.6055)), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false, true))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8250.3349)), vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), bvec2(false, true))).y)), false, true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false, _GLF_IDENTITY(true, ! (! (true)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) + vec2(0.0, 0.0))[0], _GLF_FUZZED(-8250.3349)), vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), bvec2(false, true))).y)), false, true))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), false)))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false), true, _GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)), false, false)))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(num_workgroup) : subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), max(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))))) >> 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-7.3, clamp(-7.3, _GLF_IDENTITY(-7.3, min(_GLF_IDENTITY(_GLF_IDENTITY(-7.3, mix(float(_GLF_FUZZED(9.5)), float(-7.3), bool(true))), (false ? _GLF_FUZZED(0.4) : -7.3)), -7.3)), -7.3))), clamp(_GLF_FUZZED(-7.3), _GLF_FUZZED(-7.3), _GLF_FUZZED(-7.3)))), bool(false))) > injectionSwitch.y))))) && true)), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))))) || false))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0, _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) - 0u)), (true ? uint(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) - 0u)) : _GLF_FUZZED(subgroup_base))))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398)))), ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398))))) | 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398)))), ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398))))) | 0)), clamp(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398)))), ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398))))) | 0)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398)))), ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398))))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398)))), ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398))))) | 0)), (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398)))), ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398))))) | 0))) * 1))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398)))), ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13398))))) | 0)))))), false || (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) + 0)), (true ? (subgroup_local_id % _GLF_IDENTITY(2, (2) + 0)) : _GLF_FUZZED(subgroup_local_id))) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0))))) << 0), clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0))))) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0))))) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (0))))) << 0))), 0, _GLF_IDENTITY(0, (0) | (0)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, 0u + (subgroup_local_id % 2))) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0), max(0 ^ (0), 0 ^ (0))), (_GLF_IDENTITY(0 ^ (0), max(0 ^ (0), 0 ^ (0)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) << _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(52279)))), 0, _GLF_IDENTITY(0, (0) | (0)))), false || (_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0))), 0, _GLF_IDENTITY(0, (0) | (0)))), true && ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id))))) % 2) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0))), 0, _GLF_IDENTITY(0, (0) | (0)))))))))))))))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, min(2, 2))), ~ (~ (uint(2)))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))), 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u))), _GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (next_virtual_gid))))], _GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))))))), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
