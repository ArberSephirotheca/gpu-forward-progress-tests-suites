#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6448.7195) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-809.176)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, log(cos(0.0))), (mat2(0.0, 1.0, 0.0, log(cos(0.0)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true)), max(mix(float(_GLF_FUZZED(-809.176)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(551.360) : 1.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, log(cos(0.0))), (mat2(0.0, 1.0, 0.0, log(cos(0.0)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), sqrt(1.0), 0.0, sin(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0))).x))))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true)), mix(float(_GLF_FUZZED(-809.176)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, log(cos(0.0))), (mat2(0.0, 1.0, 0.0, log(_GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0)))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), clamp(float(vec3(0.0, 1.0, 0.0)), float(vec3(0.0, 1.0, 0.0)), float(vec3(0.0, 1.0, 0.0))))))), 0.0)))), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.9)), bool(false))), injectionSwitch.y))))), float(_GLF_FUZZED((-6.1 + (_GLF_IDENTITY(+ -9.7, min(+ -9.7, + -9.7)))))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1])).y), float(_GLF_FUZZED(19.97)), bool(false)))) - 0.0), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))), injectionSwitch.y))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.4, clamp(8.4, 8.4, _GLF_IDENTITY(8.4, (8.4) - 0.0))))), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-61.89)), float(0.0), bool(true))), 0.0, 0.0, 0.0))) > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, false, true, false)))), ! (! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))), false, true, false))))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) - _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, 1.0)))) > injectionSwitch.y)), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))) || false, ((_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, 1.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, log(1.0))) - mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-254.618))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.1)), bool(false))), 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.8)), bool(false))), 1.0)), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(vec3(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), clamp(vec3(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), vec3(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), vec3(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-14.05)), float(0.0), bool(true))), 0.0)), 1.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-15.64) : _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), bool(bool(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.4)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0)) * 1.0) - determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), ((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) + 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-194.310)), bool(false))), min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, abs(0.0)), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-1.5)), bool(false)))) / 1.0)), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2486.3302)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)))))))) || false) || false))) && true))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-809.176)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, log(cos(0.0))), (mat2(0.0, 1.0, 0.0, log(cos(0.0)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true)), max(mix(float(_GLF_FUZZED(-809.176)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(551.360) : 1.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, log(cos(0.0))), (mat2(0.0, 1.0, 0.0, log(cos(0.0)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), sqrt(1.0), 0.0, sin(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0))).x))))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true)), mix(float(_GLF_FUZZED(-809.176)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, log(cos(0.0))), (mat2(0.0, 1.0, 0.0, log(_GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0)))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), clamp(float(vec3(0.0, 1.0, 0.0)), float(vec3(0.0, 1.0, 0.0)), float(vec3(0.0, 1.0, 0.0))))))), 0.0)))), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.9)), bool(false))), injectionSwitch.y))))), float(_GLF_FUZZED((-6.1 + (_GLF_IDENTITY(+ -9.7, min(+ -9.7, + -9.7)))))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1])).y), float(_GLF_FUZZED(19.97)), bool(false)))) - 0.0), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))), injectionSwitch.y))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.4, clamp(8.4, 8.4, _GLF_IDENTITY(8.4, (8.4) - 0.0))))), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-61.89)), float(0.0), bool(true))), 0.0, 0.0, 0.0))) > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, false, true, false)))), ! (! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))), false, true, false))))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) - _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, 1.0)))) > injectionSwitch.y)), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))) || false, ((_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, 1.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, log(1.0))) - mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-254.618))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.1)), bool(false))), 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.8)), bool(false))), 1.0)), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(vec3(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), clamp(vec3(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), vec3(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), vec3(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-14.05)), float(0.0), bool(true))), 0.0)), 1.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-15.64) : _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), bool(bool(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.4)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0)) * 1.0) - determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), ((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) + 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-194.310)), bool(false))), min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, abs(0.0)), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-1.5)), bool(false)))) / 1.0)), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2486.3302)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)))))))) || false) || false))) && true))))), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-809.176)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, log(cos(0.0))), (mat2(0.0, 1.0, 0.0, log(cos(0.0)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true)), max(mix(float(_GLF_FUZZED(-809.176)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(551.360) : 1.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, log(cos(0.0))), (mat2(0.0, 1.0, 0.0, log(cos(0.0)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), sqrt(1.0), 0.0, sin(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0))).x))))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true)), mix(float(_GLF_FUZZED(-809.176)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, log(cos(0.0))), (mat2(0.0, 1.0, 0.0, log(_GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0)))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), clamp(float(vec3(0.0, 1.0, 0.0)), float(vec3(0.0, 1.0, 0.0)), float(vec3(0.0, 1.0, 0.0))))))), 0.0)))), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.9)), bool(false))), injectionSwitch.y))))), float(_GLF_FUZZED((-6.1 + (_GLF_IDENTITY(+ -9.7, min(+ -9.7, + -9.7)))))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1])).y), float(_GLF_FUZZED(19.97)), bool(false)))) - 0.0), float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))), injectionSwitch.y))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.4, clamp(8.4, 8.4, _GLF_IDENTITY(8.4, (8.4) - 0.0))))), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-61.89)), float(0.0), bool(true))), 0.0, 0.0, 0.0))) > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, false, true, false)))), ! (! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(injectionSwitch.x), bool(true)))))) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))), false, true, false))))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) - _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, 1.0)))) > injectionSwitch.y)), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))) || false, ((_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec3(0.0, 0.0, 1.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, log(1.0))) - mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-254.618))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.1)), bool(false))), 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.8)), bool(false))), 1.0)), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(vec3(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), clamp(vec3(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), vec3(float(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0), vec3(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-14.05)), float(0.0), bool(true))), 0.0)), 1.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-15.64) : _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), bool(bool(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.4)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0)) * 1.0) - determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), ((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) + 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-194.310)), bool(false))), min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, abs(0.0)), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0)), (mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-1.5)), bool(false)))) / 1.0)), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2486.3302)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)))))))) || false) || false))) && true))))), true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false)), false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))) + 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(81.27)), vec2(_GLF_FUZZED(761.943), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))[0], (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(81.27, (true ? 81.27 : _GLF_FUZZED(-4.3))))), vec2(_GLF_FUZZED(761.943), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), true))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), true)))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), true)))))))))))))))), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, false, true))), false, true), false)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), false)))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), false)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), false))))))))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))), false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))), ! (! (bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false)))))) && true), true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), false, true, false))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (false) || false), true, true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))), true, false))))), true))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), true, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(9.8)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))) : _GLF_FUZZED(9115.5839)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), log(abs(1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0))), 1.0, 1.0, abs(0.0), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-64.22)), float(1.0), bool(true))), 1.0))))), 1.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), false))), true)))))))))))) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.0) : injectionSwitch.y)) : _GLF_FUZZED(-8.5)))))))))))) && true), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, abs(1.0)))))) * vec2(1.0, 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), mix(vec2(_GLF_FUZZED(129.836), (mat2(1.0) * ((injectionSwitch)))[1]), vec2(_GLF_IDENTITY((mat2(1.0) * ((injectionSwitch)))[0], ((mat2(1.0) * ((injectionSwitch)))[0]) - 0.0), _GLF_FUZZED(17.57)), bvec2(true, false)))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) * vec2(1.0, 1.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-3547.8701)), vec2(_GLF_FUZZED(-5227.6374), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sin(abs(0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))))).y))), false || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), false))))))))) || ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), false))))))))) || ((injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)), false))))))))) || ((injectionSwitch.x > injectionSwitch.y)), true, true)))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, length(abs(vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, length(abs(vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))).y, float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, length(abs(vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))).y, sqrt(1.0))))) - 0.0), (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) / 1))))], float(mat2x4((injectionSwitch)[0], abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED((1.5 * 494.911)), (injectionSwitch)[1]), bvec2(false, true))).y : _GLF_FUZZED(-8.5)))))))))))) && true), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2476.2775), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5.2, clamp(5.2, 5.2, 5.2)), _GLF_IDENTITY(max(_GLF_IDENTITY(5.2, min(_GLF_IDENTITY(5.2, min(5.2, 5.2)), 5.2)), 5.2), mix(float(_GLF_FUZZED(-5.0)), float(max(_GLF_IDENTITY(5.2, min(_GLF_IDENTITY(5.2, min(5.2, 5.2)), 5.2)), 5.2)), bool(true)))))), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true))))))))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(-8.9)), bvec2(false, false))), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(-8.9)), bvec2(false, false))), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0)) * mat3(1.0))), min(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(-8.9)), bvec2(false, false))), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(-8.9)), bvec2(false, false))), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0)) * mat3(1.0))), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(-8.9)), bvec2(false, false))), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(-8.9)), bvec2(false, false))), 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0)) * mat3(1.0)))))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (! (_GLF_IDENTITY((false), ((false)) || false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (! (_GLF_IDENTITY((false), ((false)) || false))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((false)) || false))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((false)) || false))))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((false)) || false))))))))), true), false, true))))))))) && true)), ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ((false)) && true)))), ! (! ((! (false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_FUZZED(vec2(-0.3, 0.9)))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(num_workgroup))), 1u)), gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(true && (bool(bvec4(false, false, false, true))), (true && (bool(bvec4(false, false, false, true)))) || false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(true && (bool(bvec4(false, false, false, true))), (true && (bool(bvec4(false, false, false, true)))) || false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && true)) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)) && true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 1u, 1u))), clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (0u & 78585u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true), false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true), false, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true), false, true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))), false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(bvec2(! (_GLF_DEAD(false)), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)))), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)))), true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)))), true)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)))), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), true)))), true))))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(4.2)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED((_GLF_IDENTITY(false ? (-3.1 / -746.948) : -43.47, max(_GLF_IDENTITY(false ? (-3.1 / -746.948) : -43.47, min(false ? (-3.1 / -746.948) : -43.47, false ? (-3.1 / -746.948) : -43.47)), false ? (-3.1 / -746.948) : -43.47)))), (injectionSwitch)[1]), bvec2(false, true))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED((_GLF_IDENTITY(false ? (-3.1 / -746.948) : -43.47, max(_GLF_IDENTITY(false ? (-3.1 / -746.948) : -43.47, min(false ? (-3.1 / -746.948) : -43.47, false ? (-3.1 / -746.948) : -43.47)), false ? (-3.1 / -746.948) : -43.47)))), (injectionSwitch)[1]), bvec2(false, true))).y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED((_GLF_IDENTITY(false ? (-3.1 / -746.948) : -43.47, max(_GLF_IDENTITY(false ? (-3.1 / -746.948) : -43.47, min(false ? (-3.1 / -746.948) : -43.47, false ? (-3.1 / -746.948) : -43.47)), false ? (-3.1 / -746.948) : -43.47)))), (injectionSwitch)[1]), bvec2(false, true))).y : _GLF_FUZZED(-839.829))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED((_GLF_IDENTITY(false ? (-3.1 / -746.948) : -43.47, max(_GLF_IDENTITY(false ? (-3.1 / -746.948) : -43.47, min(false ? (-3.1 / -746.948) : -43.47, false ? (-3.1 / -746.948) : -43.47)), false ? (-3.1 / -746.948) : -43.47)))), (injectionSwitch)[1]), bvec2(false, true))).y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), 0u, 1u), uvec3(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), 0u, 1u), uvec3(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), 0u, 1u))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))), (uint(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)))) | (uint(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))))))))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uint(9606)) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)))))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)))) + 1) % subgroup_size))) - 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-29303)), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-5.6, 2.4, -32.65, -45.55, 7.8, 3061.3085, -1.7, -734.474)) : mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(8762.9773) : float(_GLF_IDENTITY(mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-5.6, 2.4, -32.65, -45.55, 7.8, 3061.3085, -1.7, -734.474)) : mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), bvec2(true, false))).y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(-29303)), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-5.6, 2.4, -32.65, -45.55, 7.8, 3061.3085, -1.7, -734.474)) : mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(8762.9773) : float(_GLF_IDENTITY(mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-5.6, 2.4, -32.65, -45.55, 7.8, 3061.3085, -1.7, -734.474)) : mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), bvec2(true, false)), (mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(-29303)), clamp(_GLF_FUZZED(float(-29303)), _GLF_FUZZED(float(-29303)), _GLF_IDENTITY(_GLF_FUZZED(float(-29303)), max(_GLF_FUZZED(float(-29303)), _GLF_FUZZED(float(-29303)))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-5.6, 2.4, -32.65, -45.55, 7.8, 3061.3085, _GLF_IDENTITY(-1.7, (-1.7) / 1.0), _GLF_IDENTITY(-734.474, 1.0 * (_GLF_IDENTITY(-734.474, (true ? -734.474 : _GLF_FUZZED(9.7))))))) : mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(8762.9773) : float(_GLF_IDENTITY(mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-5.6, 2.4, -32.65, -45.55, 7.8, 3061.3085, -1.7, -734.474)) : mat2x4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1], 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), bvec2(true, false))) - vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))) % _GLF_IDENTITY(2, (2) | (2))) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-6.9), 0.0 + (_GLF_FUZZED(-6.9))) : injectionSwitch.y)), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))) | (uint(3u))), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(3u)), (~ _GLF_IDENTITY((uint(3u)), ~ (~ ((uint(3u)))))) ^ 0u)), (~ (_GLF_IDENTITY(~ (uint(3u)), (~ _GLF_IDENTITY((uint(3u)), ~ (~ ((uint(3u)))))) ^ 0u))) | (~ (_GLF_IDENTITY(~ (uint(3u)), (~ _GLF_IDENTITY((uint(3u)), ~ (~ ((uint(3u)))))) ^ 0u))))))))], uint(2), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), min(~ (64), _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(-88742))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(-88742))), 1), ivec2(0, 0) + (ivec2(_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(-88742))), 1))))))))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (bool(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true)), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, round(length(normalize(1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), max(vec2(mat2x3(injectionSwitch, round(length(normalize(1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), vec2(mat2x3(injectionSwitch, round(length(normalize(1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)))), mix(vec2(_GLF_FUZZED(-6402.7409), (_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, round(length(normalize(1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), max(vec2(mat2x3(injectionSwitch, round(length(normalize(1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), vec2(mat2x3(injectionSwitch, round(length(normalize(1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)))))[1]), vec2((_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, round(length(normalize(1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), max(vec2(mat2x3(injectionSwitch, round(length(normalize(1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), vec2(mat2x3(injectionSwitch, round(length(normalize(1.0))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)))))[0], _GLF_FUZZED(87.47)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
