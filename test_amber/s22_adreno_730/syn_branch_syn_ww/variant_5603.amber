#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint _f0;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0)) * mat2(1.0))))) - vec2(0.0, 0.0)).y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), clamp(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0)))))))).y)) || (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))) && true, bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))) && true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (_GLF_IDENTITY(false, (false) || false)))) && true, bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))) && true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) && true) && _GLF_IDENTITY(true, true && (true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), false || (_GLF_IDENTITY(false, (false) || false)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))), true && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))))))))))), (_GLF_IDENTITY(false, true && (false))) || false)))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))) && true) && true)) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))), bool(bvec4(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(176.830)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(1u, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))))))) + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) >> 0u) + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))))))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u))), (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup))) + subgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup))) + subgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup))) + subgroup_base)), 0u))))))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) - 0u) + subgroup_base, ~ (~ (workgroup_base + subgroup_base)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))))))), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_base)) + subgroup_base, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), uint(uvec4(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))), 1u, 0u, 0u))) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) - 0u))))))))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u)) | (workgroup_base + subgroup_base)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base, 0u), (uvec2(workgroup_base + subgroup_base, 0u)) - uvec2(0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (0u) * (0u ^ (0u ^ 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))) ^ 0u)))))))), clamp(_GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u)) | (workgroup_base + subgroup_base)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base, 0u), (uvec2(workgroup_base + subgroup_base, 0u)) - uvec2(0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (0u) * (0u ^ (0u ^ 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))) ^ 0u)))))))), ~ (~ (_GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u)) | (workgroup_base + subgroup_base)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base, 0u), (uvec2(workgroup_base + subgroup_base, 0u)) - uvec2(0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (0u) * (0u ^ (0u ^ 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))) ^ 0u)))))))), max(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u)) | (workgroup_base + subgroup_base)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base, 0u), (uvec2(workgroup_base + subgroup_base, 0u)) - uvec2(0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (0u) * (0u ^ (0u ^ 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))) ^ 0u)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u)) | (workgroup_base + subgroup_base)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base, 0u), (uvec2(workgroup_base + subgroup_base, 0u)) - uvec2(0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (0u) * (0u ^ (0u ^ 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))) ^ 0u))))))))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u)) | (workgroup_base + subgroup_base)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base, 0u), (uvec2(workgroup_base + subgroup_base, 0u)) - uvec2(0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (0u) * (0u ^ (0u ^ 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))) ^ 0u)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u)) | (workgroup_base + subgroup_base)), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base, 0u), (uvec2(workgroup_base + subgroup_base, 0u)) - uvec2(0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, (0u) * (0u ^ (0u ^ 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u)))) ^ 0u)))))))))))) ^ 0u))))))) >> (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))) + subgroup_local_id))) - 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))) + (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u + (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size) / _GLF_IDENTITY(1u, (1u) | (1u))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)))), (true ? uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(workgroup_size)))), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u)))), _GLF_IDENTITY(uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(subgroup_id) : (1u << _GLF_IDENTITY(uint(1u), uint(1u)))))) ^ 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(workgroup_size)))), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) - 0u))), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) - 0u))), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) - 0u))), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u ^ (uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) - 0u))), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))), (true ? uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? uint(uvec4(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(workgroup_size))))) ^ 0u)))))) ^ (0u)) | ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u | ((subgroup_local_id + 1) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))) % subgroup_size, ~ (~ _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), (~ (((subgroup_local_id + 1) % subgroup_size))) | (~ (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size))))), 0u | ((_GLF_IDENTITY(~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), (~ (((subgroup_local_id + 1) % subgroup_size))) | (~ (((subgroup_local_id + 1) % subgroup_size)))))))))))));
 atomicStore(buf[_GLF_struct_replacement_0.virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, 0 + (0)))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0]))), 1.0 * ((_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0]))))) - 0.0), _GLF_FUZZED(vec2(-253.439, _GLF_IDENTITY(-883.397, mix(float(_GLF_FUZZED(-169.503)), float(-883.397), bool(true)))).y)), vec2(_GLF_FUZZED(float(false)), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(4.6) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))))[1], mix(float(_GLF_FUZZED(0.9)), float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))))[1]), bool(true)))))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) * 1)], injectionSwitch[1]))) - vec2(0.0, 0.0)), injectionSwitch))) - log(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7922.3651)), bool(false))), mix(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-225.204) : 1.0)))), 1.0, 1.0))), float(_GLF_FUZZED(140.871)), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(50.46)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0))))))), 0.0, 1.0, sin(0.0), 1.0), transpose(transpose(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, sin(0.0), 1.0))))), min(float(_GLF_IDENTITY(mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED(50.46), (true ? _GLF_FUZZED(50.46) : _GLF_FUZZED(length(0.9))))), 1.0, 1.0, 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(0.0), 1.0), transpose(transpose(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-7.7))), sin(0.0), 1.0))))), float(_GLF_IDENTITY(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 1.0), transpose(transpose(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(295.520)), float(1.0), bool(true)))) + 0.0)) / 1.0), 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) - 0.0)), ((_GLF_IDENTITY(0.0, (0.0) - 0.0))) - 0.0) - 0.0)), 1.0)))))))), _GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0]))), 1.0 * ((_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0]))))) - 0.0), _GLF_FUZZED(vec2(-253.439, _GLF_IDENTITY(-883.397, mix(float(_GLF_FUZZED(-169.503)), float(-883.397), bool(true)))).y)), vec2(_GLF_FUZZED(float(false)), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(4.6) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))))[1], mix(float(_GLF_FUZZED(0.9)), float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))))[1]), bool(true)))))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) * 1)], injectionSwitch[1]))) - vec2(0.0, 0.0)), injectionSwitch))) - log(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7922.3651)), bool(false))), mix(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-225.204) : 1.0)))), 1.0, 1.0))), float(_GLF_FUZZED(140.871)), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(50.46)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0))))))), 0.0, 1.0, sin(0.0), 1.0), transpose(transpose(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, sin(0.0), 1.0))))), min(float(_GLF_IDENTITY(mat4x3(float(_GLF_IDENTITY(_GLF_FUZZED(50.46), (true ? _GLF_FUZZED(50.46) : _GLF_FUZZED(length(0.9))))), 1.0, 1.0, 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(0.0), 1.0), transpose(transpose(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-7.7))), sin(0.0), 1.0))))), float(_GLF_IDENTITY(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sin(0.0), 1.0), transpose(transpose(mat4x3(float(_GLF_FUZZED(50.46)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(295.520)), float(1.0), bool(true)))) + 0.0)) / 1.0), 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) - 0.0)), ((_GLF_IDENTITY(0.0, (0.0) - 0.0))) - 0.0) - 0.0)), 1.0)))))))), _GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))).y)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
