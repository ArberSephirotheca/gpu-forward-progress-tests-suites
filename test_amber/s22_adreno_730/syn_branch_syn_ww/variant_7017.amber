#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, false)))) && true)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false)) && true)))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false)) && true))))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) || false)))))))))), ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) || false))))))))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))), (! (_GLF_IDENTITY(! (bool(false)), false || (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) || false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (false) || _GLF_IDENTITY(false, (false) || false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, false)))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, false || (false))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))) << (uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))) << (uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))) << (uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))) << (uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))) << (uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), (gl_WorkGroupID) - uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (_GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) | (uint(uvec2(0u, 1u))))) + (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), 1u * (_GLF_IDENTITY(0u, min(0u, 0u))))), (true ? uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) + 0u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) + 0u)), 1u * ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) + 0u)))), 0u))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-4373.1052) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u))))) : _GLF_FUZZED(bitfieldReverse(uvec3(147596u, 163921u, 78586u))))))) / uvec3(1u, _GLF_IDENTITY(1u, (0u ^ 0u) ^ (1u)), _GLF_IDENTITY(1u, min(1u, 1u)))), gl_WorkGroupID, gl_WorkGroupID))) - _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) >> 0u), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) | (0u)), 0u))))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((false ? _GLF_FUZZED(-59.67) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(73.55)), mix(float(float(_GLF_FUZZED(73.55))), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0))), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) + 0.0)))), (float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0))), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) + 0.0))))) - 0.0), bool(true)))), ((false ? _GLF_FUZZED(-59.67) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(73.55)), mix(float(float(_GLF_FUZZED(73.55))), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0))), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) + 0.0)))), (float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0))), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) + 0.0))))) - 0.0), bool(true))))) * exp(0.0))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) * cos(0.0)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)))), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-129.359)), vec2(_GLF_FUZZED(82.85), (injectionSwitch)[1]), bvec2(false, true))).y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))) && true), false))), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 0.0, tan(0.0), length(abs(vec3(0.0, 0.0, 0.0))), 1.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[0])), injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, tan(0.0)), mat2x4(mat3x4(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, tan(0.0)), (true ? mat2x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, tan(0.0)) : _GLF_FUZZED(mat2x4(4.3, 2005.1935, 25.20, 738.499, 2.3, 2240.5924, 8664.5492, -9.6))))))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) << 0)])).y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 0.0, tan(0.0), length(abs(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8093.6298)), float(1.0), bool(true)))))).y, (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.0) : 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.0) : 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.0) : 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), (float(vec2(injectionSwitch.y, determinant(mat2(0.0, 1.0, 0.0, 0.0))))) / 1.0)))), max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), 1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))[1]), vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(372.008)), bvec2(false, false))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false, true, true)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(904.611) : injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), max((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), clamp((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), (true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009)), 0.0 + ((true ? injectionSwitch.y : _GLF_FUZZED(2388.8009))))))))))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(904.611) : injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), 1.0, 1.0, 1.0)))), false, true, true))) || false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))) && true))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false) || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))) || false)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), bool(bvec2((false), true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))
    barrier();
   return;
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), uint(uvec4(~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 0u, 1u, 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bool(bool(bvec4(false, false, false, true)))))))), bool(bvec2(false, false))))) || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), max(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), true && (! (! (_GLF_IDENTITY(false, (false) && true)))))), bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(-8.5))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-85.91))), (false ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(-8.5)))))), float(_GLF_FUZZED(78.81)), bool(false)))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(-8.5))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.3))), injectionSwitch.y))) * 1.0), (true ? injectionSwitch.y : _GLF_FUZZED(-8.5)))))))))))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))).y), false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)))))) || false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY((1), ((1)) | ((1))) * 1) ^ 0)) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY((1), ((1)) | ((1))) * 1) ^ 0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY((1), ((1)) | ((1))) * 1) ^ 0)) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY((1), ((1)) | ((1))) * 1) ^ 0)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY((1), ((1)) | ((1))) * 1) ^ 0)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY((1), ((1)) | ((1))) * 1) ^ 0)) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY((1), ((1)) | ((1))) * 1) ^ 0)) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) * 1, (_GLF_IDENTITY((1), ((1)) | ((1))) * 1) ^ 0)) | 0)))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), (_GLF_IDENTITY((1), ((1)) | ((1)))) + 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), (_GLF_IDENTITY((1), ((1)) | ((1)))) + 0)), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), (_GLF_IDENTITY((1), ((1)) | ((1)))) + 0)))))), _GLF_IDENTITY((1), ((1)) | ((1))))) * _GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(((1)), int(ivec4(((1)), 0, 0, 0)))) * 1)), (int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) * 1))) + 0)) - _GLF_IDENTITY((1 ^ 1), _GLF_IDENTITY(((1 ^ 1)) / 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10414) : _GLF_IDENTITY(((1 ^ 1)) / 1, (_GLF_IDENTITY(((1 ^ 1)) / 1, min(((1 ^ 1)) / 1, ((1 ^ 1)) / 1))) | 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (0))) | (1))))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1))))), ((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1)))))) * 1u), ((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1)))))) * 1u)) + ((1u & 1u) ^ 1u)))))) ^ _GLF_IDENTITY(0u, (0u) + 0u), ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base))), clamp(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base)))), clamp(~ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base)))), ~ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base)))), ~ (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base)))))))), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base)))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | 0u) + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (false ? _GLF_FUZZED(-71366) : 0 | (1))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1))))), ((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(8), int(8))) + (1)), _GLF_IDENTITY(1, 0 | (1)))))) * 1u)) + ((1u & 1u) ^ 1u)))))) ^ _GLF_IDENTITY(0u, (0u) + 0u)) | ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED((47844 << 52604)) : 1)), 0u, 0u)), (true ? uint(uvec3(subgroup_local_id + 1, 0u, 0u)) : _GLF_FUZZED(subgroup_base)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, _GLF_IDENTITY(1, 0 + (1)))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 1), ivec3(ivec4(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) << ivec3(0, 0, 0)), 0))))), _GLF_IDENTITY(1, 0 | (1))))) + 0u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1))))), ((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), max(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)))))))) * _GLF_IDENTITY(1u, (1u) / 1u))) + ((1u & _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)) : _GLF_FUZZED(subgroup_local_id)))) / 1u)) ^ 1u)))))) ^ _GLF_IDENTITY(0u, (0u) + 0u))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), uint(uvec4(max(workgroup_base, workgroup_base), 0u, 1u, 0u))))) : _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) : _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) | 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), (subgroup_size) * 1u)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) : _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))) - 0u)))) / (0u ^ 1u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) : subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))) * 1.0)), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))) * 1.0))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), vec2(_GLF_FUZZED(-1583.5848), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))).y, (injectionSwitch.y) / 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) / 1.0))), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, (false ? _GLF_FUZZED(-5.1) : (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) / 1.0))) && _GLF_IDENTITY(true, ! (! (true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(refract(0.6, -5.9, -75.93)) : injectionSwitch.y)), (injectionSwitch.y) / 1.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), mix(float(_GLF_FUZZED(104.982)), float(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, false)))) || false)), (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && true)))))))))))) && true), false, true, false)))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2(4, 0)), ((ivec2(4, 0))) | ivec2(0, 0)), min(_GLF_IDENTITY((ivec2(4, 0)), ((ivec2(4, 0))) | ivec2(0, 0)), (ivec2(4, _GLF_IDENTITY(0, max(0, 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0)))), ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0)))), (false ? _GLF_FUZZED(ivec2(7935, 28311)) : _GLF_IDENTITY(ivec2(4, 0), ~ (~ (_GLF_IDENTITY(ivec2(4, 0), (false ? _GLF_FUZZED(ivec2(21584, -81256)) : ivec2(4, 0)))))))))))) ^ ivec2(0, 0)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4345.4507))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) % 2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id % 2), ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), (subgroup_local_id) - 0u)) << (0u & 7195u)), subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))) % _GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec3(int(int(2)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) | ((subgroup_local_id % 2)))), (~ (_GLF_IDENTITY((subgroup_local_id % 2), ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), (subgroup_local_id) - 0u)) << (0u & 7195u)), subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))) % _GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec3(int(int(2)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) | ((subgroup_local_id % 2))))) | 0u))) == _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false, true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))), true && (bool(_GLF_DEAD(false))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (bool(_GLF_DEAD(false))))))), true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))), true && (bool(_GLF_DEAD(false)))), false, true, true)))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), (_GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), false || (true && (bool(_GLF_DEAD(false)))))) || false)))), false, true)))), true, true))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(_GLF_IDENTITY(~ (2), (~ (2)) << 0), ~ (2)))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED(86.21), _GLF_FUZZED(-5198.6214)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(51.19)), vec2(_GLF_FUZZED(-5043.0363), ((injectionSwitch))[1]), bvec2(false, true)))[1], mix(float(_GLF_FUZZED(-3.4)), float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(51.19)), vec2(_GLF_FUZZED(-5043.0363), ((injectionSwitch))[1]), bvec2(false, true)))[1], float(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(51.19)), vec2(_GLF_FUZZED(-5043.0363), ((injectionSwitch))[1]), bvec2(false, true)))[1], 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(51.19)), vec2(_GLF_FUZZED(-5043.0363), ((injectionSwitch))[1]), bvec2(false, true)))[1], 1.0, 0.0)))))), bool(true)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
