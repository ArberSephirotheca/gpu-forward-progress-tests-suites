#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 uint _f0;
 ivec2 _f1;
 mat3x2 _f2;
 uint subgroup_base;
 uvec2 _f3;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 mat3x2 _f1;
 int _f2;
 mat2x4 _f3;
 uint subgroup_size;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat3 _f1;
 ivec3 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 ivec2 _f1;
 float _f2;
 float _f3;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 bvec3 _f1;
 uvec4 _f2;
 float _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat2 _f1;
 _GLF_struct_1 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 uvec2 _f1;
 _GLF_struct_4 _f2;
 uvec2 _f3;
 _GLF_struct_6 _f4;
 uvec2 _f5;
 mat2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))) || false) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.2)), bool(false))) > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 1.0)))) / 1.0)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, sin(0.0))), 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, sin(0.0))), 1.0, 0.0))))), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8642.4075), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat3x2((injectionSwitch)[1], 0.0, 1.0, sqrt(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2((injectionSwitch)[1], 0.0, 1.0, sqrt(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.1)), bvec2(true, false))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true)) || false), false, false, true))))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.y = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(_GLF_struct_0(mat2(1.0), bvec3(true), uvec4(1u), 1.0), mat2(1.0), _GLF_struct_1(mat3x2(1.0), ivec2(1), 1.0, 1.0), mat4x3(1.0)), uvec2(1u), _GLF_struct_4(mat3x2(1.0), mat3(1.0), ivec3(1), _GLF_struct_3(vec2(1.0), mat3x2(1.0), _GLF_IDENTITY(1, clamp(1, 1, 1)), mat2x4(1.0), gl_SubgroupSize)), uvec2(1u), _GLF_struct_6(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(-40001)))) << _GLF_IDENTITY(ivec4(7), ivec4(7))) + (ivec4(1))), _GLF_IDENTITY((ivec4(1)) | ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-80637, -58088, 45190, -76901)) : (ivec4(1)) | ivec4(0, 0, 0, 0))))) << (ivec4(0, 0, 0, 0) | ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_struct_5(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u))), mat3x2(1.0))), uvec2(1u), mat2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-57.39 / -6.9))), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z = _GLF_struct_replacement_7._f2._f3.subgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z = _GLF_struct_replacement_7._f2._f3.subgroup_size) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z = _GLF_struct_replacement_7._f2._f3.subgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z = _GLF_struct_replacement_7._f2._f3.subgroup_size))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z = _GLF_struct_replacement_7._f2._f3.subgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z = _GLF_struct_replacement_7._f2._f3.subgroup_size) | 0u)) / 1u), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z = _GLF_struct_replacement_7._f2._f3.subgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z = _GLF_struct_replacement_7._f2._f3.subgroup_size) / 1u)) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(22408u))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(22408u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0))), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(float(-49042))), bvec2(false, false))))).y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(_GLF_IDENTITY(3.5, min(3.5, 3.5))))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false))))))))) && true))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7869.1161), (_GLF_IDENTITY(_GLF_FUZZED(-7869.1161), mix(float(_GLF_FUZZED(-7869.1161)), float(_GLF_FUZZED(-8815.0751)), bool(false)))) - 0.0) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))) : _GLF_FUZZED(6.6))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x))) * determinant(mat2(1.0, 1.0, 0.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(6.6), min(_GLF_IDENTITY(_GLF_FUZZED(6.6), min(_GLF_FUZZED(6.6), _GLF_FUZZED(6.6))), _GLF_FUZZED(6.6))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(4.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x))) * determinant(mat2(1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(6.6))))))) > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x)) : _GLF_FUZZED(6.6))))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x))) * determinant(mat2(1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(6.6))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.4))) > injectionSwitch.y)) ? _GLF_FUZZED(4.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x))) * determinant(mat2(1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(6.6))))))) > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x))) * determinant(mat2(1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(6.6))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.4))) > injectionSwitch.y)) ? _GLF_FUZZED(4.6) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7869.1161) : injectionSwitch.x))) * determinant(mat2(1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(6.6))))))) > injectionSwitch.y))), false, false))) || _GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))) < injectionSwitch.y)), true)))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), min(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(~ (~ ((workgroup_size))), 1u * (~ (~ (_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size)))))))) | 0u), workgroup_size)) * workgroup_id;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w = _GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))) | ((workgroup_base)))) | 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), true, true, true))))) && true), true, true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true)))))))))))))))))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), _GLF_IDENTITY(true, (true) && true)))), true))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), bvec3(bvec4(bvec3(false, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))))), true, true), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))))), true, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))))), true, true), true))), true))))), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true)))))), false)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, true)))), true))))))))))))))), bvec3(bvec3(bvec3(false, true, true)))), true)))))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(1u, ivec2(1), mat3x2(1.0), GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z, uvec2(1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, sqrt(0.0), 0.0, 0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, sqrt(0.0), 0.0, 0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, sqrt(0.0), 0.0, 0.0))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, sqrt(0.0), 0.0, 0.0))))).y) * 1.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.0)), bool(false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0))) > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x = _GLF_struct_replacement_8.subgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat3x4(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(_GLF_IDENTITY(1.0, float(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-6.7, float(_GLF_IDENTITY(float(-6.7), (false ? _GLF_FUZZED(71.64) : float(-6.7)))))), mix(float(_GLF_FUZZED(-9.6)), float(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-6.7), mix(float(_GLF_FUZZED(-7330.5270)), float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7)))), bool(true)))), bool(true))))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(292.728)), float(1.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), log(1.0)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(mat3x4(-4.8, -1.0, 701.783, -148.103, -1.0, -8.8, 8634.1048, -3.5, 482.328, -5.9, -65.39, -8.6)) : mat3x4(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.7))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(331.171) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y), log(1.0)))))), (true ? vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat3x4(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), round(length(normalize(vec2(_GLF_IDENTITY(1.0, float(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-6.7, float(_GLF_IDENTITY(float(-6.7), (false ? _GLF_FUZZED(71.64) : float(-6.7)))))), mix(float(_GLF_FUZZED(-9.6)), float(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-6.7), mix(float(_GLF_FUZZED(-7330.5270)), float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7)))), bool(true)))), bool(true))))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(292.728)), float(1.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), log(1.0)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(mat3x4(-4.8, -1.0, 701.783, -148.103, -1.0, -8.8, 8634.1048, -3.5, 482.328, -5.9, -65.39, -8.6)) : mat3x4(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.7))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(331.171) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y), log(1.0)))))), _GLF_IDENTITY((true ? vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)), ((true ? vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y, float(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)).y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x, max(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x, max(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x))) >> 0u), max(GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x, GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.x))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x))) + ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_14subgroup_basesubgroup_idsubgroup_sizeworkgroup_base.z);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(92.43))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.9)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x))), bool(true))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])), mix(vec2(_GLF_FUZZED(-885.033), _GLF_FUZZED(-8.3)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(! _GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), false || ((! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, false || (false))))))))), bool(bvec4(! _GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), false || ((! (false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))), true, _GLF_IDENTITY(true, false || (true)), true)))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true, ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y) && true) && true), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (false) || false), true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true), true, false, true)))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true), true, _GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true), true, false, true))))))) || false))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false), true))))), ! (_GLF_IDENTITY(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, false)))))))) && true))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true), true, _GLF_IDENTITY(false, (false) || false), true)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true), true, false, true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true), true, false, true))))), false || (! ((! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true), true, false, true))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true), true, _GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true), true, false, true))))))) || false))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false), bvec3(bvec4(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false), true))))), ! (_GLF_IDENTITY(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, false)))))))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x))), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uvec4(0u, 0u, 0u, 0u) | ((_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ uvec4(0u, 0u, 0u, 0u))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (2) | 0))), 0u ^ (subgroup_local_id % 2))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))))).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) > injectionSwitch.y, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-19.20))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) * 1.0)) / 1.0))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)))[0], injectionSwitch[1])))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)))[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)))[0], injectionSwitch[1])))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (! ((false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -81.89)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5.1)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5.1)), bool(false))), float(_GLF_FUZZED(76.69)), bool(false)))), ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -81.89)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5.1)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5.1)), bool(false))), float(_GLF_FUZZED(76.69)), bool(false))))))))) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (_GLF_IDENTITY(false, (false) && true))), (false) && true)), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) && true))), bool(bool(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(true, (true) && true) && (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, (true) || false) && (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && _GLF_IDENTITY((true), bool(bvec2((true), false))), false || (_GLF_IDENTITY(true && _GLF_IDENTITY((true), bool(bvec2((true), false))), bool(bvec4(true && _GLF_IDENTITY((true), bool(bvec2((true), false))), false, false, true)))))) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), ! (! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false))))) || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(bvec2((true), false)))) && (! (false))))))))))) || false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, true && (false))))))), true && ((_GLF_IDENTITY((false), bool(bool((false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bool((false))))), true && ((_GLF_IDENTITY((false), bool(bool((false)))))))))))), true && (! _GLF_IDENTITY((false), ! (! ((false)))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))) && (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(true, true, true, true)))))))) && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((_GLF_IDENTITY(false, (false) || false)))) && true)))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) && (! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), true, true))) && (! (false))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), true, true))) && (! (false))))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), true, true))) && (! (false)))))), ! (! (bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), true, true))) && (! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, (true) || false), true))) && (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))), ((false)) && _GLF_IDENTITY(true, (true) || false)))) || false))))))))))))), true, _GLF_IDENTITY(true, ! (! (true)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) && true)))) && (! (false)), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) && (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bool(! (! (true)))), bool(bool(bool(bool(! (! _GLF_IDENTITY((true), false || ((true))))))))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, true))))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false)), true, true, true))) && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false)))))))), true, true)))))), false || (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) && (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))))), _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), _GLF_IDENTITY((bool(bvec4(true, true, true, true))), (_GLF_IDENTITY((bool(bvec4(true, true, true, true))), ! (! ((bool(bvec4(true, true, true, true))))))) || false) && true)) && (! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), false, false))))))))), true, true)))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), true, false)))), true, true, true))) && (! (false)), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), true, false)))), true, true, true))) && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), bool(bvec3(bool(bool(true)), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false)), false)))), true, true, true))) && (! (false)))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, false))), bool(bvec4(true, true, true, true))) && (! (false)), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec4(bvec3(bvec3(true, false, true)), true))), true)))))))))) && (! (false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, true, true, true))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))))))), true, true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (_GLF_IDENTITY(! (false), false || (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) && (! (false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), (! (false)) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(true, true && (true)), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, true, true, true))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false)))))))), bool(bvec3(! (false), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false)))))))), bool(bvec3(! (false), true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false)))))))), bool(bvec3(! (false), true, true))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false)))))))), bool(bvec3(! (false), true, true))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false)))))))), bool(bvec3(! (false), true, true))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false)))))))), bool(bvec3(! (false), true, true)))))))))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec4(bool(bvec4(true, true, true, true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, (false) || false)) && (! (false)), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) && (! (false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(true, true, true, true))) && (! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))), bool(bvec2((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))), true)))))))), true, true)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(true, true, true, true))) && (! (false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(true, true)), true, false), bvec3(bvec3(bvec3(bool(bvec2(true, true)), true, false))))))), bool(bvec4(true, true, true, true))) && (! (false)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))), false || ((! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))) && true)) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), false || (bool(bvec4(true, true, true, true))))) && (! (false))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))) && true)) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))) && true))))))), true, true))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false)))))), bool(bool(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))), _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bool((false))))), ((_GLF_IDENTITY((false), bool(bool((false)))))) && true) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))), (_GLF_IDENTITY((false), bool(bool((false))))) && true))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))), (_GLF_IDENTITY((false), bool(bool((false))))) && true)))))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && (_GLF_IDENTITY(! (false), false || (! (false))))))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3(! (_GLF_IDENTITY(! (false), false || (! (false)))), true, false)))))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))) && true))), true, true, false))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, log(1.0)))), mix(float(_GLF_FUZZED(-601.482)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, log(1.0))), (true ? dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, log(1.0))) : _GLF_FUZZED(acos(_GLF_IDENTITY(42.66, mix(float(42.66), float(_GLF_FUZZED((2.7 / vec4(-94.08, -11.03, -219.857, -2763.1075).q))), bool(_GLF_IDENTITY(false, ! (! (false)))))))))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, log(1.0))))), bool(true))), 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-744.521, -2.8), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : vec2(-744.521, -2.8)), mix(vec2(_GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : vec2(-744.521, -2.8)))[0], mix(float(_GLF_FUZZED(-222.745)), float(((false ? _GLF_FUZZED(injectionSwitch) : vec2(-744.521, -2.8)))[0]), bool(true))), _GLF_FUZZED(3225.7468)), vec2(_GLF_FUZZED(484.798), ((false ? _GLF_FUZZED(injectionSwitch) : vec2(-744.521, -2.8)))[1]), bvec2(false, true))))) : injectionSwitch))) / vec2(1.0, 1.0)).y), 1.0)), mix(vec2((vec2(mat2x4(vec2(1.0, 1.0), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[0], (vec2(mat2x4(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[1]), vec2(_GLF_FUZZED(165.438), _GLF_FUZZED(7.9)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, length(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0)))), vec2(0.0, 0.0)), clamp(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))))), (injectionSwitch.x) - tan(0.0))) * _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.2)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).y))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) || (false)), (false) || false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), false)), bool(bool(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false))))), false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (! (false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
