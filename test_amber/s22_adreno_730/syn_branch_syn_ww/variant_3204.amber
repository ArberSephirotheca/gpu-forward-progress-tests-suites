#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.70), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(47.97)), bvec2(true, false))), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))))))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.2))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false))), true)))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), false), false), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, abs(1.0), 1.0, tan(0.0), 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(54.14))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), 0.0, 1.0, abs(sqrt(1.0)), 1.0, 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) + mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), float(vec2(injectionSwitch.x, 0.0))), 0.0, 1.0, abs(sqrt(1.0)), 1.0, 0.0))) : _GLF_FUZZED(0.3)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), 0.0, 1.0, abs(sqrt(1.0)), 1.0, 0.0))) : _GLF_FUZZED(0.3)), max((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), 0.0, 1.0, abs(sqrt(1.0)), 1.0, 0.0))) : _GLF_FUZZED(0.3)), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(25.78)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), abs(sqrt(1.0)), 1.0, 0.0))) : _GLF_FUZZED(0.3))))) * _GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), max(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(705.058), _GLF_FUZZED(868.006)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true))), injectionSwitch)).y), false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false)))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false)))), bool(bvec4(! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false)))), true, false, false)))))) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (! ((false)))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)), (max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : injectionSwitch)).x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), false || (! ((false)))), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), false))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x < injectionSwitch.y)))))), false, true))))), true)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), 0.0, 1.0, abs(sqrt(1.0)), 1.0, 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), 0.0, 1.0, abs(sqrt(1.0)), 1.0, 0.0))) : _GLF_FUZZED(0.3)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), 0.0, 1.0, abs(sqrt(1.0)), 1.0, 0.0))) : _GLF_FUZZED(0.3)), max((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), 0.0, 1.0, abs(sqrt(1.0)), 1.0, 0.0))) : _GLF_FUZZED(0.3)), (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))), float(vec2(injectionSwitch.x, 0.0))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(sqrt(1.0)), 1.0, 0.0))) : _GLF_FUZZED(0.3))))) * abs(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(705.058), _GLF_FUZZED(868.006)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))])) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]))), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true))), injectionSwitch)).y), false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), ! (! (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x < injectionSwitch.y))), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.0, 2588.9578)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) : injectionSwitch)).x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false)))), ! (! (! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true)), false || ((_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))) && true))))), _GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false)))))), false)))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).x < injectionSwitch.y)))))), false, true))))), true)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(0.8)), bool(false))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(28.55), _GLF_FUZZED(-441.729)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(true, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))) || false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214)))), clamp(min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(82214), ~ (~ (true ? 4 : _GLF_FUZZED(82214))))))), _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), max((true ? 4 : _GLF_FUZZED(82214)), (true ? 4 : _GLF_FUZZED(82214)))))), (_GLF_IDENTITY(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(82214, _GLF_IDENTITY(int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6))))), (0 << _GLF_IDENTITY(int(0), int(0))) | (int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6)))))))))))), max(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(82214, _GLF_IDENTITY(int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6))))), (0 << _GLF_IDENTITY(int(0), int(0))) | (int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6)))))))))))), (min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(82214, _GLF_IDENTITY(int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6))))), (0 << _GLF_IDENTITY(int(0), int(0))) | (int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6))))))))))))) | (min(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, int(ivec2(4, 1))))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(82214, _GLF_IDENTITY(int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), 1 * (0 << _GLF_IDENTITY(int(0), int(0)))), 0 << _GLF_IDENTITY(int(0), int(0))))) | (int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6)))))))))))))), min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(82214, _GLF_IDENTITY(int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6))))), (0 << _GLF_IDENTITY(int(0), int(0))) | (int(ivec2(82214, (0 >> _GLF_IDENTITY(int(6), int(6)))))))))))))), _GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), 1, 1), max(ivec3(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(82214))))), _GLF_IDENTITY(int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)), (int(ivec2((min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), 0 ^ ((true ? 4 : _GLF_FUZZED(82214))))) | ((true ? 4 : _GLF_FUZZED(82214))))))), 1))) | (_GLF_IDENTITY(int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))))), (int(ivec2((min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (true ? 4 : _GLF_FUZZED(82214))))), 1))) + 0)))), 1, 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), min(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(82214, (82214) - 0)))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), _GLF_IDENTITY(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), (_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)))) - 0))), 1, 1)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), 1, 1), max(ivec3(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(82214))))), _GLF_IDENTITY(int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)), (int(ivec2((min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), 0 ^ ((true ? 4 : _GLF_FUZZED(82214))))) | ((true ? 4 : _GLF_FUZZED(82214))))))), 1))) | (_GLF_IDENTITY(int(ivec2((min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(82214), (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(82214), ~ (~ (true ? 4 : _GLF_FUZZED(82214))))) << 0))))), 1)), (int(ivec2((min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (true ? 4 : _GLF_FUZZED(82214))))), 1))) + 0)))), 1, 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), min(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), _GLF_IDENTITY(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), (_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)))) - 0))), 1, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 | (4)) : _GLF_FUZZED(82214))))), 1))), 1, 1), max(ivec3(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(82214), min(true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(82214), true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(82214))))))), _GLF_IDENTITY(int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)), (int(ivec2((min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), 0 ^ ((true ? 4 : _GLF_FUZZED(82214))))) | ((true ? 4 : _GLF_FUZZED(82214))))))), 1))) | (_GLF_IDENTITY(int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)), (int(ivec2((min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (true ? 4 : _GLF_FUZZED(82214))))), 1))) + 0)))), 1, 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), ~ (~ ((true ? 4 : _GLF_FUZZED(82214)))))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214)))), (min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))) | (_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214)))), (0 << _GLF_IDENTITY(int(8), int(8))) + (_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214)))), (min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))) | (min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))))))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), _GLF_IDENTITY(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), (_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(82214, (false ? _GLF_FUZZED(-34418) : 82214))))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)))) - 0))), 1, 1))))) << 0), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), 1, 1), max(ivec3(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), ~ (~ (_GLF_IDENTITY(4, (4) ^ 0)))) : _GLF_FUZZED(82214))))), _GLF_IDENTITY(int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)), (int(ivec2((min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), 0 ^ ((true ? 4 : _GLF_FUZZED(82214))))) | ((true ? 4 : _GLF_FUZZED(82214))))))), 1))) | (_GLF_IDENTITY(int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)), _GLF_IDENTITY((int(ivec2((min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) | (0 & 57508)), (true ? 4 : _GLF_FUZZED(82214))))), 1))), ((int(ivec2((min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) | (0 & 57508)), (true ? 4 : _GLF_FUZZED(82214))))), 1)))) << (-55009 & 0)) + 0)))), 1, 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), min(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1))), _GLF_IDENTITY(_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), clamp((true ? 4 : _GLF_FUZZED(82214)), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), ~ (_GLF_IDENTITY(~ ((true ? 4 : _GLF_FUZZED(82214))), (false ? _GLF_FUZZED(47728) : ~ ((true ? 4 : _GLF_FUZZED(82214))))))), _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(82214)), max((true ? 4 : _GLF_FUZZED(82214)), (true ? 4 : _GLF_FUZZED(82214))))))))), 1))), (_GLF_IDENTITY((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), int(ivec2((min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))), 1)))) - 0))), 1, 1))))))) | (min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(82214, 0 ^ (_GLF_IDENTITY(82214, (82214) * 1)))))))))) | (_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214)))), max(min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(82214)))), min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (4))))), (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(82214, (82214) / 1))))))))), min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(82214))))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-146.335) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false), true))), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)), bool(bvec2(bool(bvec3((bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), true)))) && true))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6551.4464))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(992.050)), vec2(_GLF_FUZZED(vec4(306.647, 5.0, -5.3, -3.8).w), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
