#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_28 {
 uvec2 _f0;
 mat2x4 _f1;
 int _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_27 {
 mat4x3 _f0;
 vec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_26 {
 int _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_29 {
 uint _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 _GLF_struct_28 _f3;
} ;

struct _GLF_struct_24 {
 mat2x4 _f0;
 bool _f1;
 mat3 _f2;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
 ivec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_30 {
 _GLF_struct_25 _f0;
 mat4x2 _f1;
 _GLF_struct_29 _f2;
 uint workgroup_size;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 ivec2 _f1;
 bvec2 _f2;
 mat2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_20 {
 int _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_19 {
 mat3 _f0;
 mat4x3 _f1;
 mat4x3 _f2;
 uint num_workgroup;
} ;

struct _GLF_struct_22 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_21 _f2;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 mat4 _f1;
 mat2x3 _f2;
 uvec4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 mat4x2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 bvec4 _f3;
 int _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_13 {
 ivec3 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 uint _f4;
 bvec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 mat2 _f1;
 mat4 _f2;
 _GLF_struct_13 _f3;
 mat4x3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_18 _f2;
 bvec3 _f3;
 _GLF_struct_22 _f4;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
 vec2 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 bool _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 mat4 _f1;
 mat4 _f2;
 vec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 _GLF_struct_7 _f1;
 uint _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 mat2 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 uvec2 _f1;
 uvec3 _f2;
 uint _f3;
 vec4 _f4;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 mat2x4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 bvec2 _f1;
 mat4 _f2;
 mat2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 uvec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 ivec2 _f1;
 int _f2;
 mat4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 uint subgroup_base;
 bvec4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_11 _f3;
 float _f4;
 bvec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) < injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-5396.3552, -29.17, -0.1)[1]) : injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1])) - vec2(0.0, 0.0)), bvec2(false, true))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(32.72, -7.5), mix(vec2(_GLF_FUZZED(0.3), _GLF_FUZZED(-4.1)), vec2((vec2(32.72, -7.5))[0], (vec2(32.72, -7.5))[1]), bvec2(true, true)))) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, length(0.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0))).x, injectionSwitch.x)) > injectionSwitch.y)))), false, true))), true, false)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(32.72, -7.5), mix(vec2(_GLF_FUZZED(0.3), _GLF_FUZZED(-4.1)), vec2((vec2(32.72, -7.5))[0], (vec2(32.72, -7.5))[1]), bvec2(true, true)))) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, length(0.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0))).x, injectionSwitch.x)) > injectionSwitch.y)))), false, true))), true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.72, -7.5)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat2(-384.017, 7193.8869, 6.2, 2.5)[1]) : injectionSwitch)), 1.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat2(-384.017, 7193.8869, 6.2, 2.5)[1]) : injectionSwitch)), 1.0) : _GLF_FUZZED(vec3(-97.83, 0.0, -2.1)))))), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, true))), true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.72, -7.5)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, true))), false, true), false))))), true, false)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.72, -7.5)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, true))), false, true), false))))), true, false)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.72, -7.5)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, true))), false, true), false))))), true, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.72, -7.5)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.72, -7.5)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.72, -7.5)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.72, -7.5)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y : _GLF_FUZZED(2.7)))) / 1.0)) + 0.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, true))), true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)) && true)) && true) && true)))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1])) - vec2(0.0, 0.0)), bvec2(false, true))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(5.6), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[1]), (vec2(_GLF_FUZZED(5.6), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(43720)))])) - vec2(0.0, 0.0)), bvec2(false, true))).x > injectionSwitch.y))) && true), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.72, -7.5)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (false ? _GLF_FUZZED(-1039.6438) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), true, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(true))), bool(false))) < injectionSwitch.y)))))) && true)))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))))))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(657.685)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(-640.447, -9.6, 595.164, -0.0)) : mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 1.0, 1.0, 0.0)))))), bool(true)))))) + 0.0)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
    {
    }
   else
    {
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1))) || false)); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), 0 + ((_injected_loop_counter)))) ^ 0)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(uvec3(1u), _GLF_struct_14(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.2)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.2)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))))))), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-3.0, -6.9, 9.6, -68.18)) : mat2(1.0))), mat4(1.0), _GLF_struct_13(ivec3(1), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)) | (uvec3(1u))), mat2x3(1.0), mat3x2(1.0), 1u, bvec3(true), uvec4(1u)), mat4x3(1.0), bvec4(true)), _GLF_struct_18(mat3(1.0), _GLF_struct_15(mat4x3(1.0)), _GLF_struct_16(mat4x3(1.0), mat3x2(1.0), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false))), false || (true))) || false), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || (true)))))) || false)) && true)), mat3x2(1.0), mat4x2(1.0), bvec4(true)), bvec4(true), 1, _GLF_struct_17(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(136.445), _GLF_FUZZED(7.8)), bvec2(false, false))).x > injectionSwitch.y)), false))), ! (! (true)))), mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-53.65)), float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, sqrt(1.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, sqrt(1.0)))), 1.0, tan(0.0), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))) + (1.0))) / 1.0) : _GLF_FUZZED(1.8)))), bool(_GLF_IDENTITY(true, true && (true)))))), mat2x3(1.0), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)), mat3x2(1.0))), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true)))))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), _GLF_struct_22(_GLF_struct_19(mat3(1.0), mat4x3(1.0), mat4x3(1.0), gl_NumWorkGroups.x), _GLF_struct_20(1, bvec3(true)), _GLF_struct_21(vec2(1.0), ivec2(_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), mat2(1.0), bvec3(true))));
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_25(_GLF_struct_24(mat2x4(1.0), true, mat3(1.0)), ivec4(1), _GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), _GLF_IDENTITY(transpose(transpose(transpose(mat4(1.0)))), transpose(transpose(_GLF_IDENTITY(transpose(transpose(transpose(mat4(1.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(transpose(mat4(1.0))))))))))))), mat4x2(1.0), _GLF_struct_29(1u, _GLF_struct_26(1, _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true)))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), bvec3(bvec3(bvec3(bvec3(true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), bvec3(bvec3(bvec3(bvec3(true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), bvec3(bvec3(bvec3(bvec3(true))))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(true), true))))))), bvec3(bvec3(bvec3(bvec3(true))))))))))), true)))))), _GLF_struct_27(mat4x3(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-86.55)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0))))), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1u), _GLF_struct_28(uvec2(1u), mat2x4(1.0), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-35256) : 1)) : _GLF_FUZZED(45329))), mat4x2(1.0))), gl_WorkGroupSize.x);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_30.workgroup_size * workgroup_id;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(vec2(1.0), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), bvec4(true), _GLF_struct_6(_GLF_struct_0(ivec4(1), _GLF_IDENTITY(ivec2(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(-31205, -87124), (ivec2(-31205, -87124)) ^ ivec2(0, 0))) : ivec2(1))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (1) | (_GLF_IDENTITY(1, (1) | (1))))), (0 ^ 1), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, max(0, 0)) : _GLF_FUZZED((51945 | -11988)))), 1))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(ivec4(int(_GLF_IDENTITY(1, (1) | (1))), (0 ^ 1), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), ~ (~ (_GLF_IDENTITY(0, max(0, 0))))) : _GLF_IDENTITY(_GLF_FUZZED((51945 | -11988)), min(_GLF_FUZZED((51945 | -11988)), _GLF_FUZZED((51945 | -11988)))))), 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (1))), int(ivec4(int(_GLF_IDENTITY(1, (1) | (1))), (0 ^ 1), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, max(0, 0)) : _GLF_FUZZED((51945 | -11988)))), 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(-71232) : _GLF_IDENTITY(1, (1) | (1))))) | (_GLF_IDENTITY(1, (1) | (1))))), (0 ^ 1), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, max(0, 0)) : _GLF_FUZZED((51945 | -11988)))), 1))))))), mat4(1.0)), _GLF_struct_1(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-73.90)), _GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))), bool(true))), log(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-73.90), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-73.90), (_GLF_FUZZED(-73.90)) - 0.0)))), float(1.0), bool(true))), log(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.8))))), 1.0, 0.0)), (float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-73.90)), float(1.0), bool(true))), log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) - 0.0)), float(_GLF_FUZZED(75.46)), bool(false))))), uvec3(1u), uvec3(1u)), _GLF_struct_2(mat3x2(1.0), bvec2(_GLF_IDENTITY(true, (true) && true)), mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2(1.0), uvec4(1u)), _GLF_struct_3(mat2(1.0), mat2x4(1.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)), mix(float(_GLF_IDENTITY(1.0, abs(0.0) + (1.0))), float(_GLF_FUZZED(-32.08)), bool(false))))), _GLF_struct_4(uvec2(1u)), _GLF_struct_5(uvec4(1u), uvec2(1u), uvec3(1u), 1u, vec4(1.0))), _GLF_struct_11(mat2(1.0), _GLF_struct_7(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat4(1.0), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((9.1 / 2.4)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((9.1 / 2.4)), float(_GLF_IDENTITY(mat2(_GLF_FUZZED((9.1 / 2.4)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0), (mat2(_GLF_FUZZED((9.1 / 2.4)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-3766.4917)), float(_GLF_FUZZED((9.1 / 2.4))), bool(true)))), float(_GLF_FUZZED(-0.3)), bool(false)))), (float(_GLF_IDENTITY(_GLF_FUZZED((9.1 / 2.4)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((9.1 / 2.4)), float(_GLF_IDENTITY(mat2(_GLF_FUZZED((9.1 / 2.4)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0), (mat2(_GLF_FUZZED((9.1 / 2.4)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-3766.4917)), float(_GLF_FUZZED((9.1 / 2.4))), bool(true)))), float(_GLF_FUZZED(-0.3)), bool(false))))) * 1.0), bool(false))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), (_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0))) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0)), (false ? _GLF_FUZZED(vec2(-0.9, 2.4)) : (vec2(1.0))))[0], (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec2(1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | (0))] : _GLF_FUZZED(-645.865), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec2(1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | (0))] : _GLF_FUZZED(-645.865), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec2(1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | (0))] : _GLF_FUZZED(-645.865))))), (vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.2)), bool(false))), _GLF_IDENTITY((1.0) - 0.0, 1.0 * ((1.0) - 0.0)))))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(8.9, (8.9) - 0.0)), _GLF_FUZZED(9.2)), bvec2(false, false)), max(mix(vec2((vec2(1.0))[0], _GLF_IDENTITY((vec2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | 0)))], (true ? (vec2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | 0)))] : _GLF_FUZZED(-6450.3773)))), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(9.2)), bvec2(false, false)), _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((vec2(1.0))[0], (false ? _GLF_FUZZED(1719.1723) : (vec2(1.0))[0])), (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + (1)), 0), (ivec2(_GLF_IDENTITY(1, 0 + (1)), 0)) / ivec2(1, 1))))]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(9.2)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true, true)))), max(mix(vec2((vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((7441.6779)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5240.7795) : 1.0)))), (1.0) - 0.0)))))[0], (vec2(1.0))[1]), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(_GLF_IDENTITY(9.2, (false ? _GLF_FUZZED(-907.647) : 9.2)))), sin(vec2(0.0, 0.0)) + (vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(_GLF_IDENTITY(9.2, (false ? _GLF_FUZZED(-907.647) : 9.2)))))), (vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9.2, (9.2) - 0.0), (false ? _GLF_FUZZED(-907.647) : 9.2))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), true, false)))), mix(vec2((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))))[0], (vec2(1.0))[1]), vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(9.2)), bvec2(false, false))))))), ivec2(1)), 1u, _GLF_struct_8(uvec4(1u), mat2x3(1.0), uvec3(1u), true, uvec3(1u)), _GLF_struct_9(vec3(1.0)), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-9197.1552)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-9197.1552)), bool(false))) * 1.0))), _GLF_struct_10(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), 0 | (_GLF_IDENTITY(0, (0) - 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)))), 1, 1, 1))))))))))))) / 1)), vec2(1.0), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))))), (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.4, 626.095)) : injectionSwitch))) - tan(tan(vec2(0.0, 0.0))))[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.4, 626.095)) : injectionSwitch))) - tan(tan(vec2(0.0, 0.0))))[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.4, 626.095)) : injectionSwitch))) - tan(tan(vec2(0.0, 0.0))))[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))), 0.0, 1.0)))) - 0.0)), mat4x2(1.0))), 1.0, bvec4(true));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_12.subgroup_base + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) && true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))))), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(mat2(min(injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 1.0))))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.44)), bool(false))), float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, sin(0.0)))))) && true)))))))) || false)) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(6.9)), bvec2(false, false))).y))))) : _GLF_FUZZED(2.2))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, true, true))))))) || false, ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), sqrt(0.0), abs(1.0), 1.0, 1.0, determinant(mat3(abs(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), min(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), mat3(1.0) * (vec3(0.0, 0.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, sqrt(exp(0.0)), 0.0, tan(0.0), 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, sqrt(exp(0.0)), 0.0, tan(0.0), 0.0, 0.0))))), 0.0, 1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0)), abs(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(2.2))))), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(2.2))))), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3987.5873)), bool(false))), injectionSwitch.y))))) : _GLF_FUZZED(2.2))))), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(2.2))))), ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.3)))), float(_GLF_FUZZED((vec2(2.9, -93.06) + 4.5).r)), bool(false)))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), exp(0.0), 0.0, abs(1.0), 0.0), mat3x2(mat4(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), exp(0.0), 0.0, abs(1.0), 0.0))))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(353.523)), float((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(true))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), exp(0.0) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(2.2)))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.3)))), float(_GLF_FUZZED((vec2(2.9, -93.06) + 4.5).r)), bool(false)))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), exp(0.0), 0.0, abs(1.0), 0.0), mat3x2(mat4(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), exp(0.0), 0.0, abs(1.0), 0.0))))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(353.523)), float((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(true))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), exp(0.0) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(2.2)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0)), dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0))), 1.0)), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.3)))), float(_GLF_FUZZED((vec2(2.9, -93.06) + 4.5).r)), bool(false)))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), exp(0.0), 0.0, abs(1.0), 0.0), mat3x2(mat4(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), exp(0.0), 0.0, abs(1.0), 0.0))))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(353.523)), float((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(true))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), exp(0.0) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(2.2)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0)), dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0))), 1.0)), float(mat2x3(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.y, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, abs(1.0), exp(0.0)), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.3)))), float(_GLF_FUZZED((vec2(2.9, -93.06) + 4.5).r)), bool(false)))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), exp(0.0), 0.0, abs(1.0), 0.0), mat3x2(mat4(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), exp(0.0), 0.0, abs(1.0), 0.0))))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(353.523)), float((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(true))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), exp(0.0) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(2.2)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0)), dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0))), 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-91.88)), bool(false))))), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-257.844)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))) > injectionSwitch.y)) && true))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || false))) || false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, cos(0.0)))).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0))), (float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(float(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))) + 0.0)) : _GLF_FUZZED(-799.906)))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true)))))) || false)) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.6)), bool(false))), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0)))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.2))), injectionSwitch.y)), injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, injectionSwitch.y))))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(2.2))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && true))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0))), (float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))) + 0.0)) : _GLF_FUZZED(-799.906))), (false ? _GLF_FUZZED(16.73) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0))), (float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))) + 0.0)) : _GLF_FUZZED(-799.906))), mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0))), (float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))) + 0.0)) : _GLF_FUZZED(-799.906)))), bool(true)))))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false)) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))))), (float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))) + 0.0)) : _GLF_FUZZED(-799.906))), (false ? _GLF_FUZZED(16.73) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / 1.0)) / 1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 1.0, 0.0, 0.0, tan(0.0))), (float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0)))) + 0.0)) : _GLF_FUZZED(-799.906))), mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch))))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0))), (float(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(sqrt(1.0), 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), mat3x2(mat4x2(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(sqrt(1.0), 1.0, 1.0), vec3(0.0, 0.0, 0.0))))))))), 0.0, tan(0.0)))) + 0.0)) : _GLF_FUZZED(-799.906)))), bool(true)))))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.2))), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, false || (true))))) || false)) || false)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.4))))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2372.2745)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + _GLF_IDENTITY((min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((8068.9335)), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y)), ((min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6884.8714) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2), min(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), ((min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2), 1.0 * (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), ((min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2), 1.0 * (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), ((min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), ((min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(1.0, sqrt(1.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(1.0, sqrt(1.0), 0.0, 1.0))), tan(length(0.0)), 1.0, 0.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.69), _GLF_FUZZED(9669.1405)), bvec2(false, false))))).y))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2))))))), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2372.2745)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + _GLF_IDENTITY((min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((8068.9335)), _GLF_FUZZED(-1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y)), ((min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6884.8714) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2), min(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), ((min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2), 1.0 * (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), ((min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2), 1.0 * (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), ((min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + _GLF_IDENTITY((min(injectionSwitch.y, injectionSwitch.y)), ((min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(1.0, sqrt(1.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(1.0, sqrt(1.0), 0.0, 1.0))), tan(length(0.0)), 1.0, 0.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(63.69), _GLF_FUZZED(9669.1405)), bvec2(false, false))))).y))), ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(2.2)))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))) && true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), (! (! (_GLF_IDENTITY(false, (false) || false)))) && true)))) || false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_12.subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, clamp((1) - 0, (1) - 0, (1) - 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1), (_GLF_IDENTITY(ivec4((1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1), (ivec4((1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)) / ivec4(1, 1, 1, 1))) | (ivec4((1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1))))) - 0)), ((_GLF_IDENTITY(1, (1) - 0))) + 0)) | 0) | (0 | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), min((0), (0))))))))), 4, 64, 4);
 if(_GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))))), _GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2), (subgroup_local_id % 2))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, false))), (injectionSwitch.x < injectionSwitch.y))))
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | 0u), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(52911) : 4))))), 64, _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY(ivec2(4, 0), ivec2(ivec4(ivec2(4, 0), 0, 0))))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), _GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) * ivec2(1, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), _GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY((ivec2(4, 0)) * ivec2(1, 1), ((ivec2(4, 0)) * ivec2(1, 1)) | (_GLF_IDENTITY((ivec2(4, 0)) * ivec2(1, 1), ((ivec2(4, 0)) * ivec2(1, 1)) / ivec2(1, 1)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), _GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) * ivec2(_GLF_IDENTITY(1, (1) << 0), 1))))), (~ (_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), _GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) * ivec2(1, 1)))))) | ivec2(0, 0))) | (~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, 0 | (4)), 0), clamp(ivec2(4, 0), ivec2(4, 0), _GLF_IDENTITY(ivec2(4, 0), (_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) | (ivec2(4, 0)))) * ivec2(1, 1)))))))))))), min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))))), ivec2(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) * int(_GLF_ONE(1.0, injectionSwitch.y))))), 0), _GLF_IDENTITY(ivec2(4, 0), max(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) << ivec2(0, 0)), ivec2(4, 0))), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))))), 0)))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4))) - 0), 0), (ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4))) - 0), 0)) >> (ivec2(0, 0) << _GLF_IDENTITY(ivec2(4), ivec2(4)))), ivec2(4, 0), ivec2(4, 0))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, min(0, 0))), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)), max(_GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)), max(clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)))), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))))), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))))))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, _GLF_IDENTITY(0, clamp(0, 0, 0))), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)))))), min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, 0 ^ (4)), 0), clamp(ivec2(4, _GLF_IDENTITY(0, max(0, 0))), ivec2(4, 0), ivec2(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, 0), (ivec3(4, 0, 0)) | ivec3(0, 0, 0)))), 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) << 0))), 0), _GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 0), (ivec4(0, 1, 0, 0)) | (ivec4(0, 1, 0, 0)))))), ivec2(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-53686) : 4)), (0 >> _GLF_IDENTITY(int(4), int(4))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0))), 0)), min(clamp(ivec2(_GLF_IDENTITY(4, 0 | (4)), 0), ivec2(4, 0), ivec2(4, 0)), _GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)), ivec2(ivec4(clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, (0) ^ 0)), ivec2(4, 0)), 1, 1))))))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (1 & 1) * (_GLF_IDENTITY(4, (0 | 0) | (4)))), 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY((true ? ivec2(4, 0) : _GLF_FUZZED(ivec2(-72814, -83273))), (_GLF_IDENTITY((true ? ivec2(4, 0) : _GLF_FUZZED(ivec2(-72814, -83273))), ivec2(0, 0) ^ (_GLF_IDENTITY((true ? ivec2(4, 0) : _GLF_FUZZED(ivec2(-72814, -83273))), ivec2(1, 1) * ((true ? ivec2(4, 0) : _GLF_FUZZED(ivec2(-72814, -83273)))))))) / ivec2(1, 1))), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)), (clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))) - ivec2(0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), (_GLF_IDENTITY(ivec2(4, 0), min(ivec2(4, 0), ivec2(4, 0)))) << ivec2(0, 0)), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))))))))), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), min(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) - ivec2(0, 0)), ivec2(4, 0))), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)), (clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))) | (clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))))), _GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)))))), min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, 0 ^ (4)), 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, 0), (ivec3(4, 0, 0)) | ivec3(0, 0, 0)))), 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) << 0))), 0), _GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, 0), ivec2(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-53686) : 4)), (0 >> _GLF_IDENTITY(int(4), int(4))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), 0)), min(clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), ~ (~ (_GLF_IDENTITY(4, 0 | (4))))), _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(4, 0 | (4)))), 0), ivec2(4, 0), ivec2(4, 0)), _GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)), ivec2(ivec4(clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)), 1, 1))))))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (1 & 1) * (_GLF_IDENTITY(4, (0 | 0) | (4)))), 0), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))), clamp(_GLF_IDENTITY(ivec2(4, 0), clamp(_GLF_IDENTITY(ivec2(4, 0), (true ? ivec2(4, 0) : _GLF_FUZZED(ivec2(-72814, -83273)))), ivec2(4, 0), ivec2(4, 0))), _GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(clamp(ivec2(4, 0), ivec2(4, _GLF_IDENTITY(0, clamp(0, 0, 0))), ivec2(4, 0)), (clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0))) - ivec2(0, 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(9795) : _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26412) : _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | (0))))))), clamp(ivec2(4, 0), ivec2(4, 0), ivec2(4, 0)))))))))))) - ivec2(0, 0))))));
    }
   else
    {
    }
  }
 else
  {
   for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 0, 1)))), int(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4)))) >> 0))))) << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)) : _GLF_FUZZED(-29.09))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5139.4198)), float(1.0), bool(true))))), tan(0.0), 0.0, 1.0, 0.0))), 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-2.6, float(_GLF_IDENTITY(vec4(-2.6, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, abs(1.0)), mix(vec4((vec4(-2.6, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, abs(1.0)))[0], _GLF_FUZZED((- 1.5)), (vec4(-2.6, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, abs(1.0)))[2], _GLF_FUZZED(7.9)), vec4(_GLF_FUZZED(568.897), (vec4(-2.6, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, abs(1.0)))[1], _GLF_FUZZED(-9.9), (vec4(-2.6, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, abs(1.0)))[3]), bvec4(false, true, false, true))))), max(-2.6, -2.6))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(27.79)), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false))).y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float((158846u << 107435u))), _GLF_FUZZED(6.7)), bvec2(false, false))).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), true && ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.2, 5.2)) : injectionSwitch)).x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec3((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, false, true))))))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true && _GLF_IDENTITY(((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))))), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))))), false))))))), true && (_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))))), false))))))), (((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))))), false)))))))) && true)))))), (! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true)))))), false, false))) && true)))), bool(bvec3(false || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), true && ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.2, 5.2)) : injectionSwitch)).x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec3((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, false, true))))))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true && _GLF_IDENTITY(((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))))), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))))), false))))))), true && (_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))))), false))))))), (((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))))), false)))))))) && true)))))), (! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true)))))), false, false))) && true)))), false, true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))); _injected_loop_counter --)
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! ((_GLF_WRAPPED_IF_FALSE(false))))))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false)))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false)))))))) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))) || false, (_GLF_IDENTITY((false) || false, false || _GLF_IDENTITY(((false) || false), true && (_GLF_IDENTITY(((false) || false), (((false) || false)) || false))))) || false))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))) || false, (_GLF_IDENTITY((false) || false, false || _GLF_IDENTITY(((false) || false), true && (_GLF_IDENTITY(((false) || false), (((false) || false)) || false))))) || false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (true)), false || ((! (true))))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false), (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)) && true))))), false)))))) && true)) || _GLF_IDENTITY(false, (false) && true), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false)))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false)))))))) && true)) || false, false, false, false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || _GLF_IDENTITY(((false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((false) || false), (((false) || false)) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(((false) || false), (((false) || false)) && true), true, true)))))))) || false)))))) && true)) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), true && (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))) && true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false))), true && (_GLF_IDENTITY(! (bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false))), (! (bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)))) && true)))))))))))))))) && true)) || false))), true && _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))))), (_GLF_IDENTITY((false) || false, false || _GLF_IDENTITY(((false) || false), bool(bvec2(((false) || false), false))))) || false)))))) && true)) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, true))), false, false)), ! (! (bool(bvec4(false, true, false, false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, true))), false, false)), ! (! (bool(bvec4(false, true, false, false))))))), bool(bvec2(! (bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, true))), false, false)), ! (! (bool(bvec4(false, true, false, false))))))), false))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false)))))))))))), true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), ! (! (bool((false) || false)))))), (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))) && true)) || false)))), false || ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))))), (_GLF_IDENTITY((false) || false, false || _GLF_IDENTITY(((false) || false), bool(bvec2(((false) || false), false))))) || false)))))) && true)) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, true))), false, false)), ! (! (bool(bvec4(false, true, false, false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, true))), false, false)), ! (! (bool(bvec4(false, true, false, false))))))), bool(bvec2(! (bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, true))), false, false)), ! (! (bool(bvec4(false, true, false, false))))))), false))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false)))))))))))), true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), ! (! (bool((false) || false)))))), (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))) && true)) || false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) && (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, true && ((false) || false)), false || ((false) || false))) || false))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false)))))) && true)) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))) && true)) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(vec2(6.9, -8008.1409)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(32.21)), (_GLF_IDENTITY(float(_GLF_FUZZED(32.21)), (false ? _GLF_FUZZED(round(5.2)) : float(_GLF_FUZZED(32.21))))) - 0.0), bool(false))))) && (true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || _GLF_IDENTITY(((false) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((false) || false), bool(bvec2(((false) || false), true))), true)), true && (bool(bvec2(_GLF_IDENTITY(((false) || false), bool(bvec2(((false) || false), true))), true))))))) || false)))))) && true)) || false))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))))), (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))) && true)) || false, true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))))))))), true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), _GLF_IDENTITY(! (! (bool((_GLF_IDENTITY(false, true && (false))) || false))), true && (! (! (bool((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)))))))), (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))) && _GLF_IDENTITY(true, ! (! (true))))) || false), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))))))))), true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), _GLF_IDENTITY(! (! (bool((_GLF_IDENTITY(false, true && (false))) || false))), true && (! (! (bool((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)))))))), (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))) && _GLF_IDENTITY(true, ! (! (true))))) || false), true && (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))))))))), true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), _GLF_IDENTITY(! (! (bool((_GLF_IDENTITY(false, true && (false))) || false))), true && (! (! (bool((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)))))))), (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))) && _GLF_IDENTITY(true, ! (! (true))))) || false), (((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))))))))), true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), _GLF_IDENTITY(! (! (bool((_GLF_IDENTITY(false, true && (false))) || false))), true && (! (! (bool((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || false)))))))), (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))) && _GLF_IDENTITY(true, ! (! (true))))) || false)) || false)))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false))))), false)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, false || ((false) || false))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, false || ((false) || false))))) || false))))), false)))))) && true)) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || false))) || false)))))) && true)) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) && (true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), false || ((false) || false))) || false)))))))) && true)) || _GLF_IDENTITY(false, ! (! (false)))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false))), false)))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false))), false))))))))))) && true)))), (_GLF_IDENTITY((false) || false, false || ((false) || false))) || false)))))) && true)) || false, _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, false, false)))), bool(bvec4((! (bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, false)))), true, true, true))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))))))))), true && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), ! (! _GLF_IDENTITY((bool((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false))), ! (! ((bool((false) || false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false))))), false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false))))), false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false))))), false, true))))))))))))) || false)))))) && true)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), true))))), true && (! (_GLF_IDENTITY(false, false || (false))))))))))))))))), true), false)))))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, true, false)))), (true) && _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED((-6402.0477 + vec4(405.769, 3.6, 48.10, -9.8).t)), _GLF_FUZZED(-976.423)), bvec2(false, false)))))).y)), true))))))
              {
               barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false || (bool(bool(false)))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
