#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))))) > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat2(-12.34, _GLF_IDENTITY(-9990.0080, max(-9990.0080, _GLF_IDENTITY(-9990.0080, determinant(mat2(0.0, 0.0, 1.0, 0.0)) + (-9990.0080)))), 7.1, _GLF_IDENTITY(3.3, clamp(3.3, 3.3, 3.3)))))))), _GLF_IDENTITY(false, (false) || false) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat2(-12.34, _GLF_IDENTITY(-9990.0080, max(-9990.0080, _GLF_IDENTITY(-9990.0080, determinant(mat2(0.0, 0.0, 1.0, 0.0)) + (-9990.0080)))), 7.1, 3.3)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-897.247)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.16), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((35.58 * -745.819))), bvec2(true, false))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0)))) - 0.0))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ! (! ((false)))))), ((! (_GLF_IDENTITY((false), ! (! ((false))))))) && true)))) || false))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && (false))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), false, true))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))) || false, true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), true)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))), false, false, true)))))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(97.63) : injectionSwitch.x))), float(_GLF_FUZZED(2220.0367)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x) - 0u), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x) * 1u))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), (0u | _GLF_IDENTITY((167314u & 0u), uint(uint(_GLF_IDENTITY((167314u & 0u), 0u + ((167314u & 0u))))))) ^ (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), (true ? (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)) : _GLF_FUZZED(workgroup_size))), 1u, (0u & 110400u), 1u))))))) / 1u))));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1689.6161), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), bvec2(_GLF_IDENTITY(true, false || (true)), false))).y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 + _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(_GLF_IDENTITY(64, max(64, 64)), 0))) / 1))) - 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * ((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(64, 0))) / _GLF_IDENTITY(1, min(1, 1)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(64, 0))) / _GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(64, 0))) / _GLF_IDENTITY(1, min(1, 1))))) - 0)))) - 0)))) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, int(ivec3(6, 1, 0))), _GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ (~ (6))))), 6))), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY((ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0), ((ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1))), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), (false ? _GLF_FUZZED(-89190) : int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1))))))) ^ 0)) * 1))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(_GLF_IDENTITY(6, 0 | (6)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 | (0)))), 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))), (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), _GLF_IDENTITY(0, (0) - 0), 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))))), clamp((64), (64), (64)))))))), (~ (~ (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 + _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(_GLF_IDENTITY(64, max(64, 64)), 0))) / 1))) - 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * ((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(64, 0))) / _GLF_IDENTITY(1, min(1, 1))))) - 0)))) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (0 | 0) ^ (_GLF_IDENTITY(int(6), min(int(6), int(6)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0))), 0, 0)), 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-66937) : int(6)))))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) << 0)), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1))))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))), (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1)), ivec4(int(6), 0, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))), int(int(int(_GLF_IDENTITY(ivec4(int(6), 0, 0, 1), clamp(ivec4(int(6), 0, 0, 1), _GLF_IDENTITY(ivec4(int(6), 0, 0, 1), (ivec4(int(6), 0, 0, 1)) ^ ivec4(0, 0, 0, 0)), ivec4(int(6), 0, 0, 1)))))))))), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(_GLF_IDENTITY(6, (6) | (6)))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))))), clamp((64), (64), (64))))))))) ^ 0), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 ^ 0))) ^ 0), (0) ^ 0)), clamp((_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(0, (0) ^ 0)))) : _GLF_FUZZED(-31913)))) | 0) << (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(4.8)), vec2((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(true, true)))).x)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))) + _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(64, 0))) / 1))) - 0)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), clamp((64), (64), (64)))))))), 0 | _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 + _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(64, 0))) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, 1))))) - 0)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) * 1), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), min(int(6), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(0, (0) ^ 0)), (true ? _GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(0, (0) ^ 0)) : _GLF_FUZZED(88379))), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), clamp((64), (64), (64))))))))), ~ (~ ((~ (~ (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(mix(64184, -19611, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(ivec2(64, 0))) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, 1))))) - 0)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << 0)) * 1), int(6)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), min(int(6), int(6)))), int(ivec4(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY(int(6), min(int(6), int(6)))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))))), clamp((64), (64), (64)))))))))))))) / 1)), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
