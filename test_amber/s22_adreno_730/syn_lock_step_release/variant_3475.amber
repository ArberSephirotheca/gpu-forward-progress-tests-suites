#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))), max((subgroup_id), (subgroup_id))) / 1u))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) / 1u)))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) / 1u))))), subgroup_id, subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(atomicMin(subgroup_local_id, 191095u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << (0u ^ 0u))), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(subgroup_size) : ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) + _GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) + 1, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u)))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u | 0u) | (subgroup_local_id)), 0u + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) + 1) + 0u)))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(subgroup_size) : ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | 0u) + (subgroup_local_id)), uint(uint(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), clamp(0u + (subgroup_local_id), 0u + (subgroup_local_id), 0u + (subgroup_local_id))))))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(usubBorrow(workgroup_size, workgroup_base, subgroup_id)))), max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) * 1u)) / 1u);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))) || false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, _GLF_IDENTITY(true, false || (true)))), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && true)))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))) || false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), (bool(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))) || false))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && true)))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4((false), false, false, true))))), bool(bvec2((false), true))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))) || false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false))))), (_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false || (bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))))))))) || _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && true)), bool(bvec3(! (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && true)), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && true)), bool(bvec3(! (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && true)), false, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))), true)), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && true)), bool(bvec3(! (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), false, true))) && true)), false, true))))) || false)))))))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true))))))) && true))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), true)))))))), true), false))))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true))))))) && true))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), true)))))))), true), false))))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true))))))) && true))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), true)))))))), true), false))))))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true), false))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true)))))), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true))))))) || false)) && true))), true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true)))))), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true))))))) || false)) && true))), true), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true)))))), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true))))))) || false)) && true))), true), false))))))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), true))))), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), true))))), true, true)))))) && true)), _GLF_IDENTITY(true, false || (true))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true), false))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true)))))), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true))))))) || false)) && true))), true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true)))))), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true))))))) || false)) && true))), true), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true)))))), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true))))))) || false)) && true))), true), false))))))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), true))))), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), true))))), true, true)))))) && true)), _GLF_IDENTITY(true, false || (true))), false)))))))))), true, true, true)))))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), (bool((true))) && true)))) && true)), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), (bool((true))) && true)))) && true)), true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))) || false))))))))))))
  {
  }
 else
  {
   buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 1, _GLF_IDENTITY(1, (1) * 1)), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(1, 0, 1, _GLF_IDENTITY(1, (1) * 1)), max(ivec4(1, 0, 1, _GLF_IDENTITY(1, (1) * 1)), ivec4(1, 0, 1, _GLF_IDENTITY(1, (1) * 1))))))), min(_GLF_IDENTITY(int(ivec4(1, 0, 1, 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec4(1, 0, 1, 1)))), int(ivec4(1, 0, 1, 1)))));
  }
 do
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, min(2, 2))), _GLF_IDENTITY(4, (4) + 0), 64, 4);
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))), bool(bool(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))), bool(bool(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))), bool(bool(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))), bool(bool(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))) || false))), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))))))))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8316.6625)), bool(false))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), bool(bvec3(! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), false || ((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), bool(bvec4(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), false || ((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), bool(bvec3(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true, false))), ! (! (_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))), true))))), bool(bvec3(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true, false)))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true))), ((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true)))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true))), ((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true)))) || false), false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), true)), false, _GLF_IDENTITY(true, bool(bool(true)))))))))))), bool(bvec3(! (! _GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), false || (bool(_GLF_IDENTITY(true, true && (true)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0))).y, injectionSwitch.y, injectionSwitch.y))) && true))), true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true)))))))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (! ((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), true)))), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), true), true)))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))), true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (! ((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && _GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), ! (! (_GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), (_GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), ((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))) && true)) && true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)))), true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)))), ! (! ((_GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), true)), false, _GLF_IDENTITY(true, bool(bool(true)))))))))))), bool(bvec3(! (! _GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), false || (bool(_GLF_IDENTITY(true, true && (true)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0))).y, injectionSwitch.y, injectionSwitch.y))) && true))), true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true)))))))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (! ((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), true)))), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), true), true)))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))), true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (! ((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && _GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), ! (! (_GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), (_GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), ((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))) && true)) && true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)))), true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true))))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true)))))))) || false)))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false) || (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! _GLF_IDENTITY(((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (_GLF_IDENTITY(((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))) || false)) && true)))), (! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false) || (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), (! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true && (_GLF_IDENTITY(! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))) && true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))))) && true))))) || false) || (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), (! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), (! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))) && true)), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), bool(bvec3(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true, false))), true && (_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), true, true), false))))), true))))), bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), false || (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), true, false))))))))))), false || (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), bool(bvec3((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), true, true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true && (! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), bool(bvec3(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), false)), (bool(bvec2(bool(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), false))) && true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))) && true)), ! (! ((_GLF_IDENTITY(! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))) && true)))))))), true, false))))))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true))), ((bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true)))) && true))), bool(bvec3(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true, false))))))))), true))))), true)))))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8316.6625)), bool(false))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), true && (bool(bvec4(true, false, false, false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), bool(bvec3(! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), false || ((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), bool(bvec4(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), false || ((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), bool(bvec3(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true, false))), ! (! (_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))), true))))), bool(bvec3(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true, false)))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true))), ((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true)))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true))), ((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))), true))))), false)))) && true)))) || false), false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), true)), false, _GLF_IDENTITY(true, bool(bool(true)))))))))))), bool(bvec3(! (! _GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), false || (bool(_GLF_IDENTITY(true, true && (true)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0))).y, injectionSwitch.y, injectionSwitch.y))) && true))), true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true)))))))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (! ((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), true)))), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), true), true)))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))), true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (! ((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && _GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), ! (! (_GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), (_GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), ((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))) && true)) && true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)))), true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)))), ! (! ((_GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), true)), false, _GLF_IDENTITY(true, bool(bool(true)))))))))))), bool(bvec3(! (! _GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), false || (bool(_GLF_IDENTITY(true, true && (true)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0))).y, injectionSwitch.y, injectionSwitch.y))) && true))), true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), true), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) || false)), false, false))), true), false))))), true, true))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), true)))))))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (! ((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), true)))), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), _GLF_IDENTITY(bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), true), true)))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)), true && (bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))), true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), ! (! ((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && _GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), ! (! (_GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), (_GLF_IDENTITY((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), ((bool(bvec4((! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))) && true)) && true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true)))), true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true))))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))), true, true)))))))) || false)))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false) || (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! _GLF_IDENTITY(((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (_GLF_IDENTITY(((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))) || false)) && true)))), (! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false) || (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), (! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true && (_GLF_IDENTITY(! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))) && true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))))) && true))))) || false) || (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), (! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), (! (_GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))) && true)), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), bool(bvec3(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true, false))), true && (_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), true, true), false))))), true))))), bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), ! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), false || (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))))))), true, false))))))))))), false || (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), bool(bvec3((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))), true, true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true && (! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), bool(bvec3(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), false)), (bool(bvec2(bool(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), ! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))))), false))) && true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))) && true)), ! (! ((_GLF_IDENTITY(! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), (! ((bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))) && true)))))))), true, false))))))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true))), ((bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true)))) && true))), bool(bvec3(! (! (! (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), true, false))))))))), true))))), true))))))))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
