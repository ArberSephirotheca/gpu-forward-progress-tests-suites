#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), (true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), true, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-898.758), _GLF_FUZZED(6.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))))))))) && true))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(1.0, float(mat3x4(1.0, sin(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, abs(0.0), 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, determinant(mat3(exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0))), true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))), false, true), bvec3(bvec4(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))), false, true), true))))), true))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)))))))) || false)))))), bool(bvec3(_GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec4(bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, false, true)), _GLF_IDENTITY(! (! (bool(bvec4(bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, false, true)))), ! (! (! (! (bool(bvec4(bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, false, true))))))))), true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (true) || false), true)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(11.85) : injectionSwitch.x, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(11.85) : injectionSwitch.x, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(11.85) : injectionSwitch.x)))) > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false), bool(bvec2((false), true))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8764.4658), _GLF_FUZZED(-683.093)), bvec2(false, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8764.4658), _GLF_FUZZED(-683.093)), bvec2(false, false))).x) + 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.x), bool(true)))) * 1.0) > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-8.1, mix(float(_GLF_FUZZED(51.15)), float(-8.1), bool(true))))), float(injectionSwitch.x), bool(true)))) * 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-8.1, mix(float(_GLF_FUZZED(51.15)), float(-8.1), bool(true))))), float(injectionSwitch.x), bool(true)))) * 1.0))) > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), max(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))), 0u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), 0u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), 0u))) ^ uvec3(0u, 0u, 0u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), 0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), 0u)))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true) && true)))))))) && true))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(vec3(5379.3159, 685.397, 4.5), vec3(5.4, -320.512, 388.498))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-24.95)), float(sqrt(0.0)), bool(true))))), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), float(vec4(dot(vec3(sqrt(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), 0.0), (true ? vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(sqrt(0.0), 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(sqrt(0.0), 0.0, 1.0), (vec3(sqrt(0.0), 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)), vec3(sqrt(0.0), 0.0, 1.0), vec3(sqrt(0.0), 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), float(vec4(dot(vec3(sqrt(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), 0.0) : _GLF_FUZZED(vec4(-313.137, 8.4, _GLF_IDENTITY(8463.5420, mix(float(_GLF_FUZZED(7.0)), float(_GLF_IDENTITY(8463.5420, float(mat3x4(8463.5420, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0)))), bool(true))), 820.765)))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-24.95)), float(sqrt(0.0)), bool(true))))), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), float(vec4(dot(vec3(sqrt(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), 0.0), (true ? vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(sqrt(0.0), 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(sqrt(0.0), 0.0, 1.0), (vec3(sqrt(0.0), 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)), vec3(sqrt(0.0), 0.0, 1.0), vec3(sqrt(0.0), 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), float(vec4(dot(vec3(sqrt(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), 0.0) : _GLF_FUZZED(vec4(-313.137, 8.4, _GLF_IDENTITY(8463.5420, mix(float(_GLF_FUZZED(7.0)), float(_GLF_IDENTITY(8463.5420, float(mat3x4(8463.5420, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0)))), bool(true))), 820.765)))))).y))), ! _GLF_IDENTITY((! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-7363.5230, -54.42).r)), float(1.0), bool(true)))))))))))), ((! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-7363.5230, -54.42).r)), float(1.0), bool(true))))))))))))) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false || (true && (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false || (true && (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false || (true && (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.7)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.4)))), bool(true)))) * 1.0) > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), false || (true && (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec2(bool(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(14.80), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), bvec2(true, false))).x > injectionSwitch.y))))), false || (true && (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-657.948)))))), bool(bvec4((! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-657.948)))))), true, false, false))), ! (! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), max(uvec2(subgroup_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))) << _GLF_IDENTITY(uint(8u), uint(8u))))), uvec2(subgroup_id, 1u)))), (uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), max(uvec2(subgroup_id, 1u), uvec2(subgroup_id, 1u))))) << 0u))) << 0u) * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), max(uvec2(subgroup_id, _GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), uvec2(subgroup_id, 1u)))), (uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), max(uvec2(subgroup_id, 1u), _GLF_IDENTITY(uvec2(subgroup_id, 1u), uvec2(0u, 0u) ^ (uvec2(subgroup_id, 1u))))))) << 0u))) << 0u) * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), max(uvec2(subgroup_id, _GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), uvec2(subgroup_id, 1u)))), (uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), max(uvec2(subgroup_id, 1u), uvec2(subgroup_id, 1u))))) << 0u))) << 0u) * subgroup_size + subgroup_local_id) | 0u), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), max(uvec2(subgroup_id, _GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), uvec2(subgroup_id, 1u)))), (uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), max(uvec2(subgroup_id, 1u), uvec2(subgroup_id, 1u))))) << 0u))) << 0u) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), subgroup_local_id))) | 0u) : _GLF_FUZZED(workgroup_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) / _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) | (_GLF_IDENTITY((1u) | (1u), min((1u) | (1u), _GLF_IDENTITY((1u) | (1u), max((1u) | (1u), (1u) | (1u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, 0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_id)))))))), min(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, 0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_id)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, 0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_id)))))))), min(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, 0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_id)))))))), _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, 0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(workgroup_id))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(6u, _GLF_IDENTITY(1u, 0u + (1u)), 1u, 0u), (uvec4(6u, _GLF_IDENTITY(1u, 0u + (1u)), 1u, 0u)) << uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(6u, _GLF_IDENTITY(1u, 0u + (1u)), 1u, 0u), (uvec4(6u, _GLF_IDENTITY(1u, 0u + (1u)), 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))) - 0u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, _GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u)))) ^ _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 1u, 1u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(6u, _GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u)))) ^ _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 1u, 1u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6u, _GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u)))) ^ _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 1u, 1u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))))), (true ? _GLF_IDENTITY(6u, _GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u)))) ^ _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 1u, 1u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))))) : _GLF_FUZZED(subgroup_local_id)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(6u, _GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u)))) ^ _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 1u, 1u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(6u, _GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u)))) ^ _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 1u, 1u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))))), (true ? _GLF_IDENTITY(6u, _GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u)))) ^ _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 1u, 1u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))))) : _GLF_FUZZED(subgroup_local_id)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) >> uvec3(0u, 0u, 0u))))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(subgroup_size)))), uint(6u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))) * 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 6u)) : _GLF_FUZZED(subgroup_size))), (((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * _GLF_IDENTITY(((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))), (((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))) | (((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))))) | 0u)))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))), min((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (false))) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))) * 1u), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))) / 1u) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))), (((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u ^ (6u))), (uint(_GLF_IDENTITY(6u, 0u ^ (6u)))) + 0u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))) | 0u)))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, _GLF_IDENTITY(92210, min(92210, _GLF_IDENTITY(92210, (92210) | (92210)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))) * 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))), (((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))) | 0u)))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))), ~ (~ (max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))) * 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u)))))))) / 1u)) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))), (((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u ^ (6u))), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) >> 0u)), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))) | 0u)))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), clamp(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))))), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))))))))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), injectionSwitch.y)) * (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)), (_GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) << 0u))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))), clamp(max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))))), max(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))) >> 0u)))), _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), min((1u << _GLF_IDENTITY(uint(6u), uint(6u))), (1u << _GLF_IDENTITY(uint(6u), uint(6u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, _GLF_IDENTITY(92210, 0 ^ (_GLF_IDENTITY(92210, (_GLF_IDENTITY(92210, 0 | (92210))) | (92210)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))))) * 1u)) + 0u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))))), (min(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u))), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u)))), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(uint(6u), uint(6u))))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) * (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(packSnorm4x8(vec4(256.889, -6.7, _GLF_IDENTITY(8202.6029, float(vec4(8202.6029, 0.0, 1.0, 0.0))), -9.8))) : false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(workgroup_id, -52843, 92210), (false ? _GLF_FUZZED(97953u) : bitfieldExtract(workgroup_id, -52843, 92210)))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(packSnorm4x8(vec4(256.889, -6.7, 8202.6029, -9.8))) : false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u))))))))))) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)), max(_GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)), _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 6u))) | (6u))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))))))) >> 0u)), 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) - 0u))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, 0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(125486u) : _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(-52843, (_GLF_IDENTITY(-52843, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1120) : -52843))) / 1), 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), 0u ^ ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u)))) ^ _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 1u, 1u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) ^ 0u)), uint(6u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))) | 0u)), ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))) * 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))), (((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))) | 0u)))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))), min((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size))) * 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(subgroup_local_id), 0u, 0u, 1u), clamp(uvec4(_GLF_FUZZED(subgroup_local_id), 0u, 0u, 1u), uvec4(_GLF_FUZZED(subgroup_local_id), 0u, 0u, 1u), uvec4(_GLF_FUZZED(subgroup_local_id), 0u, 0u, 1u)))))) << 0u) : 6u)) : _GLF_FUZZED(subgroup_size))), (((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))), 1u, 0u, 0u)), max(uint(uvec4(_GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))), 1u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))), 1u, 0u, 0u))))), uint(6u))))) * ((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))) | 0u)))), uint(6u)), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_base) : uint(6u))))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), uint(6u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(6u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : 6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u) ^ 0u))) : _GLF_FUZZED(subgroup_size))) * 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id))) : 6u)) : _GLF_FUZZED(subgroup_size))), (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) * ((true ? _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_local_id) : 6u)) : _GLF_FUZZED(subgroup_size)))) | 0u)))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) | 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), clamp(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), clamp(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), clamp(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))))) : _GLF_FUZZED(virtual_gid))), 1u, 0u))), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))))))))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), injectionSwitch.y)) * (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uint(_GLF_IDENTITY(uint(6u), uint(6u)))))))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ~ (~ (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, 0u | (6u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) * 1u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))), max(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), (uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))) - 0u)), workgroup_id)), -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))))))) * 1u)) + 0u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(uvec4(6u, (0u ^ 0u), 0u, 1u)))), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))), (max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u)))))), (min(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) - 0u))), uint(6u)))), _GLF_IDENTITY(uint(6u), uint(6u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(packSnorm4x8(vec4(256.889, -6.7, 8202.6029, -9.8))) : false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, min(6u, 6u)))), _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(packSnorm4x8(vec4(256.889, -6.7, _GLF_IDENTITY(8202.6029, float(_GLF_IDENTITY(vec4(8202.6029, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(vec4(vec4(8202.6029, 0.0, 1.0, 0.0))), (true ? vec4(vec4(vec4(8202.6029, 0.0, 1.0, 0.0))) : _GLF_FUZZED(vec4(-52.66, -1.6, 4.5, 1.4))))))), -9.8))) : false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(workgroup_id, -52843, 92210), (bitfieldExtract(workgroup_id, -52843, 92210)) | (bitfieldExtract(workgroup_id, -52843, 92210)))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))))) | (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u), uint(6u)))), false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, -52843, _GLF_IDENTITY(92210, (92210) / 1))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), -52843, 92210)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))))))) >> 0u))))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ((subgroup_local_id + 1) ^ 0u) | 0u)))), (subgroup_local_id + 1) | 0u)))), ~ _GLF_IDENTITY((~ ((subgroup_local_id + 1))), _GLF_IDENTITY(0u | _GLF_IDENTITY(((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))), 0u ^ (((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))))), max(0u | _GLF_IDENTITY(((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))), 0u ^ (((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))))), _GLF_IDENTITY(0u | _GLF_IDENTITY(((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))), 0u ^ (((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))))), min(0u | _GLF_IDENTITY(((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))), 0u ^ (((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))))), 0u | _GLF_IDENTITY(((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))), 0u ^ (((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u)))))))))))))) % subgroup_size), clamp((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), _GLF_IDENTITY((clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), ((clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) | ((clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))))) | (clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), max(((subgroup_local_id + 1)), _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1))))))), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))), (((subgroup_local_id + 1))) << 0u), ((subgroup_local_id + 1)), ((subgroup_local_id + 1))))), ~ (~ ((~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), max(((subgroup_local_id + 1)), _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1))))))), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))), (((subgroup_local_id + 1))) << 0u), ((subgroup_local_id + 1)), ((subgroup_local_id + 1)))))))), 0u | ((~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1))) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))), ~ _GLF_IDENTITY((~ ((subgroup_local_id + 1))), 0u | _GLF_IDENTITY(((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ _GLF_IDENTITY(((subgroup_local_id + 1)), min(_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) - 0u), ((subgroup_local_id + 1))))) / 1u)))))), uint(uint(((~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) / 1u))))))))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1))))), (subgroup_local_id + 1) | (subgroup_local_id + 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))), ~ _GLF_IDENTITY((~ ((subgroup_local_id + 1))), 0u | ((~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1))))) | 0u), (~ ((subgroup_local_id + 1))) / 1u))), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1))))) | 0u), (~ ((subgroup_local_id + 1))) / 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1))))) | 0u), (~ ((subgroup_local_id + 1))) / 1u))), uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1))))) | 0u), (~ ((subgroup_local_id + 1))) / 1u))), 1u, 1u)))))))))) % subgroup_size)));
 buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, max((1) | 0, (1) | 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.0, -6.4)))).x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.0, -6.4)))).x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))))), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-4.4, 65.34, 5594.1578, 8.7)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), vec4(mat2x4(vec4(injectionSwitch, 0.0, 0.0), 0.0, 1.0, 1.0, 0.0)))))), clamp(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-4.4, 65.34, 5594.1578, 8.7)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), vec4(mat2x4(vec4(injectionSwitch, 0.0, 0.0), 0.0, 1.0, 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-4.4, 65.34, 5594.1578, 8.7)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), vec4(mat2x4(vec4(injectionSwitch, 0.0, 0.0), 0.0, 1.0, 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-4.4, 65.34, 5594.1578, 8.7)) : _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), vec4(mat2x4(vec4(injectionSwitch, 0.0, 0.0), 0.0, 1.0, 1.0, 0.0))))))))).y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))) || false)) || false))), false))) && true)), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0), _GLF_IDENTITY(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0)))))), (true ? mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0)))))) : _GLF_FUZZED(mat3x2(59.25, -1826.1412, -10.38, -0.8, 2.7, -719.924)))))), mix(vec2((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0), _GLF_IDENTITY(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0)))))), (true ? mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0)))))) : _GLF_FUZZED(mat3x2(59.25, -1826.1412, -10.38, -0.8, 2.7, -719.924)))))))[0], (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0), _GLF_IDENTITY(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0)))))), (true ? mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, cos(0.0), sqrt(0.0), 1.0, 0.0)))))) : _GLF_FUZZED(mat3x2(59.25, -1826.1412, -10.38, -0.8, 2.7, -719.924)))))))[1]), vec2(_GLF_FUZZED(11.05), _GLF_FUZZED(-937.324)), bvec2(false, false)))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-19.71, 1947.5998)))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * exp(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat2x4((injectionSwitch.x), 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (mat2x4((injectionSwitch.x), 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))) * mat2(1.0)))) + 0.0), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-18.00, 5.0)) : (injectionSwitch))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-18.00, 5.0)) : (injectionSwitch))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)), cos(0.0), sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sqrt(1.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sqrt(1.0), 0.0, 1.0)), (true ? dot(vec3(0.0, 1.0, 0.0), vec3(sqrt(1.0), 0.0, 1.0)) : _GLF_FUZZED(919.445)))), log(1.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, false))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! ((! (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)], uint(2), _GLF_IDENTITY(4, int(ivec2(4, (0 >> _GLF_IDENTITY(int(1), int(1)))))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-8.8)), bool(false))))).y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-319.784, max(-319.784, -319.784))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-907.965)), float(_GLF_IDENTITY(mat3x4(float(_GLF_FUZZED(-907.965)), log(1.0), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, log(1.0)), (true ? mat3x4(float(_GLF_FUZZED(-907.965)), log(1.0), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, log(1.0)) : _GLF_FUZZED(mat3x4(9.1, 8.9, 1.3, 9745.7285, 8.5, -949.251, -3.4, 194.122, -439.712, 9.4, 8509.5079, 13.57)))))), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
