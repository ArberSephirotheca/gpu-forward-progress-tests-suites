#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))) || false)) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, ! (! (false))))))))))))) && true))), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.9))), true && (injectionSwitch.x > injectionSwitch.y))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 | (1 & 1), ~ (~ (1 | (1 & 1)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x = subgroup_id;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(false))
              break;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          continue;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), true, true, false)))))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), ! (! (_injected_loop_counter < 1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), true, true, false)))) || false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), true, true, false)))) || false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))))))), true, true, false)))) || false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false)))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
  }
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-18.32, -523.059, -79.25).r), _GLF_FUZZED(-4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x), float(_GLF_FUZZED(-34.73)), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, _GLF_IDENTITY(bool(bvec4((bool(false)) && true, false, false, true)), false || (_GLF_IDENTITY(bool(bvec4((bool(false)) && true, false, false, true)), bool(bvec2(bool(bvec4((bool(false)) && true, false, false, true)), false)))))))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), mix(float(_GLF_FUZZED(8.4)), float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))), bool(true)))))) / 1.0), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))))) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), mix(float(_GLF_FUZZED(-0.0)), float(_GLF_FUZZED(-34.73)), bool(true)))), mix(float(float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), mix(float(_GLF_FUZZED(-0.0)), float(_GLF_FUZZED(-34.73)), bool(true))))), float(_GLF_FUZZED(514.130)), bool(false))), bool(false))) > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(abs(0.0)))), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(abs(0.0)))), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) - 0.0), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), _GLF_IDENTITY(bool(false), true && (bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)))), (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), mix(float(_GLF_FUZZED(-5408.8542)), float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))), bool(true)))))))) > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))).y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y)), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-34.73)), (_GLF_IDENTITY(float(_GLF_FUZZED(-34.73)), mix(float(float(_GLF_FUZZED(-34.73))), float(_GLF_FUZZED(-8.7)), bool(false)))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), float(_GLF_FUZZED(-34.73)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_IDENTITY(_GLF_FUZZED(-34.73), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(-34.73), min(_GLF_FUZZED(-34.73), _GLF_FUZZED(-34.73))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))) : _GLF_FUZZED(133.062)))), bool(false))) > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-34.73)), mix(float(_GLF_FUZZED((+ -5.1))), float(float(_GLF_FUZZED(-34.73))), bool(true))), bool(false))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-34.73, float(_GLF_IDENTITY(mat3x4(-34.73, exp(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0), mat3x4(mat4(mat3x4(-34.73, exp(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0)))))))), bool(false))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-34.73, float(_GLF_IDENTITY(mat3x4(-34.73, exp(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0), mat3x4(mat4(mat3x4(-34.73, exp(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0)))))))), bool(false))) > injectionSwitch.y)))))))))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-34.73)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x)))), float(_GLF_FUZZED(-70.57)), bool(_GLF_IDENTITY(false, ! (! (false)))))), float(_GLF_FUZZED(-34.73)), bool(false))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062)))), bool(false))) > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))))) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-34.73, float(_GLF_IDENTITY(mat3x4(-34.73, exp(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0), mat3x4(mat4(mat3x4(-34.73, exp(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0)))))))), bool(false))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-34.73, float(_GLF_IDENTITY(mat3x4(-34.73, exp(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0), mat3x4(mat4(mat3x4(-34.73, exp(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0)))))))), bool(false))) > injectionSwitch.y)) && true))))))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)))))), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062)))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062)))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y, false))), true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062))), _GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062))), _GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062))), (_GLF_IDENTITY(_GLF_FUZZED(-34.73), (true ? _GLF_FUZZED(-34.73) : _GLF_FUZZED(133.062)))) / 1.0)))), bool(false))) > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.2, -6407.2390)))))).x), float(_GLF_FUZZED(-34.73)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), float(mat3(_GLF_FUZZED(-34.73), 1.0, 1.0, 1.0, abs(0.0), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(length(length(vec2(0.0, 0.0))), 1.0 * (length(length(vec2(0.0, 0.0))))))))), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-1732.5578), _GLF_FUZZED(-0.6)), min(vec2(_GLF_FUZZED(-1732.5578), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(-1732.5578), _GLF_FUZZED(-0.6)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x2((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0))), (injectionSwitch)[1]), bvec2(true, true))).x), float(_GLF_FUZZED(-34.73)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0))))), (float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, tan(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0)))))) / 1.0)))), mix(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), float(_GLF_FUZZED(_GLF_IDENTITY(-34.73, 0.0 + (-34.73)))), bool(false))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y)))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x))), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))) || false)))))) > injectionSwitch.y))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (_GLF_FUZZED(-34.73)) - tan(0.0))), bool(false))))) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)))), float(_GLF_FUZZED(82.06)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - tan(0.0)) > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (_GLF_FUZZED(-34.73)) - tan(0.0))), bool(false))))) > injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y))))))))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (_GLF_FUZZED(-34.73)) - tan(0.0))), bool(false))))) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)))), float(_GLF_FUZZED(82.06)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - tan(0.0)) > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-34.73), (_GLF_FUZZED(-34.73)) - tan(0.0))), bool(false))))) > injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-34.73)), bool(false))) > injectionSwitch.y))))))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))) && true)))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (-82887 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), ! (! (false))), false))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false)), true), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false)), true), true)))))))))))))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ 0), 0 | _GLF_IDENTITY(((0 ^ 0)), min(_GLF_IDENTITY(((0 ^ 0)), max(((0 ^ 0)), _GLF_IDENTITY(((0 ^ 0)), 0 ^ (((0 ^ 0)))))), _GLF_IDENTITY(((0 ^ 0)), (true ? ((0 ^ _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, (1 ^ 0))), int(ivec4(int(ivec4(0, 0, 0, (1 ^ 0))), 1, 1, 1)))))))) : _GLF_FUZZED(-92190)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       do
        {
         GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5579.0063)))))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && _GLF_IDENTITY(true, ! (! (true)))))))
      return;
     return;
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-695.710)), float(injectionSwitch.y), bool(true)))))))
        continue;
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) - 0) >> _GLF_IDENTITY(int(1), int(1)))))), ! (! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) - 0) >> _GLF_IDENTITY(int(1), int(1)))))))))))); _injected_loop_counter --)
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))) || false)));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ ((1 ^ 1) >> _GLF_IDENTITY(int(6), int(6)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED((45.71 * sqrt(43.21))))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), max(_GLF_IDENTITY(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u))))))), clamp(uint(_GLF_IDENTITY(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), max(_GLF_IDENTITY(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u))))))), uint(_GLF_IDENTITY(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), max(_GLF_IDENTITY(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u))))))), uint(_GLF_IDENTITY(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), max(_GLF_IDENTITY(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u)))))), uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec2(40941u, 124047u).y))), (workgroup_id) | (1u ^ (0u | 1u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))))), 1u, ((151380u & 0u) << _GLF_IDENTITY(uint(2u), uint(2u))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(false || _GLF_IDENTITY((false || (false)), ((false || (false))) || false), (false || _GLF_IDENTITY((false || (false)), ((_GLF_IDENTITY(false || (false), true && (false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false))))))))))) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z + ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y, ~ (~ (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y)))) | (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y)) + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-13920 | -78440)) : 1))) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0) ^ (1 | _GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) >> 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) + 0) ^ (1 | _GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) >> 0))))), 0 ^ ((_GLF_IDENTITY(0, (0) + 0) ^ (1 | _GLF_IDENTITY(1, (0 ^ 1) * (_GLF_IDENTITY(1, (1) >> 0)))))))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
        {
         return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && true))), ! (! (_GLF_IDENTITY(false, (false) || false))))))
        break;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 do
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     do
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           buf[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w] = 1;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), max(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 1.0, sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY((0.0) - 0.0, mix(float((0.0) - 0.0), float(_GLF_FUZZED(7220.2609)), bool(false)))), (float(_GLF_IDENTITY((0.0) - 0.0, mix(float((0.0) - 0.0), float(_GLF_FUZZED(7220.2609)), bool(false))))) / exp(0.0)))))), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0)), 0.0, 0.0)), mix(vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(0.9)), vec2(_GLF_IDENTITY((vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(-0.8, -17.25, 657.726).t, (false ? _GLF_FUZZED(5.1) : vec3(-0.8, -17.25, 657.726).t)))), max(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(-0.8, -17.25, 657.726).t, (false ? _GLF_FUZZED(5.1) : vec3(-0.8, -17.25, 657.726).t)))), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(-0.8, -17.25, 657.726).t, (false ? _GLF_FUZZED(5.1) : vec3(-0.8, -17.25, 657.726).t)))))), float(1.0), bool(true))))), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))[0], max(_GLF_IDENTITY((vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true))))), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))[0], (true ? (vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true))))), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))[0] : _GLF_FUZZED(3686.0216))), _GLF_IDENTITY((vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true))))), (determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true)))))) - 0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))[0], min((vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true))))), (determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true)))))) - 0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))[0], _GLF_IDENTITY((vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true))))), (determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true)))))) - 0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))[0], min((vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true))))), (determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true)))))) - 0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))[0], (vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true))))), (determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-0.8, -17.25, 657.726).t)), float(1.0), bool(true)))))) - 0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))[0])))))), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-22.27)), bool(false)))), 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.0)), float(0.0), bool(true))), 0.0, 0.0)))[1]), bvec2(true, true))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, determinant(mat3(1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(3135.7756)), float(_GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(float(mat4(sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0)), min(float(mat4(sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0)), float(mat4(sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0)))))), bool(true))), (true ? sqrt(0.0) : _GLF_FUZZED(6491.6929)))) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))))).x > injectionSwitch.y))));
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false)))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-61.57) : injectionSwitch.y))))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid))) << 0u)], uint(2), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec2(4, 1))), _GLF_IDENTITY(4, min(4, 4)), 4)), 64, 4);
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
