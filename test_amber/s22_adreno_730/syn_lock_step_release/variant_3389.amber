#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_10 {
 mat2 _f0;
 mat3x2 _f1;
 ivec4 _f2;
 bool _f3;
 ivec3 _f4;
 uvec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 mat3x2 _f1;
 _GLF_struct_10 _f2;
 mat3 _f3;
 bool _f4;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 mat4 _f1;
 mat3x2 _f2;
 mat2x3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 _GLF_struct_7 _f1;
 bvec3 _f2;
 _GLF_struct_8 _f3;
 float _f4;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 ivec3 _f1;
 vec2 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 ivec2 _f1;
 mat2x4 _f2;
 _GLF_struct_5 _f3;
 bool _f4;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2 _f1;
 int _f2;
 bool _f3;
 mat4x3 _f4;
 float _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 uint virtual_gid;
 _GLF_struct_4 _f1;
 ivec4 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bvec3 _f1;
 int _f2;
 mat4 _f3;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 _GLF_struct_0 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint num_workgroup;
 ivec4 _f1;
 uvec2 _f2;
 bool _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(bvec3(true), _GLF_struct_0(bvec2(true), bvec3(true), 1, mat4(1.0)), vec2(1.0)), gl_NumWorkGroups.x, ivec4(1), uvec2(1u), true);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat2(1.0), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_struct_4(_GLF_struct_3(mat4x3(1.0)), mat2(1.0), 1, true, mat4x3(1.0), 1.0, bvec2(true)), ivec4(1), _GLF_struct_6(mat2x4(1.0), ivec2(1), mat2x4(1.0), _GLF_struct_5(mat4x2(1.0), ivec3(1), vec2(1.0), mat3x2(1.0), mat2x3(1.0)), true), _GLF_struct_9(mat4x2(1.0), _GLF_struct_7(uvec3(1u), mat4(1.0), mat3x2(1.0), mat2x3(1.0), ivec2(1)), bvec3(true), _GLF_struct_8(vec3(1.0), mat4x3(1.0)), 1.0), _GLF_struct_11(vec4(1.0), mat3x2(1.0), _GLF_struct_10(mat2(1.0), mat3x2(1.0), ivec4(1), true, ivec3(1), uvec2(1u), vec3(1.0)), mat3(1.0), true));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[_GLF_struct_replacement_12.virtual_gid] = 1;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
