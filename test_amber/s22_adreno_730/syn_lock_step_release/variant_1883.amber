#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(log(-0.2)), sqrt(0.0) + _GLF_IDENTITY((_GLF_FUZZED(log(-0.2))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY((_GLF_FUZZED(log(-0.2))), mix(float(_GLF_FUZZED(-2.7)), float((_GLF_FUZZED(log(-0.2)))), bool(true))), round(length(normalize(1.0))), 0.0, tan(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), (false ? _GLF_FUZZED(-908.071) : float(mat3x2(_GLF_IDENTITY((_GLF_FUZZED(log(-0.2))), mix(float(_GLF_FUZZED(-2.7)), float((_GLF_FUZZED(log(-0.2)))), bool(true))), round(length(normalize(1.0))), 0.0, tan(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), float(mat2(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(log(-0.2)), sqrt(0.0) + _GLF_IDENTITY((_GLF_FUZZED(log(-0.2))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY((_GLF_FUZZED(log(-0.2))), mix(float(_GLF_FUZZED(-2.7)), float((_GLF_FUZZED(log(-0.2)))), bool(true))), round(length(normalize(1.0))), 0.0, tan(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), (false ? _GLF_FUZZED(-908.071) : float(mat3x2(_GLF_IDENTITY((_GLF_FUZZED(log(-0.2))), mix(float(_GLF_FUZZED(-2.7)), float((_GLF_FUZZED(log(-0.2)))), bool(true))), round(length(normalize(1.0))), 0.0, tan(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), 1.0, 1.0, 0.0)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))) || false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(abs(vec2(0.0, 0.0)))).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(abs(vec2(0.0, 0.0)))).y, false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), true, false))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(83.09)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.3)), bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), true && (true && (false))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(1.0, 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, exp(0.0), 1.0, sin(0.0), 1.0), (false ? _GLF_FUZZED(mat3x2(mat4x2(-64.44, -3.4, -726.661, 3593.8783, -21.99, 531.205, -7.8, -5113.3477))) : mat3x2(injectionSwitch.y, 1.0, exp(0.0), 1.0, sin(0.0), 1.0)))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, exp(0.0), 1.0, sin(0.0), 1.0), (false ? _GLF_FUZZED(mat3x2(mat4x2(-64.44, -3.4, -726.661, 3593.8783, -21.99, 531.205, -7.8, -5113.3477))) : mat3x2(injectionSwitch.y, 1.0, exp(0.0), 1.0, sin(0.0), 1.0)))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, exp(0.0), 1.0, sin(0.0), 1.0), (false ? _GLF_FUZZED(mat3x2(mat4x2(-64.44, -3.4, -726.661, 3593.8783, -21.99, 531.205, -7.8, -5113.3477))) : mat3x2(injectionSwitch.y, 1.0, exp(0.0), 1.0, sin(0.0), 1.0)))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y, true), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y, true), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y, true)))), true), false))))))))))), bool(_GLF_IDENTITY(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), ! _GLF_IDENTITY((! (bool(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5876.5082) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))), false || ((! (bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true, true, false))))), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) * sqrt(vec2(1.0, 1.0)))).y))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, true))))))))), bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, true))))))))), false, false, true)))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0)) : _GLF_FUZZED(0.8)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u)) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 0u))) * uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) | (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u))) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1) % subgroup_size))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) / 1u)))) + 1) % subgroup_size))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) : _GLF_FUZZED(workgroup_base))), (subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (subgroup_size)), 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), _GLF_IDENTITY(clamp(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size, 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ _GLF_IDENTITY((~ (clamp(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))))), 1, 1))), 0u, 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u))))))) + (subgroup_size)), 0u, 0u, 0u), (uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size, 0u, 0u, 0u))))), ~ (~ ((~ (clamp(uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)))), 0u, 0u, 0u), (uvec4((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) / ivec3(1, 1, 1))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (subgroup_size), (0u + (subgroup_size)) / 1u)), 0u, 0u, 0u)) << uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u & 43179u) + (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) + 1) % subgroup_size, 0u, 0u, 0u)))))))))), max(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (subgroup_size)), 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), _GLF_IDENTITY(clamp(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size, 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ _GLF_IDENTITY((~ (clamp(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))))), 1, 1))), 0u, 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u))))))) + (subgroup_size)), 0u, 0u, 0u), (uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size, 0u, 0u, 0u))))), ~ (~ ((~ (clamp(uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)))), 0u, 0u, 0u), (uvec4((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) / ivec3(1, 1, 1))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (subgroup_size), (0u + (subgroup_size)) / 1u)), 0u, 0u, 0u)) << uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u & 43179u) + (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) + 1) % subgroup_size, 0u, 0u, 0u)))))))))), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (subgroup_size)), 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), _GLF_IDENTITY(clamp(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size, 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ _GLF_IDENTITY((~ (clamp(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))))), 1, 1))), 0u, 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u))))))) + (subgroup_size)), 0u, 0u, 0u), (uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size, 0u, 0u, 0u))))), ~ (~ ((~ (clamp(uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)))), 0u, 0u, 0u), (uvec4((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) / ivec3(1, 1, 1))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (subgroup_size), (0u + (subgroup_size)) / 1u)), 0u, 0u, 0u)) << uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u & 43179u) + (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) + 1) % subgroup_size, 0u, 0u, 0u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (subgroup_size)), 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), _GLF_IDENTITY(clamp(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size, 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ _GLF_IDENTITY((~ (clamp(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))))), 1, 1))), 0u, 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u))))))) + (subgroup_size)), 0u, 0u, 0u), (uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size, 0u, 0u, 0u))))), ~ (~ ((~ (clamp(uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)))), 0u, 0u, 0u), (uvec4((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) / ivec3(1, 1, 1))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (subgroup_size), (0u + (subgroup_size)) / 1u)), 0u, 0u, 0u)) << uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u & 43179u) + (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) + 1) % subgroup_size, 0u, 0u, 0u)))))))))), max(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (subgroup_size)), 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), _GLF_IDENTITY(clamp(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size, 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ _GLF_IDENTITY((~ (clamp(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))))), 1, 1))), 0u, 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u))))))) + (subgroup_size)), 0u, 0u, 0u), (uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size, 0u, 0u, 0u))))), ~ (~ ((~ (clamp(uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)))), 0u, 0u, 0u), (uvec4((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) / ivec3(1, 1, 1))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (subgroup_size), (0u + (subgroup_size)) / 1u)), 0u, 0u, 0u)) << uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u & 43179u) + (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) + 1) % subgroup_size, 0u, 0u, 0u)))))))))), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (subgroup_size)), 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), _GLF_IDENTITY(clamp(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size, 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u, 0u, 0u)), uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ _GLF_IDENTITY((~ (clamp(uint(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))))), 1, 1))), 0u, 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), ~ (~ (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) | 0u))))))) + (subgroup_size)), 0u, 0u, 0u), (uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size, 0u, 0u, 0u))))), ~ (~ ((~ (clamp(uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)))), 0u, 0u, 0u), (uvec4((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) / ivec3(1, 1, 1))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (subgroup_size), (0u + (subgroup_size)) / 1u)), 0u, 0u, 0u)) << uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u & 43179u) + (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) + 1) % subgroup_size, 0u, 0u, 0u))))))))))))) << 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
