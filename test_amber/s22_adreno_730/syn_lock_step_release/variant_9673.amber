#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-7.5)), bvec2(false, false))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(18.44)), float(1.0), bool(true))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (false ? _GLF_FUZZED(-79.45) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(18.44)), float(1.0), bool(true))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), false)))))), true, true)), true, true)))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) < injectionSwitch.y), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), false)))))), true, true)), true, true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))), float(_GLF_FUZZED(float(112652u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)))))))) && true)))), _GLF_IDENTITY(true, bool(bvec2(true, true)))), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(18.44)), float(1.0), bool(true))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (false ? _GLF_FUZZED(-79.45) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(18.44)), float(1.0), bool(true))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), false)))))), true, true)), true, true)))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) < injectionSwitch.y), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), false)))))), true, true)), true, true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))), float(_GLF_FUZZED(float(112652u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)))))))) && true)))), _GLF_IDENTITY(true, bool(bvec2(true, true)))), true)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(18.44)), float(1.0), bool(true))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-79.45) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(18.44)), float(1.0), bool(true))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), 1.0 * ((false ? _GLF_FUZZED(-79.45) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(18.44)), float(1.0), bool(true))) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), false)))))), true, true)), true, true)))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) < injectionSwitch.y), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x < injectionSwitch.y), false), false, false)), false)))))), true, true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(! (_GLF_IDENTITY(true, (true) && true)), true, false, false)))))) && true), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1749.1113), _GLF_FUZZED(655.219)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x))), _GLF_IDENTITY(float(_GLF_FUZZED(float(112652u))), mix(float(float(_GLF_FUZZED(float(112652u)))), float(_GLF_FUZZED(-24.26)), bool(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, _GLF_IDENTITY(false, bool(bool(false))), true))), true && (! (bool(bvec4(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true)))), false, false, true)))))))) && true)))), _GLF_IDENTITY(true, bool(bvec2(true, true)))), true)))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat4(6.0, 3.2, -7.1, -0.7, -3.5, -0.3, -4.4, -9280.1454, 52.44, 600.246, -321.812, 3.7, -418.043, -955.705, -2772.5350, -3.5) / 8.2)) : mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((mat4(6.0, 3.2, -7.1, -0.7, -3.5, -0.3, -4.4, -9280.1454, 52.44, 600.246, -321.812, 3.7, -418.043, -955.705, -2772.5350, -3.5) / 8.2)) : _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4(8.1, 1568.8420, -4075.1199, 18.58, 444.903, 6484.7661, 9.0, -2830.3345, -5038.7529, 43.31, 6.3, -9686.9719, 8.5, 5.7, -3.3, 6.1)) : transpose(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4(9503.2641, 7.9, -35.96, -4042.1617, -1.4, 875.126, -6834.7344, -8147.5730, 22.84, 7.3, -7.8, -4.2, -662.774, 73.25, 3.2, -4.5))))), transpose(_GLF_IDENTITY(transpose((false ? _GLF_FUZZED((mat4(6.0, 3.2, -7.1, -0.7, -3.5, -0.3, -4.4, -9280.1454, 52.44, 600.246, -321.812, 3.7, -418.043, -955.705, -2772.5350, -3.5) / 8.2)) : _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4(8.1, 1568.8420, -4075.1199, 18.58, 444.903, 6484.7661, 9.0, -2830.3345, -5038.7529, 43.31, 6.3, -9686.9719, 8.5, 5.7, -3.3, 6.1)) : transpose(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4(9503.2641, 7.9, -35.96, -4042.1617, -1.4, 875.126, -6834.7344, -8147.5730, 22.84, 7.3, -7.8, -4.2, -662.774, 73.25, 3.2, -4.5)))))), transpose(transpose(transpose((false ? _GLF_FUZZED((mat4(6.0, 3.2, -7.1, -0.7, -3.5, -0.3, -4.4, -9280.1454, 52.44, 600.246, -321.812, 3.7, -418.043, -955.705, -2772.5350, -3.5) / 8.2)) : _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat4(8.1, 1568.8420, -4075.1199, 18.58, 444.903, 6484.7661, 9.0, -2830.3345, -5038.7529, 43.31, 6.3, -9686.9719, 8.5, 5.7, -3.3, 6.1)) : transpose(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4(9503.2641, 7.9, -35.96, -4042.1617, -1.4, 875.126, -6834.7344, -8147.5730, 22.84, 7.3, -7.8, -4.2, -662.774, 73.25, 3.2, -4.5)))))))))))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y))) / 1.0)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), 1.0, 0.0))) - vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), float(_GLF_FUZZED(-685.558)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))), (injectionSwitch) - vec2(0.0, 0.0)).y))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))), true, false, true))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.7) : injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || ((_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, abs(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(pow(vec4(85.48, _GLF_IDENTITY(-6.8, float(_GLF_IDENTITY(mat2x4(-6.8, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0), (mat2x4(-6.8, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 15.14, 7627.5837), vec4(-8.3, 264.966, -786.541, 88.43)).s) : 0.0), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(pow(vec4(85.48, _GLF_IDENTITY(-6.8, float(_GLF_IDENTITY(mat2x4(-6.8, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0), (mat2x4(-6.8, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 15.14, 7627.5837), vec4(-8.3, 264.966, -786.541, 88.43)).s) : 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(pow(vec4(85.48, _GLF_IDENTITY(-6.8, float(_GLF_IDENTITY(mat2x4(-6.8, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0), (mat2x4(-6.8, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 15.14, 7627.5837), vec4(-8.3, 264.966, -786.541, 88.43)).s) : 0.0))))), sqrt(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0)), min(float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(3835.8841)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (true ? _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-22.18)))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(5.6))), sqrt(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, sin(0.0), 1.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), abs(0.0))), sqrt(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0)), float(mat4x2(float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (true ? _GLF_IDENTITY(1.0 * (1.0), (_GLF_IDENTITY(1.0 * (1.0), (_GLF_IDENTITY(1.0 * (1.0), max(1.0 * (1.0), 1.0 * (1.0)))) * 1.0)) * 1.0) : _GLF_FUZZED(7.4)))))))), abs(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, abs(0.0), sqrt(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.6)), bool(false)))) * round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), mat2(_GLF_IDENTITY(mat3x4(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))), mat4(1.0) * (mat3x4(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))))))) * (injectionSwitch)).y) + 0.0)) - 0.0)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + 0.0)) - 0.0), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + 0.0)) - 0.0), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + 0.0)) - 0.0), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + 0.0)) - 0.0), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + 0.0)) - 0.0))))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y, 0.0, 1.0, 0.0, 1.0, 1.0)), (true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765))), (float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0))) * 1.0), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY((float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0))), float(vec2((float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0))) + 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY((true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765)), _GLF_IDENTITY(max((true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765)), _GLF_IDENTITY((true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765)), float(mat3((true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765)), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), 1.0 * (max((true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765)), _GLF_IDENTITY((true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765)), float(mat3((true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765)), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0)), mix(float(_GLF_FUZZED(-7105.1703)), float(float(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0))), bool(true)))) * 1.0), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, tan(0.0), 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 1.0, 0.0, exp(0.0))), dot(vec4(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), vec4(0.0, 1.0, 0.0, exp(0.0)))), 1.0, 0.0))).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))) / cos(sqrt(0.0)))) - 0.0)))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), (true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765))), (float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0))) * 1.0), float(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), min(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) / 1.0), 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(93.12)), float(float(mat3x4(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), bool(true)))), 1.0, 1.0, 1.0))), 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)))))) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0)), (true ? float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-5105.1765))), (float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0))) * 1.0), float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0)))))) - 0.0), _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(93.12)), float(float(mat3x4(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(256.064, -339.175))))).y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), bool(true)))), 1.0, 1.0, 1.0))), 1.0, 1.0)), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)))))) - 0.0)))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(fract(injectionSwitch), 86.93, 7.3)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))), false || (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false, true)))), false || (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (workgroup_size), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u | (workgroup_size), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), _GLF_IDENTITY(0u, 1u * (0u)) | (0u | (workgroup_size)))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size))))) / 1u)) >> 0u)))), max((~ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size))))) / 1u)) >> 0u)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0u | (workgroup_size), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size))))) / 1u)) >> 0u, ((_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size))))) / 1u)) >> 0u) ^ 0u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | (workgroup_size), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size))))) / 1u)) >> 0u))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | (workgroup_size), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size))))) / 1u)) >> 0u))), (true ? ~ (_GLF_IDENTITY(0u | (workgroup_size), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), uint(uvec2((workgroup_size), 1u))), (workgroup_size)))))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | _GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u), 0u | (0u | (workgroup_size)))), (0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (_GLF_IDENTITY(0u | (workgroup_size), min(0u | (workgroup_size), 0u | (workgroup_size))))))) / 1u)) >> 0u))) : _GLF_FUZZED(196057u)))))))) | ((~ (_GLF_IDENTITY(0u | (workgroup_size), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size)))), (0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size))))) << 0u), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size))), 0u | (_GLF_IDENTITY(0u | (workgroup_size), 0u | (0u | (workgroup_size))))))) / 1u)) >> 0u))))))))))) | (workgroup_size)) * _GLF_IDENTITY(workgroup_id, (60849u & _GLF_IDENTITY(0u, (0u) | 0u)) ^ (workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))), ~ (~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u) * subgroup_size + subgroup_local_id) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))))) - 0u), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> 0u) | (0u)), 0u, 0u)))) : _GLF_FUZZED(workgroup_size))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))))) - 0u), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, (0u) + 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> 0u) | (0u)), 0u, 0u)))) : _GLF_FUZZED(workgroup_size)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), false), false, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))) * mat2(1.0))))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1952.7266), _GLF_FUZZED(6.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))).y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-924.877)), float(injectionSwitch.y), bool(true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(1.0))), mat2(1.0) * (vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(1.0)))))).y)))))) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true, false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))) && true))))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), false), false, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))) * mat2(1.0))))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1952.7266), _GLF_FUZZED(6.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec2(true, false)))))).y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-924.877)), float(injectionSwitch.y), bool(true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(1.0))), mat2(1.0) * (vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(1.0)))))).y)))))) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true, false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))) && true))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.3)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(56508))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) + 0)), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | 0), (1) + 0))) - _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (true ? max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u) : _GLF_FUZZED(virtual_gid))))))) | 0u)) >> 0u)))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)), _GLF_IDENTITY(0u, max(0u, 0u))))), (subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u & 155661u)))) + _GLF_IDENTITY(1, 0 ^ (1))), (subgroup_local_id + 1))) % subgroup_size);
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), clamp(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 1 * (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), min((_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), int(ivec4((_GLF_IDENTITY(1, (1) ^ 0)), 0, 1, 1))))) + 0), 0 | (1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 1, 1, 1))), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -47129)))), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(70663) : _GLF_IDENTITY((1), (false ? _GLF_FUZZED(21003) : (1)))))) << 0), int(ivec3(_GLF_IDENTITY((1), ((1)) << 0), 0, 0))))), (1))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), true && (! (! (_GLF_IDENTITY(true, true && (true)))))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))), ~ (~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ((1)) << 0), int(ivec3(_GLF_IDENTITY((1), ((1)) << 0), 0, 0))))), (1))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))))))))), ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) + 0), 0 | (1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), int(ivec3(_GLF_IDENTITY((1), ((1)) << 0), 0, 0))))), (1))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))), ~ (~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), 0 | (_GLF_IDENTITY((1), ((1)) << 0))))), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), int(ivec3(_GLF_IDENTITY((1), ((1)) << 0), 0, 0))))), (1))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), (workgroup_id) | (workgroup_id)))))))))))) - 0u) ^ 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), clamp(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, 0)) | (1)), 1 * (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), min((_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), int(ivec4((_GLF_IDENTITY(1, (1) ^ 0)), 0, 1, 1))))) + 0), 0 | (1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 1, 1, 1))), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -47129)))), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(70663) : _GLF_IDENTITY((1), (false ? _GLF_FUZZED(21003) : (1)))))) << 0), int(ivec3(_GLF_IDENTITY((1), ((1)) << 0), 0, 0))))), (1))))), (~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 1, 1, 1))), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), (_GLF_IDENTITY((1), ((1)) << 0)) >> 0), _GLF_IDENTITY((1), ((1)) << 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -47129)))), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -47129))))) | (_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -47129)))), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -47129))))) | (_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -47129)))), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -47129))))) | (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -47129)))))))))), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), (false ? _GLF_FUZZED(70663) : _GLF_IDENTITY((1), (_GLF_IDENTITY(false ? _GLF_FUZZED(21003) : _GLF_IDENTITY((1), max((1), (1))), ~ (~ (false ? _GLF_FUZZED(21003) : _GLF_IDENTITY((1), max((1), (1))))))))))), ~ (~ ((_GLF_IDENTITY((1), (false ? _GLF_FUZZED(70663) : _GLF_IDENTITY((1), (_GLF_IDENTITY(false ? _GLF_FUZZED(21003) : _GLF_IDENTITY((1), max((1), (1))), ~ (~ (false ? _GLF_FUZZED(21003) : _GLF_IDENTITY((1), max((1), (1)))))))))))))) << 0), int(ivec3(_GLF_IDENTITY((1), ((1)) << 0), 0, 0))))), (1)))))) - 0u), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true))))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))), ~ (~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ ((1))))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1)))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), ((1)) << 0), int(ivec3(_GLF_IDENTITY((1), ((1)) << 0), 0, 0))))), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) / 1))))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(115003u) : (workgroup_id)))))), 0u | ((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(115003u) : (workgroup_id))))))))))))))), ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) + 0), 0 | (1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-91105, max(-91105, _GLF_IDENTITY(-91105, ~ (~ (-91105)))))) : 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), (1) | (1)))) | ((1) | (1))))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 | (1)))))), 1, _GLF_IDENTITY(1, 1 * (1))))))), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-77195) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(58030)))))), ((1)) << 0), int(ivec3(_GLF_IDENTITY((1), ((1)) << 0), 0, 0))))), (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((workgroup_id) | (workgroup_id), max((workgroup_id) | (workgroup_id), (workgroup_id) | (workgroup_id))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((workgroup_id) | (workgroup_id), max((workgroup_id) | (workgroup_id), (workgroup_id) | (workgroup_id))))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((workgroup_id) | (workgroup_id), max((workgroup_id) | (workgroup_id), (workgroup_id) | (workgroup_id)))))))) ^ 0u))))))), ~ (~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1))), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1)))) | ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91105) : 1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 | ((_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 + ((1))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, 1 * (1))))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(-14342) : ~ (_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), 0 | (_GLF_IDENTITY((1), ((1)) << 0))))), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), int(ivec3(_GLF_IDENTITY((1), ((1)) << 0), 0, 0))))), (1))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, false))))))))) ? ~ (buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (1))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED((+ next_virtual_gid))))) | (workgroup_id)))))))))))) - 0u) ^ 0u))));
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
