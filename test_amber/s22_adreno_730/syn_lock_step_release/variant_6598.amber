#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(10.39))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.0) : injectionSwitch.y))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(1u ^ 1u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u))))) | (_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(0u, 0u ^ (0u))), (1u ^ 1u) + 0u)))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, abs(0.0), 1.0, 0.0))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, abs(0.0), 1.0, 0.0))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-75.35) : injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))) || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u)) >> 0u)));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))))) * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) >> 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) << 0u) ^ (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size), 0u ^ ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) << 0u) ^ (subgroup_size)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size), 0u ^ (min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))))) | (subgroup_id * subgroup_size)))), 1u, 1u, 1u))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(21442u) : subgroup_size)), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id)))) - 0u) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u)) << 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u)) << 0u), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u | 0u)), min(uvec3(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u)) << 0u), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u | 0u)), uvec3(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u)) << 0u), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u | 0u))))))), uint(uint(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u)) << 0u))))))) ^ (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) << 0u) ^ (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u)))) + 0u))))), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))) << _GLF_IDENTITY(0u, (0u) | (0u))), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) << 0u) ^ (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), max(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) / 1u))))), subgroup_size))), ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), max(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) / 1u))))), subgroup_size)))) >> 0u) | (subgroup_id * subgroup_size)), 1u, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u)))) + 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u)))) + 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u)))) + 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u)))) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u)))) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u)))) + 0u)) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) << 0u) ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))) | 0u)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_id * subgroup_size)), 1u, 1u, 1u)))) + 0u)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id, ~ (~ (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)))))))))))), max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))) | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), _GLF_IDENTITY((0u | (subgroup_local_id)), (_GLF_IDENTITY((0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), ((0u | (subgroup_local_id))) << 0u)) ^ 0u) - 0u)) ^ 0u))), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size)), min((true ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size)), (true ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size)))), (true ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))) | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), _GLF_IDENTITY((0u | (subgroup_local_id)), (_GLF_IDENTITY((0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), ((0u | (subgroup_local_id))) << 0u)) ^ 0u) - 0u)) ^ 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_id)), 0u | ((true ? 0u : _GLF_FUZZED(subgroup_id))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), ((_GLF_IDENTITY(0u | uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-729.425)), bool(false))), injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / cos(0.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / cos(0.0))), 1.0 * (float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(0.0, sin(0.0), cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.x)) / cos(0.0))))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / cos(0.0))))), float(_GLF_FUZZED(47.82)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), uint(uvec3(0u | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), _GLF_IDENTITY(clamp(float(0.0), _GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-3.8) : float(0.0))), float(0.0)), (_GLF_IDENTITY(clamp(float(0.0), _GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-3.8) : float(0.0))), float(0.0)), clamp(clamp(float(0.0), _GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-3.8) : float(0.0))), float(0.0)), clamp(float(0.0), _GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-3.8) : float(0.0))), float(0.0)), clamp(float(0.0), _GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-3.8) : float(0.0))), float(0.0))))) * exp(0.0))), float(_GLF_FUZZED(476.344)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-8.6, float(mat4(-8.6, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, sqrt(0.0), cos(0.0), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(1u, min(1u, 1u)), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u))))))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) | (_GLF_IDENTITY((0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(0u, (0u) * 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) * 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))))))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) | (0u)) ^ (subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (subgroup_local_id) | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false))))) || (true))) && true))), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), true))) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), bool(bvec2(false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))), true && _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && _GLF_IDENTITY(true, ! (! (true)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && _GLF_IDENTITY(true, ! (! (true))))))))), bool(bvec3(! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && _GLF_IDENTITY(true, ! (! (true))))))))), false, false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (false ? _GLF_FUZZED(986.589) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-90.09), _GLF_FUZZED(410.426)), bvec2(false, false))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (false ? _GLF_FUZZED(986.589) : (injectionSwitch)[0])), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-90.09), _GLF_FUZZED(_GLF_IDENTITY(410.426, (_GLF_IDENTITY(410.426, (410.426) / 1.0)) - 0.0))), (true ? vec2(_GLF_FUZZED(-90.09), _GLF_FUZZED(_GLF_IDENTITY(410.426, (_GLF_IDENTITY(410.426, (410.426) / 1.0)) - 0.0))) : _GLF_FUZZED((-1.1 * vec2(2122.5796, 80.53))))), bvec2(false, false)), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (false ? _GLF_FUZZED(986.589) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-90.09), _GLF_FUZZED(410.426)), bvec2(false, false))) - vec2(0.0, 0.0))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(-3374.3555)), bvec2(false, false))).y) || false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true)))))))) || false, true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), true)))))))) || _GLF_IDENTITY(false, (false) && true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))))), true && (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), false, false))))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || (_GLF_IDENTITY(false, (false) && true))))))) || false))), ! (! ((! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), false, false))))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || (_GLF_IDENTITY(false, (false) && true))))))) || false)))))), false || (! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true))))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-497.755)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_IDENTITY(false, (false) && true))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), true))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), true))), false))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.4) : 0.0)), 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))) + sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))) || (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))) || (_GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.4) : 0.0)), 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))) + sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))) || (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))) || (_GLF_IDENTITY(false, (false) && true)))))))), false, true)), ! (! (bool(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.4) : 0.0)), 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))) + sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))) || (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))) || (_GLF_IDENTITY(false, (false) && true)))))))), false, true)))))))), (! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, sqrt(0.0), 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, sqrt(0.0), 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, sqrt(0.0), 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, sqrt(0.0), 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), _GLF_IDENTITY(float(mat3(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)), float(mat4(float(mat3(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0)))), mix(vec3(_GLF_FUZZED((-3487.6380 * vec4(7462.1885, 8.5, 7504.2380, 327.998).a)), _GLF_FUZZED(2.9), _GLF_FUZZED(8.1)), vec3((vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), _GLF_IDENTITY(float(mat3(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)), float(mat4(float(mat3(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0)))))[0], (vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), _GLF_IDENTITY(float(mat3(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)), float(mat4(float(mat3(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0)))))[1], (vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), _GLF_IDENTITY(float(mat3(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)), float(mat4(float(mat3(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0)))))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 1.0)), float(vec4(float(vec4(0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0)))))), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))), clamp(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))), (float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))) - 0.0), float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))), float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))))) / determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) || (_GLF_IDENTITY(false, (false) && true))))))))))) || false), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))) || (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))))))), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))))))), true, true, false)), true))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0))))), min(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0))))), min(float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0))))), float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0))))))), float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0))))))))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0))))), min(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0))))), min(float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0))))), float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0))))))), float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0)))))))))) && _GLF_IDENTITY(true, ! (! (true))))))))), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-43.24) : 0.0)), 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))))))))), (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))))))))) || false)))))), true, true, false)), true)))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec4(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), false, true, true))))))))))))))), false)), _GLF_IDENTITY((bool(bvec2(! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))) || false))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0))))))))))) || (_GLF_IDENTITY(false, (false) && true)))))))))), false))) && true, bool(bool((bool(bvec2(! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && true)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 0.0, 1.0)))))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(1.0), 0.0, 1.0)), dot(vec3(0.0, 0.0, cos(0.0)), vec3(log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 0.0, 1.0)))))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))) && true)))))))), false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec2(! (_GLF_IDENTITY(true, false || (true))), false)))))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec2(! (_GLF_IDENTITY(true, false || (true))), false)))))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec2(! (_GLF_IDENTITY(true, false || (true))), false))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec2(! (_GLF_IDENTITY(true, false || (true))), false))))))))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))))) || false)))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), (! (_GLF_DEAD(false))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))).y, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(4695.2573) : float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)))), float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), clamp(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), clamp(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), clamp(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), clamp(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(79.90) : _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), clamp(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x3(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 1.0, 0.0, 1.0)))))))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) && true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(0u | ((next_virtual_gid)), (true ? _GLF_IDENTITY(0u | ((next_virtual_gid)), (_GLF_IDENTITY(0u | ((next_virtual_gid)), (0u | _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((next_virtual_gid)), 0u + (((next_virtual_gid)))), ((next_virtual_gid)), _GLF_IDENTITY(((next_virtual_gid)), 1u * (((next_virtual_gid))))))) | (0u | ((next_virtual_gid))))) ^ 0u) : _GLF_FUZZED(next_virtual_gid)))) | 0u)], uint(_GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), ((2)) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(int(ivec3(clamp(4, 4, 4), 1, (0 ^ 0))), int(ivec2(int(ivec3(clamp(4, 4, 4), 1, (0 ^ 0))), 0))))), clamp(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) ^ 0), 4)), 4)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, 0 | (_GLF_IDENTITY((4) ^ 0, min((4) ^ 0, (_GLF_IDENTITY(4, (4) * 1)) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(sign(82610)) : _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))))), _GLF_IDENTITY((4) - 0, _GLF_IDENTITY(1 * ((4) - 0), 1 * (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(((uvec4(24443u, 94046u, 73716u, 86750u) != uvec4(4333u, 20717u, 154286u, 63994u)) ? -94365 : 83063)))) * ((4) - 0))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0)))) | (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (false ? _GLF_FUZZED(bitCount(workgroup_size)) : (4))) - 0))) - 0)), 4)), (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(min(~ (4), ~ (4)), 0 + (_GLF_IDENTITY(min(~ (4), ~ (4)), (min(~ (4), ~ (4))) ^ 0))))))))) * 1))), _GLF_IDENTITY(int(ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, 0 | (_GLF_IDENTITY((4) ^ 0, min((4) ^ 0, (_GLF_IDENTITY(4, (4) * 1)) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(sign(82610)) : _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))))), _GLF_IDENTITY((4) - 0, _GLF_IDENTITY(1 * ((4) - 0), 1 * (1 * ((4) - 0))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0)), ((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0))) - 0)), 4), min(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, 0 | (_GLF_IDENTITY((4) ^ 0, min((4) ^ 0, (_GLF_IDENTITY(4, (4) * 1)) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(sign(82610)) : _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))))), _GLF_IDENTITY((4) - 0, _GLF_IDENTITY(1 * ((4) - 0), 1 * (1 * ((4) - 0))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0)), ((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0))) - 0)), 4), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, 0 | (_GLF_IDENTITY((4) ^ 0, min((4) ^ 0, (_GLF_IDENTITY(4, (4) * 1)) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(sign(82610)) : _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))))), _GLF_IDENTITY((4) - 0, _GLF_IDENTITY(1 * ((4) - 0), 1 * (1 * ((4) - 0))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0)), ((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0))) - 0)), 4)))), (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), (true ? _GLF_IDENTITY(~ (4), (~ (4)) | 0) : _GLF_FUZZED(-99118))), ~ (_GLF_IDENTITY(4, (4) ^ 0))))))))) * 1))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0, 0)), min(int(ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, 0 | (_GLF_IDENTITY((4) ^ 0, min((4) ^ 0, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), min(_GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(4, (4) * 1)))) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(sign(82610)) : _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))))), _GLF_IDENTITY((4) - 0, _GLF_IDENTITY(1 * ((4) - 0), 1 * (1 * ((4) - 0))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(sign(82610)) : _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))), int(ivec2(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))), 0))))), _GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(1 * ((4) - 0), 1 * (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) * ((4) - 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0)), ((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0))) - 0)), 4)), (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))))))) * 1))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) | ((1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))), 0, 0)), int(ivec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((4) ^ 0, int(_GLF_IDENTITY(ivec3((4) ^ 0, 1, 1), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3((4) ^ 0, 1, 1), clamp(ivec3((4) ^ 0, 1, 1), ivec3((4) ^ 0, 1, 1), ivec3((4) ^ 0, 1, 1))))))), min((4) ^ 0, (_GLF_IDENTITY(4, (4) * 1)) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(sign(82610)) : _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))))), _GLF_IDENTITY((4) - 0, _GLF_IDENTITY(1 * ((4) - 0), 1 * (1 * ((4) - 0))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0)), ((_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0))) - 0)), 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(4, 4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))))))) * 1))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), 1, 0), (ivec3(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), 1, 0)) << ivec3(0, 0, 0)))), int(4))), 0, 0)))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
