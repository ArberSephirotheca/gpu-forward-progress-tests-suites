#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), true, false, false))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      {
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false)))))));
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) || false)) || false))));
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
        }
      }
     else
      {
       return;
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) * 1)) | 0), _GLF_IDENTITY(5, (5) | 0)))), int(5)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(18768) : _GLF_IDENTITY(5, (5) - 0))), 5))), max(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1))), int(_GLF_IDENTITY(5, (5) >> 0)))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED((mat4x2(1.3, 151.029, -7521.4326, -1598.8560, 0.4, 4294.6071, 7.6, -6799.6508) , -55042)) : _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(87486) : int(5))))))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5)))) | ((1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))))) | 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)))) - 0)) >> (0 << _GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) | 0)) - 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, min(5, 5)), 5))), int(_GLF_IDENTITY(5, (5) + 0)))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), (~ (int(5))) - 0)))) - 0), (int(5)) / 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY((5) >> 0, ((5) >> _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) - 0))), 0))) + 0))), (false ? _GLF_FUZZED(-54752) : int(_GLF_IDENTITY(5, _GLF_IDENTITY((5) >> 0, ((5) >> _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) - 0))), 0))) + 0))))))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))) / 1)), (int(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))) / 1))) >> 0))) | 0), (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | 0))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> (0 << _GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) >> 0)), int(5))) >> _GLF_IDENTITY(int(5), int(5))) | 0)) - 0), _GLF_IDENTITY((_GLF_IDENTITY(1, (1 ^ 0) * (1)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) + int(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(findMSB(53276u))))), int(5)), _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1))), int(_GLF_IDENTITY(5, (5) >> 0)))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (~ (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) - 0))))) | 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> (0 << _GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) | 0)) - 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, clamp(5, 5, _GLF_IDENTITY(5, 1 * (5)))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0))), 1, 1, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1))), int(_GLF_IDENTITY(5, (5) >> 0)))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (0 >> _GLF_IDENTITY(int(8), int(8)))), int(5))) >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(1, 0, 0), (ivec3(1, 0, 0)) * ivec3(1, 1, 1)))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), int(5))), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), ~ (~ (_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), (int(ivec4(1, 1, 1, 1))) * 1))))) << _GLF_IDENTITY(int(5), int(5))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), ~ (~ (_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), (int(ivec4(1, 1, 1, 1))) * 1))))) << _GLF_IDENTITY(int(5), int(5)))) | ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), ~ (~ (_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), (int(ivec4(1, 1, 1, 1))) * 1))))) << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))))) | 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> (0 << _GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), 0 | ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0, int(int(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(int(int(5)))), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), 1)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1))), int(_GLF_IDENTITY(5, (5) >> 0)))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) ^ 0), (1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))) | 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> (0 << _GLF_IDENTITY(int(2), int(2))))), clamp(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> (0 << _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> (0 << _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> (0 << _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> (0 << _GLF_IDENTITY(int(2), int(2)))))) << (1 ^ 1)))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) | 0)) - 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1))), int(_GLF_IDENTITY(5, (5) >> 0)))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), min((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))) | 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | 0), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), int(ivec2(int(5), (0 ^ 1))))) >> (0 << _GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))) | 0)) - 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0))))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true && ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), bool(bvec2(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))) || false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         continue;
         if(_GLF_DEAD(false))
          continue;
        }
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), ~ (~ (0 << _GLF_IDENTITY(int(5), int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4087.2419))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4087.2419))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4087.2419))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), true)))) && true))))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7773.3906)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(82.21))), injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), _GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u), 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u), 0u))), max(~ (uint(uvec2(_GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u), 0u))), ~ (uint(uvec2(_GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u), 0u))))))))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((workgroup_base) | 0u) ^ 0u))), 0u ^ (_GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) * 1u)), (workgroup_base)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(754.459) : injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u, ((workgroup_base) | 0u) ^ 0u)))))), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(36.37))), injectionSwitch.x)), max(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((workgroup_base)), (true ? _GLF_IDENTITY(((workgroup_base)), max(((workgroup_base)), ((workgroup_base)))) : _GLF_FUZZED(subgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), 0u)), ((workgroup_base) | 0u) ^ 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, min((workgroup_base) | 0u, (workgroup_base) | 0u)), max((workgroup_base) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), max((workgroup_base), (workgroup_base)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-140.682)), float(injectionSwitch.x), bool(true)))))), clamp(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(739.545) : 0.0)), injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(88.24)), bool(false))))))), min((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(88.24)), bool(false))))))), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(88.24)), bool(false))))))))) >> 0u)) | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u), ((_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), ((_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), ~ (~ (_GLF_IDENTITY(uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u, ((workgroup_base) | 0u) ^ 0u)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), max(~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-50.34))))))) | 0u), ~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((0u | 0u) | 0u), 1u))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) * 1u)) | 0u) ^ 0u))), 0u ^ (_GLF_IDENTITY((workgroup_base) | 0u, max((_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 1u), (uvec3(workgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(((workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), ((workgroup_base)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x2(0.0, abs(abs(1.0)), 0.0, 1.0, sqrt(1.0), 1.0, cos(0.0), 0.0))), injectionSwitch.x))))) | 0u, ((workgroup_base) | 0u) ^ 0u)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))), min(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))), uint(uint(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))))))))), 1u), uvec2(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))))), 1u)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(77152u, _GLF_IDENTITY(66313u, uint(uint(_GLF_IDENTITY(66313u, ~ (~ (66313u)))))))) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))), min(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(uvec3(subgroup_size, 1u, 0u)))) << 0u), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))))), 1u), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))), 1u))))), (false ? _GLF_FUZZED(uvec2(25930u, 153256u)) : (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(77152u, _GLF_IDENTITY(66313u, uint(uint(_GLF_IDENTITY(66313u, ~ (~ (66313u)))))))) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))), min(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(uvec3(subgroup_size, 1u, 0u)))) << 0u), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))))), 1u), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))), 1u)))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size) << 0u)) + 0u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size), _GLF_IDENTITY(~ (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) ^ (_GLF_IDENTITY(~ (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size))), (~ (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size)))) - 0u))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) - 0u))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(94771u))), (subgroup_local_id) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, _GLF_IDENTITY(0u, 0u + (0u))))))))) + 1) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size))))), max((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(94771u))), (subgroup_local_id) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, _GLF_IDENTITY(0u, 0u + (0u))))))))) + 1) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(94771u))), (subgroup_local_id) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, _GLF_IDENTITY(0u, 0u + (0u))))))))) + 1) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, 1u * _GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) | 0u))) | 0u, ~ (~ ((_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) >> _GLF_IDENTITY(0u, max(0u, 0u))) * (buf[virtual_gid] = 1))) | 0u)))), (true ? _GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 0u), (uvec4(1u, 0u, 0u, 0u)) | (uvec4(1u, 0u, 0u, 0u))))) * (buf[virtual_gid] = 1))) | 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(0u, 0u))) * (buf[virtual_gid] = 1))) | 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, max(0u, 0u))) * (buf[virtual_gid] = 1))) | 0u), _GLF_IDENTITY((~ ((_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, max(0u, 0u))) * (buf[virtual_gid] = 1))) | 0u)) << 0u, ((~ ((_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, max(0u, 0u))) * (buf[virtual_gid] = 1))) | 0u)) << 0u) << 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(workgroup_size)));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(15.05)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-919.085, -5.0)) : injectionSwitch)))).y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-919.085, -5.0)) : injectionSwitch)))).y)))), true, false, true)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           else
            {
            }
          }
         else
          {
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (0) | 0), bool(bool(_injected_loop_counter > _GLF_IDENTITY(0, (0) | 0))))); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))], uint(2), 4, 64, 4);
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), true && (bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, false, true)))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                continue;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-49464))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((347.219 / 9087.6470)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-393.101)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), (true ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((347.219 / 9087.6470), clamp(_GLF_IDENTITY((347.219 / 9087.6470), float(vec4((347.219 / 9087.6470), 0.0, 0.0, 1.0))), (347.219 / 9087.6470), (347.219 / 9087.6470)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-393.101)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.x : _GLF_FUZZED(849.509))), 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(-4366.9050)))) > injectionSwitch.y, false, false, false)))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))).y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(73.66), min(_GLF_IDENTITY(_GLF_FUZZED(73.66), min(_GLF_FUZZED(73.66), _GLF_FUZZED(73.66))), _GLF_FUZZED(73.66)))), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED(86.97)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(73.66), min(_GLF_IDENTITY(_GLF_FUZZED(73.66), min(_GLF_FUZZED(73.66), _GLF_FUZZED(73.66))), _GLF_FUZZED(73.66)))), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(73.66), min(_GLF_IDENTITY(_GLF_FUZZED(73.66), min(_GLF_FUZZED(73.66), _GLF_FUZZED(73.66))), _GLF_FUZZED(73.66)))), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true)))) + abs(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(73.66), min(_GLF_IDENTITY(_GLF_FUZZED(73.66), min(_GLF_FUZZED(73.66), _GLF_FUZZED(73.66))), _GLF_FUZZED(73.66)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) / 1.0))), bool(true))))), float(_GLF_FUZZED(-1386.1073)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(-6.7)), bool(false))))) > injectionSwitch.y, false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_FUZZED(73.66)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(-6.7)), bool(false))))), tan(abs(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_FUZZED(73.66)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(-6.7)), bool(false))))))) > injectionSwitch.y, false, false, false))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))), bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) : _GLF_FUZZED(2137.3494))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, false))), _GLF_IDENTITY(false || _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), _GLF_IDENTITY(true, ! (! (true))) && ((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (false || (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true), bvec2(bvec4(bvec2((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true), bvec2(bvec4(bvec2((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true), false, true)))))))))) && true))))), false, false, false)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(56.29) : injectionSwitch.x)))), 0.0 + _GLF_IDENTITY((injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-50.53) : (injectionSwitch.x)))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(56.29) : injectionSwitch.x)))), 0.0 + _GLF_IDENTITY((injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-50.53) : (injectionSwitch.x)))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(138.667), _GLF_FUZZED((float(9093u) - 58.97))), bvec2(false, false))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(919.481), _GLF_FUZZED(-950.804)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! ((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(atanh(-2469.0188))))))))) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-22.09)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3474.0108)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), true, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(138.667), _GLF_FUZZED((float(9093u) - 58.97))), bvec2(false, false))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(919.481), _GLF_FUZZED(-950.804)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! ((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(atanh(-2469.0188))))))))) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-22.09)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3474.0108)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), true, false))))))))), ! (! ((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(138.667), _GLF_FUZZED((float(9093u) - 58.97))), bvec2(false, false))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(919.481), _GLF_FUZZED(-950.804)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! ((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(atanh(-2469.0188))))))))) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-22.09)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3474.0108)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), true, false))))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(138.667), _GLF_FUZZED((float(9093u) - 58.97))), bvec2(false, false))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(919.481), _GLF_FUZZED(-950.804)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! ((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(atanh(-2469.0188))))))))) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-22.09)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3474.0108)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), true, false))))))))), ! (! ((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(138.667), _GLF_FUZZED((float(9093u) - 58.97))), bvec2(false, false))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(919.481), _GLF_FUZZED(-950.804)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! ((! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(85.75) : _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(atanh(-2469.0188))))))))) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-22.09)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3474.0108)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), true, false)))))))))))))))))))), false, false, false)))), false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false, true)), true))))))) && _GLF_IDENTITY(true, (true) || false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4.4)))), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) && true)))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                }
               return;
              }
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) & 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           do
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-26416))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, length(vec2(0.0, 0.0)), sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-949.380)), bool(false)))), 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    break;
                   continue;
                  }
                 return;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(61.36, 1.0 * (61.36)))), vec2(_GLF_FUZZED(-8706.4251), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false)))))).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(61.36, 1.0 * (61.36)))), vec2(_GLF_FUZZED(-8706.4251), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false)))))).x, 0.0, 1.0, cos(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7960.1688)), float(injectionSwitch.y), bool(true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(61.36, 1.0 * (61.36)))), vec2(_GLF_FUZZED(-8706.4251), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))))).x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), mat3(1.0) * (vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-2.9) : (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(61.36, 1.0 * (61.36)))), vec2(_GLF_FUZZED(-8706.4251), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))))).x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36)))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36))))) + log(vec2(1.0, 1.0))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), true && (bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-980.580), _GLF_FUZZED(8.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), mat3(1.0) * (vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(_GLF_IDENTITY(61.36, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (61.36)))), clamp(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(_GLF_IDENTITY(61.36, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (61.36)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(_GLF_IDENTITY(61.36, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (61.36)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(_GLF_IDENTITY(61.36, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (61.36)))))), vec2(_GLF_FUZZED(-8706.4251), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), false || (_GLF_IDENTITY(true, bool(bool(true)))))))))).x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0)))), dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), (vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)) - vec3(0.0, 0.0, 0.0)))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(91.96))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), mat3(1.0) * (vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 1 * (1))))]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-2.9) : (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(61.36, 1.0 * (61.36)))), vec2(_GLF_FUZZED(-8706.4251), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))))))).x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(980.190))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)), mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), min(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), float(mat2x3(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), 0.0, tan(0.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)))))), dot(vec3(0.0, length(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED((-5.9 * -5.1))), float(max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))))), bool(true)))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), max(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36)))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))) / 1.0), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0), vec3(0.0, 0.0, 1.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), float(mat4x3(_GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, abs(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0))))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))), 0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36))))) + log(vec2(1.0, 1.0))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), true && (bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-980.580), _GLF_FUZZED(8.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), mat3(1.0) * (vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), max(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), (true ? _GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))) : _GLF_FUZZED(7768.4214))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true))))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), max(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), (true ? _GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))) : _GLF_FUZZED(7768.4214))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true)))))) - vec2(0.0, 0.0))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), max(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), (true ? _GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))) : _GLF_FUZZED(7768.4214))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true))))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), max(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), (true ? _GLF_IDENTITY(61.36, float(_GLF_IDENTITY(mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-1.2, 6.9, -595.691, 9.8, -44.22, -6076.6039)) : mat2x3(61.36, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat3(mat4x2(520.216, -0.7, 8.6, 44.08, 759.954, -37.90, -90.08, -96.22)), mat3(10.63, 1.5, -4455.0958, 0.2, -435.465, 835.789, -26.09, -4.8, 716.205))) : mat3(1.0))) * (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))) : _GLF_FUZZED(7768.4214))))), 1.0 * (61.36)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8706.4251, 0.0 + (-8706.4251))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true)))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))) && true)))) || false)))))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
