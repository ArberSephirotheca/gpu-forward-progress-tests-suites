#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))), false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))) || false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)))))) || false)), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))) || false)), true), true, true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))) || (bool(bool(_GLF_DEAD(false))))), false))), true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1217.5711), min(_GLF_FUZZED(-1217.5711), _GLF_FUZZED(-1217.5711)))), float((_GLF_FUZZED(injectionSwitch))[0]), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))), true && (! (_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED(_GLF_IDENTITY((-1.1 + 31.79), max(_GLF_IDENTITY((-1.1 + 31.79), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.0, (true ? -4.0 : _GLF_FUZZED(-0.7)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), (true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))) : _GLF_FUZZED(552.129))) : _GLF_FUZZED(-211.341), max(true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), (true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))) : _GLF_FUZZED(552.129))) : _GLF_FUZZED(-211.341), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), (true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))) : _GLF_FUZZED(552.129))) : _GLF_FUZZED(-211.341), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), (true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))) : _GLF_FUZZED(552.129))) : _GLF_FUZZED(-211.341), float(vec2(true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), (true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))) : _GLF_FUZZED(552.129))) : _GLF_IDENTITY(_GLF_FUZZED(-211.341), 0.0 + (_GLF_FUZZED(-211.341))), 1.0))), true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), (true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))) : _GLF_FUZZED(552.129))) : _GLF_FUZZED(-211.341), true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), (true ? _GLF_IDENTITY(_GLF_FUZZED(-4.0), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))) : _GLF_FUZZED(552.129))) : _GLF_FUZZED(-211.341))))))) : (-1.1 + _GLF_IDENTITY(31.79, max(31.79, 31.79))))), _GLF_IDENTITY((-1.1 + 31.79), (_GLF_IDENTITY((-1.1 + 31.79), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), clamp(mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)))), max(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), clamp(mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), clamp(mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true))))) * 1.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), clamp(mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)), mix(float(_GLF_FUZZED(3.2)), float((-1.1 + 31.79)), bool(true)))))))) * 1.0)))), (_GLF_FUZZED(injectionSwitch))[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), true)))))))), abs(vec2(1.0, 1.0)) * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[_GLF_IDENTITY(1, (1) << 0)]), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true)), (_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true)), vec2(0.0, 0.0) + (mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[_GLF_IDENTITY(0, (0) >> 0)]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))))) * vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + _GLF_IDENTITY(31.79, min(31.79, 31.79)))), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + _GLF_IDENTITY(31.79, mix(float(31.79), float(_GLF_FUZZED(6.9)), bool(false))))), (_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9342.0295, -977.895)) : injectionSwitch))) * vec2(1.0, 1.0))))[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(cos(0.0)))), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_IDENTITY(_GLF_FUZZED(1.3), (_GLF_FUZZED(1.3)) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + _GLF_IDENTITY(31.79, min(31.79, _GLF_IDENTITY(31.79, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(31.79, float(mat4x2(31.79, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), 0.0 + (float(_GLF_IDENTITY(31.79, float(mat4x2(31.79, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-509.175)), bool(false))))))), (_GLF_FUZZED(injectionSwitch))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), min((_GLF_FUZZED(injectionSwitch)), (_GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0)))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8158.0304))), 0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), 0.0, round(length(normalize(cos(0.0)))), 1.0)))) * mat2(1.0))))) - vec2(0.0, 0.0)) : injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], (_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), ((_GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (true))))))))), true), true)))))))), abs(vec2(1.0, 1.0)) * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) * mat2(1.0), mix(vec2(((vec2(0.0, 0.0)) * mat2(1.0))[0], ((vec2(0.0, 0.0)) * mat2(1.0))[1]), vec2(_GLF_FUZZED(5000.9426), _GLF_FUZZED(9.8)), bvec2(false, false)))))) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * vec2(1.0, 1.0))))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED((-1.1 + 31.79)), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], ((_GLF_FUZZED(injectionSwitch))[1]) / 1.0)), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1])) * exp(vec2(0.0, 0.0)), max((vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1])) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1])) * exp(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-789.837), _GLF_FUZZED(3.0)), vec2(((vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1])) * exp(vec2(0.0, 0.0)))[0], ((vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))))[1])) * exp(vec2(0.0, 0.0)))[1]), bvec2(true, true)))))), vec2(mat3x2(_GLF_IDENTITY(vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1])) * exp(vec2(0.0, 0.0)), max((vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1])) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1])) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))), mix(vec2(_GLF_FUZZED(-789.837), _GLF_FUZZED(3.0)), vec2(((vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1])) * exp(vec2(0.0, 0.0)))[0], ((_GLF_IDENTITY(vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), vec2(mat3x4(vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1])))) * exp(vec2(0.0, 0.0)))[1]), bvec2(true, true)))))), 1.0, 1.0, 1.0, 0.0))), bvec2(false, true))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], min((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[0])), ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED(_GLF_IDENTITY((-1.1 + 31.79), clamp((-1.1 + 31.79), _GLF_IDENTITY((-1.1 + 31.79), float(mat3x4((-1.1 + 31.79), 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((-1.1 + 31.79), _GLF_IDENTITY(((-1.1 + 31.79)) + 0.0, (false ? _GLF_FUZZED(-0.6) : ((-1.1 + 31.79)) + 0.0)))))), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), vec2(mat2x4(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], ((_GLF_FUZZED(injectionSwitch))[0]) + 0.0), _GLF_FUZZED(1.3)), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), vec2(_GLF_FUZZED((-1.1 + 31.79)), (_GLF_FUZZED(injectionSwitch))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat3(0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0))), 1.0, length(0.0), 0.0))), 0.0, round(length(normalize(cos(0.0)))), 1.0)))))) - vec2(0.0, 0.0)) : injectionSwitch)).y : _GLF_FUZZED((-9.5)))))) ^ 1), ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) ^ 1)) - _GLF_IDENTITY(0, int(ivec2(0, 1)))) ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0))), true && (_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0))), true && (_injected_loop_counter != (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0)) >> _GLF_IDENTITY(int(0), int(0)))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        continue;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.5) : injectionSwitch.x))) + tan(0.0), float(mat2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.5) : injectionSwitch.x))) + tan(0.0), 0.0, 1.0, sin(0.0))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         break;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        break;
       continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false)))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          continue;
        }
       break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.84), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-99.90, -1287.9136, -8.1, 6702.9755).t)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.84), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-99.90, -1287.9136, -8.1, 6702.9755).t)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.84), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-99.90, -1287.9136, -8.1, 6702.9755).t)), bvec2(true, false)))))) / vec2(1.0, 1.0)).x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, true, true))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || false)), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec2(false, true))), (bool(bool(bvec2(false, true)))) && true), (_GLF_IDENTITY(bool(bool(bvec2(false, true))), (bool(bool(bvec2(false, true)))) && true)) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bool(bool(bvec2(false, true))), (bool(bool(bvec2(false, true)))) && true))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true))))))), true, false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(bool(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))))), false, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(bool(bool(bvec2(false, true))), false, false, false))), false || (_GLF_IDENTITY(! (bool(bvec4(bool(bool(bvec2(false, true))), false, false, false))), false || (! (bool(bvec4(bool(bool(bvec2(false, true))), false, false, false))))))), false || (! (bool(bvec4(bool(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), false, false, false))))))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec2(false, true))), false || (_GLF_IDENTITY(bool(bool(bvec2(false, true))), true && (bool(bool(bvec2(false, true))))))), _GLF_IDENTITY(bool(bvec4(bool(bool(bvec2(false, true))), false, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(bool(bool(bvec2(false, true))), false, false, false))), false || (! (bool(bvec4(bool(bool(bvec2(false, true))), false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), false || (! (bool(bvec4(bool(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), false, false, false)))))))))))) && true))), false, false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              return;
             break;
            }
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))
            break;
           continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           return;
          }
         continue;
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          continue;
         break;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / 1.0)) > injectionSwitch.y))))
          break;
         continue;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))) && true))
        continue;
       continue;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))))), true)), (bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), true && (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))))), true))) && true)), true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x3(mat3(mat2x3(injectionSwitch.y, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2x3(mat3(mat2x3(injectionSwitch.y, 0.0, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec2(bool(bvec4(false, true, false, true)), true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.2)), bool(false))), injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(-4528.6000, (-4528.6000) - 0.0)) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) || false))))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) << (0u & 80812u), (((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) << (0u & 80812u)) >> 0u))), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) + 0u))) * 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) / 1.0))) * 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(846.496, 366.457, 4.6, 4.8)) : mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) + mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(682.750) : 0.0)), 0.0, 0.0)))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * 1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2(846.496, 366.457, 4.6, 4.8)) : mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) + mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, cos(0.0), cos(0.0), 0.0))))).y)) ? _GLF_FUZZED(_GLF_IDENTITY(682.750, 1.0 * (682.750))) : 0.0)), 0.0, 0.0)))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   buf[virtual_gid] = _GLF_IDENTITY(1, 0 ^ (1));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), max(uint(2), uint(2))))), uint(2))), uint(uvec3(uint(2), 1u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), 4, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) / 1))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
