#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))), max((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)))))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-85.70), _GLF_FUZZED(11.94)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / abs(vec2(1.0, 1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(exp(0.0), 1.0 * (exp(0.0))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat4(1.0))))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-0.1)), bvec2(_GLF_IDENTITY(false, true && (false)), false))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat4(1.0))))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-0.1)), bvec2(false, false))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, tan(0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, tan(0.0)), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, sin(0.0), abs(1.0), 1.0, log(1.0), 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat4x3(max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0)))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, exp(0.0), 0.0))), 0.0))), 0.0)), min(vec2(mat4x3(max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), vec2(mat4x3(max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0))))))[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-5708) : 0))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.3))))))[1], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]))), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-0.1)), bvec2(false, false))).y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, tan(0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, tan(0.0)), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, sin(0.0), abs(1.0), 1.0, log(1.0), 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat4x3(max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0)))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, exp(0.0), 0.0))), 0.0))), 0.0)), min(vec2(mat4x3(max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), vec2(mat4x3(max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0))))))[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-5708) : 0))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.3))))))[1], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]))), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-0.1)), bvec2(false, false))).y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), vec2(mat2x4(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y) && true)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) && true)) && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), (injectionSwitch.x > injectionSwitch.y)), false, false))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), (injectionSwitch.x > injectionSwitch.y)), false, false)))))) || false))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))) * (injectionSwitch)))).x > injectionSwitch.y)))) || false)), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))) * (injectionSwitch)))).x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(true, (true) || false))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false)))))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uint(0u))))))) | (gl_NumWorkGroups)).x, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, max((gl_NumWorkGroups.x) ^ 0u, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, clamp((gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u)))), (false ? _GLF_FUZZED(uvec2(63033u, 31950u)[1]) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(gl_NumWorkGroups, 0u))))).x) ^ 0u, max(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) / 1u) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, clamp((gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u)), 0u ^ (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, clamp((gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u)))))))))) | (gl_NumWorkGroups.x)), 1u), ~ _GLF_IDENTITY((~ (uvec2(gl_NumWorkGroups.x, 1u))), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((~ (uvec2(gl_NumWorkGroups.x, 1u))), min((~ (uvec2(gl_NumWorkGroups.x, 1u))), _GLF_IDENTITY((~ (uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(uvec2(148445u, 63338u)) : _GLF_IDENTITY((~ (uvec2(gl_NumWorkGroups.x, 1u))), ((~ (uvec2(gl_NumWorkGroups.x, 1u)))) << uvec2(0u, 0u))))))), max(uvec2((~ (uvec2(gl_NumWorkGroups.x, 1u)))), uvec2((~ (uvec2(gl_NumWorkGroups.x, 1u)))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_id))), gl_NumWorkGroups.x))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) ^ (gl_NumWorkGroups))) | (gl_NumWorkGroups)).x, 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(176433u, 22857u, 182768u)))).x), 1u, 1u))))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(gl_NumWorkGroups.x, 1u)))))), min(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_id))), gl_NumWorkGroups.x))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) ^ (gl_NumWorkGroups))) | (gl_NumWorkGroups)).x, 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(176433u, 22857u, 182768u)))).x), 1u, 1u))))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(gl_NumWorkGroups.x, 1u)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_id))), gl_NumWorkGroups.x))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) ^ (gl_NumWorkGroups))) | (gl_NumWorkGroups)).x, 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(176433u, 22857u, 182768u)))).x), 1u, 1u))))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(gl_NumWorkGroups.x, 1u)))))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_id))), gl_NumWorkGroups.x))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) ^ (gl_NumWorkGroups))) | (gl_NumWorkGroups)).x, 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(176433u, 22857u, 182768u)))).x), 1u, 1u))))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(gl_NumWorkGroups.x, 1u)))))), 0u ^ (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_id))), gl_NumWorkGroups.x))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) ^ (gl_NumWorkGroups))) | (gl_NumWorkGroups)).x, 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), max(~ (uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) ^ uvec2(0u, 0u))))))))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(176433u, 22857u, 182768u)))).x), 1u, 1u))))) | (gl_NumWorkGroups.x)), 1u), ~ (~ (uvec2(gl_NumWorkGroups.x, 1u)))))))) : _GLF_FUZZED(114819u)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 1u), (true ? uvec2(gl_NumWorkGroups.x, 1u) : _GLF_FUZZED(uvec2(102265u, 167243u)))), ~ (_GLF_IDENTITY(~ (uvec2(gl_NumWorkGroups.x, 1u)), (~ (uvec2(gl_NumWorkGroups.x, 1u))) * _GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | 0u), 1u), (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) / 1u)), (_GLF_IDENTITY(uvec2(1u, 1u), clamp(_GLF_IDENTITY(uvec2(1u, 1u), clamp(uvec2(1u, 1u), uvec2(1u, 1u), uvec2(1u, 1u))), uvec2(1u, 1u), uvec2(1u, 1u)))) | uvec2(0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, uint(uvec3(0u, _GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)))))))) - uvec2(0u, 0u))) + uvec2(0u, 0u))))), ~ (~ (uvec2(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)).x, 1u)))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u ^ _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)), ~ (~ (_GLF_IDENTITY(((0u)), (false ? _GLF_FUZZED((subgroup_id)) : ((0u))))))) / 1u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, (gl_WorkGroupSize.x) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))))), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (57787u & 0u) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))))))) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) ^ 0u)), (~ (_GLF_IDENTITY(0u, (0u) ^ 0u))) >> 0u))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))), min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((-- workgroup_size)))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), (workgroup_base) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))), 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), min(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))))))))))) + subgroup_id * subgroup_size) / 1u) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)), uint(uvec3(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, 0u + (0u)) ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))) * 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)), _GLF_IDENTITY(0u, 0u + (0u)) ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))) * 1u))))) | 0u, 0u + ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), (workgroup_base) >> 0u), workgroup_base)), _GLF_IDENTITY(0u, 0u + (0u)) ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), uint(uvec2(((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), ((((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) * 1u))))) | 0u))))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY(((subgroup_local_id)) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u ^ (((subgroup_local_id)) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), ((subgroup_local_id)) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) + 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u ^ (0u)))), uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) / 1u), _GLF_IDENTITY(((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) / _GLF_IDENTITY(1u, 0u + (1u)))), max(((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) / _GLF_IDENTITY(1u, 0u + (1u)))), ((workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) / _GLF_IDENTITY(1u, 0u + (1u)))))) >> 0u))))), 0u ^ _GLF_IDENTITY((max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) / 1u)))))), min((max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (_GLF_IDENTITY(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))) / 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (_GLF_IDENTITY(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))) / 1u))), (0u | 0u) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (_GLF_IDENTITY(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))) / 1u)))))) >> 0u)))), (max(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (0u | 0u) ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u), 1u)))) / 1u)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), uint(uvec4(uint(subgroup_size), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), uint(uvec4(uint(subgroup_size), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uint(subgroup_size), uint(uvec4(uint(subgroup_size), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))))))), uint(_GLF_IDENTITY(uint(subgroup_size), uint(uvec4(uint(subgroup_size), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))))))), subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) + 0u))), clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ (0u ^ 0u)))))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))), ((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))))) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))))))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))))) + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))))) + subgroup_id * subgroup_size)) + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (_GLF_IDENTITY(~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)) ^ 0u)))) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) / 1u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u)))))))), subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), cos(0.0)), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), cos(0.0)), vec3(0.0, 0.0, 1.0)), float(mat3(dot(vec3(0.0, log(1.0), cos(0.0)), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (subgroup_size)))), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(subgroup_local_id)))) / 1u), uint(8u))), 0u))))) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, ! (! (true))) ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED((workgroup_id --)), ~ (~ (_GLF_FUZZED((workgroup_id --))))))) + _GLF_IDENTITY(1, (1) | (1))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_size))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(96.07) : 0.0)), 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(96.07) : 0.0)), 1.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(96.07) : 0.0)), 1.0))) + vec2(0.0, 0.0))))).x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7240.1288)), bool(false))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false, false)), true, false)), ! (! (bool(bvec3(bool(bvec2(false, false)), true, false))))))) || false)) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
