#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), false || (true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)).y, injectionSwitch.y))) + 0.0))), false, _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)).y, injectionSwitch.y))) + 0.0))), false, _GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))) && true)))))) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0))))), injectionSwitch)).y, injectionSwitch.y))) + 0.0))), false, _GLF_IDENTITY(true, ! (! (true))))))))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -0.9)))))), vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) / 1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat2x4(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))).y)) ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))))) || false)), true, true, true))), false, false, true)))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(false))
              continue;
            }
          }
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) + 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))))))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), false, true, true)))))))))), ((bool(_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))), ! (! (_GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))), bool(bvec4(false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))), true, false, true)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))), ! (! (_GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))), bool(bvec4(false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))), true, false, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))), bool(bvec4(false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))))))), false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))))), true, false, true))))))))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true)), (bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true))) || false)), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec3(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec3(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true), false)))))))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true)))) || false)) && true))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false), false)))))) || false)))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))) || false))));
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             for(int _injected_loop_counter = _GLF_IDENTITY((0 | 1), ((0 | 1)) | _GLF_IDENTITY(((0 | _GLF_IDENTITY(1, (1) ^ 0))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-58771) : ((0 | _GLF_IDENTITY(1, (1) ^ 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
              }
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)))))))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (true)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (true))))) && true)))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y))) || false))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y))) || false))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(0.2))) > injectionSwitch.y))) || false))))))))))))))) || (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))));
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec3(_injected_loop_counter != 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))))), false, false, false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))) || false), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)))))))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))) || false)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec2(bvec2(false, true))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) || false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true)))), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))) || false)))))))), true, false)))))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      continue;
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), int(int(int(4))))) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), int(4))), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0)))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0)))))))))))); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-427.927)))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat4x2(cos(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), float(_GLF_IDENTITY(vec2(float(mat4x2(cos(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0), max(vec2(float(mat4x2(cos(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(float(mat4x2(cos(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cosh(316.572)))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) + 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(57.62, mix(float(_GLF_FUZZED(5.2)), float(_GLF_IDENTITY(57.62, (57.62) - 0.0)), bool(true))))), bool(false)))))), 0.0, 0.0)), clamp(float(mat4x2(cos(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cosh(316.572)))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(57.62)), (float(_GLF_FUZZED(57.62))) / 1.0), bool(false)))))), 0.0, 0.0)), float(mat4x2(cos(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cosh(316.572)))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cosh(316.572)))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cosh(316.572)))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cosh(316.572)))))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false)))))), 0.0, 0.0)), _GLF_IDENTITY(float(mat4x2(cos(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-89.47))), 1.0)) : _GLF_FUZZED(cosh(316.572)))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.6)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false)))))), 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x2(cos(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(cosh(316.572)), (true ? _GLF_FUZZED(cosh(316.572)) : _GLF_FUZZED(-2600.2793))))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-97.00)), float(1.0), bool(true))), 1.0)))), float(_GLF_FUZZED(57.62)), bool(false)))))), 0.0, 0.0)), (float(mat4x2(cos(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cosh(316.572)))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false)))))), float(_GLF_FUZZED(-3.1)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false))))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false)))))))))))), 0.0, 0.0))) * 1.0), float(mat4x2(cos(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cosh(316.572)))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false)))))), 0.0, 0.0)), float(mat4x2(cos(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cosh(316.572)))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(57.62)), bool(false)))))), 0.0, 0.0)))))), 0.0)))))) * (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8288.7589))))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, tan(0.0), 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(72.28), clamp(_GLF_FUZZED(72.28), _GLF_FUZZED(72.28), _GLF_IDENTITY(_GLF_FUZZED(72.28), (_GLF_FUZZED(72.28)) / 1.0))), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), abs(1.0), 1.0, 1.0, abs(1.0), 0.0, 1.0))), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(_GLF_IDENTITY(-5869.2155, (true ? -5869.2155 : _GLF_FUZZED(dot(2438.0425, 96.39)))))), vec2(((injectionSwitch))[0], ((injectionSwitch))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(45341) : 1))]), bvec2(true, true))))))[0], ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(72.28), clamp(_GLF_FUZZED(72.28), _GLF_FUZZED(72.28), _GLF_IDENTITY(_GLF_FUZZED(72.28), (_GLF_FUZZED(72.28)) / 1.0))), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), abs(1.0), 1.0, 1.0, abs(1.0), 0.0, 1.0))), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(_GLF_IDENTITY(-5869.2155, (true ? -5869.2155 : _GLF_FUZZED(dot(2438.0425, 96.39)))))), vec2(((injectionSwitch))[0], ((injectionSwitch))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(45341) : 1))]), bvec2(true, true))))))[0]) - 0.0), _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (false ? _GLF_FUZZED(injectionSwitch[0]) : _GLF_IDENTITY(((injectionSwitch))[0], (false ? _GLF_FUZZED(3748.6062) : ((injectionSwitch))[0])))), ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(_GLF_IDENTITY(-5869.2155, mix(float(_GLF_FUZZED(8758.9758)), float(-5869.2155), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_IDENTITY(_GLF_FUZZED(-5869.2155), clamp(_GLF_IDENTITY(_GLF_FUZZED(-5869.2155), (true ? _GLF_FUZZED(-5869.2155) : _GLF_FUZZED(2145.5279))), _GLF_FUZZED(-5869.2155), _GLF_FUZZED(-5869.2155)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(72.28, clamp(72.28, 72.28, _GLF_IDENTITY(72.28, clamp(72.28, 72.28, _GLF_IDENTITY(72.28, (72.28) + 0.0)))))), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(51222) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0)))]), bvec2(false, true))))))) / vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, cos(sin(0.0)), 0.0, 1.0, 0.0)))) * (injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(2.5), (mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[1]), vec2((mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[0], _GLF_FUZZED(0.7)), bvec2(true, false)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), vec2(mat4x3(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0))))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(72.28), clamp(_GLF_FUZZED(72.28), _GLF_IDENTITY(_GLF_FUZZED(72.28), float(mat2(_GLF_FUZZED(72.28), 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(72.28), mix(float(_GLF_FUZZED(72.28)), float(_GLF_FUZZED(868.287)), bool(false))))), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + tan(sqrt(vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(72.28, 1.0 * (_GLF_IDENTITY(72.28, max(72.28, 72.28))))), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-8.9, 0.5))))))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), ((injectionSwitch)), ((injectionSwitch))))))[0], ((injectionSwitch))[1]), bvec2(true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), _GLF_IDENTITY(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), (vec2(((injectionSwitch))[0], ((injectionSwitch))[1])) * mat2(1.0)), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2((_GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0))))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))) / vec2(1.0, 1.0)).y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))) / vec2(1.0, 1.0)))).y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))))) / vec2(1.0, 1.0)).y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], float(float(_GLF_IDENTITY(((injectionSwitch))[0], (((injectionSwitch))[0]) + 0.0)))), ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(_GLF_IDENTITY(((injectionSwitch))[0], min(_GLF_IDENTITY(((injectionSwitch))[0], min(((injectionSwitch))[0], ((injectionSwitch))[0])), ((injectionSwitch))[0])), _GLF_IDENTITY(((injectionSwitch))[0], clamp(((injectionSwitch))[0], ((injectionSwitch))[0], ((injectionSwitch))[0])))), ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], mix(float(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0]), float(_GLF_FUZZED(-6019.1395)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), ((injectionSwitch)), ((injectionSwitch))))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch)), _GLF_IDENTITY((((injectionSwitch))) * mat2(1.0), min((((injectionSwitch))) * mat2(1.0), (((injectionSwitch))) * mat2(1.0))))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(72.28), min(_GLF_IDENTITY(_GLF_FUZZED(72.28), min(_GLF_FUZZED(72.28), _GLF_FUZZED(72.28))), _GLF_IDENTITY(_GLF_FUZZED(72.28), max(_GLF_FUZZED(72.28), _GLF_FUZZED(72.28))))), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))) / vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(86.52)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], float(float(_GLF_IDENTITY(((injectionSwitch))[0], (((injectionSwitch))[0]) + 0.0)))), ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(_GLF_IDENTITY(((injectionSwitch))[0], min(_GLF_IDENTITY(((injectionSwitch))[0], min(((injectionSwitch))[0], ((injectionSwitch))[0])), ((injectionSwitch))[0])), _GLF_IDENTITY(((injectionSwitch))[0], clamp(((injectionSwitch))[0], ((injectionSwitch))[0], ((injectionSwitch))[0])))), ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], mix(float(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0]), float(_GLF_FUZZED(-6019.1395)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), ((injectionSwitch)), ((injectionSwitch))))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(_GLF_IDENTITY(((injectionSwitch)), _GLF_IDENTITY((((injectionSwitch))) * mat2(1.0), min((((injectionSwitch))) * mat2(1.0), (((injectionSwitch))) * mat2(1.0))))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(72.28), min(_GLF_IDENTITY(_GLF_FUZZED(72.28), min(_GLF_FUZZED(72.28), _GLF_FUZZED(72.28))), _GLF_IDENTITY(_GLF_FUZZED(72.28), max(_GLF_FUZZED(72.28), _GLF_FUZZED(72.28))))), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))) / vec2(1.0, 1.0)).y), bool(true)))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))) / vec2(1.0, 1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1]), bvec2(false, true))))))))))) / vec2(1.0, 1.0)).y)))), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(subgroup_size)) : 1.0)))), 1.0) * (injectionSwitch))))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))))) * mat2(1.0)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(72.28), (_GLF_FUZZED(72.28)) / 1.0), _GLF_FUZZED(_GLF_IDENTITY(-5869.2155, (false ? _GLF_FUZZED(sqrt(-71.61)) : -5869.2155)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[_GLF_IDENTITY(1, (1) + 0)]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[0], _GLF_FUZZED(float(167064u))), vec2(_GLF_FUZZED(3.1), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(72.28), _GLF_FUZZED(-5869.2155)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(true, (true) && true), true))))))[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), true))))))) / vec2(1.0, 1.0)).y)))))) && true))))) && true)) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false))))))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, ~ (~ (0))) ^ 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), false || ((bool(bool(true))))) && true))), true && (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))))
                  return;
                }
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            return;
          }
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        break;
                       do
                        {
                         if(_GLF_DEAD(false))
                          break;
                         do
                          {
                           return;
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))));
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
                      break;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                    return;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & (- -64236))); _injected_loop_counter --)
          {
           return;
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))));
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))) && true))) || false)))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1518.8467)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), true, true))) || false)))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false))))))))))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))));
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
              }
             continue;
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(542.614), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4x2((injectionSwitch)[1], 1.0, 0.0, _GLF_IDENTITY(0.0, log(1.0) + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0, 0.0), (mat4x2((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -19.16))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, cos(0.0), exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (mat3(injectionSwitch.y, cos(0.0), exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)) + mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          return;
         if(_GLF_DEAD(false))
          continue;
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
      continue;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(4087.1893)), float(injectionSwitch.y), bool(true))))), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-534.845) : injectionSwitch.y)), injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-534.845) : injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-534.845) : injectionSwitch.y)), injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true)))) && true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ((_GLF_WRAPPED_IF_TRUE(true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))))))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), (_GLF_IDENTITY(int(3), min(int(3), int(3)))) >> 0))))), 0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(int(0))))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 0 | (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) >> 0)) << 0)), ((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))) << 0)); _injected_loop_counter --)
            {
             return;
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))), false, false))))))) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : workgroup_size)) * workgroup_id), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, abs(sqrt(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)))))), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(948.524)))))))).x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))) : workgroup_size)) * workgroup_id), 0u, (0u | 0u)), max(uvec3(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : workgroup_size)) * workgroup_id), 0u, (0u | 0u)), uvec3(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)))) * workgroup_id), 0u, (_GLF_IDENTITY(0u, (0u) | (0u)) | _GLF_IDENTITY(0u, uint(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))))), uint(uvec3(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : workgroup_size)) * workgroup_id), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, abs(sqrt(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)))))), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(948.524)))))))).x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))) : workgroup_size)) * workgroup_id), 0u, (0u | 0u)), max(uvec3(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : workgroup_size)) * workgroup_id), 0u, (0u | 0u)), uvec3(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)))) * workgroup_id), 0u, (_GLF_IDENTITY(0u, (0u) | (0u)) | _GLF_IDENTITY(0u, uint(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))))), 0u, 1u))), 0u | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_id) : workgroup_size)) * workgroup_id), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, abs(sqrt(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)))), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)))))), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), float(mat2x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, exp(0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), float(_GLF_FUZZED(4606.1671)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(948.524), (_GLF_FUZZED(948.524)) / 1.0)))))))).x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))) : workgroup_size), min((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, abs(sqrt(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)))), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)))))), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), float(mat2x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, exp(0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), float(_GLF_FUZZED(4606.1671)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(948.524), (_GLF_FUZZED(948.524)) / 1.0)))))))).x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))) : workgroup_size), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, abs(sqrt(0.0)), 1.0, _GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)))), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)))))), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), float(mat2x3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, exp(0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), float(_GLF_FUZZED(4606.1671)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(948.524), (_GLF_FUZZED(948.524)) / 1.0)))))))).x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))) : workgroup_size)))) * workgroup_id), 0u, (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, ~ (~ (_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u)))))) - 0u))), max(uvec3(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : workgroup_size)) * workgroup_id), 0u, (0u | 0u)), uvec3(~ (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)))) * workgroup_id), 0u, (_GLF_IDENTITY(0u, (0u) | (0u)) | _GLF_IDENTITY(0u, uint(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), (1u | 0u), 1u)))))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), ~ _GLF_IDENTITY((~ (subgroup_size)), (true ? _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), 1u * ((~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))))))) : _GLF_FUZZED((workgroup_base ^ usubBorrow(workgroup_base, subgroup_size, workgroup_id)))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id))) / _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id))) / _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), ((subgroup_local_id + 1)) * 1u), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1)))), (subgroup_local_id + 1))) % subgroup_size), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id))) / _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id))) / _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), ((subgroup_local_id + 1)) * 1u), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1)))), (subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id))) / _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id))) / _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), ((subgroup_local_id + 1)) * 1u), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1)))), (subgroup_local_id + 1))) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) / 1u) + 0u, (_GLF_IDENTITY((buf[virtual_gid] = 1), ((buf[virtual_gid] = 1)) - 0u) + 0u) - 0u)), (_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, 0u | (buf[virtual_gid] = 1))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(62800u, 101575u).s) : (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) * 1u)), ~ (~ _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(62800u, 101575u).s) : (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) * 1u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(62800u, 101575u).s) : (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) * 1u))), 0u ^ ((false ? _GLF_FUZZED(uvec2(62800u, 101575u).s) : (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) * 1u))))))))))) + 0u)) - 0u);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat2(1.0))), mat2(mat4x3(transpose(transpose(mat2(1.0))))))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false, true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(926.851), _GLF_FUZZED(-5.7)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), mix(vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], max((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1]))), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(-32.70)), bvec2(false, false))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))).y)), false || (((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), mix(vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], max((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1]))), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(-32.70)), bvec2(false, false))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))).y))))))), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(926.851), _GLF_FUZZED(-5.7)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), mix(vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], max((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1]))), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(-32.70)), bvec2(false, false))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))).y)), false || (((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), mix(vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], max((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1]))), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(-32.70)), bvec2(false, false))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))).y))))))), false, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(926.851), _GLF_FUZZED(-5.7)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), mix(vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], max((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1]))), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(-32.70)), bvec2(false, false))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))).y)), false || (((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), mix(vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], max((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1], (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))[1]))), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(-32.70)), bvec2(false, false))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))).y))))))), false, true))))), true)))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) || false))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-81822 & 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
                          {
                          }
                         else
                          {
                           do
                            {
                             return;
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))));
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, true)))) && true))
                      continue;
                     do
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1))); _injected_loop_counter ++)
                        {
                         return;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            return;
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                          continue;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false || ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(38.86) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y)))) || false))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))
                                continue;
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                 if(_GLF_DEAD(false))
                                  continue;
                                 if(_GLF_DEAD(false))
                                  break;
                                }
                               else
                                {
                                 return;
                                }
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                continue;
                               break;
                              }
                            }
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))))
                            continue;
                           break;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
                          return;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             break;
                            }
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            continue;
                           continue;
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       continue;
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
                break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               return;
              }
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       for(int _injected_loop_counter = (41982 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.41)), bool(false))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(39.41)), bool(false))) > injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true))), (! (! (false))) && true)), _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (_GLF_IDENTITY(((false)) && true, (((false)) && true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(mix(vec2(-309.517, 693.425), injectionSwitch, bvec2(true, false))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(mix(vec2(-309.517, 693.425), injectionSwitch, bvec2(true, false))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(mix(vec2(-309.517, 693.425), injectionSwitch, bvec2(true, false))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(4.1, 59.48)) : mat2(1.0) * (injectionSwitch)))))), injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(determinant((mat2(-887.503, 2.6, -1.1, 0.5) + -2.9))) : _GLF_IDENTITY((injectionSwitch.y), float(vec2((injectionSwitch.y), 1.0))))) / 1.0), injectionSwitch.y))))))
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      continue;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true)) && true))
          break;
         continue;
        }
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && true))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((- vec2(-4.6, -1074.5876))) : injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), (! (false)) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), (! (false)) && true)))))))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), (! (false)) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), (! (false)) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) && true))))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.52) : 0.0)), injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(sin(-4.8)))), injectionSwitch[1])).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(18.80)), float(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (injectionSwitch)).x), bool(true))) < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
   for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (1)) ^ 0))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.1) : injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y) || false))) || false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))) && true, bool(bvec4((_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))) && true, false, false, false)))) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
        break;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << 0)), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))))) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       do
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)))))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(true, true && (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(true, true && (true)))), false || (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(true, true && (true)))))))), true, true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), true && (bool(bvec4(_GLF_DEAD(false), false, true, true))))))), (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), true && (bool(bvec4(_GLF_DEAD(false), false, true, true)))))))) || false))), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, true, true)), true, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          break;
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))) && true)) || false))))
        continue;
      }
     else
      {
       return;
      }
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))))))), true, false)), bool(bvec2(bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))))))), true, false)), true)))) || false))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) && true)); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
