#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (((0 ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-91354) : 0))) << _GLF_IDENTITY(int(5), int(5))) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))
    barrier();
  }
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-460.295), (true ? _GLF_FUZZED(-460.295) : _GLF_FUZZED(7.1))) : sqrt(0.0))), 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), true && (! (true))), true, false))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.34) : 0.0))) * 1.0)), (false ? _GLF_FUZZED(-460.295) : sqrt(0.0))), 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.34) : 0.0))) * 1.0)), (false ? _GLF_FUZZED(-460.295) : sqrt(0.0))), 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.34) : 0.0))) * 1.0)), (false ? _GLF_FUZZED(-460.295) : sqrt(0.0))), 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))) || false))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))
            barrier();
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, false))), true && (! (_GLF_DEAD(false))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(0, min(0, 0)) ^ ((0))) | (0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), min((0), (0))) | (0), max(_GLF_IDENTITY((0) | (0), 0 | ((0) | (0))), (0) | (0)))), max(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0)))) : _GLF_FUZZED(ivec2(21743, -79877)[1])))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0)), 1, 1), (ivec3(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0)), 1, 1)) | (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(4), ivec3(4)))))) | 0))) ^ 0)) | (0)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0)))))), _GLF_IDENTITY(0, (0) | (0))), (max(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0)))) / 1)) : _GLF_FUZZED(ivec2(21743, -79877)[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1))))))])))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0)))) ^ 0), (0) | (0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) * 1))), _GLF_IDENTITY((0), ~ (~ ((0)))) | (0))))) + 0), (_GLF_IDENTITY(0, (0) | (0))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), clamp(~ (_GLF_IDENTITY(0, (0) | (0))), ~ (_GLF_IDENTITY(0, (0) | (0))), ~ (_GLF_IDENTITY(0, (0) | (0)))))) | (~ (_GLF_IDENTITY(0, (0) | (0))))))), _GLF_IDENTITY(0, (0) | (0)))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(21743, 0 | (_GLF_IDENTITY(21743, (21743) | (21743)))), -79877)[1])))), false, false, false)))))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec3(1, 0, (((1 ^ 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(_injected_loop_counter))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) - 0), (_injected_loop_counter --) << 0))
      {
       do
        {
         do
          {
           do
            {
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))));
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, false, true))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0)), false || (_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
              }
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(int(8), int(8)))))) >> 0) & -21673, max(_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << ((0 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(8), int(8))))))) >> 0) & -21673, (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ((0 << _GLF_IDENTITY(int(8), int(8)))) >> 0) & -21673) << 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8))), ((0 << _GLF_IDENTITY(int(8), int(8)))) >> 0) & -21673))) ^ 0)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
      }
    }
   do
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(mat2x4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat2x4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0)))).y, injectionSwitch.y))))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(fract(vec2(-652.869, -61.69)), mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED((mat2x3(-1248.6588, -5.7, 1.3, 7.9, -0.1, -8353.8980) * vec2(34.42, 3043.3913)).r)), vec2((fract(vec2(-652.869, -61.69)))[0], (fract(vec2(-652.869, -61.69)))[1]), bvec2(true, true)))) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), ! (! ((! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(fract(vec2(-652.869, -61.69)), mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED((mat2x3(-1248.6588, _GLF_IDENTITY(-5.7, (-5.7) - sin(0.0)), 1.3, 7.9, -0.1, -8353.8980) * vec2(34.42, 3043.3913)).r)), vec2((_GLF_IDENTITY(fract(vec2(-652.869, -61.69)), vec2(1.0, 1.0) * (fract(vec2(-652.869, -61.69)))))[0], _GLF_IDENTITY((fract(vec2(-652.869, -61.69)))[1], mix(float((fract(vec2(-652.869, -61.69)))[1]), float(_GLF_FUZZED(-88.31)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), false, false))) && (bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(3768.6194) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), (! (! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(3768.6194) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true), (! _GLF_IDENTITY((! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false || ((! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && _GLF_IDENTITY(true, (true) && true)))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), false, false))) && (bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), tan(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((false ? _GLF_FUZZED(3768.6194) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) + ((false ? _GLF_FUZZED(3768.6194) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), clamp(dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), clamp(dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch, injectionSwitch)).y))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat4x2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(3768.6194) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && true), _GLF_IDENTITY((! _GLF_IDENTITY((! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false || ((! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && _GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY((! _GLF_IDENTITY((! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false || ((! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && _GLF_IDENTITY(true, (true) && true), ! (! ((! _GLF_IDENTITY((! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false || ((! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(false, true && (false)) || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))) && _GLF_IDENTITY(true, (true) && true))))))))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(4898.0658)), float(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0))), bool(true)))))))) || false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4476.9909)), float(injectionSwitch.y), bool(true)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4476.9909)), float(injectionSwitch.y), bool(true)))), float(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4476.9909)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(-2.7)), float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4476.9909)), float(injectionSwitch.y), bool(true))))), bool(true))), 1.0, 0.0, 0.0))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4476.9909)), float(injectionSwitch.y), bool(true)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4476.9909)), float(injectionSwitch.y), bool(true)))))), bool(true)))) - 0.0), float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(2.5)))), float(_GLF_FUZZED(float(99391))), bool(false)))))), injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-8.3, 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, _GLF_IDENTITY((-8.3) / 1.0, mix(float((-8.3) / 1.0), float(_GLF_FUZZED(6.5)), bool(false)))), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-4.1)) : injectionSwitch.y)), injectionSwitch.y)))))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0), mix(vec2(_GLF_FUZZED(406.188), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[0], _GLF_FUZZED(-4.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), false, true)))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.5) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-8.3, 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-6741.4291)), vec2(_GLF_FUZZED(985.551), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], clamp((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), bvec2(false, true)))) - vec2(0.0, 0.0))))).y) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, _GLF_IDENTITY((-8.3) / 1.0, mix(float((-8.3) / 1.0), float(_GLF_FUZZED(6.5)), bool(false)))), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-4.9)), float(_GLF_IDENTITY(-8.3, (-8.3) / 1.0)), bool(true))) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(sin(-4.1)) : injectionSwitch.y), max((false ? _GLF_FUZZED(sin(-4.1)) : injectionSwitch.y), _GLF_IDENTITY((false ? _GLF_FUZZED(sin(-4.1)) : injectionSwitch.y), (false ? _GLF_FUZZED(-48.06) : (false ? _GLF_FUZZED(sin(-4.1)) : injectionSwitch.y)))))), injectionSwitch.y)))))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, _GLF_IDENTITY((-8.3) / 1.0, (false ? _GLF_FUZZED(1.8) : (-8.3) / 1.0))), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0), mix(vec2(_GLF_FUZZED(406.188), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[0], _GLF_FUZZED(-4.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0), mix(vec2(_GLF_FUZZED(406.188), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[0], _GLF_FUZZED(-4.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec2(mat2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0), mix(vec2(_GLF_FUZZED(406.188), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[0], _GLF_FUZZED(-4.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0), mix(vec2(_GLF_FUZZED(406.188), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), mix(float(_GLF_FUZZED(-9962.3851)), float(_GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) / 1.0), (true ? _GLF_IDENTITY(-8.3, (-8.3) / 1.0) : _GLF_FUZZED(-6.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 2.4, -159.403).p), _GLF_FUZZED(-9098.9778)), bvec2(false, false)))) * mat2(1.0))[0], _GLF_FUZZED(-4.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), _GLF_IDENTITY(false, true && (false)), true))))))) || false)))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(45.29))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(45.29))) > injectionSwitch.y), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-845.785)), float(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), bool(true)))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 0.0, sqrt(sqrt(0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(0.0, 0.0, 0.0, 0.0, sqrt(sqrt(0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 0.0, sqrt(sqrt(0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(float(mat3x4(0.0, 0.0, 0.0, 0.0, sqrt(sqrt(0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(6.9)), bool(false))))))))) / 1.0), injectionSwitch.x)) : _GLF_FUZZED(45.29))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x)) : _GLF_FUZZED(45.29))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0), (mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), clamp(float(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0), (mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0), (mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(8621.0789)), bool(false)))))))))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0), (mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), clamp(float(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0), (mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0))))), injectionSwitch.x))))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0), (mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float((99942u & 59467u)))), float(0.0), bool(true))), 1.0, 1.0, 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(-177.009) : injectionSwitch.x)), injectionSwitch.x))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(-177.009) : injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(-619.869)), float((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(-177.009) : injectionSwitch.x)), injectionSwitch.x)))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(-177.009) : injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(90.21)), float((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(-177.009) : injectionSwitch.x)), injectionSwitch.x)))), bool(true))))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0))))), dot(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-698.239))), 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0), (mat4x3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, abs(0.0)))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))))))))), injectionSwitch.x)) : _GLF_FUZZED(45.29))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false))), false))), true)))))))));
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))))) && true), bool(bvec3(false, false, false))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0))).y))))
    barrier();
   do
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(false)))), bool(bool(! ((! (_GLF_WRAPPED_LOOP(false)))))))) || false)))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false, ! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_DEAD(false))), bool(bvec4(false || ((_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), (! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))) && true))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, (true) || false)) && true)))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat4(0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0))) > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0), injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ((_GLF_IDENTITY(false, (false) && true)) && true) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) | 0u) ^ (0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[0], ((vec2(vec3(injectionSwitch, 1.0)))[0]) * 1.0), (vec2(vec3(injectionSwitch, 1.0)))[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(2.3)), bvec2(false, false)))).x > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[0], ((vec2(vec3(injectionSwitch, 1.0)))[0]) * 1.0), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2(_GLF_FUZZED((true ? (-3.4 / -3007.6782) : -522.810)), _GLF_FUZZED(3.0)), vec2((vec2(vec3(injectionSwitch, 1.0)))[0], _GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[1], ((vec2(vec3(injectionSwitch, 1.0)))[1]) - 0.0)), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(2.3)), bvec2(false, false)))).x > injectionSwitch.y) || false)))))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) && true), true && (_GLF_IDENTITY(true, (true) && true)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
              }
             else
              {
              }
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))) << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), (bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false || ((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false || ((! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))))) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.8, 1.0)), mix(vec2(_GLF_FUZZED(float(15063)), _GLF_FUZZED(3.5)), vec2((_GLF_FUZZED(vec2(-4.8, 1.0)))[0], _GLF_IDENTITY((_GLF_FUZZED(vec2(-4.8, 1.0)))[1], min((_GLF_FUZZED(vec2(-4.8, 1.0)))[1], _GLF_IDENTITY((_GLF_FUZZED(vec2(-4.8, 1.0)))[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-799.985) : (_GLF_FUZZED(vec2(-4.8, 1.0)))[1]))))), bvec2(true, true))))).y))))
              barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-32.18) : _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, false)))))))))) || false)))))) && true, bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(float((injectionSwitch)[0]))), _GLF_FUZZED(8.1)), bvec2(true, false))).y))) && _GLF_IDENTITY(true, (true) || false), false))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) / 1u), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), (~ (workgroup_base)))), (~ _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), (~ (workgroup_base))))) | (~ _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), (~ (workgroup_base)))))))) >> 0u))) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u)))))))) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) - 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY(1u, (1u) - 0u) * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(-36690))), _GLF_IDENTITY((1), ~ (~ ((1)))) << 0))))) % subgroup_size) >> 0u, ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, ((1u & 1u) ^ _GLF_IDENTITY((165273u & 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (165273u & 0u)))))))) >> 0u))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(5), int(5)))), ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) >> 0u))))), 0u ^ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))))))) / 1u) / 1u, clamp((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u)))))))) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) - 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY(1u, (1u) - 0u) * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(-36690))), _GLF_IDENTITY((1), ~ (~ ((1)))) << 0))))) % subgroup_size) >> 0u, ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, ((1u & 1u) ^ _GLF_IDENTITY((165273u & 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (165273u & 0u)))))))) >> 0u))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(5), int(5)))), ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) >> 0u))))), 0u ^ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))))))) / 1u) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u)))))))) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) - 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY(1u, (1u) - 0u) * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(-36690))), _GLF_IDENTITY((1), ~ (~ ((1)))) << 0))))) % subgroup_size) >> 0u, ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, ((1u & 1u) ^ _GLF_IDENTITY((165273u & 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (165273u & 0u)))))))) >> 0u))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(5), int(5)))), ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) >> 0u))))), 0u ^ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))))))) / 1u) / 1u, ((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u)))))))) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) - 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY(1u, (1u) - 0u) * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(-36690))), _GLF_IDENTITY((1), ~ (~ ((1)))) << 0))))) % subgroup_size) >> 0u, ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, ((1u & 1u) ^ _GLF_IDENTITY((165273u & 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (165273u & 0u)))))))) >> 0u))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(5), int(5)))), ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) >> 0u))))), 0u ^ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))))))) / 1u) / 1u) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u)))))))) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) - 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY(1u, (1u) - 0u) * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(-36690))), _GLF_IDENTITY((1), ~ (~ ((1)))) << 0))))) % subgroup_size) >> 0u, ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, ((1u & 1u) ^ _GLF_IDENTITY((165273u & 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (165273u & 0u)))))))) >> 0u))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(5), int(5)))), ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) >> 0u))))), 0u ^ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % subgroup_size) >> 0u, ~ (~ (((subgroup_local_id + 1) % subgroup_size) >> 0u))))))))))) / 1u) / 1u)))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   buf[virtual_gid] = 1;
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), (true ? (next_virtual_gid) : _GLF_FUZZED(atomicAnd(subgroup_id, uint(false))))) | (_GLF_IDENTITY(next_virtual_gid, 1u * (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)) | (next_virtual_gid)), next_virtual_gid))))))], uint(2), 4, 64, 4);
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
