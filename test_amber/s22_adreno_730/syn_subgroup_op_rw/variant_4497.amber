#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat2x4 _f0;
 mat4x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 int _f1;
 ivec4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 vec4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat2x4 _f1;
 uint _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 vec3 _f1;
 bvec2 _f2;
 bvec2 _f3;
 mat2x3 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 ivec3 _f1;
 int _f2;
 _GLF_struct_2 _f3;
 mat4x2 _f4;
 bool _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_3 _f0;
 _GLF_struct_7 _f1;
 vec3 _f2;
 uint workgroup_base;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_0 {
 float _f0;
} ;

struct _GLF_struct_1 {
 uint workgroup_id;
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], min(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 1 * (0))))], gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], min(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), max(min(0, 0), min(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec3(0, 0, 1))), 0)), _GLF_IDENTITY(0, (0) | 0))))), _GLF_IDENTITY(0, 1 * (0))))], gl_NumWorkGroups[0])), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))[1], gl_NumWorkGroups[2])).x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], min(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, 1 * (0))))], gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x : _GLF_FUZZED(subgroup_id))), 1u, 1u, 1u)));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)))) << 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), bool(bvec4(false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), false, _GLF_IDENTITY(true, ! (! (true))), false)))))))), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), ! (! (false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false)))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false, false))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))
      barrier();
    }
   barrier();
  }
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(gl_WorkGroupID.x, _GLF_struct_0(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))), (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_3(mat4x2(1.0), ivec3(1), 1, _GLF_struct_2(bvec3(true), mat2x3(1.0)), mat4x2(1.0), true), _GLF_struct_7(_GLF_struct_4(mat3x2(1.0), mat2x4(1.0), 1u), vec3(1.0), bvec2(true), bvec2(true), mat2x3(1.0), _GLF_struct_5(uvec2(1u), mat4x2(1.0), mat4x2(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) / sqrt(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(ivec3(1), ivec3(1, 1, 1) * (ivec3(1)))), _GLF_struct_6(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), 0 | (int(1)))))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 + (~ (1))), min(~ (1), ~ (1))))), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, max(_GLF_IDENTITY((1) | 0, ((1) | 0) | ((1) | 0)), (1) | 0)))), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(35.17, -26.23, 87.88, -9112.7237)) : mat2(1.0))))), vec3(1.0), workgroup_size * _GLF_struct_replacement_1.workgroup_id, _GLF_struct_8(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-74.09)), bool(false)))), mat4x3(1.0), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0))), 0.0)), 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true)) || false)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true, ! (! ((_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(true, (true) || false), false))))) && true))))))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), false || (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true)))) || false), false, false)))))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, false))))) && true)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), _GLF_IDENTITY(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), bool(bvec4(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false, true, true))))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true)) || false)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true, ! (! ((_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(true, (true) || false), false))))) && true))))))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), false || (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true)))) || false), false, false)))))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, false))))) && true)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), _GLF_IDENTITY(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), bool(bvec4(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false, true, true))))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true)) || false)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true, ! (! ((_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(true, (true) || false), false))))) && true))))))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), false || (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true)))) || false), false, false)))))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, false))))) && true)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), _GLF_IDENTITY(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), bool(bvec4(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false, true, true))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, false), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, false), false))), true))))), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, (false) && true))), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true)))))))))))), true, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)))), false || (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), true, false))))), true, false))))))) && true)) || false)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), true, true))), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(false, false), false)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), false)))))))), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true, ! (! ((_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), false, false))))), _GLF_IDENTITY(true, (true) || false), false))))) && true))))))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), true)))), false))))), true, false)), true && (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))) && true)) || false)))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)), false)))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, false), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, false), false), true)), true)))), false)))), false))))), true, false)), true && _GLF_IDENTITY((bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))), ((bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)))) || false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))), false, false)))), true, false))))) && true), false || (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), false)))), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false))))) && true)))) || false), false, false)))))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, false))))) && true)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, false))))) && true)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, false)), _GLF_IDENTITY(true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, false))), ! (_GLF_IDENTITY(! (true && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, false)))), false || (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))))) && (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, false)))))))))) && true)))), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(false, false), false)))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(false, false), false)), false), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))))))), true, false))) && true)))) && true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), bool(bvec4(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || (_GLF_IDENTITY(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), _GLF_IDENTITY(bool(bvec4(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (_GLF_IDENTITY(bool(bvec4(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(bool(! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))), false, true, true))))), false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false), true, true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false), true, true))), true), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY((0u & 120397u) + (_GLF_struct_replacement_9.workgroup_base + subgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY(((0u & 120397u) + (_GLF_struct_replacement_9.workgroup_base + subgroup_base)), 0u | (((0u & 120397u) + (_GLF_struct_replacement_9.workgroup_base + subgroup_base)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, (_GLF_struct_replacement_9.workgroup_base + subgroup_base) | (_GLF_struct_replacement_9.workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_base) | (_GLF_struct_replacement_9.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)), ~ (~ ((_GLF_struct_replacement_9.workgroup_base + subgroup_base) | (_GLF_struct_replacement_9.workgroup_base + subgroup_base))))), (true ? _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_base) | (_GLF_struct_replacement_9.workgroup_base + subgroup_base), ~ (~ (_GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_base), min(_GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_base), ((_GLF_struct_replacement_9.workgroup_base + subgroup_base)) ^ 0u), _GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_base), (false ? _GLF_FUZZED(bitfieldInsert(virtual_gid, virtual_gid, 30627, -89859)) : (_GLF_struct_replacement_9.workgroup_base + subgroup_base))))) | (_GLF_struct_replacement_9.workgroup_base + subgroup_base))))) : _GLF_FUZZED(uvec4(177683u, 5454u, 62725u, 82758u).r)))) | (_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + subgroup_base), ((_GLF_struct_replacement_9.workgroup_base + subgroup_base)) | ((_GLF_struct_replacement_9.workgroup_base + subgroup_base))) | (_GLF_struct_replacement_9.workgroup_base + subgroup_base)))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 1)), (int(ivec4(1, 0, 0, 1))) - 0))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) << 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), min(uint(4u), uint(4u)))))), _GLF_IDENTITY((virtual_gid) ^ 0u, uint(uvec2((virtual_gid) ^ _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / (1u & 1u))))))))], (true ? buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) << 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), min(uint(4u), uint(4u)))))), _GLF_IDENTITY((virtual_gid) ^ 0u, uint(uvec2((virtual_gid) ^ _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, ~ (~ ((0u) + 0u)))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u))))))] : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), max(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))) ^ 0))))), 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), false))), true, false))))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) >> 0), 64, _GLF_IDENTITY(4, int(ivec3(4, 1, 0))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) / vec2(1.0, 1.0)).y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), transpose(transpose(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7052.2742) : 1.0))), bool(true))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(28.79)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(injectionSwitch, distance(vec4(64.53, -309.793, -20.63, 144.302), vec4(2.7, 6876.6932, 0.2, 5.0)))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-19.85), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(50.19)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true))))))))))))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), false, true)))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))), (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (false)), true && ((! (false))))))))) || false)))) && true)), false || (_GLF_IDENTITY(false, ! (! (false)))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-549.866, -9264.5796)) : injectionSwitch)).y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.9)), vec2(_GLF_FUZZED(-9715.1439), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(48.85)), bvec2(false, false))).x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false), true, true, false)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))), ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4064.8513), _GLF_FUZZED(854.111)), bvec2(false, false))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, false || (_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) && true))))))))))
        return;
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false, false, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, true), false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false)))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(! (! (false)), false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0))))), 0.0, 1.0, 0.0))).x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), abs(1.0)))), vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat3x2(1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-668.025)), bool(false))))), 0.0, abs(1.0), 1.0))))), 0.0, 1.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), float(mat3x2(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0)), 0.0, abs(1.0), 1.0))))), 0.0, 1.0, 0.0))).x) + 0.0))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))) || false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-252.862)), float(injectionSwitch.y), bool(true))), max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))) && true)) && true)))), false, false, false))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch))[0], injectionSwitch[1])).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | 0), 0)), 1 * (int(ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | 0), 0)))))], injectionSwitch[1])).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0)))[1])).x > injectionSwitch.y))))))), bool(bool(bool((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch))))) / vec2(1.0, 1.0))))[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), tan(0.0), 1.0, abs(0.0), 0.0, 0.0))), _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch))))) / vec2(1.0, 1.0))))[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) / vec2(1.0, 1.0)), injectionSwitch))[0], injectionSwitch[1])).x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) / vec2(1.0, 1.0)), injectionSwitch))[0], injectionSwitch[1])).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(bool(_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) * mat2(1.0))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))))), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) * mat2(1.0))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))))), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y)))))), false, false, false)), true && (bool(bvec4((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) * mat2(1.0))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))))), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y)))))), false, false, false)))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), false))))))), true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), max(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), max(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (! (false))))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec2((_GLF_IDENTITY(! (false), true && (! (false)))), true)))), true, false))))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false)), bool(bool(_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec2(! (! (bool(bool(false)))), true)))))))), false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2371.7618)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))) > injectionSwitch.y)) || false), true, true, false)))))))))
  return;
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false))))))), true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.9))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
