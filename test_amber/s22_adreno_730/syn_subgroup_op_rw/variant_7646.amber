#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   switch(_GLF_SWITCH(0))
    {
     case 91:
     if(false)
      {
       {
        int _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
        not(bvec2(true, true));
        {
         clamp(ivec2(55517, 43524), _GLF_SWITCH_0_1v, -33701);
         bvec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[47];
         mix(read, subgroup_local_id, true);
         vec2 _GLF_SWITCH_0_6v[83], _GLF_SWITCH_0_7v;
         ivec4 _GLF_SWITCH_0_8v;
         ;
         mat3x2(mat3(-9.2, 3.6, -613.576, -4.2, 44.41, -48.10, -705.529, -0.1, -6289.3315));
        }
        mat3(-594.731, 51.56, -892.398, 0.4, 977.019, -831.509, 4.2, -324.520, -4.4);
        if(true)
         {
          int _GLF_SWITCH_0_9v;
          mat3 _GLF_SWITCH_0_10v[70];
          ;
          false;
          mat3 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
          vec3(64.33, 6.5, -82.86);
         }
        for(mat3x4 _GLF_SWITCH_0_13v[52], _GLF_SWITCH_0_14v; true; uvec3(195012u, 60432u, 104252u))
         {
          mat2x3(6.9, -2.8, 79.09, 3.5, 9285.5503, -10.39);
          float _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
          ;
          uvec4 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[28];
         }
       }
       uvec3(63035u, 167104u, 158566u);
       vec2 _GLF_SWITCH_0_21v[43], _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
       vec2 _GLF_SWITCH_0_24v[12], _GLF_SWITCH_0_25v[86];
       mat3x2 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[36], _GLF_SWITCH_0_28v;
       {
        {
         mat2(-8.0, 75.92, -168.596, -8.1);
         mat2x4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[34];
         ivec4 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
         uvec3(123037u, 32640u, 101413u);
         -45187;
         mat3x2 _GLF_SWITCH_0_34v;
         mat2(mat2x3(468.377, 74.99, 1.7, -2155.6518, 7610.0753, -740.342));
         uvec4 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
        }
        greaterThan(vec3(-3314.5611, -2.4, -589.448), vec3(-6.2, -906.397, -2.5));
        while((uvec3(162689u, 108342u, 174447u) == uvec3(147000u, 54201u, 74332u)))
         {
          normalize(injectionSwitch);
          mat2 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v;
          -55407;
          ivec3(-83628, -90625, 10108);
          bvec2 _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v;
          bool _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v[79];
          uint _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
          mat3x2 _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v[28];
          (-6.0 + mat4x3(38.82, -1.0, -731.695, 7.3, 9.4, -6.7, -6.7, 3.3, -73.08, -63.22, 657.618, 807.174));
         }
       }
      }
     else
      {
       while((lessThan(ivec4(80860, 18663, -82856, 19650), ivec4(-45874, 2520, -37792, 22882)) == bvec4(false, false, true, true)))
        {
         {
          log2(injectionSwitch);
          ;
          (6.7 / mat2(-5.4, -0.0, 7972.6325, -3.3));
          false;
          ivec2 _GLF_SWITCH_0_50v[44], _GLF_SWITCH_0_51v[63], _GLF_SWITCH_0_52v;
          mat2x3 _GLF_SWITCH_0_53v[36], _GLF_SWITCH_0_54v;
         }
         ;
         uvec2(64847u, 54063u);
         if(false)
          {
           bvec3 _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v[43];
           mat2x3 _GLF_SWITCH_0_58v;
           (uvec2(59934u, 180177u) & next_virtual_gid);
           mat2x4 _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v, _GLF_SWITCH_0_61v[18];
           ivec3 _GLF_SWITCH_0_62v[49], _GLF_SWITCH_0_63v;
           vec3(6995.9704, -7449.6693, 5.6);
          }
         min(uvec2(50506u, 25229u), atomicCompSwap(virtual_gid, subgroup_size, workgroup_size));
         while(any(bvec3(true, true, false)))
          {
           vec2 _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v;
           uvec2(65944u, 114887u)[1];
           (2.0 / mat4x2(-5559.9062, -592.932, 861.087, -1.0, -5.4, -5.6, -50.90, 1606.6222));
           ;
           bvec3(bvec2(false, false), false);
           -8271;
           mat4 _GLF_SWITCH_0_67v;
           uvec3 _GLF_SWITCH_0_68v, _GLF_SWITCH_0_69v[22];
           -4944.7016;
          }
         uvec3 _GLF_SWITCH_0_70v[19];
         determinant((mat4(719.767, -4.0, 6800.8946, 4.6, 9.4, 747.163, -2615.4606, 90.55, 8.4, 7202.2176, -7.8, -936.593, 725.791, -10.89, -4534.4141, 1.8) * mat4(-7.7, -8.8, 2.0, -850.518, 64.65, 489.079, 3.6, 9.7, 0.3, -9.5, 0.3, 6.7, 880.566, 97.40, 85.62, -3.8)));
         6221.0602;
        }
       if(false)
        {
         mat3x4 _GLF_SWITCH_0_71v, _GLF_SWITCH_0_72v;
         {
          uvec2 _GLF_SWITCH_0_73v, _GLF_SWITCH_0_74v;
         }
         mat2x3 _GLF_SWITCH_0_75v, _GLF_SWITCH_0_76v[46];
         uvec2 _GLF_SWITCH_0_77v[91];
         if((bvec2(false, true) != bvec2(true, true)))
          {
           ivec2(-2544, -90199);
           ;
           bvec3(true, true, false);
           uvec3 _GLF_SWITCH_0_78v, _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v;
           (mat4(5.5, -27.89, 5.3, -8709.3191, -1418.0254, 569.177, -7.2, -821.014, -9.8, 816.894, -5348.8100, 274.868, 3.3, -5352.7128, 8.8, -90.78) / mat4(9918.6694, 677.084, 7.1, -7.5, -6.1, 344.679, -8.2, 36.30, -3.0, 61.39, 4493.8503, 0.7, 610.693, -815.758, 1.0, 3785.1219));
          }
         else
          {
           mat4(285.029);
          }
         while((mat3x2(mat3x4(4.3, 10.32, 9972.7052, 9.2, -0.4, 90.20, -0.5, -9.1, 2375.4610, -2.5, -884.641, 437.188)) == mat3x2(3.7, 2846.3812, -3.7, 694.388, 74.95, 8.0)))
          {
           mat4 _GLF_SWITCH_0_81v, _GLF_SWITCH_0_82v[28];
           vec2 _GLF_SWITCH_0_83v[50], _GLF_SWITCH_0_84v;
           ;
           floatBitsToUint(vec3(-4.6, -572.548, 6841.0627));
           mat3 _GLF_SWITCH_0_85v;
           uvec3 _GLF_SWITCH_0_86v[37];
           (++ _GLF_SWITCH_0_75v);
          }
         mat3x2 _GLF_SWITCH_0_87v, _GLF_SWITCH_0_88v;
         mat4x3(9.0, -7.2, 0.3, -57.51, -7.4, 613.605, 1308.4078, -4.3, -6806.6919, -1.4, 9.3, 1.3);
         bool _GLF_SWITCH_0_89v[84], _GLF_SWITCH_0_90v[92];
        }
       mat2(-866.054, 2.3, -617.621, 484.743);
       {
        if(true)
         {
          mat2 _GLF_SWITCH_0_91v;
          vec3 _GLF_SWITCH_0_92v[29], _GLF_SWITCH_0_93v, _GLF_SWITCH_0_94v;
          findMSB(ivec3(-29575, -94595, 12002));
          mat3x2(895.303, 4.3, 7.6, 692.408, 53.63, -321.425);
          uvec4(1908u, 43289u, 82391u, 13216u);
          uint(37783);
          mat4x2 _GLF_SWITCH_0_95v, _GLF_SWITCH_0_96v[58];
          mat4x3 _GLF_SWITCH_0_97v;
         }
        else
         {
          ivec4 _GLF_SWITCH_0_98v, _GLF_SWITCH_0_99v[35];
          -11.16;
          bvec2(true, true);
          mat4x2(-620.308);
          ;
          mat2x3(vec3(-3855.9968, -63.67, 66.63), vec3(5.8, 477.615, -3837.7574));
          mat2x4 _GLF_SWITCH_0_100v, _GLF_SWITCH_0_101v[67], _GLF_SWITCH_0_102v;
          mat2x3 _GLF_SWITCH_0_103v;
          mat4x3 _GLF_SWITCH_0_104v, _GLF_SWITCH_0_105v, _GLF_SWITCH_0_106v[43];
         }
       }
       ;
       mat3x2 _GLF_SWITCH_0_107v;
       if((uvec4(139742u, 103994u, 52835u, 4773u) == uvec4(166573u, 44865u, 55213u, 80230u)))
        {
        }
       else
        {
         vec2 _GLF_SWITCH_0_108v, _GLF_SWITCH_0_109v;
         mat3x4 _GLF_SWITCH_0_110v, _GLF_SWITCH_0_111v[40];
         for(         -52287;
 true; mat2x3(mat4(-9549.8922, 333.410, 7.6, -2.4, 65.52, 9.4, 4.7, -0.9, -371.983, -88.63, -446.938, -2.1, -82.83, 845.500, -2.8, 775.491)))
          {
           mat4(26.27, -69.27, -0.4, 660.929, -3.9, 55.92, 3.8, 991.574, 7.8, -1679.4333, 2.5, -7.4, -68.87, 1.0, 4.5, -9.4);
           injectionSwitch;
           bvec3 _GLF_SWITCH_0_112v, _GLF_SWITCH_0_113v;
           mat2(-8.4, -9810.9316, 3.2, -49.40);
           ((uvec2(24408u, 127672u) * (-- subgroup_size)) != (uvec2(141157u, 105568u) ^ uvec2(23749u, 42487u)));
           vec2 _GLF_SWITCH_0_114v, _GLF_SWITCH_0_115v[93], _GLF_SWITCH_0_116v;
          }
         mat2x3 _GLF_SWITCH_0_117v;
         ivec3 _GLF_SWITCH_0_118v, _GLF_SWITCH_0_119v;
         mat4 _GLF_SWITCH_0_120v;
         mat4x2(6.0, 664.008, 569.731, 5548.9332, 751.567, 5.4, 8.1, 8.5);
         for(         mat2x4(960.976, 5.4, -9336.0458, -1.5, 3.2, -5309.7368, 9366.7555, 17.09);
 (19563 >= -44056); (_GLF_SWITCH_0_107v --))
          {
           mat4 _GLF_SWITCH_0_121v, _GLF_SWITCH_0_122v, _GLF_SWITCH_0_123v;
           mat4x2 _GLF_SWITCH_0_124v[46], _GLF_SWITCH_0_125v[6];
           (_GLF_SWITCH_0_118v.y --);
          }
        }
       if(true)
        {
         do
          {
           bitfieldInsert(uvec4(131360u, 116017u, 118265u, 184063u), uvec4(42293u, 84735u, 181562u, 70303u), -94620, -17059);
           ;
          }
         while(true);
         matrixCompMult((mat4x3(-55.04, -8682.1306, -4737.6758, 8.2, 170.207, -2915.3419, 3.0, -7.3, -2.0, 7.6, 0.7, 60.08) / 899.808), ((- mat4x3(-3.8, -3.9, -47.00, 38.51, 1.1, -600.734, 7666.2435, -8.0, 49.27, -1114.0668, -458.371, -5406.2961)) / -98.93));
        }
      }
     case 0:
     case 57:
     case 35:
     case 70:
     case 53:
     case 49:
     subgroupAll(false);
     case 94:
     case 26:
     case 92:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     case 13:
     ;
     case 3:
     while(true)
      {
       for(ivec4 _GLF_SWITCH_0_126v; true; (bitfieldInsert(97402, 74930, 45482, -55851) + ivec3(34931, -23349, -34337)))
        {
         if(false)
          {
           mat4x2(mat2x4(8.9, 2277.6628, -6744.2984, 77.65, -66.75, -754.368, -49.46, 372.885));
           (mat3x4(-6061.5647, 8.4, -955.975, -773.492, -360.840, 3336.2211, 0.4, -0.6, 9077.8288, 0.6, -8489.6966, 0.8) - mat3x4(6.6, -5950.4395, -400.761, -5.4, -2.2, -1.1, 599.441, 9.4, -7756.0025, 1.3, 3.9, 435.831));
           18962;
           ;
           uvec4 _GLF_SWITCH_0_127v, _GLF_SWITCH_0_128v;
           mat3x4(19.65, 4.3, 385.544, -14.94, -50.51, 3.8, -3.1, -4.3, -722.869, 363.609, -8.0, -3.2);
          }
         else
          {
           ivec2(-21955, 9854).ttts;
           ;
           bvec3(false, false, true);
           mat3x4 _GLF_SWITCH_0_129v[21];
           all(bvec3(true, true, false));
           ivec2 _GLF_SWITCH_0_130v, _GLF_SWITCH_0_131v[37];
           mat2x4 _GLF_SWITCH_0_132v[29], _GLF_SWITCH_0_133v, _GLF_SWITCH_0_134v;
           ivec3(14237, 75960, 28700);
          }
         mat4x3(48.19, -30.48, -70.51, 2918.8657, -42.05, -98.07, 2.8, 975.193, -0.9, 7340.3411, 54.98, -3049.2047);
         vec4(atan(-4251.8129, 7.0));
         mat4x3(14.96, 2438.9718, 7501.0622, 49.48, 4.0, -6.2, 95.90, 78.00, 1289.9051, -32.57, -7482.9571, 358.253);
         mat2x4(-4.5, 9.3, -1.8, 4.1, -810.064, 879.560, 447.967, -772.186);
         {
          (-77.08 - (+ mat4x2(-2.9, 3.1, -8.6, 2.6, 4.0, -4.0, -2548.1668, 8.6)));
          7139.9654;
          vec3 _GLF_SWITCH_0_135v, _GLF_SWITCH_0_136v[16], _GLF_SWITCH_0_137v[16];
         }
         (-368.234 , mat4(-5.9, -10.53, -4.0, -155.898, 4.1, 2985.3487, -12.20, -0.8, -309.844, -16.12, 93.18, -6.8, -6.3, -2.1, -9.0, -1403.1710));
         ivec3 _GLF_SWITCH_0_138v, _GLF_SWITCH_0_139v, _GLF_SWITCH_0_140v;
         if(false)
          {
           ivec3(88514, 63881, -11987);
           (++ _GLF_SWITCH_0_140v);
           (mat4x3(-6.1, -3.1, -570.667, 7.1, 656.130, 7.0, -2706.2977, -68.09, -0.9, -110.404, 4.4, 1548.1442) * mat3x4(14.92, 612.255, 7325.6271, -61.92, 2.9, -2.4, 1.7, 3.2, 1.7, 9.6, 7.0, 61.68));
           mat4x2(-73.98, -6490.6472, 3.0, 642.344, 1.1, 9.5, 8.5, 817.646);
           bool _GLF_SWITCH_0_141v[29], _GLF_SWITCH_0_142v;
           (mat2x3(96.52, 2311.9604, -6.4, -574.841, 546.521, 671.181) - mat2x3(6.8));
          }
         else
          {
           vec4 _GLF_SWITCH_0_143v[22];
           bvec2 _GLF_SWITCH_0_144v;
           vec3(-2.9, 7000.1191, 45.28);
           bvec4(false, true, false, true);
           mat3(mat3x2(431.569, 4.4, -6.1, -666.997, 354.503, -26.76));
           mat3x2(4263.5321, -7.5, -61.50, 2.0, -5274.2702, -71.38);
           bvec3 _GLF_SWITCH_0_145v;
           ivec3 _GLF_SWITCH_0_146v[80], _GLF_SWITCH_0_147v[28], _GLF_SWITCH_0_148v[33];
           vec3 _GLF_SWITCH_0_149v[6];
          }
        }
       for(ivec2 _GLF_SWITCH_0_150v, _GLF_SWITCH_0_151v, _GLF_SWITCH_0_152v; (vec3(-3.4, -29.21, 7.7) == vec3(52.26, -94.93, -5990.1956)); (-5147.2767 - mat2x4(-2.1, -323.019, 3.1, 491.978, 37.27, -194.264, -93.23, 86.71)))
        {
        }
       {
        mat3x2(mat3x4(-1.8, 71.21, 771.381, -504.164, -119.288, 4.9, -95.98, 8.6, 450.405, -7.2, 0.1, 578.824));
        mat4x3(-69.76, 345.158, 86.33, 237.692, 52.74, -26.46, -4.3, -435.545, -7.3, -8.1, 2.7, 79.44);
        vec4 _GLF_SWITCH_0_153v, _GLF_SWITCH_0_154v, _GLF_SWITCH_0_155v;
        mat3(mat4(523.741, -7.4, -34.13, -1004.3913, -6.9, 3168.6238, -7034.6655, -7.8, -8.9, -7.7, 81.32, 1.9, 7.7, -60.35, -293.543, 9.2));
        for(        uvec2(62289u, 139930u);
 (mat3x2(5.0, -0.3, 0.2, 2.7, -81.17, 8.7) == mat3x2(-8.1, 966.830, -5.1, -29.30, -56.99, 548.980)); mat4(-76.66, 5.1, -1.2, 81.73, 19.77, 3437.8173, 7694.7931, -105.402, -3835.7136, -64.71, 6978.5029, 8.0, 572.803, -9.3, -9817.7040, -858.881))
         {
          uvec4 _GLF_SWITCH_0_156v;
          int _GLF_SWITCH_0_157v[30];
          mat4x2(-247.883, -72.85, 5852.1788, -179.342, 205.175, -6969.8144, 6.7, -4.6);
          lessThan(vec4(-56.86, 827.627, -2.1, -4.9), (_GLF_SWITCH_0_154v * mat4(5.0, -8680.9082, 510.140, 3.8, 589.407, -2.3, -4.7, 9085.4455, 2117.8090, 8.2, -9.1, 0.1, -8.7, -9.6, 194.438, -665.965)));
         }
       }
       if(false)
        {
         mat2x3 _GLF_SWITCH_0_158v;
         {
          ;
          (false ? mat3x4(-3.4, -1.2, 5.0, -3.2, 4.4, -0.0, 723.691, -143.139, 604.174, 736.380, 7.2, -2128.7527) : mat3x4(34.52, -2864.4769, -4.7, -597.712, 5.2, 6.3, -6665.0269, -81.85, -8.4, -8309.2149, 73.00, 8.7));
          mat2x3(987.574, -27.52, -6575.4569, -1.4, 97.78, -66.13);
          injectionSwitch;
          ivec3(56362, 25516, -79796);
          mat2 _GLF_SWITCH_0_159v, _GLF_SWITCH_0_160v;
          -611;
          mat2 _GLF_SWITCH_0_161v, _GLF_SWITCH_0_162v;
          mat2 _GLF_SWITCH_0_163v, _GLF_SWITCH_0_164v[10], _GLF_SWITCH_0_165v[45];
         }
         mat4x3(mat4(235.031, -4.3, -7.9, 4.9, 3.5, -1225.6529, -3841.7768, 5640.0916, 7.2, -5.0, -3953.0760, -77.62, -62.00, 62.50, -536.724, -1.7));
         mat2x3 _GLF_SWITCH_0_166v, _GLF_SWITCH_0_167v, _GLF_SWITCH_0_168v;
        }
       uvec4 _GLF_SWITCH_0_169v[80], _GLF_SWITCH_0_170v[31];
       subgroup_size;
      }
     default:
     1;
    }
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
