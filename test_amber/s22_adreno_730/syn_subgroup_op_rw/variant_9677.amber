#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 ivec4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 bvec2 _f1;
 int _f2;
 uvec3 _f3;
 mat2x4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_1 {
 uint workgroup_base;
 _GLF_struct_0 _f0;
 mat3 _f1;
 mat4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 mat4 _f1;
 bvec3 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size;
 uvec4 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_id;
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.x = num_workgroup;
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid.xyz.y = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid.xyz.z = workgroup_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(vec4(1.0), mat4(1.0), bvec3(true), _GLF_struct_1(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.z, (false ? _GLF_FUZZED((subgroup_size - _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size, uvec3(GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size[0], GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size[1], GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size[2])).z)) : GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.z)) * GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid.xyz.z, _GLF_struct_0(vec4(1.0), bvec2(true), 1, uvec3(1u), mat2x4(1.0), mat4(1.0)), mat3(1.0), mat4(1.0), mat3x4(1.0)), _GLF_struct_3(_GLF_struct_2(ivec4(1), ivec2(1))));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_struct_replacement_4._f3.workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_4._f3.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid.w = next_virtual_gid;
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid.xyz.x = GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid.w;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.y = _GLF_IDENTITY(read, clamp(read, read, read));
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))), max(0, 0))) / 1))
  {
   subgroupAll(false);
   atomicStore(buf[GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid.xyz.x], uint(1), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_12next_virtual_gidnum_workgroupworkgroup_idnext_virtual_gid.xyz.x], uint(1), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.y, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
