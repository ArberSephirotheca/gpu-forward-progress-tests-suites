#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), true, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (true)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (true)))))))))))), false))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, true), true)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec3(bvec2(false, true), true)), false)), false, false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(false, true), true)), true))), false)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), bool(bvec3(bool((! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true), _GLF_IDENTITY(true, ! (! (true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), false, true))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), true, false)))), true, false, true)), false, true)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), false, true))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), true, false)))), true, false, true)), false, true)))))), true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false)))))), true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), false, true)))), true), true)), true)))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true), true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false))), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))))), true, false, true)), false, true)))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false))), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))))), true, false, true)), false, true)))), true), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), false, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), false, true)), false, false, true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), false, true)), bool(bvec4(bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, false)))), true, false, true)), false, true)), false, false, true))))), true), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))), false), _GLF_IDENTITY(false, false || (false)))))), true, false))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(mat4x3(mat2(injectionSwitch, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-60.73))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9.8, clamp(_GLF_IDENTITY(9.8, max(9.8, 9.8)), 9.8, 9.8))), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9.8, clamp(_GLF_IDENTITY(9.8, max(9.8, 9.8)), 9.8, 9.8))), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(false, false || (false)), true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(false, false || (false)), true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(clamp(subgroup_local_id, (subgroup_local_id << subgroup_size), _GLF_IDENTITY(clamp(num_workgroup, num_workgroup, 66379u), (1u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (_GLF_IDENTITY(clamp(num_workgroup, num_workgroup, 66379u), clamp(clamp(num_workgroup, _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup))) - 0u), 66379u), clamp(num_workgroup, num_workgroup, 66379u), clamp(num_workgroup, num_workgroup, 66379u))))))) : gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), (false ? _GLF_FUZZED(72600u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), _GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)))), 1u, 0u))))), 0u, 0u)), min(uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << (1u ^ 1u), min(_GLF_IDENTITY((workgroup_base) << (1u ^ 1u), ((workgroup_base) << (1u ^ 1u)) / 1u), _GLF_IDENTITY((workgroup_base) << (1u ^ 1u), ((workgroup_base) << (1u ^ 1u)) / 1u)))), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), 0u, 0u))) / 1u))), (true ? _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), (false ? _GLF_FUZZED(72600u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(workgroup_base, 0u, 0u, 0u), (uvec4(workgroup_base, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))))) << (1u ^ 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), _GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ _GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), 1u, 0u)), 0u | (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), _GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ _GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), 1u, 0u))))))), 0u, 0u)), min(uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << (1u ^ _GLF_IDENTITY(1u, min(1u, 1u))), min(_GLF_IDENTITY((workgroup_base) << (1u ^ 1u), ((workgroup_base) << (1u ^ 1u)) / 1u), _GLF_IDENTITY((workgroup_base) << (1u ^ 1u), ((workgroup_base) << (1u ^ 1u)) / 1u)))), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (1u ^ 1u)), 0u, 0u))) / 1u))) : _GLF_FUZZED(subgroup_local_id)))) + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 1u))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))), 0u))) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(-7398.7916, clamp(-7398.7916, -7398.7916, _GLF_IDENTITY(-7398.7916, mix(_GLF_IDENTITY(float(-7398.7916), clamp(float(-7398.7916), float(-7398.7916), float(-7398.7916))), float(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), max(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1)))) / 1.0)), bool(false))))), 3.0, -52.74, 91.46).a), _GLF_FUZZED(3604.3119)), vec2(mat2x4(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(-7398.7916, clamp(-7398.7916, -7398.7916, _GLF_IDENTITY(-7398.7916, mix(float(-7398.7916), float(_GLF_FUZZED(1.1)), bool(false))))), 3.0, -52.74, 91.46).a), _GLF_FUZZED(3604.3119)), 0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fract(dot(injectionSwitch, vec2(-20.84, -2.6)))) : 0.0)), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fract(dot(injectionSwitch, vec2(-20.84, -2.6)))) : 0.0)), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-7398.7916, 3.0, _GLF_IDENTITY(-52.74, mix(float(_GLF_FUZZED(-9343.6983)), float(_GLF_IDENTITY(-52.74, float(vec2(-52.74, 0.0)))), bool(true))), 91.46).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(1), int(1))))], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))).y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(-7398.7916, min(-7398.7916, -7398.7916)), 3.0, -52.74, 91.46).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))).y))), (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(-7398.7916, min(_GLF_IDENTITY(-7398.7916, float(mat3x2(-7398.7916, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0))), -7398.7916)), 3.0, -52.74, 91.46).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))) || false), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), _GLF_IDENTITY((vec4(-7398.7916, 3.0, -52.74, 91.46)), clamp((vec4(-7398.7916, 3.0, -52.74, 91.46)), _GLF_IDENTITY((vec4(-7398.7916, 3.0, -52.74, 91.46)), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(-7398.7916, 3.0, -52.74, 91.46)))), (vec4(-7398.7916, 3.0, -52.74, 91.46)))) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bool(true)))))).y)))), ! (_GLF_IDENTITY(! ((bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), _GLF_IDENTITY((vec4(-7398.7916, 3.0, -52.74, 91.46)), clamp((vec4(-7398.7916, 3.0, -52.74, 91.46)), _GLF_IDENTITY((vec4(-7398.7916, 3.0, -52.74, 91.46)), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(-7398.7916, 3.0, -52.74, 91.46)))), (vec4(-7398.7916, 3.0, -52.74, 91.46)))) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bool(true)))))).y))))), bool(bool(! ((bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), _GLF_IDENTITY((vec4(-7398.7916, 3.0, -52.74, 91.46)), clamp((vec4(-7398.7916, 3.0, -52.74, 91.46)), _GLF_IDENTITY((vec4(-7398.7916, 3.0, -52.74, 91.46)), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(-7398.7916, 3.0, -52.74, 91.46)))), (vec4(-7398.7916, 3.0, -52.74, 91.46)))) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bool(true)))))).y))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), min(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a))), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))), false || ((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, exp(0.0), 1.0, 1.0, 1.0, sqrt(1.0), 1.0, abs(0.0), 0.0, 0.0, 1.0))))[1]), bvec2(true, true))).y)))))))), (! (_GLF_IDENTITY((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), min(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), false || ((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), _GLF_IDENTITY((vec4(-7398.7916, 3.0, -52.74, 91.46)), ((vec4(-7398.7916, 3.0, -52.74, 91.46))) * mat4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))))) && true))))))), bool(bvec2((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-7398.7916, 3.0, -52.74, 91.46).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3((injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[1]), bvec2(true, true))).y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(-7398.7916, min(-7398.7916, -7398.7916)), 3.0, -52.74, 91.46).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(-7398.7916, min(-7398.7916, -7398.7916)), 3.0, -52.74, 91.46).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(-7398.7916, min(-7398.7916, -7398.7916)), 3.0, -52.74, 91.46).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))), (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(-7398.7916, min(-7398.7916, -7398.7916)), 3.0, -52.74, 91.46).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))) || false), ! _GLF_IDENTITY((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, _GLF_IDENTITY(91.46, (91.46) - 0.0)), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), false || ((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, min(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a))))), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (false ? _GLF_FUZZED(-8213.3246) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, min(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a, _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))).a))))), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), (true ? _GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a) : _GLF_FUZZED(-5565.2966))), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), false || ((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], max((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0])), (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[2], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), vec4(_GLF_FUZZED(-6588.8767), _GLF_FUZZED(-4835.5014), _GLF_FUZZED(7751.0173), _GLF_FUZZED(5.1)), bvec4(false, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))))).a, clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], max((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0])), (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[2], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), vec4(_GLF_FUZZED(-6588.8767), _GLF_FUZZED(-4835.5014), _GLF_FUZZED(7751.0173), _GLF_FUZZED(5.1)), bvec4(false, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))))).a, _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], max((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0])), (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[2], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), vec4(_GLF_FUZZED(-6588.8767), _GLF_FUZZED(-4835.5014), _GLF_FUZZED(7751.0173), _GLF_FUZZED(5.1)), bvec4(false, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))))).a, _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], max((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0])), (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[2], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), vec4(_GLF_FUZZED(-6588.8767), _GLF_FUZZED(-4835.5014), _GLF_FUZZED(7751.0173), _GLF_FUZZED(5.1)), bvec4(false, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))))).a))), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))))), bool(bvec4((! (_GLF_IDENTITY((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a), (true ? _GLF_FUZZED(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)).a) : _GLF_FUZZED(-5565.2966))), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), false || ((! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], max((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0])), (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[2], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), vec4(_GLF_FUZZED(-6588.8767), _GLF_FUZZED(-4835.5014), _GLF_FUZZED(7751.0173), _GLF_FUZZED(5.1)), bvec4(false, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))))).a, clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], max((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0])), (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[2], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), vec4(_GLF_FUZZED(-6588.8767), _GLF_FUZZED(-4835.5014), _GLF_FUZZED(7751.0173), _GLF_FUZZED(5.1)), bvec4(false, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))))).a, _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], max((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0])), (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[2], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), vec4(_GLF_FUZZED(-6588.8767), _GLF_FUZZED(-4835.5014), _GLF_FUZZED(7751.0173), _GLF_FUZZED(5.1)), bvec4(false, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))))).a, _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_IDENTITY((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], max((_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[0])), (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[2], (_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), vec4(_GLF_FUZZED(-6588.8767), _GLF_FUZZED(-4835.5014), _GLF_FUZZED(7751.0173), _GLF_FUZZED(5.1)), bvec4(false, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(-7398.7916, 3.0, -52.74, 91.46), (vec4(-7398.7916, 3.0, -52.74, 91.46)) - vec4(0.0, 0.0, 0.0, 0.0)))))).a))), _GLF_FUZZED(3604.3119)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))))), true, true, false))) && true))))))), false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y) && true), true))))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y) && true), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.6), _GLF_FUZZED(-80.03)), bvec2(false, false))))).y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.6), _GLF_FUZZED(-80.03)), bvec2(false, false))))).y)))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) >> 0u) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)), false)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)), false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), false, false))))))) && (false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), false, false))))))) && (false)))))), false || (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), false, false))))))) && (false)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-47.30 * vec2(5878.8921, 8334.9030))) : injectionSwitch)).x > injectionSwitch.y))) || false)))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0), mat2x3(mat4(mat2x3(injectionSwitch, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0)))))).x > injectionSwitch.y)), true && (! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0), mat2x3(mat4(mat2x3(injectionSwitch, determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-610.127) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (true ? transpose(mat2(1.0)) : _GLF_FUZZED(mat2(34.87, -9692.0637, 5.5, -18.62)))))), (false ? _GLF_FUZZED(mat2(-39.10, -3.8, 3282.5785, -8.6)) : _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (true ? transpose(mat2(1.0)) : _GLF_FUZZED(mat2(34.87, -9692.0637, 5.5, -18.62)))))))) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
