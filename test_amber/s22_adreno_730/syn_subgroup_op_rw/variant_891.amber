#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 vec4 _f0;
 bvec3 _f1;
 ivec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 float _f1;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 bool _f1;
 bvec4 _f2;
 ivec3 _f3;
 int _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 vec3 _f1;
 int _f2;
 uvec3 _f3;
 uvec3 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 uvec2 _f1;
 vec3 _f2;
 vec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 ivec2 _f1;
 mat3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 bvec2 _f1;
 mat4x2 _f2;
 uvec4 _f3;
 bvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 mat2 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_1 {
 uint _f0;
 uvec4 _f1;
 ivec3 _f2;
 ivec2 _f3;
 mat3x2 _f4;
 uint _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 ivec3 _f1;
 bool _f2;
 mat4x2 _f3;
 bool _f4;
 vec2 _f5;
 float _f6;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_2 _f0;
 _GLF_struct_7 _f1;
 uint virtual_gid;
 _GLF_struct_10 _f2;
 _GLF_struct_12 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y = subgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     switch(_GLF_IDENTITY(_GLF_SWITCH((0 & (-36978 >> -40243))), (false ? _GLF_FUZZED(-44356) : _GLF_SWITCH((0 & (-36978 >> -40243))))))
      {
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 62:
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       case 59:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       break;
       case 87:
       if(_GLF_DEAD(false))
        barrier();
       if(false)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         while(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         ;
         true;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           _GLF_IDENTITY(mat4(-2.5, _GLF_IDENTITY(-1.0, clamp(-1.0, -1.0, -1.0)), 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, -5.9, 1936.7905, -795.293, 4430.1109, -9.1, 394.574, 88.13, 16.74), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(-2.5, -1.0, 8.4, 815.736, _GLF_IDENTITY(-6519.6754, clamp(-6519.6754, _GLF_IDENTITY(-6519.6754, mix(float(_GLF_FUZZED(-296.968)), float(-6519.6754), bool(true))), -6519.6754)), _GLF_IDENTITY(375.176, min(375.176, 375.176)), 20.83, -612.912, -5.9, 1936.7905, -795.293, 4430.1109, -9.1, 394.574, 88.13, 16.74), transpose(transpose(_GLF_IDENTITY(mat4(-2.5, -1.0, 8.4, 815.736, _GLF_IDENTITY(-6519.6754, clamp(-6519.6754, _GLF_IDENTITY(-6519.6754, mix(float(_GLF_FUZZED(-296.968)), float(-6519.6754), bool(true))), -6519.6754)), _GLF_IDENTITY(375.176, min(375.176, 375.176)), 20.83, -612.912, -5.9, 1936.7905, -795.293, 4430.1109, -9.1, 394.574, 88.13, 16.74), transpose(transpose(mat4(-2.5, -1.0, 8.4, 815.736, _GLF_IDENTITY(-6519.6754, clamp(-6519.6754, _GLF_IDENTITY(-6519.6754, mix(float(_GLF_FUZZED(-296.968)), float(-6519.6754), bool(true))), -6519.6754)), _GLF_IDENTITY(375.176, min(375.176, 375.176)), 20.83, -612.912, -5.9, 1936.7905, -795.293, 4430.1109, -9.1, 394.574, 88.13, 16.74))))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, -5.9, 1936.7905, -795.293, 4430.1109, -9.1, 394.574, 88.13, 16.74), (true ? mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, -5.9, 1936.7905, -795.293, 4430.1109, -9.1, 394.574, 88.13, 16.74) : _GLF_FUZZED((mat4(-124.904, 887.057, -781.028, 9.1, 43.19, -9.5, 6306.3642, 889.531, -239.835, 8.2, 459.434, -0.8, 10.82, -1188.3274, 89.18, -157.496) - -3.3)))), mat4(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, _GLF_IDENTITY(-5.9, (-5.9) / 1.0), _GLF_IDENTITY(1936.7905, (false ? _GLF_FUZZED((vec2(29.21, 1.8) * mat2(37.19, 16.78, 8387.2765, 9.9))[0]) : _GLF_IDENTITY(1936.7905, float(vec3(1936.7905, 0.0, 1.0))))), _GLF_IDENTITY(-795.293, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1)))), float(1.0), bool(true))), 0.0, 1.0)), 0.0))) + 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6572.8576) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2258.0976) : 0.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(2085.5787)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-6182.7682)))) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0))))), float(_GLF_FUZZED(-8275.9063)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), 0.0))))), 4430.1109, -9.1, 394.574, 88.13, 16.74), (_GLF_IDENTITY(mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, _GLF_IDENTITY(-5.9, (-5.9) / 1.0), 1936.7905, _GLF_IDENTITY(_GLF_IDENTITY(-795.293, min(-795.293, _GLF_IDENTITY(-795.293, min(-795.293, _GLF_IDENTITY(_GLF_IDENTITY(-795.293, (-795.293) * 1.0), max(-795.293, -795.293)))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)))), 0.0))))), 0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.5))), 0.0, 1.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0)))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))))), 0.0))))), 4430.1109, -9.1, _GLF_IDENTITY(394.574, (true ? 394.574 : _GLF_FUZZED(-14.34))), _GLF_IDENTITY(88.13, min(88.13, 88.13)), 16.74), (mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, _GLF_IDENTITY(-5.9, (-5.9) / 1.0), 1936.7905, _GLF_IDENTITY(-795.293, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))), 0.0))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.3) : 0.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-2829.8881, 2012.5153, 4.2, -5.3, -3112.8145, 9309.0959, -9402.1176, -41.64, -9721.7868, -9.0, 143.858, -4.0, -2431.1161, -349.528, 125.604, 38.48)) : mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.3) : 0.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0 * (determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(_GLF_IDENTITY(27.26, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.4) : 27.26)), 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), (true && (bool(true))) && true)))), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - 0.0), 1.0)), 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(59.90), (false ? _GLF_FUZZED(2.3) : _GLF_FUZZED(59.90))) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))), 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0))) / vec4(1.0, 1.0, 1.0, 1.0)))), 4430.1109, -9.1, 394.574, 88.13, 16.74)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) * mat4(1.0))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, _GLF_IDENTITY(-5.9, (-5.9) / 1.0), _GLF_IDENTITY(1936.7905, (false ? _GLF_FUZZED((vec2(29.21, 1.8) * mat2(37.19, 16.78, 8387.2765, 9.9))[0]) : _GLF_IDENTITY(1936.7905, float(vec3(1936.7905, 0.0, 1.0))))), _GLF_IDENTITY(-795.293, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1)))), float(1.0), bool(true))), 0.0, 1.0)), 0.0))) + 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6572.8576) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2258.0976) : 0.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(2085.5787)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-6182.7682)))) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0))))), float(_GLF_FUZZED(-8275.9063)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), 0.0))))), 4430.1109, -9.1, 394.574, 88.13, 16.74), (_GLF_IDENTITY(mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, _GLF_IDENTITY(-5.9, (-5.9) / 1.0), 1936.7905, _GLF_IDENTITY(_GLF_IDENTITY(-795.293, min(-795.293, _GLF_IDENTITY(-795.293, min(-795.293, _GLF_IDENTITY(_GLF_IDENTITY(-795.293, (-795.293) * 1.0), max(-795.293, -795.293)))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)))), 0.0))))), 0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.5))), 0.0, 1.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0)))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))))), 0.0))))), 4430.1109, -9.1, _GLF_IDENTITY(394.574, (true ? 394.574 : _GLF_FUZZED(-14.34))), _GLF_IDENTITY(88.13, min(88.13, 88.13)), 16.74), (mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, _GLF_IDENTITY(-5.9, (-5.9) / 1.0), 1936.7905, _GLF_IDENTITY(-795.293, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))), 0.0))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.3) : 0.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-2829.8881, 2012.5153, 4.2, -5.3, -3112.8145, 9309.0959, -9402.1176, -41.64, -9721.7868, -9.0, 143.858, -4.0, -2431.1161, -349.528, 125.604, 38.48)) : mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.3) : 0.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0 * (determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(_GLF_IDENTITY(27.26, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.4) : 27.26)), 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), (true && (bool(true))) && true)))), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - 0.0), 1.0)), 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(59.90), (false ? _GLF_FUZZED(2.3) : _GLF_FUZZED(59.90))) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))), 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0))) / vec4(1.0, 1.0, 1.0, 1.0)))), 4430.1109, -9.1, 394.574, 88.13, 16.74)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) * mat4(1.0))), ((_GLF_IDENTITY(mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, _GLF_IDENTITY(-5.9, (-5.9) / 1.0), _GLF_IDENTITY(1936.7905, (false ? _GLF_FUZZED((vec2(29.21, 1.8) * mat2(37.19, 16.78, 8387.2765, 9.9))[0]) : _GLF_IDENTITY(1936.7905, float(vec3(1936.7905, 0.0, 1.0))))), _GLF_IDENTITY(-795.293, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.1), clamp(_GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1), _GLF_FUZZED(-9.1)))), float(1.0), bool(true))), 0.0, 1.0)), 0.0))) + 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6572.8576) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2258.0976) : 0.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(2085.5787)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-6182.7682)))) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0))))), float(_GLF_FUZZED(-8275.9063)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), 0.0))))), 4430.1109, -9.1, 394.574, 88.13, 16.74), (_GLF_IDENTITY(mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, _GLF_IDENTITY(-5.9, (-5.9) / 1.0), 1936.7905, _GLF_IDENTITY(_GLF_IDENTITY(-795.293, min(-795.293, _GLF_IDENTITY(-795.293, min(-795.293, _GLF_IDENTITY(_GLF_IDENTITY(-795.293, (-795.293) * 1.0), max(-795.293, -795.293)))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)))), 0.0))))), 0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.5))), 0.0, 1.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0)))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))))), 0.0))))), 4430.1109, -9.1, _GLF_IDENTITY(394.574, (true ? 394.574 : _GLF_FUZZED(-14.34))), _GLF_IDENTITY(88.13, min(88.13, 88.13)), 16.74), (mat4(-2.5, -1.0, 8.4, 815.736, -6519.6754, 375.176, 20.83, -612.912, _GLF_IDENTITY(-5.9, (-5.9) / 1.0), 1936.7905, _GLF_IDENTITY(-795.293, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(27.26, 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), true && (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))), 0.0))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.3) : 0.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-2829.8881, 2012.5153, 4.2, -5.3, -3112.8145, 9309.0959, -9402.1176, -41.64, -9721.7868, -9.0, 143.858, -4.0, -2431.1161, -349.528, 125.604, 38.48)) : mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.3) : 0.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0 * (determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), float(_GLF_FUZZED(6.0)), bool(false)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0)), (false ? _GLF_FUZZED(59.90) : dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(_GLF_IDENTITY(27.26, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.4) : 27.26)), 19.55, 2.9, 7.8)) : vec4(_GLF_IDENTITY(-795.293, mix(float(_GLF_FUZZED(4366.7020)), float(-795.293), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), (true && (bool(true))) && true)))), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - 0.0), 1.0)), 0.0), vec2(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(59.90), (false ? _GLF_FUZZED(2.3) : _GLF_FUZZED(59.90))) : dot(vec2(1.0, 0.0), vec2(determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (mat4(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat4(1.0))))), 0.0))))), 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0))) / vec4(1.0, 1.0, 1.0, 1.0)))), 4430.1109, -9.1, 394.574, 88.13, 16.74)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(ceil(-5.8))))))) * _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           ivec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                break;
              }
             (clamp(ivec4(88483, 44517, -21424, -64753), _GLF_SWITCH_0_0v, _GLF_SWITCH_0_0v) ^ (ivec4(96319, 26201, 9322, -91820) - _GLF_SWITCH_0_1v));
            }
           while((floor(vec3(-93.07, 7513.1436, 2.2)) != vec3(-6.9, 790.879, -41.94)));
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(true)
          {
           mat4(-4.2, 4.2, -2.2, 1.4, _GLF_IDENTITY(1.4, float(mat3(1.4, 0.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0))), -6.7, _GLF_IDENTITY(1.3, mix(float(_GLF_FUZZED(vec2(-984.605, -1.0).g)), float(1.3), bool(true))), 5.5, -5.4, 3.6, -992.055, 7821.5824, -180.274, -5.9, -6.4, -0.2);
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))))
              barrier();
             do
              {
               ;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))) && true)) && true)))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               return;
              }
            }
           while(false);
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) / 1)) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(           (true ? mat3x4(_GLF_IDENTITY(-8594.7858, min(-8594.7858, -8594.7858)), _GLF_IDENTITY(-3935.1496, mix(float(-3935.1496), float(_GLF_FUZZED(6.4)), bool(false))), 3.9, 534.906, -8.8, _GLF_IDENTITY(8.5, min(8.5, 8.5)), -1.1, -6.0, 33.57, 7.0, 8541.1666, _GLF_IDENTITY(-5068.6024, (-5068.6024) * 1.0)) : (-5.7 / mat3x4(4550.8263, 276.426, 6339.4908, -642.116, -1.1, _GLF_IDENTITY(0.6, (0.6) - 0.0), -55.94, 11.91, _GLF_IDENTITY(1257.5353, min(_GLF_IDENTITY(1257.5353, (1257.5353) - 0.0), 1257.5353)), 42.95, -776.011, 6387.1267)));
 (63751 < -65971); (mat4x2(669.353, -3.3, 182.601, -1.0, 159.866, 4.3, _GLF_IDENTITY(_GLF_IDENTITY(-1.6, max(-1.6, -1.6)), max(_GLF_IDENTITY(-1.6, mix(float(_GLF_FUZZED(8379.8370)), _GLF_IDENTITY(float(-1.6), min(float(-1.6), float(-1.6))), bool(true))), _GLF_IDENTITY(-1.6, clamp(-1.6, -1.6, -1.6)))), -31.39)))
            {
             if(_GLF_DEAD(false))
              barrier();
             ivec3(22325, _GLF_IDENTITY(41725, (41725) | 0), 3776);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 continue;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bool(bool(bvec4((_GLF_IDENTITY(true, bool(bool(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             bvec4 _GLF_SWITCH_0_2v[61], _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
             (min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(80977, max(_GLF_IDENTITY(80977, (80977) << 0), 80977)), max(80977, 80977)), 8136), ivec2(-29898, -58671)) + (ivec2(-59506, -26055) + _GLF_IDENTITY(-95911, (-95911) | 0)));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             isinf(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, length(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, exp(0.0), 0.0, 1.0))), mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-85.43)), max(float(_GLF_FUZZED(-85.43)), float(_GLF_FUZZED(-85.43)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), clamp(vec2(mat3x4(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, abs(1.0), abs(0.0), 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, log(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9865.3777) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), float(mat3x2(min(1.0, 1.0), 0.0, 0.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y)))))))), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0)), log(1.0), 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.4)), bool(false))), 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - tan(0.0)), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.9)), bool(false)))) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0)))))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), (int(2)) - (0 | 0)), 1))), int(2)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) / 1))), (int(2)) + 0), int(ivec2(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) - (0 | 0), 0 ^ ((int(2)) - (0 | 0)))), 1))), int(2)), 0, (0 >> _GLF_IDENTITY(int(4), int(4)))))))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false))))))))), ! (! (false)))))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             mat3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[87], _GLF_SWITCH_0_7v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             _GLF_SWITCH_0_4v;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 (mat2(-5073.2912, -6705.7937, -2207.7666, -79.05) != mat2(mat2x3(5.6, 50.50, -0.2, _GLF_IDENTITY(3.4, (3.4) - abs(0.0)), 4.2, -43.34)));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), bvec2(true, false))), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) << 0)); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 mat4(-230.427, -328.966, -222.401, -9138.7355, 5935.6877, 66.30, 163.162, 6.5, -2.3, 87.17, 3103.0565, -3.1, -1775.4315, _GLF_IDENTITY(0.4, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.4, (true ? 0.4 : _GLF_FUZZED(-4.5))) : _GLF_FUZZED(round(-6.8)))), 61.74, 9.2);
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))) || false)))))) || false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           ;
           do
            {
             inversesqrt(mix(4.5, 72.38, true));
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           bool _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
           ;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
        }
       default:
       do
        {
         1;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (5) >> 0)))))) & 29920); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, false)))))))))
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(bvec2((false) && true, false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(bvec2((false) && true, false))))), true, false)))))), true, true, false)))))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.6), _GLF_FUZZED(749.262)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.z = workgroup_id, (GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.z = workgroup_id) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup)))))), workgroup_size, workgroup_size)) * GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id) - uvec3(0u, 0u, 0u)).x * GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_2(bvec3(true), _GLF_struct_0(_GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), _GLF_IDENTITY(vec3(1.0), vec3(mat4x3(vec3(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], _GLF_FUZZED(5906.7835), _GLF_FUZZED(-3.2)), vec3(_GLF_FUZZED((-2813.1493 - 5.2)), (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(false, true, true))))), ivec3(1), _GLF_IDENTITY(true, false || (true)), mat4x2(1.0), true, vec2(1.0), 1.0), _GLF_struct_1(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY(uint(uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))), (uint(uvec3(1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))))) ^ 0u)), ((_GLF_IDENTITY(uint(uvec3(1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))), (uint(uvec3(1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))))) ^ 0u))) | 0u) - 0u))))), uvec4(1u), ivec3(1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) + (1))), mat3x2(1.0), 1u)), _GLF_struct_7(_GLF_struct_3(vec4(1.0)), _GLF_struct_4(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.9)), bool(false)))), bvec2(true), mat4x2(1.0), uvec4(1u), bvec4(true), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0))), _GLF_struct_5(mat3(1.0), ivec2(1), mat3(1.0), mat2(1.0)), mat2(1.0), _GLF_struct_6(bvec4(true), uvec2(1u), vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec2(-5203.7721, -5017.4683).s)), _GLF_IDENTITY(bool(false), (bool(false)) || false)))), vec2(1.0), mat2x4(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), ((1.0)) * 1.0), _GLF_IDENTITY((1.0), min((1.0), (1.0))), (1.0))))))), workgroup_base + subgroup_base + subgroup_local_id, _GLF_struct_10(_GLF_struct_8(mat4(1.0), vec3(1.0), 1, uvec3(1u), uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))), mat2x3(1.0)), _GLF_struct_9(bvec2(true), _GLF_IDENTITY(true, (true) || false), bvec4(true), ivec3(1), 1, bvec4(true)), mat4(1.0)), _GLF_struct_12(_GLF_struct_11(vec4(1.0), bvec3(true), ivec2(1), mat3(1.0)), 1.0));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) >> 0u)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) >> 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u)))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) >> 0u))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) >> 0u)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) >> 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u)))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) >> 0u))))), 1u, 0u), (uvec3((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) >> 0u)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) >> 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u)))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) >> 0u))))), 1u, 0u)) ^ uvec3(0u, 0u, 0u))))) + ((subgroup_local_id + 1) % GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.virtual_gid, max(_GLF_struct_replacement_13.virtual_gid, _GLF_struct_replacement_13.virtual_gid)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_struct_replacement_13.virtual_gid), ((_GLF_struct_replacement_13.virtual_gid)) >> 0u)), (_GLF_IDENTITY(~ (~ (_GLF_struct_replacement_13.virtual_gid)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_struct_replacement_13.virtual_gid), max(~ (_GLF_struct_replacement_13.virtual_gid), _GLF_IDENTITY(~ (_GLF_struct_replacement_13.virtual_gid), uint(uint(~ (_GLF_struct_replacement_13.virtual_gid)))))), (_GLF_IDENTITY(~ (_GLF_struct_replacement_13.virtual_gid), max(~ (_GLF_struct_replacement_13.virtual_gid), _GLF_IDENTITY(~ (_GLF_struct_replacement_13.virtual_gid), uint(uint(~ (_GLF_struct_replacement_13.virtual_gid))))))) >> (0u ^ 0u))))))) | (~ (~ (_GLF_struct_replacement_13.virtual_gid)))))], 4, 64, _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 | (2)), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) ^ 0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-76.29)), bool(false)))), float(_GLF_FUZZED(8.3)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! _GLF_IDENTITY(((subgroup_local_id % 2) == 0), true && (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), (((subgroup_local_id % 2) == 0)) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(20.79), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(0.1, 0.0 + (_GLF_IDENTITY(0.1, (true ? 0.1 : _GLF_FUZZED(-9.9))))))), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(0.1, 0.0 + (_GLF_IDENTITY(0.1, (true ? 0.1 : _GLF_FUZZED(-9.9))))))), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(0.1, 0.0 + (_GLF_IDENTITY(0.1, (true ? 0.1 : _GLF_FUZZED(-9.9))))))), 1.0, 1.0))) : _GLF_FUZZED(-4.6))), float((injectionSwitch)[0]), bool(true))))), _GLF_FUZZED(-0.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             continue;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         subgroupAll(false);
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, int(ivec4(4, 1, 1, 1))));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(false);
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) * 1));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, false)))))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) * 1)) / 1) | (0))) | (0)))))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - 0))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - 0))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - 0))))), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - 0))))), false), true), true)))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - 0))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - 0))))), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - 0))))), false), true), true))))))))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     atomicStore(buf[_GLF_struct_replacement_13.virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | (4)));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))))
      continue;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
