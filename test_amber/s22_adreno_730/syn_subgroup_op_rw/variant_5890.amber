#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) || false) || ((false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false))))))) || false), false || (! (false)))))))))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(bvec2(false, true))) && true, bool(bvec2((_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)) && true, true)))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0)))), true && (_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0))))))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)))) && true))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 + (_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(-78664))))), 0 ^ (_GLF_IDENTITY(int(7), 0 + (int(_GLF_IDENTITY(7, 0 | (7))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat2(3884.8656, -4624.1667, 5.8, 3343.1029))) : 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.5)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.5)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.5)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0)))), injectionSwitch)).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), false || (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))), false, false)))))))))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))) || false))) && true))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ ((1 ^ 1) ^ 0))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, true)))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, true))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.4, 861.672)) : injectionSwitch)).y))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(((1 ^ 1) ^ 0), (((1 ^ 1) ^ 0)) * 1) | 1)); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(1, clamp(1, 1, 1)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.y = subgroup_base;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, true)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), true && (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false))), true)), true && (bool(bvec2(false, true)))))))), false || (false))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, clamp(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz.y + _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id))))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((~ (subgroup_local_id))), min(uint((~ (subgroup_local_id))), uint((~ (subgroup_local_id)))))), (0u | 0u) + (uint(_GLF_IDENTITY(uint((~ (subgroup_local_id))), min(uint((~ (subgroup_local_id))), uint((~ (subgroup_local_id)))))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 ^ (_GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4))))))) >> _GLF_IDENTITY(int(4), int(4))) | 0)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4)))), 0 ^ (_GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(4), int(4))))))) >> _GLF_IDENTITY(int(4), int(4))) | 0))))); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (vec2(injectionSwitch.y, 0.0)) / vec2(1.0, 1.0))))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (vec2(injectionSwitch.y, 0.0)) / vec2(1.0, 1.0))))), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (vec2(injectionSwitch.y, 0.0)) / vec2(1.0, 1.0))))), false, false), false)))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (67195 & _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.4, -294.390)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x)), _GLF_IDENTITY(max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x))), min(max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x))), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x)), min(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x))))) + 0), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), ! (_GLF_IDENTITY(! (_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))), bool(bvec3(! (! (_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))), true, true)))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.z = virtual_gid;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.y + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) | ((subgroup_local_id)))) << 0u), (true ? (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))))) >> 0u)) | ((subgroup_local_id)))) << 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) | ((subgroup_local_id)))) << 0u), (true ? (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_local_id)), (uint(uint(subgroup_local_id))) / 1u), max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))))) >> 0u)) | ((subgroup_local_id)))) << 0u) : _GLF_FUZZED(workgroup_base)))) * 1u))) | (subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.x = next_virtual_gid;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz) ^ uvec3(0u, 0u, 0u)))).z, (0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))))) * 1u)) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.z))], 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, min(64, 64)), 64))), max(~ (64), ~ (64))))), 2);
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w = read;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
      }
    }
   if((subgroup_local_id % 2) == 0)
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           subgroupAll(false);
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
        {
        }
       else
        {
         atomicStore(buf[GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.x], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) << 0)), 4, 64, 4);
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (0 >> _GLF_IDENTITY(int(1), int(1)))))) * 1)) ^ 0)), (false ? _GLF_FUZZED(findMSB(workgroup_id)) : (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), ~ (~ (0 >> _GLF_IDENTITY(int(1), int(1)))))) * 1)) ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)) ^ uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, uvec4(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread[0], GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread[1], GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread[2], GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread[3])))).xyz.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), max((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ((GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)) | uvec4(0u, 0u, 0u, 0u))).xyz, 1u))).x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, clamp(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)), (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(_GLF_IDENTITY(66987u, (66987u) >> 0u), 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), clamp((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)))).xyz, 1u))).x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(66987u, 184601u, 59783u, 96303u), (_GLF_IDENTITY(uvec4(66987u, 184601u, 59783u, 96303u), (uvec4(66987u, 184601u, 59783u, 96303u)) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))) ^ uvec4(0u, 0u, 0u, 0u))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)), (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) ^ uvec4(0u, 0u, 0u, 0u))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, 1u))).x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w))) / 1u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, 1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(183245u, 54580u, 68365u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, 1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, 1u))))))))).x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY((true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u))), max(_GLF_IDENTITY((true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u))), clamp((true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u))), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u))), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u))))), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, 1u))).x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w))) / 1u), 0u | (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (_GLF_IDENTITY(true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)), (true ? true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)) : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), (_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), uvec4(0u, 0u, 0u, 0u) | ((GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)))) / uvec4(1u, 1u, 1u, 1u))).xyz, 1u))).x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(_GLF_IDENTITY(66987u, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(66987u, (66987u) * 1u))), 184601u, 59783u, 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (true ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : _GLF_FUZZED(uvec4(159948u, 398u, 7809u, 136123u)))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz, _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz)))))), 1u))).x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w))) / 1u))), (0u | 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.x, (true ? _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, _GLF_IDENTITY(96303u, 0u ^ (_GLF_IDENTITY(96303u, (96303u) - 0u))))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz.x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w))), (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.x, (true ? _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, _GLF_IDENTITY(184601u, (184601u) - ((0u | 0u) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(59783u, (59783u) | (59783u)), 96303u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_FUZZED(uvec4(66987u, 184601u, _GLF_IDENTITY(59783u, (true ? _GLF_IDENTITY(59783u, (59783u) >> 0u) : _GLF_FUZZED(subgroup_local_id))), 96303u)), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u))))) << uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u))) | (_GLF_FUZZED(uvec4(66987u, 184601u, _GLF_IDENTITY(59783u, max(59783u, 59783u)), 96303u))), ((_GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), min(_GLF_FUZZED(uvec4(66987u, 184601u, _GLF_IDENTITY(59783u, 0u ^ (_GLF_IDENTITY(59783u, (false ? _GLF_FUZZED(workgroup_id) : 59783u)))), 96303u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))))), clamp(_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, _GLF_IDENTITY(96303u, ~ (~ (_GLF_IDENTITY(96303u, (96303u) + 0u)))))), _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u))))) << uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) | (_GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)))) * uvec4(1u, 1u, 1u, 1u))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz.x : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w)))))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(66987u, _GLF_IDENTITY(184601u, (184601u) | (184601u)), 59783u, 96303u), max(uvec4(66987u, 184601u, _GLF_IDENTITY(_GLF_IDENTITY(59783u, min(59783u, 59783u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(59783u, min(59783u, 59783u)))), 96303u), uvec4(66987u, 184601u, 59783u, 96303u)))) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), ~ (~ ((GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))).xyz.x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w))), min(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.x, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(66987u, _GLF_IDENTITY(184601u, (true ? 184601u : _GLF_FUZZED(workgroup_id))), 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(66987u, _GLF_IDENTITY(184601u, (true ? 184601u : _GLF_FUZZED(workgroup_id))), 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), (false ? _GLF_FUZZED(uvec4(130986u, 123719u, 24496u, 79078u)) : (false ? _GLF_FUZZED(uvec4(66987u, _GLF_IDENTITY(184601u, (true ? 184601u : _GLF_FUZZED(workgroup_id))), 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(66987u, _GLF_IDENTITY(184601u, (true ? 184601u : _GLF_FUZZED(workgroup_id))), 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), max((false ? _GLF_FUZZED(uvec4(66987u, _GLF_IDENTITY(184601u, (true ? 184601u : _GLF_FUZZED(workgroup_id))), 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread), (false ? _GLF_FUZZED(uvec4(66987u, _GLF_IDENTITY(184601u, (true ? 184601u : _GLF_FUZZED(workgroup_id))), 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) | ((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz.x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w))), _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.x, (true ? _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(uvec4(66987u, 184601u, 59783u, 96303u)) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)).xyz.x : _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w))))))), _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | (0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gid.r), clamp(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gid.r), uint(uvec4(_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gid.r), 1u, 0u, 1u))), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gid.r), (_GLF_IDENTITY(_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gid.r), (_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gid.r)) >> 0u)) + 0u), _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gid.r))) : 0u)), 0u, 0u)), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread, (false ? _GLF_FUZZED(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread) : GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread)))).xyz.x, GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.x))], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), (false ? _GLF_FUZZED((_injected_loop_counter & -82975)) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))), 0)) - ivec2(0, 0)))))) : _GLF_FUZZED(15544), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), (false ? _GLF_FUZZED((_injected_loop_counter & -82975)) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))), 0)) - ivec2(0, 0)))))) : _GLF_FUZZED(15544), max(true ? _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), (false ? _GLF_FUZZED((_injected_loop_counter & -82975)) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))), 0)) - ivec2(0, 0)))))) : _GLF_FUZZED(15544), true ? _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), (false ? _GLF_FUZZED((_injected_loop_counter & -82975)) : _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))), 0)) - ivec2(0, 0)))))) : _GLF_FUZZED(15544)))) * 1))))))))), uint(uvec3(uint(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), ((_GLF_IDENTITY(1, (1) | (1)))) ^ 0)) : _GLF_FUZZED(15544))))))), ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) | (1)))) : _GLF_FUZZED(15544)), (true ? (true ? _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) | (1)))) : _GLF_FUZZED(15544)) : _GLF_FUZZED(-96196))))))))))))), 1u, 0u))), 4, 64, 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x < injectionSwitch.y))))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.1) : injectionSwitch.y))))))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       subgroupBarrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.xyz.z], GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidsubgroup_basevirtual_gidread.w, _GLF_IDENTITY(4, int(ivec3(4, (0 >> _GLF_IDENTITY(int(2), int(2))), 1))), 64, 4);
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
