#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, exp(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0 * (min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(932.558)), float(_GLF_IDENTITY(1.0 * (min(injectionSwitch.y, injectionSwitch.y)), 0.0 + (1.0 * (min(injectionSwitch.y, injectionSwitch.y))))), bool(true)))))), _GLF_IDENTITY((float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) / 1.0, clamp((float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(12.11) : injectionSwitch.y)))), injectionSwitch.y)))) / 1.0, (float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) / 1.0, (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)))), float(mat3(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4563.7216)))))), (float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-64.27)), float(1.0), bool(true))), 1.0)))))))), false || (bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), _GLF_IDENTITY(false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false || (bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true)))))))) && true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.3)), bool(false))))), 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! ((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! ((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) || false))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), (bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) && true))), true, false)))))) && true))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), _GLF_IDENTITY(false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false || (bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true)))))))) && true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.3)), bool(false))))), 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! ((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! ((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) || false))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), (bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) && true))), true, false)))))) && true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))) && true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + abs(vec2(0.0, 0.0))).y))))))) && true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(671.268, -11.74))) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), false))))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false || (bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, (-6.0) / exp(0.0)))), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(true)))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, (-6.0) / exp(0.0)))), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(true)))))))), true))))), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(true))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(true)))))) && true)))))), true))) && true)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4352.1441))))), 0.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-2689.3199), _GLF_FUZZED(3.4), _GLF_FUZZED(-14.13)), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[2]), bvec3(true, true, true))), vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(944.210) : 0.0)), 1.0, 0.0))))))))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false))), true, false, true)))) && true)))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8690.3432)), float(injectionSwitch.y), bool(true))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6.0)), min(float(_GLF_FUZZED(-6.0)), float(_GLF_FUZZED(-6.0)))), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0))))), float(mat2x3(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.6)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y))))))), bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.0)), float(1.0), bool(true)))), float(_GLF_FUZZED(-79.40)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), injectionSwitch.y))))))), true)))), false))))), bool(_GLF_IDENTITY(bvec2((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))) && true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))))))))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(23.06), _GLF_FUZZED(-8.8)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))) && true)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false)))) && true, ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, false)))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false)))) && true)))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6.0)), (_GLF_IDENTITY(float(_GLF_FUZZED(-6.0)), (false ? _GLF_FUZZED(91.78) : float(_GLF_FUZZED(-6.0))))) - abs(0.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (vec4(injectionSwitch.y, 0.0, 0.0, 1.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0)))))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0), (true ? vec3(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0) : _GLF_FUZZED(vec3(-504.988, -5.0, -8.0)))))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(-5.4)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), clamp(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))))), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))), (float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0), 1.0, 1.0)) * mat4(1.0)))) - 0.0)))), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / _GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), (abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) * 1.0)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3616.1866)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / _GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), float(mat3(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-9.3) : float(float(_GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), float(mat3(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))))) && true))))))), false || _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.1) : injectionSwitch.x)))) > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) && true)))), ! (! ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 1.0), (vec4(injectionSwitch.y, 0.0, 0.0, 1.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0)))))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0), (true ? vec3(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0) : _GLF_FUZZED(vec3(-504.988, -5.0, -8.0)))))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(-5.4)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), clamp(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0)) * _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))))), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))), (float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(0.0), 1.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0), 1.0, 1.0)) * mat4(1.0)))) - 0.0)))), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / _GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), (abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) * 1.0)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3616.1866)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / _GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), float(mat3(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-9.3) : float(float(_GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), float(mat3(abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))))) && true))))))), false || _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.1) : injectionSwitch.x)))) > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) && true))))))) && true))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, false))))))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), (bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) || false)), ! (! ((_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) || false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, false))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))), false))))) && true), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))), max((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))), false || _GLF_IDENTITY((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))), false || (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - sin(0.0))) / 1.0), 1.0, 0.0)))), ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(1.0))))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(1.0))))), 1.0), (vec2(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(1.0))))), 1.0)) + vec2(0.0, 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(1.0)))))))), 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)), (float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0))) - 0.0))))))) / 1.0)))))), false || (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) + 0.0))))))))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uintBitsToFloat(14096u)) : 0.0)), 0.0, 1.0)), min(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), max(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))), false || (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) - sin(0.0))), ((_GLF_IDENTITY(0.0, (0.0) - sin(0.0)))) - 0.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))))), 1.0 * (_GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))))), (float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0))))))) * 1.0))))), 1.0, 0.0)))), ((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), min(float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))), clamp(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(1.0))))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-70.84) : 1.0)), 1.0)), 0.0)), (mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(1.0))))), 1.0), (vec2(float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(1.0))))), 1.0)) + vec2(0.0, 0.0)))), float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (mat4x3(mat3x2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))) * mat4(1.0)))))))), 1.0)), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))) / abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(vec3(-148.303, 8.3, -30.58)) : mat3(1.0) * (vec3(0.0, 1.0, 0.0)))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)), (float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0))), 0.0))) - 0.0))))))) / 1.0)))))), false || (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) + 0.0))))))))) && true))))))) && true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0))), (float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0)))) + 0.0), max(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0))), (float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0)))) + 0.0), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0))), (float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0)))) + 0.0)))))) < injectionSwitch.y))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(normalize(-1.3)))), injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) && (! (_GLF_IDENTITY(false, true && (false)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) && (! (_GLF_IDENTITY(false, true && (false)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) && (! (_GLF_IDENTITY(false, true && (false)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false)))))), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-631.917))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-631.917))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-631.917))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-631.917))) < injectionSwitch.y)))) || false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-631.917))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(-631.917))) < injectionSwitch.y))))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))))), false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))) && true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)), cos(0.0), 0.0, 0.0)), min(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, 0.0)), float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, 0.0)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u | 0u)), 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec4((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))), (uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))))) - uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))), (uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))))) - uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), (true ? uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED((uvec4(10188u, 48012u, 126405u, 179315u) % uvec4(21601u, 120266u, 190463u, 149519u))))), ~ (~ (uvec4((gl_NumWorkGroups), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u), (uvec2(_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u)) << uvec2(0u, 0u))))))))))))).x, min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), (~ (uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)))))) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))))))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), (uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (_GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) | ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))) << uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) / uvec4(1u, 1u, 1u, 1u))))), ((uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(uvec4(76020u, 138941u, 8002u, 174679u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) / uvec4(1u, 1u, 1u, 1u)))))) - uvec4(0u, 0u, 0u, 0u)))))).x, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(75592u, 73462u, 174852u)), (_GLF_FUZZED(uvec3(75592u, 73462u, 174852u))) << uvec3(0u, 0u, 0u)) : gl_NumWorkGroups))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), (uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))) | uvec3(0u, 0u, 0u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (true ? 0u | (0u) : _GLF_FUZZED(subgroup_size)))), 0u) | ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(uvec4(uvec3(gl_NumWorkGroups), 1u)))))))))), uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4930.7310)), vec2(_GLF_FUZZED(7.0), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[1], 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))).x) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, 174852u)) : gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(75592u, 73462u, _GLF_IDENTITY(174852u, (_GLF_IDENTITY(174852u, max(_GLF_IDENTITY(174852u, ~ (~ (174852u))), 174852u))) | 0u))) : gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))), uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1679.4817)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), injectionSwitch.y))), (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec4((gl_NumWorkGroups), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (0u ^ 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)), (true ? float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)) : _GLF_FUZZED(7918.3492))))))))), ~ (~ (uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))).x))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (0u | 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x) / 1.0)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), workgroup_base + subgroup_base)), (workgroup_base + subgroup_base) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) << 0u))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) - 0), 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), 0u | ((next_virtual_gid) >> 0u)))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), ! (! (! (_GLF_IDENTITY((false), ((false)) && true))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true))))))), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true))))))), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true))))))), false, true)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), bool(bool(bool(bvec4(_GLF_DEAD(false), true, true, false)))))))))))))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, true, false)))))), true))))))), false, true)))))))))) || false) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true, true)), false, false), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true, true)), false, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), (read) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, (read) >> 0u)) | (_GLF_IDENTITY(read, _GLF_IDENTITY((read), ((read)) | 0u) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(read, (read) >> 0u)) | (_GLF_IDENTITY(read, (read) >> 0u)), ((_GLF_IDENTITY(read, (read) >> 0u)) | (_GLF_IDENTITY(read, (read) >> 0u))) | ((_GLF_IDENTITY(read, (read) >> 0u)) | (_GLF_IDENTITY(read, (read) >> 0u))))) - 0u), max((_GLF_IDENTITY(read, (read) >> 0u)) | (_GLF_IDENTITY(read, (read) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(read, (read) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) | (_GLF_IDENTITY(read, _GLF_IDENTITY((read) >> 0u, ((read) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(2596u) : 1u)) * _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uint((0u))), min(uint(uint((0u))), uint(uint(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ((0u)) + 0u)))), (~ (_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ((0u)) + 0u))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ((0u)) + 0u)))), (~ (_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ((0u)) + 0u))))) | 0u), uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ((0u)) + 0u)))), (~ (_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ((0u)) + 0u))))) | 0u), 0u)))) >> 0u)))))))))) - (0u ^ 0u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) >> 0u), clamp(_GLF_IDENTITY(read, (read) >> _GLF_IDENTITY(0u, (0u) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(read, (read) >> 0u), _GLF_IDENTITY(read, (read) >> 0u)))) | (_GLF_IDENTITY(read, _GLF_IDENTITY((read), ((_GLF_IDENTITY(read, (read) >> 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)), (_GLF_IDENTITY(read, _GLF_IDENTITY((read), 0u ^ ((read))) >> 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(read, (read) >> 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(read, (read) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u))))), 0u + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(read, (read) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u))))), (~ ((_GLF_IDENTITY(read, (read) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(read, (read) >> 0u))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(read, (read) >> 0u))), uint(uvec2(~ ((_GLF_IDENTITY(read, (read) >> 0u))), (0u | 0u))))) + 0u), min(~ ((_GLF_IDENTITY(read, _GLF_IDENTITY((read), clamp((read), _GLF_IDENTITY((read), clamp((read), _GLF_IDENTITY((read), ((read)) ^ 0u), (read))), (read))) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) | (1u)), 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) | (1u)), 0u), uvec3(uvec3(uvec3(0u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) | (1u)), 0u)))))))))))), ~ ((_GLF_IDENTITY(read, (read) >> 0u)))))), ~ (~ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(read, (_GLF_IDENTITY(read, uint(uvec3(read, 0u, 0u)))) >> 0u))), min(~ ((_GLF_IDENTITY(read, _GLF_IDENTITY((read), clamp((read), _GLF_IDENTITY((read), clamp((read), _GLF_IDENTITY((read), ((read)) ^ 0u), (read))), (read))) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))), ~ ((_GLF_IDENTITY(read, (read) >> 0u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) >> 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read, _GLF_IDENTITY((read) >> 0u, ((read) >> 0u) << 0u)), 1u)), (uint(uvec2(_GLF_IDENTITY(read, (read) >> 0u), 1u))) << 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, 0u ^ (_GLF_IDENTITY(read, (false ? _GLF_FUZZED(187140u) : read)))), read, read)), (read) >> 0u))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
