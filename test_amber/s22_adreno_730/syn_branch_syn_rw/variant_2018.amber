#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(49887))), float(0.0), bool(true))), 1.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)))).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.7)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.7)), _GLF_IDENTITY(bool(false), false || (bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.7)), bool(false)), mix(float(mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.7)), bool(false))), float(_GLF_FUZZED(79.71)), bool(false)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(54.70)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(4.7)), bool(false))))))) && true)) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) || false)) || false))))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))) || false) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))), true))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (uvec3(26066u, 67683u, 52147u) & (uvec3(1u, 1u, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u))) | (_GLF_IDENTITY(1u, (1u) | (1u))))) ^ uvec3(1u, 1u, 1u))) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) * _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u))), 1u), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u))), 1u)))), (_GLF_IDENTITY((gl_WorkGroupID) * uvec3(1u, 1u, 1u), ((gl_WorkGroupID) * uvec3(1u, 1u, 1u)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))))).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(13.25, 666.825)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED((workgroup_base * 106520u))))) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(atomicXor(workgroup_base, subgroup_local_id)), 0u + (_GLF_FUZZED(atomicXor(workgroup_base, subgroup_local_id)))))), (0u | 0u) | _GLF_IDENTITY((0u), min((0u), (0u))))) | (0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(atomicXor(workgroup_base, subgroup_local_id)))), (0u | 0u) | (0u))) | (0u))), (0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(atomicXor(workgroup_base, subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u), (true ? 0u | 0u : _GLF_FUZZED(packSnorm2x16(asin(injectionSwitch)))))) | (0u))) | (0u)))) / 1u))) ^ (uvec3(subgroup_id, 1u, 0u))))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7491.5899)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.4)))))))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size) | ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size)));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (true ? _GLF_IDENTITY(uint(1), 0u + (uint(1))) : _GLF_FUZZED(workgroup_size))), 4, 64, 4);
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false))))))))))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) || false))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((false))))) || false))), false || ((bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((false))))) || false))))) && true)))))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, (false) || false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true))))))))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), false, false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(540.781), _GLF_FUZZED(-331.817)), bvec2(false, false))).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))))), bool(bvec3(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))), (! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)), (true ? vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)) : _GLF_FUZZED(injectionSwitch))))).x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))) && true)))))))))), ((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)), (true ? vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)) : _GLF_FUZZED(injectionSwitch))))).x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))) && true))))))))))) || false)) || false))), false, false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))))), bool(bvec3(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))), (! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)), (true ? vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)) : _GLF_FUZZED(injectionSwitch))))).x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))) && true)))))))))), ((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)), (true ? vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)) : _GLF_FUZZED(injectionSwitch))))).x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))) && true))))))))))) || false)) || false))), false, false)))))), false || (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))))), bool(bvec3(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))), (! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)), (true ? vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)) : _GLF_FUZZED(injectionSwitch))))).x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))) && true)))))))))), ((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)), (true ? vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)) : _GLF_FUZZED(injectionSwitch))))).x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))) && true))))))))))) || false)) || false))), false, false)))))), bool(bool(bool(bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))))), bool(bvec3(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))), (! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)), (true ? vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)) : _GLF_FUZZED(injectionSwitch))))).x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))) && true)))))))))), ((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)), (true ? vec2(vec3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), 0.0)) : _GLF_FUZZED(injectionSwitch))))).x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))) && true))))))))))) || false)) || false))), false, false)))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0), mat3x4(_GLF_IDENTITY(mat3x4(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0)), transpose(transpose(mat3x4(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0)))))))), clamp(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0), mat3x4(_GLF_IDENTITY(mat3x4(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0)), transpose(transpose(mat3x4(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0)))))))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0), mat3x4(_GLF_IDENTITY(mat3x4(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0)), transpose(transpose(mat3x4(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0)))))))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0), mat3x4(_GLF_IDENTITY(mat3x4(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0)), transpose(transpose(mat3x4(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0))), tan(0.0), 1.0, 0.0))))))))))), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)))))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) * abs(1.0)), 0.0)), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, log(1.0), 0.0), (true ? vec4(1.0, 0.0, log(1.0), 0.0) : _GLF_FUZZED(vec4(597.562, -664.292, 55.91, -3.8))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), max(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) * abs(1.0)), 0.0)), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, log(1.0), 0.0), (true ? vec4(1.0, 0.0, log(1.0), 0.0) : _GLF_FUZZED(vec4(597.562, -664.292, 55.91, -3.8))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) * abs(1.0)), 0.0)), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, log(1.0), 0.0), (true ? vec4(1.0, 0.0, log(1.0), 0.0) : _GLF_FUZZED(vec4(597.562, -664.292, 55.91, -3.8))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), float(vec2(float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)))))))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(log(1.0), (log(1.0)) * abs(1.0)), 0.0)), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, log(1.0), 0.0), (true ? vec4(1.0, 0.0, log(1.0), 0.0) : _GLF_FUZZED(vec4(597.562, -664.292, 55.91, -3.8))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0))), min(float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, length(0.0), 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat2(vec2(injectionSwitch[0], injectionSwitch[1]), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, length(0.0), 1.0)))))).x, cos(0.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.1) : 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) / 1.0), clamp(1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) / 1.0), clamp(1.0, 1.0, 1.0)))))))), 1.0), float(mat4x3(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) / 1.0), clamp(1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) / 1.0), clamp(1.0, 1.0, 1.0)))))))), 1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0)))))))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), (0.0))) - 0.0), log(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), float(mat4x2(dot(vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (false ? _GLF_FUZZED(660.143) : min(0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (true ? normalize(vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(max(vec4(-95.08, -865.432, -863.167, -5208.1881), -38.17)))))))), float(mat2x4(injectionSwitch.x, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.4)), float(1.0), bool(true))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), (_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), (round(length(normalize(vec3(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), sqrt(1.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, sqrt(0.0), sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(1.0), 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))))) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2.2), (_GLF_FUZZED(-2.2)) - 0.0)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(7.4)), bool(false)), mix(float(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(7.4)), bool(false)), min(mix(float(1.0), float(_GLF_FUZZED(7.4)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.4)), bool(false))))), float(_GLF_FUZZED(6.0)), bool(false)))), 1.0)), 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), float(mat4x2(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(471.831))), 0.0), vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))) - 0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))), 0.0, log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0))), min(1.0, 1.0))), 0.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(58.01) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.4)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.8)), bool(false)))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 1.0)))))))), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, cos(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(log(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.7) : log(1.0))), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), (mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), (mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-1.2)), bool(false)))), 0.0, log(1.0), 0.0)), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, length(vec3(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, length(vec3(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 0.0))) * (0.0)), log(1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(float(0.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_FUZZED((vec3(-3880.0135, 3524.4171, 725.027).z * vec2(4014.1164, -33.50).t))), float(0.0), bool(true))), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), bool(false)), clamp(mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), bool(false)), mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), bool(false)), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), bool(false)), mix(float(mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), bool(false))), float(_GLF_FUZZED(61.34)), bool(false)))))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), bool(false)), clamp(mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), bool(false)), mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(bool(bool(false)))), false || (bool(bool(bool(bool(false)))))))), (bool(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(bool(bool(false)))), false || (bool(bool(bool(bool(false))))))))) && true))), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), bool(false)), mix(float(mix(float(0.0), float(_GLF_FUZZED(((-1.3 * 3.7)))), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(61.34, 0.0 + (61.34)))), bool(false))))))) - 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(cos(0.0), max(cos(0.0), _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(-108.580))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), _GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(0.9)), float(float(0.0)), bool(true)))) / 1.0))), float(_GLF_FUZZED(-4.0)), bool(false))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(-8410.2982)) : 0.0)), 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) + vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26.69) : log(1.0))), log(1.0))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26.69) : log(1.0))), log(1.0))), 0.0, 0.0, 1.0, cos(0.0), 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0)), float(mat3x4(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), float(mat3x2(log(1.0), 1.0, 1.0, 1.0, 0.0, sqrt(0.0))))))), clamp(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26.69) : log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, (1.0) + tan(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(5239.4803)), bool(false))), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), log(1.0), 0.0)), max(float(mat4x2(_GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.8) : 1.0)), 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), log(1.0), 0.0)), float(mat4x2(_GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(6.7, -6295.8322, 34.75, 7.3)))), vec4(0.0, 0.0, 1.0, 0.0))), log(1.0), 0.0)))))))), log(1.0))), 0.0, 0.0, 1.0, cos(0.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0)), 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), clamp(float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))), 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), sqrt(0.0), 0.0), (true ? mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), sqrt(0.0), 0.0) : _GLF_FUZZED(mat2x4(-64.71, -6.2, 1.3, -78.20, -99.98, 31.74, -34.42, 3568.6969))))), (true ? float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), sqrt(0.0), 0.0), (true ? mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), sqrt(0.0), 0.0) : _GLF_FUZZED(mat2x4(-64.71, -6.2, 1.3, -78.20, -99.98, 31.74, -34.42, 3568.6969))))) : _GLF_FUZZED(6.8))))))))), mix(float(float(mat4x2(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(1.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED((-160.666 - -6771.4244))), bool(false))))), 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))))), float(mat3(float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(cos(0.0), max(cos(0.0), _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(-108.580))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), _GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(0.9)), float(float(0.0)), bool(true)))) / 1.0))), float(_GLF_FUZZED(-4.0)), bool(false))), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(-8410.2982)) : 0.0)), 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) + vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26.69) : log(1.0))), log(1.0))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26.69) : log(1.0))), log(1.0))), 0.0, 0.0, 1.0, cos(0.0), 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0)), float(mat3x4(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), float(float(_GLF_IDENTITY(log(1.0), float(mat3x2(log(1.0), 1.0, 1.0, 1.0, 0.0, sqrt(0.0))))))), clamp(log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26.69) : log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, (1.0) + tan(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(5239.4803)), bool(false))), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), log(1.0), 0.0)), max(float(mat4x2(_GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.8) : 1.0)), 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), log(1.0), 0.0)), float(mat4x2(_GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(6.7, -6295.8322, 34.75, 7.3)))), vec4(0.0, 0.0, 1.0, 0.0))), log(1.0), 0.0)))))))), log(1.0))), 0.0, 0.0, 1.0, cos(0.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0)), 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), clamp(float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))), 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), sqrt(0.0), 0.0), (true ? mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), sqrt(0.0), 0.0) : _GLF_FUZZED(mat2x4(-64.71, -6.2, 1.3, -78.20, -99.98, 31.74, -34.42, 3568.6969))))), (true ? float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), sqrt(0.0), 0.0), (true ? mat2x4(1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), sqrt(0.0), 0.0) : _GLF_FUZZED(mat2x4(-64.71, -6.2, 1.3, -78.20, -99.98, 31.74, -34.42, 3568.6969))))) : _GLF_FUZZED(6.8))))))))), mix(float(float(mat4x2(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(1.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED((-160.666 - -6771.4244))), bool(false))))), 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))))), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(sqrt(0.0), 1.0))))))) / 1.0), float(mat2x4(injectionSwitch.x, cos(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(512.965)), bool(false))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(26.18)))))), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(1.0, 0.0, log(1.0), 0.0), clamp(vec4(1.0, 0.0, log(1.0), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, log(1.0), 0.0), _GLF_IDENTITY((vec4(1.0, 0.0, log(1.0), 0.0)) * mat4(1.0), ((vec4(1.0, 0.0, log(1.0), 0.0)) * mat4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(vec4(1.0, 0.0, log(1.0), 0.0), (false ? _GLF_FUZZED(vec4(-1.1, -4.7, -9334.7155, 8.5)) : _GLF_IDENTITY(vec4(1.0, 0.0, log(1.0), 0.0), (false ? _GLF_FUZZED(vec4(573.109, -631.964, 5.5, -1481.3777)) : vec4(1.0, 0.0, log(1.0), 0.0)))))))), float(mat4x2(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (true ? min(0.0, 0.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id))))))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, sin(0.0), exp(0.0), 1.0, 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, sin(0.0), exp(0.0), 1.0, 1.0, 0.0))) - 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(18.42))), (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(18.42)))) + 0.0))), 0.0), vec4(1.0, 0.0, log(1.0), 0.0)), float(mat4x2(dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 0.0), (vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 0.0, log(1.0), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(7.7)))))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))) > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, true)))) || false)), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)))))))))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (false ? _GLF_FUZZED(vec2(8.1, 4456.7081)) : vec2(mat2(injectionSwitch, 0.0, 0.0)))))) - vec2(0.0, 0.0)).y))), true, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.1))), sin(0.0), 0.0))).x > injectionSwitch.y))), true, true), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), true), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), true), false))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), true), false))))), true)), true))))))))), bool(bvec4(bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false, true, false))))) || false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
           for(int _injected_loop_counter = (0 & 90231); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) << 0) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (_GLF_IDENTITY(~ (int(6)), ~ (~ (~ (int(6))))))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (0 << _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) ^ 0))), (~ (_GLF_IDENTITY(1, ~ (~ (1))))) | (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) >> (0 & 54154))))))))), int(1)))); _GLF_IDENTITY(_injected_loop_counter ++, (0 ^ 0) + (_injected_loop_counter ++)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ _GLF_IDENTITY(0, 0 | (0))))))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-63.07)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 + (_GLF_IDENTITY((0), 0 ^ ((0))))) / 1), _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, (_GLF_IDENTITY((0) - 0, 0 | ((0) - 0))) << 0)), _GLF_IDENTITY(0, (0) | (0))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(0, 1 * (0)))), (0) / 1)) - 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) - 0), _GLF_IDENTITY(0, (0) | (0)))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(false)))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), 0)), (int(ivec2(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), 0))) - 0))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(int(1)))), int(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(1, int(int(1)))), 1), (ivec2(1, 1) ^ ivec2(1, 1)) ^ (ivec2(int(_GLF_IDENTITY(1, int(int(1)))), 1)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, int(int(1))))), ~ (~ (int(int(_GLF_IDENTITY(1, int(int(1)))))))), int(int(_GLF_IDENTITY(1, int(int(1))))), int(int(_GLF_IDENTITY(1, int(int(1)))))), (clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, int(int(1))))), ~ (~ (int(int(_GLF_IDENTITY(1, int(int(1)))))))), int(int(_GLF_IDENTITY(1, int(int(1))))), int(int(_GLF_IDENTITY(1, int(int(1))))))) << 0)))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(0.0), log(1.0), abs(sqrt(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0))), min(float(mat4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(0.0), log(1.0), abs(sqrt(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(0.0), log(1.0), abs(sqrt(1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)))))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5167.1055)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(9807.1824, -265.308)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y)))), true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, true)))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(42.75, 707.869).g)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), true && (! (_GLF_IDENTITY(true, false || (true)))))))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(142.902), _GLF_FUZZED(80.77)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((6.5 - -196.663))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   do
    {
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(1 | 1, clamp(1 | 1, 1 | 1, 1 | 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.0 - -5384.1170))), float(injectionSwitch.x), bool(true)))) + 0.0) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))))), false, true)))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), true, false))))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))))))), true, false, true)))));
   for(int _injected_loop_counter = (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)) ? _GLF_FUZZED(-6.9) : _GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), 0 | (~ (4)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ (1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), (~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))) << 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (~ (virtual_gid)))))), _GLF_IDENTITY(1u, max(1u, 1u)))))))), _GLF_IDENTITY(uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec4(2276u, 170354u, 103221u, 66370u) * read).r) : (virtual_gid))), (virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uint(virtual_gid))))) | (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(virtual_gid)))))))), uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uint(virtual_gid))))) | (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(virtual_gid)))))))), (true ? ~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uint(virtual_gid))))) | (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(virtual_gid)))))))) : _GLF_FUZZED(subgroup_size))), 1u))), ~ (~ (~ (virtual_gid)))), 1u)))), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY(~ (~ (~ (virtual_gid))), ~ (~ (_GLF_IDENTITY(~ (~ (~ (virtual_gid))), (~ (~ (~ (virtual_gid)))) << 0u))))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(virtual_gid), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), clamp(_GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), (uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), (uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))))), clamp(uint(_GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), clamp(_GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), (uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), (uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))))), uint(_GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), clamp(_GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), (uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), (uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))))), uint(_GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), clamp(_GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), (uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u)), (uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(uint(virtual_gid), 0u, 0u, (0u | 0u))))))))), (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uint(virtual_gid))))) | (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(virtual_gid)))))))), ~ (~ (~ (virtual_gid)))), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), _GLF_IDENTITY(0u | (uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uint(virtual_gid))))) | (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(virtual_gid)))))))), ~ (~ (~ (virtual_gid)))), 1u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u | (uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uint(virtual_gid))))) | (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(virtual_gid)))))))), ~ (~ (~ (virtual_gid)))), 1u))), (0u | (uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uint(virtual_gid))))) | (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(virtual_gid)))))))), ~ (~ (~ (virtual_gid)))), 1u)))) | (0u | (uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uint(virtual_gid))))) | (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(virtual_gid)))))))), ~ (~ (~ (virtual_gid)))), 1u)))))))))))), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) - (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(_GLF_IDENTITY(7u, max(7u, 7u)))))))), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))))))), (_GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) - (_GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))))), (virtual_gid)))) - 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY(~ (~ (~ (virtual_gid))), clamp(_GLF_IDENTITY(~ (~ (~ (virtual_gid))), min(~ (~ (~ (virtual_gid))), _GLF_IDENTITY(~ (~ (~ (virtual_gid))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) / 1u)), ((_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) / 1u))) ^ 0u), (_GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) / 1u))))) / 1u))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (virtual_gid), (true ? ~ (virtual_gid) : _GLF_FUZZED(virtual_gid))))), min((~ (_GLF_IDENTITY(~ (virtual_gid), (true ? ~ (virtual_gid) : _GLF_FUZZED(virtual_gid))))), (~ (_GLF_IDENTITY(~ (virtual_gid), (true ? ~ (virtual_gid) : _GLF_FUZZED(virtual_gid))))))), (~ (~ (~ (virtual_gid)))) + 0u), ~ (~ (~ (virtual_gid)))))), 1u)), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))) | (uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), max(uint(virtual_gid), uint(virtual_gid)))) | 0u)), (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uint(virtual_gid))))) | (_GLF_IDENTITY(uint(uint(virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(uint(virtual_gid)), 0u + (uint(uint(virtual_gid)))))))))), ~ (~ (~ (virtual_gid)))), 1u))))))))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 0u)), _GLF_IDENTITY((true ? uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(read) : 1u))) | 0u))) * (~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))) | 0u)) : _GLF_FUZZED(num_workgroup))))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u), min(uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u), uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u)))), uint(uvec2(uint(_GLF_IDENTITY(uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u), min(uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u), uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u)))), 0u)))), _GLF_IDENTITY(~ (~ (~ (virtual_gid))), min(~ (~ (~ (virtual_gid))), ~ (~ (~ (virtual_gid)))))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup))))), 1u))))) ^ 0u))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(read) : 1u))) | 0u))) * (~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))) | 0u)) : _GLF_FUZZED(num_workgroup))))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u), min(uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u), uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u)))), uint(uvec2(uint(_GLF_IDENTITY(uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u), min(uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u), uvec4((virtual_gid), ((0u | 0u) ^ 1u), 1u, 1u)))), 0u)))), _GLF_IDENTITY(~ (~ (~ (virtual_gid))), min(~ (~ (~ (virtual_gid))), ~ (~ (~ (virtual_gid)))))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup))))), 1u))))) ^ 0u))))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) : _GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY(((true ? uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), 1u * (~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup))))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), (true ? (~ (virtual_gid)) : _GLF_FUZZED(subgroup_base)))) + 0u) : _GLF_FUZZED(num_workgroup))))), 1u))))) ^ 0u))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), 1u * (~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup))))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), (true ? (~ (virtual_gid)) : _GLF_FUZZED(subgroup_base)))) + 0u) : _GLF_FUZZED(num_workgroup))))), 1u))))) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), 1u * (~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup))))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), (true ? (~ (virtual_gid)) : _GLF_FUZZED(subgroup_base)))) + 0u) : _GLF_FUZZED(num_workgroup))))), 1u))))) ^ 0u))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), 1u * (~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup))))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), (true ? (~ (virtual_gid)) : _GLF_FUZZED(subgroup_base)))) + 0u) : _GLF_FUZZED(num_workgroup))))), 1u))))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), 1u * (~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup))))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (true ? ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), (true ? (~ (virtual_gid)) : _GLF_FUZZED(subgroup_base)))) + 0u) : _GLF_FUZZED(num_workgroup))))), 1u))))) ^ 0u))))))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 0u)) : _GLF_FUZZED(workgroup_size))) << 0u, (((true ? uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))), 1u * (~ _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ _GLF_IDENTITY((~ (~ (virtual_gid))), ~ (~ ((~ (~ (virtual_gid))))))), 1u)), min(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ _GLF_IDENTITY((~ (~ (virtual_gid))), ~ (~ ((~ (~ (virtual_gid))))))), 1u)), uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ _GLF_IDENTITY((~ (~ (virtual_gid))), ~ (~ ((~ (~ (virtual_gid))))))), 1u)))), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 1u)))) >> 0u))), (true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup))))), 1u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (virtual_gid)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((~ (virtual_gid))), max(~ ((~ (virtual_gid))), ~ ((~ (virtual_gid)))))), ((_GLF_IDENTITY(~ ((~ (virtual_gid))), max(~ ((~ (virtual_gid))), ~ ((~ (virtual_gid))))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup)), 0u | ((true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup)))), min((true ? ~ (~ (virtual_gid)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))), _GLF_FUZZED(num_workgroup)))), (true ? ~ (~ (virtual_gid)) : _GLF_FUZZED(num_workgroup))))))), 1u))))) ^ 0u))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 0u)) : _GLF_FUZZED(workgroup_size))) << 0u) / 1u)))))], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, 0, 0, 0)), (_GLF_IDENTITY(int(ivec4(64, 0, 0, 0)), max(int(ivec4(64, 0, 0, 0)), int(ivec4(64, 0, 0, 0))))) ^ 0), int(ivec4(_GLF_IDENTITY(int(ivec4(64, 0, 0, 0)), ~ (~ (int(ivec4(64, 0, 0, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), 0 ^ (_GLF_IDENTITY(max(0, 0), (max(0, 0)) + 0)))), 0 ^ (0)))) ^ 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), (true ? ~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), min(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) - ivec4(0, 0, 0, 0)), ivec4(0, 0, 1, 0))))) ^ (0)))) ^ 0)) : _GLF_FUZZED(31104))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), (true ? _GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), (~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0))) | 0)) | (~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)))) : _GLF_FUZZED(31104))))), _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), _GLF_IDENTITY((true ? ~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)) : _GLF_FUZZED(31104)), ((true ? ~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)) : _GLF_FUZZED(31104))) | 0)))))))), 1, 1))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, 0, 0, 0)), max(int(ivec4(64, 0, 0, 0)), int(ivec4(64, 0, 0, 0)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(ivec4(64, 0, 0, 0)), max(int(ivec4(64, 0, 0, 0)), int(ivec4(64, 0, 0, 0)))), 1, (1 & 1))), int(ivec3(int(ivec3(_GLF_IDENTITY(int(ivec4(64, 0, 0, 0)), max(int(ivec4(64, 0, 0, 0)), int(ivec4(64, 0, 0, 0)))), 1, (1 & 1))), 1, 1))))) ^ 0), int(ivec4(int(ivec4(64, 0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), (true ? int(ivec3(0, 0, 0)) : _GLF_FUZZED(-65374)))), 0)) ^ (0)), (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 0)), (true ? int(ivec3(0, 0, 0)) : _GLF_FUZZED(-65374)))), 0)) ^ (0))) >> (0 ^ 0)))) ^ 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), (_GLF_IDENTITY(((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), (false ? _GLF_FUZZED(-87329) : ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0))))) - 0), (true ? ~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), int(int(0 ^ (0))))))) ^ 0)) : _GLF_FUZZED(31104))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), (true ? ~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)) : _GLF_FUZZED(31104))))), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0))), ((false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) | ((false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0))), int(ivec2((false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0))), 0)))))) ^ 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), (true ? ~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)) : _GLF_FUZZED(31104)))), (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0)), (true ? ~ ((_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ 0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(34285) : _GLF_IDENTITY(0, 0 ^ (0)))) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-32782) : 0))) / 1))) : _GLF_FUZZED(31104))))) / 1)))))), 1, 1)))))), 4);
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bool(bool(bool(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
    }
   do
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - (0 << _GLF_IDENTITY(int(4), int(4)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-29007))))), (false ? _GLF_FUZZED(-40715) : _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-29007))))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-29007)))))) >> 0))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
