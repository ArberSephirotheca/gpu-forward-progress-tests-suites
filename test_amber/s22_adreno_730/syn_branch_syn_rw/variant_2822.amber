#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_49 {
 uvec3 _f0;
} ;

struct _GLF_struct_47 {
 mat4 _f0;
 mat3x2 _f1;
 uvec3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_46 {
 mat2x4 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 uvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_45 {
 vec3 _f0;
 uvec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_44 {
 vec2 _f0;
 uint _f1;
 ivec4 _f2;
 int _f3;
 uvec3 _f4;
 mat4 _f5;
 bool _f6;
} ;

struct _GLF_struct_43 {
 mat2 _f0;
 mat3x2 _f1;
 ivec3 _f2;
 vec2 _f3;
 uint _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_48 {
 _GLF_struct_43 _f0;
 _GLF_struct_44 _f1;
 mat4x2 _f2;
 _GLF_struct_45 _f3;
 bvec3 _f4;
 _GLF_struct_46 _f5;
 _GLF_struct_47 _f6;
} ;

struct _GLF_struct_50 {
 _GLF_struct_48 _f0;
 uvec4 _f1;
 vec3 _f2;
 mat3x4 _f3;
 _GLF_struct_49 _f4;
 uint subgroup_local_id;
} ;

struct _GLF_struct_40 {
 vec4 _f0;
} ;

struct _GLF_struct_39 {
 mat4x2 _f0;
} ;

struct _GLF_struct_38 {
 ivec4 _f0;
 vec4 _f1;
 mat3 _f2;
 uint _f3;
} ;

struct _GLF_struct_37 {
 ivec2 _f0;
 mat3x4 _f1;
 bool _f2;
 vec4 _f3;
} ;

struct _GLF_struct_41 {
 _GLF_struct_37 _f0;
 float _f1;
 _GLF_struct_38 _f2;
 _GLF_struct_39 _f3;
 _GLF_struct_40 _f4;
} ;

struct _GLF_struct_35 {
 uint _f0;
 mat4x2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_36 {
 _GLF_struct_35 _f0;
} ;

struct _GLF_struct_42 {
 ivec2 _f0;
 uint subgroup_size;
 mat4x2 _f1;
 uvec2 _f2;
 uint _f3;
 _GLF_struct_36 _f4;
 _GLF_struct_41 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_32 {
 mat2x4 _f0;
 mat4 _f1;
 mat4 _f2;
 mat4x2 _f3;
 uint _f4;
 vec3 _f5;
} ;

struct _GLF_struct_31 {
 mat4x3 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_30 {
 ivec2 _f0;
 float _f1;
 uvec4 _f2;
 uint _f3;
 int _f4;
} ;

struct _GLF_struct_29 {
 ivec3 _f0;
 vec2 _f1;
 mat2 _f2;
 uvec2 _f3;
 mat4x3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_33 {
 _GLF_struct_29 _f0;
 _GLF_struct_30 _f1;
 _GLF_struct_31 _f2;
 bool _f3;
 _GLF_struct_32 _f4;
} ;

struct _GLF_struct_27 {
 vec2 _f0;
 mat4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_26 {
 mat4x3 _f0;
 bvec2 _f1;
 ivec2 _f2;
 vec2 _f3;
 mat3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 _GLF_struct_27 _f1;
} ;

struct _GLF_struct_34 {
 _GLF_struct_28 _f0;
 mat2x3 _f1;
 ivec3 _f2;
 bvec2 _f3;
 _GLF_struct_33 _f4;
 bool _f5;
 uint next_virtual_gid;
} ;

struct _GLF_struct_23 {
 uint _f0;
 bvec2 _f1;
 mat2x4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_22 {
 bool _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 uvec3 _f4;
 bvec2 _f5;
 int _f6;
} ;

struct _GLF_struct_21 {
 mat2x3 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 ivec4 _f3;
 vec2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
 uvec4 _f1;
 uvec3 _f2;
 uvec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 mat3x4 _f2;
 bvec4 _f3;
 _GLF_struct_22 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_18 {
 int _f0;
 uvec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_17 {
 bvec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_16 {
 bool _f0;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 uvec3 _f1;
 uvec2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 vec4 _f1;
 vec4 _f2;
 bvec4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 uvec2 _f1;
 uvec2 _f2;
 bool _f3;
 bvec4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 ivec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_25 {
 _GLF_struct_11 _f0;
 uint virtual_gid;
 _GLF_struct_12 _f1;
 mat2 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_19 _f5;
 _GLF_struct_24 _f6;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 bvec4 _f1;
 mat2x3 _f2;
 uint _f3;
 mat4x3 _f4;
 bool _f5;
 mat3 _f6;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 uint workgroup_size;
 mat3x4 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 bvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 mat3 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 bvec3 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 bvec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 uint _f1;
 mat2x4 _f2;
 _GLF_struct_0 _f3;
 mat4x2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_7 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_42 _GLF_struct_replacement_42 = _GLF_struct_42(ivec2(1), gl_SubgroupSize, mat4x2(1.0), uvec2(1u), 1u, _GLF_struct_36(_GLF_struct_35(1u, mat4x2(1.0), mat2(1.0))), _GLF_struct_41(_GLF_struct_37(ivec2(1), mat3x4(1.0), true, vec4(1.0)), 1.0, _GLF_struct_38(ivec4(1), vec4(1.0), mat3(1.0), 1u), _GLF_struct_39(mat4x2(1.0)), _GLF_struct_40(vec4(1.0))), bvec3(true));
 _GLF_struct_50 _GLF_struct_replacement_50 = _GLF_struct_50(_GLF_struct_48(_GLF_struct_43(mat2(1.0), mat3x2(1.0), ivec3(1), vec2(1.0), 1u, ivec4(1)), _GLF_struct_44(vec2(1.0), 1u, ivec4(1), 1, uvec3(1u), mat4(1.0), true), mat4x2(1.0), _GLF_struct_45(vec3(1.0), uvec4(1u), bvec3(true)), bvec3(true), _GLF_struct_46(mat2x4(1.0), mat2x3(1.0), uvec4(1u), uvec3(1u), 1u), _GLF_struct_47(mat4(1.0), mat3x2(1.0), uvec3(1u), bvec2(true))), uvec4(1u), vec3(1.0), mat3x4(1.0), _GLF_struct_49(uvec3(1u)), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(uvec3(1u), 1u, mat2x4(1.0), _GLF_struct_0(mat3x4(1.0), mat3(1.0), ivec3(1)), mat4x2(1.0), _GLF_struct_3(_GLF_struct_1(mat4x3(1.0), bvec3(true), mat3x2(1.0), uvec4(1u), bvec2(true), uvec3(1u)), _GLF_struct_2(bvec4(true), mat3x2(1.0))), _GLF_struct_7(mat4x2(1.0), _GLF_struct_4(uvec2(1u), gl_WorkGroupSize.x, mat3x4(1.0), mat4x2(1.0), mat2x3(1.0), bvec4(true), vec3(1.0)), _GLF_struct_5(bvec2(true), uvec4(1u)), mat3(1.0), _GLF_struct_6(bvec4(true), bvec4(true), mat2x3(1.0), 1u, mat4x3(1.0), true, mat3(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_8._f6._f1.workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_42.subgroup_size;
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_11(mat4(1.0), _GLF_struct_9(bvec4(true), uvec3(1u)), _GLF_struct_10(mat3(1.0), uvec2(1u), uvec2(1u), true, bvec4(true), bvec4(true)), ivec2(1), bvec4(true)), workgroup_base + subgroup_base + _GLF_struct_replacement_50.subgroup_local_id, _GLF_struct_12(bvec3(true), mat2(1.0)), mat2(1.0), _GLF_struct_14(_GLF_struct_13(bvec2(true), uvec3(1u), uvec2(1u), vec4(1.0)), vec4(1.0), vec4(1.0), bvec4(true), vec2(1.0)), _GLF_struct_15(vec2(1.0), vec2(1.0)), _GLF_struct_19(_GLF_struct_16(true), mat4x2(1.0), mat4x2(1.0), mat3x4(1.0), _GLF_struct_17(bvec3(true), uvec4(1u)), _GLF_struct_18(1, uvec4(1u), bvec3(true))), _GLF_struct_24(_GLF_struct_20(uvec4(1u), uvec4(1u), uvec3(1u), uvec4(1u), ivec2(1)), _GLF_struct_21(mat2x3(1.0), mat3x4(1.0), ivec3(1), ivec4(1), vec2(1.0), bvec4(true)), mat3x4(1.0), bvec4(true), _GLF_struct_22(true, mat3x4(1.0), mat3x4(1.0), mat3x2(1.0), uvec3(1u), bvec2(true), 1), _GLF_struct_23(1u, bvec2(true), mat2x4(1.0), mat3x2(1.0))));
 _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_28(_GLF_struct_26(mat4x3(1.0), bvec2(true), ivec2(1), vec2(1.0), mat3(1.0), mat4(1.0)), _GLF_struct_27(vec2(1.0), mat4(1.0), mat3x4(1.0))), mat2x3(1.0), ivec3(1), bvec2(true), _GLF_struct_33(_GLF_struct_29(ivec3(1), vec2(1.0), mat2(1.0), uvec2(1u), mat4x3(1.0), ivec2(1)), _GLF_struct_30(ivec2(1), 1.0, uvec4(1u), 1u, 1), _GLF_struct_31(mat4x3(1.0), mat2x4(1.0), ivec4(1), mat2x3(1.0)), true, _GLF_struct_32(mat2x4(1.0), mat4(1.0), mat4(1.0), mat4x2(1.0), 1u, vec3(1.0))), true, workgroup_base + subgroup_base + ((_GLF_struct_replacement_50.subgroup_local_id + 1) % _GLF_struct_replacement_42.subgroup_size));
 uint read = atomicLoad(buf[_GLF_struct_replacement_25.virtual_gid], 4, 64, 2);
 if((_GLF_struct_replacement_50.subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[_GLF_struct_replacement_34.next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_34.next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(checker[_GLF_struct_replacement_25.virtual_gid], read, 4, 64, 4);
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
