#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 uint read;
 ivec2 _f0;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 uvec2 _f1;
 bvec3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 bvec2 _f1;
 mat3 _f2;
 vec2 _f3;
 uvec3 _f4;
 _GLF_struct_1 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 _GLF_struct_3 _f1;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat3x2(1.0), _GLF_struct_3(_GLF_struct_0(uvec4(1u), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u))))) >> uvec2(0u, 0u)), bvec3(true), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(mat4(-689.036, 95.04, -768.996, 8703.7920, -2357.0734, 80.14, -7870.6664, 11.13, 6.9, 4.3, -8.1, -9.2, 1227.8797, -0.7, 8488.7683, -3.4))))), bvec2(true), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(57285))), float(1.0), bool(true))), _GLF_IDENTITY(float(vec4(1.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(float(69609))), float(float(vec4(1.0, 1.0, 0.0, log(1.0)))), bool(true))))), vec2(1.0), uvec3(1u), _GLF_struct_1(mat2x3(1.0)), _GLF_struct_2(vec2(1.0), mat4x3(1.0), uvec3(1u), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), (float(vec4(1.0, 1.0, 1.0, 0.0))) / 1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), (float(vec4(1.0, 1.0, 1.0, 0.0))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), (float(vec4(1.0, 1.0, 1.0, 0.0))) / 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), (float(vec4(1.0, 1.0, 1.0, 0.0))) / 1.0))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 0.0)), (float(vec4(1.0, 1.0, 1.0, 0.0))) / 1.0))))))))), gl_SubgroupID);
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(false, true && (false))), false), bvec2(bvec4(bvec2(false || (false), false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec4(bvec2(false || (false), false), true, false)))), true))))))), true, true)), false || (bool(bvec4(false, false, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), true, _GLF_IDENTITY(true, false || (true))))))) && true))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id), ~ (~ (clamp(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), 0u | (~ (workgroup_id))))), _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))), workgroup_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true))), (! ((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)))))) && true)))) || _GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) || false), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true))), (! ((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true)))) || false)))), _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true))), (! ((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true)))) || false))))) && true, ! (! ((! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), (! ((_GLF_WRAPPED_IF_FALSE(false)))) && true))), (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)))))), (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))))) && true)))) || false))))) && _GLF_IDENTITY(true, ! (! (true)))))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat2x3(6639.6760, -281.431, -695.043, -7.8, 99.96, -293.776) - 419.666)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat2x3(6639.6760, -281.431, -695.043, -7.8, 99.96, -293.776) - 419.666)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat2x3(6639.6760, -281.431, -695.043, -7.8, 99.96, -293.776) - 419.666)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat2x3(6639.6760, -281.431, -695.043, -7.8, 99.96, -293.776) - 419.666))))))) / 1.0)) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat2x3(6639.6760, -281.431, -695.043, -7.8, 99.96, -293.776) - 419.666)))))), (false ? _GLF_FUZZED(30.59) : _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat2x3(6639.6760, -281.431, -695.043, -7.8, 99.96, -293.776) - 419.666)))))))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED((mat2x3(6639.6760, -281.431, -695.043, -7.8, 99.96, -293.776) - 419.666)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, false))) && true)), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, false))) && true)), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, false))) && true)), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, false))) && true, ! (! ((bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))), true, false))) && true))))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-0.0, -4.1)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4)))), _GLF_IDENTITY(float(_GLF_FUZZED(-1808.5095)), clamp(float(_GLF_FUZZED(-1808.5095)), float(_GLF_FUZZED(-1808.5095)), _GLF_IDENTITY(float(_GLF_FUZZED(-1808.5095)), (float(_GLF_FUZZED(-1808.5095))) / 1.0))), bool(false))) > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))) || false))))) || false)))))));
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_4.subgroup_id * subgroup_size), ((_GLF_struct_replacement_4.subgroup_id * subgroup_size)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, (9690u & (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (uvec4(0u, 0u, 0u, (9690u & (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, (9690u & (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (uvec4(0u, 0u, 0u, (9690u & (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) / uvec4(1u, 1u, 1u, 1u)))) << 0u)) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(1u, 1u)))))) - 0u), _GLF_struct_replacement_4.subgroup_id * subgroup_size));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) | (workgroup_base + subgroup_base + subgroup_local_id));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, 1u)))) | (subgroup_base)))), (0u | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) ^ (subgroup_base)), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, 1u)))) | (subgroup_base)))), (0u | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) ^ (subgroup_base)), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, 1u)))) | (subgroup_base)))), (0u | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) ^ (subgroup_base)), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), 0u)))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, 1u)))) | (subgroup_base)))), (0u | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) ^ (subgroup_base)), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), 0u)))))))))))) - 0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x))) ^ (subgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * _GLF_ONE(1.0, injectionSwitch.y))) * 1.0)) * (injectionSwitch.x))))) ^ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)) << 0u, ((~ (subgroup_base)) << 0u) / 1u)))))), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, 0u + (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))), 0u))))))) - 0u), 0u + (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x))) ^ (subgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * _GLF_ONE(1.0, injectionSwitch.y))) * 1.0)) * (injectionSwitch.x))))) ^ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)) << 0u, ((~ (subgroup_base)) << 0u) / 1u)))))), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, 0u + (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))), 0u))))))) - 0u), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x))) ^ (subgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * _GLF_ONE(1.0, injectionSwitch.y))) * 1.0)) * (injectionSwitch.x))))) ^ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)) << 0u, ((~ (subgroup_base)) << 0u) / 1u)))))), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, 0u + (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))), 0u))))))) - 0u)) | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) << 0u)))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x))) ^ (subgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * _GLF_ONE(1.0, injectionSwitch.y))) * 1.0)) * (injectionSwitch.x))))) ^ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)) << 0u, ((~ (subgroup_base)) << 0u) / 1u)))))), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, 0u + (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))), 0u))))))) - 0u))))), (1u ^ 1u) ^ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, 0u ^ (0u)) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.6))), injectionSwitch.x))) ^ (subgroup_base)), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(subgroup_base, (0u | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))) ^ (subgroup_base)), 0u))))))) - 0u)))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)));
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(ivec2(1), clamp(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0)), ivec2(1), _GLF_IDENTITY(ivec2(1), max(_GLF_IDENTITY(ivec2(1), min(ivec2(1), _GLF_IDENTITY(ivec2(1), min(ivec2(1), _GLF_IDENTITY(ivec2(1), ivec2(ivec2(ivec2(1)))))))), ivec2(1))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))) == 0)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
      }
     else
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], uint(_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, (1 & 1), 0, 1), min(_GLF_IDENTITY(ivec4(4, (1 & 1), 0, 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec4(4385, -33163, -80638, 3340)) : ivec4(4, (1 & 1), 0, 1), (false ? _GLF_FUZZED(ivec4(4385, -33163, -80638, 3340)) : ivec4(4, (1 & 1), 0, 1)) >> ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), ivec4(4, (1 & 1), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) >> 0), 0)), 1))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, min(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, max(_GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, clamp(false ? _GLF_FUZZED(55760) : 4, _GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, (false ? _GLF_FUZZED(55760) : 4) >> 0), false ? _GLF_FUZZED(55760) : 4)), false ? _GLF_FUZZED(55760) : 4)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, _GLF_IDENTITY(int(ivec2(false ? _GLF_FUZZED(55760) : 4, 0)), min(int(ivec2(false ? _GLF_FUZZED(55760) : 4, 0)), int(ivec2(false ? _GLF_FUZZED(55760) : 4, 0)))))), ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(55760) : 4)) | ((false ? _GLF_FUZZED(55760) : 4)))), false ? _GLF_FUZZED(55760) : 4)))))), (_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), int(_GLF_IDENTITY(ivec4(4, (1 & 1), _GLF_IDENTITY(0, int(int(0))), 1), min(_GLF_IDENTITY(ivec4(4, (1 & 1), 0, 1), (false ? _GLF_FUZZED(ivec4(4385, -33163, -80638, 3340)) : ivec4(4, (1 & 1), 0, 1))), ivec4(4, (1 & 1), 0, 1))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(55760) : _GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, max(_GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, clamp(false ? _GLF_FUZZED(55760) : 4, _GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, (_GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, (_GLF_IDENTITY(false ? _GLF_FUZZED(55760) : 4, (false ? _GLF_FUZZED(-26701) : false ? _GLF_FUZZED(55760) : 4))) | (false ? _GLF_FUZZED(55760) : 4))) >> 0), false ? _GLF_FUZZED(55760) : 4)), false ? _GLF_FUZZED(55760) : 4)), 0 ^ _GLF_IDENTITY((false ? _GLF_FUZZED(55760) : 4), ((false ? _GLF_FUZZED(55760) : 4)) | ((false ? _GLF_FUZZED(55760) : 4)))), false ? _GLF_FUZZED(55760) : 4))))))) | 0), max(4, 4)), 64, 4);
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         do
          {
           atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(mat2(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) - vec2(0.0, 0.0)), (injectionSwitch) + vec2(0.0, 0.0))), 1.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))) : _GLF_FUZZED(vec2(3.7, 41.62)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED(-80.01), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))[1]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))[0], _GLF_FUZZED(-642.008)), bvec2(true, false)))))))) + vec2(0.0, 0.0)).y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-154.425)), bvec2(true, false)))), (min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))))))[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED(-154.425)), bvec2(true, false))))) / cos(vec2(0.0, 0.0))))[0], float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))), min(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))), (false ? _GLF_FUZZED(62.51) : _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7))))))))))), clamp(float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), _GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), injectionSwitch[1])).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-154.425)), bvec2(true, false)))), (min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))))))[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED(-154.425)), bvec2(true, false))))) / cos(vec2(0.0, 0.0))))[0], float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))), min(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))), (false ? _GLF_FUZZED(62.51) : _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7))))))))))), clamp(float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), _GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), injectionSwitch[1])).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-154.425)), bvec2(true, false)))), (min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))))))[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED(-154.425)), bvec2(true, false))))) / cos(vec2(0.0, 0.0))))[0], float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))), min(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))), (false ? _GLF_FUZZED(62.51) : _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7))))))))))), clamp(float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), _GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), injectionSwitch[1])).x > injectionSwitch.y), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-154.425)), bvec2(true, false)))), (min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))))))[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED(-154.425)), bvec2(true, false))))) / cos(vec2(0.0, 0.0))))[0], float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))), min(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))), (false ? _GLF_FUZZED(62.51) : _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7))))))))))), clamp(float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), _GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), injectionSwitch[1])).x > injectionSwitch.y), true, true), true)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2819.4679), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4672.2872)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), false, true, false))))), (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-154.425)), bvec2(true, false)))))[0], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-154.425)), bvec2(true, false)))))[0], max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-154.425)), bvec2(true, false)))))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(639.146), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-154.425)), bvec2(true, false)))))[0])))), float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-0.7), determinant(mat2(1.0, 0.0, 0.0, abs(1.0))) * (_GLF_FUZZED(-0.7)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))), (_GLF_IDENTITY(false ? _GLF_FUZZED(62.51) : _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.7), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-0.7), 0.0 + (_GLF_FUZZED(-0.7))))), max(_GLF_FUZZED(_GLF_IDENTITY(-0.7, mix(float(-0.7), float(_GLF_FUZZED(20.62)), bool(false)))), _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7))))))), min(false ? _GLF_FUZZED(62.51) : _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.7), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-0.7), 0.0 + (_GLF_FUZZED(-0.7))))), max(_GLF_FUZZED(_GLF_IDENTITY(-0.7, mix(float(-0.7), float(_GLF_FUZZED(20.62)), bool(false)))), _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7))))))), false ? _GLF_FUZZED(62.51) : _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.7), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-0.7), 0.0 + (_GLF_FUZZED(-0.7))))), max(_GLF_FUZZED(_GLF_IDENTITY(-0.7, mix(float(-0.7), float(_GLF_FUZZED(20.62)), bool(false)))), _GLF_IDENTITY(_GLF_FUZZED(-0.7), max(_GLF_FUZZED(-0.7), _GLF_FUZZED(-0.7))))))))))))), clamp(float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? injectionSwitch[0] : _GLF_FUZZED(_GLF_IDENTITY(-0.7, (-0.7) - 0.0)))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7))))), float(float(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), _GLF_IDENTITY(injectionSwitch[0], float(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-0.7)))))))), injectionSwitch[1])).x > injectionSwitch.y)))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, abs(1.0), cos(0.0), 0.0, abs(0.0), 0.0)), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, abs(1.0), cos(0.0), 0.0, abs(0.0), 0.0))) - vec2(0.0, 0.0))).x > injectionSwitch.y))));
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) ? _GLF_FUZZED(27.19) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) ? _GLF_FUZZED(27.19) : injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) ? _GLF_FUZZED(27.19) : injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) ? _GLF_FUZZED(27.19) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) ? _GLF_FUZZED(27.19) : injectionSwitch.y))))) * 1.0), injectionSwitch.y, injectionSwitch.y))))) || false)));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2((! (_GLF_IDENTITY(false, ! (! (false))))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_5.read, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) * 1), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78808) : 1))), 1))))), max(_GLF_IDENTITY(((_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78808) : 1))), 1))))), (((_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78808) : 1))), 1)))))) - 0), ((_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78808) : 1))), 1))))))), clamp(((_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))))), ((_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, max(1, 1))), 1))))), ((_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), (_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1)))) << (0 >> _GLF_IDENTITY(int(8), int(8)))), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), 1))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), 1))), 0)), max(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), 1))), 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), 1))), 0)), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), 1))), 0)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), 1))), 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, min((4) * 1, (4) * 1))), 1))), 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), int(ivec2(_GLF_IDENTITY(4, (4) * 1), 1))), int(ivec2(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec2(2694, -18319)[0])))), 1))), 1)))))))) | (4)), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, max(64, 64)), 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
