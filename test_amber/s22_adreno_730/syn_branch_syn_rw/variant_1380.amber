#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))), (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 1 * (0)), 0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) / 1))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))), int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))) ^ 0))))))
    {
     case 66:
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), false, false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(true, ! (! (true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       {
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            return;
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        uvec3(45007u, 42445u, 152086u);
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, true, true)))))))))
         {
          if(_GLF_DEAD(false))
           barrier();
          return;
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          return;
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        mat3 _GLF_SWITCH_0_0v[80], _GLF_SWITCH_0_1v;
        if(_GLF_DEAD(false))
         barrier();
        (uvec3(165883u, 130393u, 87721u) - subgroup_id);
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          return;
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
         barrier();
        ivec3 _GLF_SWITCH_0_2v;
        if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        mat4(mat4x2(-9.9, -88.69, -5.8, _GLF_IDENTITY(1980.9237, float(float(1980.9237))), _GLF_IDENTITY(_GLF_IDENTITY(7.6, (_GLF_IDENTITY(7.6, max(7.6, 7.6))) / 1.0), min(7.6, _GLF_IDENTITY(7.6, mix(float(7.6), float(_GLF_FUZZED((-9637.6875))), bool(false))))), _GLF_IDENTITY(365.006, float(_GLF_IDENTITY(vec2(365.006, 1.0), (true ? vec2(365.006, 1.0) : _GLF_FUZZED(vec2(-5.7, -35.80)))))), -7.0, 138.520));
        while(true)
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          (transpose(mat3x4(9.1, _GLF_IDENTITY(-0.5, float(mat3x4(-0.5, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), 766.273, -41.10, -63.99, 5.9, -3.8, -94.26, -3.7, _GLF_IDENTITY(-797.119, min(-797.119, -797.119)), -370.943, 4.6)) - -562.030);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, false))))))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              break;
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          mat4x2((- mat2x3(-4715.3865, -2.2, -372.742, 8.7, -67.79, _GLF_IDENTITY(1.1, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4389.5688), min(_GLF_FUZZED(-4389.5688), _GLF_FUZZED(-4389.5688)))), float(1.1), bool(true))))));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          false;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
             barrier();
            continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          -31563;
          uvec4 _GLF_SWITCH_0_3v[1], _GLF_SWITCH_0_4v[99], _GLF_SWITCH_0_5v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          ivec4 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
          if(_GLF_DEAD(false))
           barrier();
         }
        ivec4(-69436, 42140, 23336, 60971);
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        if(_GLF_DEAD(false))
         barrier();
       }
       if((mat2x3(-6609.8440, -7.7, 35.00, -7588.2126, -2239.2883, -26.63) , false))
        {
         while((mat4x2(3.5, 405.137, -529.383, -1.1, 8515.7362, -2.0, 0.5, -3.1) == mat4x2(4.0, -9.8, -9.8, -9522.7619, 41.01, 4.2, _GLF_IDENTITY(-27.51, (-27.51) / 1.0), 38.51)))
          {
           if(_GLF_DEAD(false))
            barrier();
           subgroup_id;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           mat2x3 _GLF_SWITCH_0_9v[20];
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-6070.5876), _GLF_FUZZED(8.1)), bvec2(false, false))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), (injectionSwitch) * mat2(1.0)))).y), _GLF_IDENTITY(true, ! (! (true))), true, true))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           vec3(536.550, -398.891, 12.42);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec4(true, false, true, true);
           if(_GLF_DEAD(false))
            return;
           vec4(_GLF_IDENTITY(-9916.9532, max(_GLF_IDENTITY(-9916.9532, _GLF_IDENTITY(0.0 + (-9916.9532), float(mat3x2(0.0 + (-9916.9532), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, abs(0.0))))), _GLF_IDENTITY(-9916.9532, max(-9916.9532, -9916.9532)))), 2.0, 9.2, -8.9);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))))))
            barrier();
           mat3x2(vec2(3.6, -7.6), vec2(157.805, -480.559), _GLF_IDENTITY(clamp(injectionSwitch, vec2(898.309, -0.1), vec2(5.7, 408.552)), max(clamp(injectionSwitch, vec2(898.309, -0.1), _GLF_IDENTITY(vec2(5.7, 408.552), _GLF_IDENTITY((vec2(5.7, 408.552)) * mat2(1.0), (true ? (vec2(5.7, 408.552)) * mat2(1.0) : _GLF_FUZZED(vec2(-0.5, -9.4)))))), _GLF_IDENTITY(clamp(injectionSwitch, vec2(898.309, -0.1), vec2(5.7, 408.552)), vec2(_GLF_IDENTITY(mat2x4(clamp(injectionSwitch, vec2(898.309, -0.1), vec2(5.7, 408.552)), 1.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), (mat2x4(clamp(injectionSwitch, vec2(898.309, -0.1), vec2(5.7, 408.552)), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))));
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           uvec3(144245u, 139117u, 191052u);
           (mat2x3(-381.664, 848.694, -687.130, 0.2, 0.8, 6.1) / -7996.7874);
           if(_GLF_DEAD(false))
            return;
           vec3 _GLF_SWITCH_0_10v;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         mat3x2 _GLF_SWITCH_0_11v;
         findMSB(ivec4(_GLF_IDENTITY(54528, (54528) | 0), -60271, -64865, 38199));
         while((injectionSwitch != injectionSwitch))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           equal(bvec4(false, false, true, false), bvec4(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))))))), false, false));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           ivec3 _GLF_SWITCH_0_12v[76], _GLF_SWITCH_0_13v[46], _GLF_SWITCH_0_14v;
           if(_GLF_DEAD(false))
            barrier();
           uint _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           ;
           (mat2x3(34.58, _GLF_IDENTITY(-1.6, mix(float(_GLF_FUZZED(-937.452)), float(-1.6), bool(true))), 4.4, -98.15, 5.7, 6.9) - mat2x3(453.680, 8.9, _GLF_IDENTITY(-60.36, min(-60.36, -60.36)), _GLF_IDENTITY(2.7, (true ? 2.7 : _GLF_FUZZED(step(66.50, -0.4)))), _GLF_IDENTITY(-4226.4414, max(-4226.4414, -4226.4414)), -2.2));
           float _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         mat3x4 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         while(false)
          {
           (ivec2(-84041, -65808) * (vec3(_GLF_IDENTITY(-9.3, mix(float(_GLF_FUZZED((33.65 + -75.37))), float(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (-9.3) - 0.0), -9.3)), -9.3))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 5.2, 5.9) , ivec2(82981, 50986)));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           mat3 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec2(true, false);
           mat3x2(-4.1, -5339.1232, 6557.0188, 2.5, 5.1, 0.2);
           if(_GLF_DEAD(false))
            barrier();
           ;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))
            barrier();
           mat4 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[7], _GLF_SWITCH_0_28v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         bvec4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[26];
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         acosh(vec4(6.0, -35.56, -6.9, -1626.6817));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         int _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
        }
       for(uvec2 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v[89], _GLF_SWITCH_0_35v; false; _GLF_IDENTITY(mat2(4.0, -927.626, -66.31, -5.8), mat2(mat4x2(mat2(4.0, -927.626, -66.31, -5.8)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       mat2 _GLF_SWITCH_0_36v[72], _GLF_SWITCH_0_37v[74], _GLF_SWITCH_0_38v[90];
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       ivec3 _GLF_SWITCH_0_39v;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       ivec2(55182, -10294);
       for(       uvec4(171899u, 153285u, 7400u, 169823u);
 true; lessThanEqual(uvec2(28167u, 120678u), (uvec2(50424u, 17073u) / (subgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         mat3x2(9565.5042, 25.43, 36.43, _GLF_IDENTITY(-3.0, mix(float(_GLF_IDENTITY(-3.0, max(-3.0, -3.0))), float(_GLF_FUZZED(-189.718)), bool(false))), 457.005, -7.5);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         bvec4(true, false, false, true);
         while((mat4x2(7759.0029, 299.729, -3.3, -2.1, -9451.8852, -0.3, -22.84, 2.5) != mat4x2(80.54, 31.91, 4.0, -9.4, 417.713, _GLF_IDENTITY(-4747.3658, (_GLF_IDENTITY(-4747.3658, (true ? -4747.3658 : _GLF_FUZZED(810.512)))) + tan(0.0)), -80.66, 3.2)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, (false) && true)))))) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) || false)), bool(bvec3((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) || false)), true, false))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) || false)))))), false))))))
          barrier();
         (- ivec2(-60596, 83403));
         bitfieldReverse(min(mix(ivec2(_GLF_IDENTITY(-22579, int(int(-22579))), -7745), ivec2(64203, -26881), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), -2919));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
          barrier();
        }
       ;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 24:
     _GLF_IDENTITY((workgroup_base % read), (true ? (workgroup_base % read) : _GLF_FUZZED(workgroup_base)));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     case 5:
     if(_GLF_DEAD(false))
      barrier();
     for(     bvec3(false, true, false);
 bvec2(true, true).y; workgroup_base)
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          continue;
         while(true)
          {
           if(_GLF_DEAD(false))
            barrier();
           mat3x2 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           ;
           ivec2 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v[89];
           matrixCompMult(mat2x3(-69.02, 0.6, 611.391, 9303.1055, 41.74, -50.40), mat2x3(-7.6, -5.9, -2807.6494, -272.406, -8.3, 6.5));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
            }
           (mat3(9218.0091, 6169.1672, -88.09, -6.7, -0.1, 64.30, _GLF_IDENTITY(_GLF_IDENTITY(-479.571, (-479.571) - 0.0), min(_GLF_IDENTITY(-479.571, (-479.571) - 0.0), _GLF_IDENTITY(-479.571, (-479.571) - 0.0))), 6.1, 2396.9089) != _GLF_IDENTITY(mat3(74.17, 7.4, _GLF_IDENTITY(-0.4, (-0.4) - sin(0.0)), _GLF_IDENTITY(33.09, min(33.09, _GLF_IDENTITY(33.09, (false ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(33.09, clamp(33.09, 33.09, 33.09)))))), 2.9, 23.21, -1.6, 5.2, 3584.5720), (true ? _GLF_IDENTITY(mat3(74.17, 7.4, _GLF_IDENTITY(-0.4, (-0.4) - sin(0.0)), _GLF_IDENTITY(33.09, min(33.09, _GLF_IDENTITY(33.09, (false ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(33.09, clamp(33.09, 33.09, 33.09)))))), 2.9, 23.21, -1.6, 5.2, 3584.5720), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(74.17, 7.4, _GLF_IDENTITY(-0.4, (-0.4) - sin(0.0)), _GLF_IDENTITY(33.09, min(33.09, _GLF_IDENTITY(33.09, (false ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(33.09, clamp(33.09, 33.09, 33.09)))))), 2.9, 23.21, -1.6, 5.2, 3584.5720))) : _GLF_FUZZED(mat3(1004.0695, 9650.8300, -7.3, -8.9, 3578.6886, -74.88, -4689.6340, 797.811, -5.7)))));
           mat3x4(mat4x3(-23.59, -7.3, -12.17, -2.5, -5.4, -7.3, 12.66, 3.7, 3.6, -1.0, -2.7, -74.67));
           (mat2x3(7.5, 497.655, -66.48, 5.8, -5.6, 6203.7756) / mat2x3(-2.8, 672.955, 2502.5993, -7.2, 4879.7408, -47.18));
           uvec2 _GLF_SWITCH_0_46v[41];
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         mat4(7158.0160, -5.4, -4656.0786, -6.1, 4267.5420, 154.505, 1.1, -5.0, -170.996, 991.384, 3.4, -8297.7738, -561.852, _GLF_IDENTITY(4.3, (true ? 4.3 : _GLF_FUZZED(atanh(asin(-2.7))))), -2.2, -7.7);
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.00), _GLF_FUZZED(703.988)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(true)
          {
           bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2973.0840))) > injectionSwitch.y))), false, false);
           if(_GLF_DEAD(false))
            barrier();
           (_GLF_IDENTITY(mat3x2(-7.4, -3.4, 7.7, -44.42, -9086.5691, 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, 1.0), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(mat3x2(-7.4, -3.4, _GLF_IDENTITY(7.7, mix(float(_GLF_IDENTITY(7.7, max(7.7, 7.7))), float(_GLF_FUZZED(-2.6)), bool(false))), -44.42, -9086.5691, 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, 1.0), ! (! (mat3x2(-7.4, -3.4, 7.7, _GLF_IDENTITY(-44.42, float(vec2(-44.42, 0.0))), -9086.5691, 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, 1.0))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(mat3x2(-7.4, -3.4, 7.7, -44.42, -9086.5691, 39.62) == mat3x2(0.6, 0.7, _GLF_IDENTITY(-91.39, max(-91.39, _GLF_IDENTITY(-91.39, (_GLF_IDENTITY(-91.39, (false ? _GLF_FUZZED(-4.7) : -91.39))) - 0.0))), -85.49, 54.16, 1.0), ! (! (mat3x2(-7.4, -3.4, 7.7, -44.42, _GLF_IDENTITY(-9086.5691, (-9086.5691) * sqrt(1.0)), 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, 1.0))))), ! (! (bool(_GLF_IDENTITY(mat3x2(-7.4, -3.4, 7.7, -44.42, -9086.5691, 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, 1.0), ! (! (mat3x2(-7.4, -3.4, 7.7, -44.42, _GLF_IDENTITY(-9086.5691, (-9086.5691) * sqrt(1.0)), 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, 1.0))))))))), bool(bvec3(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(mat3x2(-7.4, -3.4, 7.7, -44.42, -9086.5691, 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, 1.0), ! (! (mat3x2(-7.4, -3.4, 7.7, -44.42, _GLF_IDENTITY(-9086.5691, (-9086.5691) * sqrt(1.0)), 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, 1.0))))), ! (! (bool(_GLF_IDENTITY(mat3x2(-7.4, -3.4, 7.7, -44.42, -9086.5691, 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, 1.0), ! (! (mat3x2(-7.4, -3.4, 7.7, -44.42, _GLF_IDENTITY(-9086.5691, (-9086.5691) * sqrt(1.0)), 39.62) == mat3x2(0.6, 0.7, -91.39, -85.49, 54.16, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))))))))))), true, true)))))));
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           mat3x2 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           ;
           any(bvec4(false, true, true, false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           bvec4 _GLF_SWITCH_0_50v;
           if(_GLF_DEAD(false))
            continue;
           (_GLF_IDENTITY(53584 ^ 54182, ~ (~ (53584 ^ 54182))));
           if(_GLF_DEAD(false))
            barrier();
           int _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v[56];
          }
         {
          if(_GLF_DEAD(false))
           barrier();
          int _GLF_SWITCH_0_53v[84], _GLF_SWITCH_0_54v[51];
          (subgroup_id + 172542u);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
             barrier();
            barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
         }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          (mat2x3(451.711, 7.2, 5.4, -5536.5108, -648.666, -470.098) - _GLF_IDENTITY(2116.0455, float(mat3x4(_GLF_IDENTITY(2116.0455, clamp(_GLF_IDENTITY(2116.0455, float(mat3(2116.0455, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4015.2312)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0))), 2116.0455, 2116.0455)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, sqrt(1.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, sqrt(1.0), 0.0), vec3(0.0, 1.0, 0.0))), 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), log(1.0), 1.0, exp(0.0)))));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          (uvec4(20697u, 24078u, _GLF_IDENTITY(117613u, (117613u) + 0u), 156236u) != (virtual_gid ^ uvec4(44295u, _GLF_IDENTITY(87521u, min(87521u, 87521u)), 21940u, 189749u)));
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat4x2 _GLF_SWITCH_0_55v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            break;
           }
          if(_GLF_DEAD(false))
           barrier();
          ivec3 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v[43], _GLF_SWITCH_0_58v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          (false ? bvec4(true, false, false, true) : not(bvec4(true, true, false, true)));
          (_GLF_SWITCH_0_55v - _GLF_IDENTITY(5507.5645, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(28.59, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), mat2(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-6.4, 18.08, 36.61, 1294.0204)) : mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0)))))))), clamp(_GLF_IDENTITY(28.59, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), mat2(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-6.4, 18.08, 36.61, 1294.0204)) : mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(28.59, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), mat2(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-6.4, 18.08, 36.61, 1294.0204)) : mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0)))))))), mix(float(_GLF_IDENTITY(28.59, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), mat2(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-6.4, 18.08, 36.61, 1294.0204)) : mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0))))))))), float(_GLF_FUZZED(8829.3769)), bool(false))), _GLF_IDENTITY(28.59, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), mat2(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-6.4, 18.08, 36.61, 1294.0204)) : mat2(_GLF_IDENTITY(28.59, mix(float(_GLF_IDENTITY(28.59, (28.59) - 0.0)), float(_GLF_FUZZED(11.53)), bool(false))), 0.0, 0.0, 0.0))))))))))) : 5507.5645)));
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          mat3 _GLF_SWITCH_0_59v;
          if(_GLF_DEAD(false))
           barrier();
          mat2x4(-8.1, -3.6, 4215.2218, 246.097, -21.76, 6.6, 8.2, 1.1);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          barrier();
         bvec4(lessThanEqual(ivec3(65143, 58786, -77149), ivec3(9861, -91302, -68167)), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-80.68)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(3.5)), bool(false))))))).s);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         bvec2(false, false);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(         findLSB(uvec3(52111u, 137364u, _GLF_IDENTITY(180848u, clamp(180848u, _GLF_IDENTITY(180848u, uint(uvec2(180848u, 1u))), 180848u))));
 (mat2(0.7, -4856.3584, -6.0, 7.7) != mat2(-0.0, -9.4, -0.8, 145.587)); bvec4(true, bvec3(true, true, true)))
          {
           (_GLF_IDENTITY(-8.8, float(mat4x2(-8.8, 1.0, 1.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))))) - mat3(687.679, -675.650, 6.8, 5584.3010, -72.32, -55.37, 11.49, 116.633, 6.2));
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
            return;
           (-65374 % (36777 * ivec3(25551, -78477, -27667)));
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           ivec2(64483, -24223);
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(((mat4x3(-4.9, 6.4, -461.425, -558.967, -2222.9110, -6.9, -5.6, 1.9, 405.931, -9.0, 9696.2675, -3.9) / 1815.8893) == mat4x3(-283.766, 4796.6842, 9554.5517, -6.4, -6.5, 6075.0476, 457.782, -232.944, 603.541, 7.6, -9.7, 59.15)));
       if(_GLF_DEAD(false))
        barrier();
       ;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     default:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     1;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
