#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(68.29, 1.0 * (68.29)), 1.0 * (_GLF_IDENTITY(68.29, 1.0 * (68.29))))) : _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))))))) + 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && ((false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && ((false))) && true)), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && _GLF_IDENTITY(((false)), (((false))) || false)) && true))) && true)) && true), true && (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), true && ((false))))), (bool(bool(! _GLF_IDENTITY((false), true && ((false)))))) || false))))), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u);
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(0.0, 0.0) + ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y))))))), false, false))), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, (0u ^ 0u))), (uint(uvec3(workgroup_base, 1u, (0u ^ 0u)))) + 0u)) + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) * 1u))), workgroup_base)) + subgroup_base, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) * 1u))), workgroup_base)) + subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) * 1u))), workgroup_base)) + subgroup_base : _GLF_FUZZED(48218u))), 1u))) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false)), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false)), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false)), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), false)), false, false)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false)), false, false, false)), false, false))) && true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(true, true && (true)) ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup))))))) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)) : _GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, false, false)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))), (true ? ~ (workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> ((0u & _GLF_IDENTITY(142296u, min(142296u, _GLF_IDENTITY(142296u, (142296u) + 0u)))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))))))) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + subgroup_base + subgroup_local_id) / 1u))) : _GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) * 1u), (0u ^ 0u) - 0u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u)), ((_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))) + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ _GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))) : _GLF_FUZZED(num_workgroup))))))) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), false, false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u)))), (uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) | (_GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u)))), (uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) ^ 0u)))) + subgroup_base + subgroup_local_id)), min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup))))))) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), false, false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup)))))))) << 0u)) >> 0u) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false)))))), false, false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup))))))) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (subgroup_id) << 0u))) ^ 0u))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) || false)))), false, false))), false, false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, 0u + (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id))), min((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, 0u + (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, 0u + (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id))))))))), min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((true ? _GLF_IDENTITY(~ (workgroup_base), 0u + (~ (workgroup_base))) : _GLF_FUZZED(num_workgroup)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), 0u + (~ (workgroup_base))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (workgroup_base), 0u + (~ (workgroup_base))), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (workgroup_base), 0u + (~ (workgroup_base))), 0u, 1u, 0u)), max(uint(uvec4(_GLF_IDENTITY(~ (workgroup_base), 0u + (~ (workgroup_base))), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(~ (workgroup_base), 0u + (~ (workgroup_base))), 0u, 1u, 0u)))), 0u, 0u, 1u)))) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(~ (workgroup_base), 0u + (~ (workgroup_base))) : _GLF_FUZZED(num_workgroup))) >> (0u | 0u)))))))))))) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((448.679 / -8063.2302))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false, true)))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))) && true)), true))))), false, false))), false, false, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) - 0u))))) + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u), (true ? ~ (workgroup_base) : _GLF_FUZZED(num_workgroup))))))) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(workgroup_size)));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), max((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))))), uint(_GLF_IDENTITY(uint(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base))))))))), min(uint(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) >> 0u))), ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), (_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base))))) | 0u))))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), ~ (~ (1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u)), (~ (workgroup_base + subgroup_base))))))))))), max(_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), ~ (~ (1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u)), (~ (workgroup_base + subgroup_base))))))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), ~ (~ (1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u)), (~ (workgroup_base + subgroup_base)))))))))))))))))), 0u ^ (_GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), max((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))))), uint(_GLF_IDENTITY(uint(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base))))))))), min(uint(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) >> 0u))), ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), (_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base))))) | 0u))))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), ~ (~ (1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u)), (~ (workgroup_base + subgroup_base))))))))))), max(_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), ~ (~ (1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u)), (~ (workgroup_base + subgroup_base))))))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), ~ (~ (1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u)), (~ (workgroup_base + subgroup_base))))))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))), ~ (~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (151063u & 0u) ^ (workgroup_base + subgroup_base)))), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base))))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) - 0u) * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) << 0u, uint(_GLF_IDENTITY(uint((workgroup_base + subgroup_base) << 0u), (uint((workgroup_base + subgroup_base) << 0u)) >> 0u)))) : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base)))) | (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u)))))))))), max((_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) << 0u, uint(_GLF_IDENTITY(uint((workgroup_base + subgroup_base) << 0u), (uint((workgroup_base + subgroup_base) << 0u)) >> 0u)))) : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base)))) | (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) << 0u, uint(_GLF_IDENTITY(uint((workgroup_base + subgroup_base) << 0u), (uint((workgroup_base + subgroup_base) << 0u)) >> 0u)))) : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base)))) | (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u)))))))))), ((_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) << 0u, uint(_GLF_IDENTITY(uint((workgroup_base + subgroup_base) << 0u), (uint((workgroup_base + subgroup_base) << 0u)) >> 0u)))) : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base)))) | (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) | 0u))))))))))) + 0u)))), min(uint(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), clamp((1u), (1u), _GLF_IDENTITY((1u), 0u + ((1u))))))) * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(110135u) : workgroup_base)) + subgroup_base) - 0u), (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))), 1u * (~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base))))))))))), uint(_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) + 0u)))))))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_FUZZED(subgroup_base)) ^ 0u)) / 1u)))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), max(~ (workgroup_base + subgroup_base), ~ (workgroup_base + subgroup_base)))), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))), min((_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base))))))))) | ((_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), (~ (workgroup_base + subgroup_base))))))))) | 0u))), min(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_size))))) + subgroup_base : _GLF_FUZZED(subgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_size))))) + subgroup_base : _GLF_FUZZED(subgroup_base), (true ? _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_size))))) + subgroup_base : _GLF_FUZZED(subgroup_base)) ^ 0u)))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))))))), _GLF_IDENTITY(1u, (1u) | 0u) * (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (1u & 1u), 1u))), workgroup_base)) + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (workgroup_base)) + subgroup_base))))))))))) << (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) << (0u & 37604u)) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) - 0u), subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)))), max((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) - 0u), subgroup_local_id)) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) - 0u), subgroup_local_id)) + 1)) << 0u) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), (_GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) << 0u)) >> 0u)))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) - 0u), subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) + 1) % subgroup_size) >> 0u)), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), _GLF_IDENTITY(uint(uint(0u + (subgroup_local_id))), 0u ^ (uint(uint(0u + (subgroup_local_id))))))))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) - 0u), subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size) >> 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(871.190), _GLF_FUZZED(-1.3)), bvec2(false, false))), 1.0, 0.0, 0.0, 1.0, 1.0, length(0.0), 0.0))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.4)), bool(false))), (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.4)), bool(false))), (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true)), false, false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))), uint(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))), 0u, 0u)))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.7)), bool(false))), injectionSwitch.x)))))], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) % 2, 0u ^ (subgroup_local_id % 2))) * 1u), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.6)), bool(false))) < injectionSwitch.y)) ? subgroup_local_id % 2 : _GLF_FUZZED(157215u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id % _GLF_IDENTITY(2, (2) | (2)) : _GLF_FUZZED(157215u)) / 1u)))) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) - 0)), ((~ (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) << 0) | (~ (0))))))), ((~ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) - 0)), ((~ (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) << 0) | (~ (0)))))))) << (-58354 & 0))), int(int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) - 0)), ((~ (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) << 0) | (~ (0)))))), max(~ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) - 0)), ((~ (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) << 0) | (~ (0)))))), ~ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) - 0)), ((~ (_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))))) << 0) | (~ (0))))))))))))), 0 ^ (0)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) % 2) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0)))), ~ (~ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) | 0), 0)), clamp(int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-66955) : (0))), (~ (0)) | 0), 0)), int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) | 0), _GLF_IDENTITY(0, (0) | 0))), int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) | 0), 0)))), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) | 0), 0)), clamp(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) | 0), 0)), int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) | 0), 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), min(~ (0), ~ (0))), (~ (0)) | 0), 0), ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), min(~ (0), ~ (0))), (~ (0)) | 0), _GLF_IDENTITY(0, min(0, 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3), int(3))), int(3))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(0, (0) - 0), 0), (ivec3(1, _GLF_IDENTITY(0, (0) - 0), 0)) | (ivec3(1, _GLF_IDENTITY(0, (0) - 0), 0)))))))))))), (~ (0)) | (~ (0)))))))), _GLF_IDENTITY(0, (0) * 1) ^ (0)), false || ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u | (subgroup_local_id % 2), ~ (~ (0u | (subgroup_local_id % 2))))))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), 1u, 1u, 1u))))))) - 0u)), (subgroup_local_id % _GLF_IDENTITY(2, (2) | (0 | 0))) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u | (subgroup_local_id % 2), ~ (~ (0u | (subgroup_local_id % 2))))))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), 1u, 1u, 1u))))))) - 0u)), (subgroup_local_id % _GLF_IDENTITY(2, (2) | (0 | 0))) ^ 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u | (subgroup_local_id % 2), ~ (~ (0u | (subgroup_local_id % 2))))))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-67433) : 2))) / 1), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), 1u, 1u, 1u))))))) - 0u)), (subgroup_local_id % _GLF_IDENTITY(2, (2) | (0 | 0))) ^ 0u))) << 0u)))) - 0u)) == _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (~ (0)) | (~ (0)))))))), 0 ^ _GLF_IDENTITY((0), 0 | ((0))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true, true)))), bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))))))) && true)))) || _GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true, true)))), bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))))))) && true)))) || _GLF_IDENTITY(false, bool(bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true, true)))), bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))))))) && true)))) || _GLF_IDENTITY(false, bool(bool(false))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true, true)))), bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))))))) && true)))) || _GLF_IDENTITY(false, bool(bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))), true))))))))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true, true)))), bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))))))) && true)))) || _GLF_IDENTITY(false, bool(bool(false))))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_IDENTITY(false, false || (false)), false))) || false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ _GLF_IDENTITY((1), ((1)) - 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0))), 0 ^ _GLF_IDENTITY((1), ((1)) << 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, ~ (~ (7)))) - 0)))))) << 0), _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(-69332) : int(7))))), int(7)))))), 1, 1))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) + 0), max(_GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY(64, (64) + 0))), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0)))))))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.7)), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.7)), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(-4.7)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-4.7)))[1]), vec2(_GLF_FUZZED(-6748.5405), _GLF_FUZZED(-356.686)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.7)))), bvec2(true, false))), injectionSwitch)).y))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (0) | (0))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
