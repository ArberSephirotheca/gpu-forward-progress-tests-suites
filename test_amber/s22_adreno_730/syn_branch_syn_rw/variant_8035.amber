#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))) && true))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec2(((false)), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(((false)), true)), false, false, true)), bool(bvec3(bool(bvec4(bool(bvec2(((false)), true)), false, false, true)), true, true))))) && true), true && (! (false)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y)))), false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, _GLF_IDENTITY(false, (false) && true), false))));
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, (false) || false))) || false), true, true, false)))))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), ~ (~ (_GLF_FUZZED((subgroup_size & 75090u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), ~ (~ (_GLF_FUZZED((subgroup_size & _GLF_IDENTITY(75090u, (true ? 75090u : _GLF_FUZZED(uint(true))))))))), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & _GLF_IDENTITY(75090u, (true ? 75090u : _GLF_FUZZED(uint(true)))))), min(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & _GLF_IDENTITY(75090u, (true ? 75090u : _GLF_FUZZED(uint(true)))))), (_GLF_FUZZED((subgroup_size & _GLF_IDENTITY(75090u, (true ? 75090u : _GLF_FUZZED(uint(true))))))) / 1u), _GLF_FUZZED((subgroup_size & _GLF_IDENTITY(75090u, (true ? 75090u : _GLF_FUZZED(uint(true)))))))))))) * 1u), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), ~ (~ (_GLF_FUZZED((subgroup_size & 75090u)))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))) >> 0u) : gl_NumWorkGroups.x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), ((subgroup_size & 75090u)) | ((subgroup_size & 75090u))))), ~ (~ ((_GLF_FUZZED((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) & 75090u)))))), 0u ^ ((_GLF_FUZZED((subgroup_size & 75090u))))))) : gl_NumWorkGroups.x))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))), (~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))) ^ (0u & 48547u)))) | 0u), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED((subgroup_size & 75090u))))))) >> 0u), (0u | 0u) | (_GLF_IDENTITY(~ (~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))), (~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))) ^ (0u & 48547u)))) | 0u), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED((subgroup_size & 75090u))))))) >> 0u)))) : gl_NumWorkGroups.x)))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))).x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), ((subgroup_size & 75090u)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) | _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), min(_GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), ((_GLF_FUZZED((subgroup_size & 75090u)))) | 0u), (_GLF_FUZZED((subgroup_size & 75090u)))))), _GLF_IDENTITY(~ (~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u))))), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), (false ? _GLF_FUZZED(164129u) : (subgroup_size & 75090u))))))))) >> _GLF_IDENTITY(0u, (0u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) : gl_NumWorkGroups.x), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), max(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), _GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) | (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) - 0u)))) ^ 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))), _GLF_IDENTITY(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), uint(uvec4(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), 0u, 0u, 0u)))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | 0u), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED((subgroup_size & 75090u))))))) >> 0u)) : gl_NumWorkGroups.x)) >> 0u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))).x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), ((subgroup_size & 75090u)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) | _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), min(_GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), ((_GLF_FUZZED((subgroup_size & 75090u)))) | 0u), (_GLF_FUZZED((subgroup_size & 75090u)))))), _GLF_IDENTITY(~ (~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u))))), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), (false ? _GLF_FUZZED(164129u) : (subgroup_size & 75090u))))))))) >> _GLF_IDENTITY(0u, (0u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) : gl_NumWorkGroups.x), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), max(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), _GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) | (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) - 0u)))) ^ 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))), _GLF_IDENTITY(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), uint(uvec4(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), 0u, 0u, 0u)))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | 0u), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED((subgroup_size & 75090u))))))) >> 0u)) : gl_NumWorkGroups.x)) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))).x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), ((subgroup_size & 75090u)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) | _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), min(_GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), ((_GLF_FUZZED((subgroup_size & 75090u)))) | 0u), (_GLF_FUZZED((subgroup_size & 75090u)))))), _GLF_IDENTITY(~ (~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u))))), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), (false ? _GLF_FUZZED(164129u) : (subgroup_size & 75090u))))))))) >> _GLF_IDENTITY(0u, (0u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) : gl_NumWorkGroups.x), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), max(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), _GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) | (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) - 0u)))) ^ 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))), _GLF_IDENTITY(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), uint(uvec4(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), 0u, 0u, 0u)))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | 0u), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED((subgroup_size & 75090u))))))) >> 0u)) : gl_NumWorkGroups.x)) >> 0u))))) - 0u), 0u, 0u), (uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))).x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), ((subgroup_size & 75090u)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) | _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), min(_GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), ((_GLF_FUZZED((subgroup_size & 75090u)))) | 0u), (_GLF_FUZZED((subgroup_size & 75090u)))))), _GLF_IDENTITY(~ (~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u))))), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), (false ? _GLF_FUZZED(164129u) : (subgroup_size & 75090u))))))))) >> _GLF_IDENTITY(0u, (0u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) : gl_NumWorkGroups.x), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), max(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), _GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) | (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) - 0u)))) ^ 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))), _GLF_IDENTITY(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), uint(uvec4(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), 0u, 0u, 0u)))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | 0u), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED((subgroup_size & 75090u))))))) >> 0u)) : gl_NumWorkGroups.x)) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))).x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), ((subgroup_size & 75090u)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) | _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), min(_GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), ((_GLF_FUZZED((subgroup_size & 75090u)))) | 0u), (_GLF_FUZZED((subgroup_size & 75090u)))))), _GLF_IDENTITY(~ (~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u))))), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED(_GLF_IDENTITY((subgroup_size & 75090u), (false ? _GLF_FUZZED(164129u) : (subgroup_size & 75090u))))))))) >> _GLF_IDENTITY(0u, (0u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) : gl_NumWorkGroups.x), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), max(_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))), _GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) | (_GLF_FUZZED((subgroup_size & 75090u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) | (_GLF_IDENTITY((~ (_GLF_FUZZED((subgroup_size & 75090u)))), ((~ (_GLF_FUZZED((subgroup_size & 75090u))))) - 0u)))) ^ 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), (_GLF_FUZZED((subgroup_size & 75090u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))), _GLF_IDENTITY(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), uint(uvec4(uint(uint(uint(uint((_GLF_FUZZED((subgroup_size & 75090u))))))), 0u, 0u, 0u)))))), ((~ _GLF_IDENTITY((_GLF_FUZZED((subgroup_size & 75090u))), uint(uint((_GLF_FUZZED((subgroup_size & 75090u)))))))) | 0u), (false ? _GLF_FUZZED(11013u) : ~ (~ (_GLF_FUZZED((subgroup_size & 75090u))))))) >> 0u)) : gl_NumWorkGroups.x)) >> 0u))))) - 0u), 0u, 0u)) * uvec3(1u, 1u, 1u))))) | 0u) ^ _GLF_IDENTITY(0u, (0u) << 0u))) | ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size & 75090u)), ~ (~ (_GLF_FUZZED((subgroup_size & _GLF_IDENTITY(75090u, ~ (~ (75090u)))))))) : gl_NumWorkGroups.x))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(879.199)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)))))) * (0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, exp(0.0)), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), sqrt(vec3(1.0, 1.0, 1.0)) * (vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), 1.0 * ((1.0))) - 0.0)) / 1.0), 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, exp(0.0))))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((2.0 / (+ -3388.3530)))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), (true ? float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)) : _GLF_FUZZED(20.08)))), injectionSwitch.y))) - 0.0)), bool(true))), false || (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0))))).x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(106.129)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(879.199)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((6546.6111 / -1.1))), float(0.0), bool(true))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)))), sqrt(0.0), 0.0, 1.0)))))) * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.8)), float(0.0), bool(true)))))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, exp(0.0)), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), sqrt(vec3(1.0, 1.0, 1.0)) * (vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(9.5) : (1.0))), 1.0 * ((1.0))) - 0.0)) / 1.0), 0.0))), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, exp(0.0))))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((2.0 / (+ -3388.3530)))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)) * (vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), max(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)), (true ? float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(2.0, -5836.0836, -4.3, -78.63, -614.245, -9.9, 2926.7595, 1888.9450)) : mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(2.0, -5836.0836, -4.3, -78.63, -614.245, -9.9, 2926.7595, 1888.9450)) : mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(2.0, -5836.0836, -4.3, -78.63, -614.245, -9.9, 2926.7595, 1888.9450)) : mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((9.6 * -8799.5686)) : _GLF_IDENTITY(0.0, (0.0) / 1.0))))))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0))))))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(707.163) : 0.0)))))) : _GLF_FUZZED(20.08)))), injectionSwitch.y))) - 0.0)), bool(true))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), max(vec4(injectionSwitch, 1.0, 0.0), vec4(injectionSwitch, 1.0, 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), max(vec4(injectionSwitch, 1.0, 0.0), vec4(injectionSwitch, 1.0, 0.0))))))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(879.199)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)))))) * (0.0), round(length(normalize(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))) * (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(879.199)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(879.199)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(879.199)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)))))))) * (0.0))))), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-9187.0793), _GLF_FUZZED(-9818.5129), _GLF_FUZZED(-3.8)), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, exp(0.0)), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), sqrt(vec3(1.0, 1.0, 1.0)) * (vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0))), 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), 1.0 * ((1.0))) - 0.0)) / 1.0), 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) / 1.0), exp(0.0))))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((2.0 / (+ -3388.3530)))), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(684.076)))))), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), (true ? float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0))), length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0)) : _GLF_FUZZED(20.08)))), injectionSwitch.y))) - 0.0)), bool(true)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u))))), min(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ~ (_GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) / 1u))), 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], ~ (~ (_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) - 0u)))), gl_WorkGroupID[1], gl_WorkGroupID[2])))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) << (0u | 0u)) * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u | 0u)), clamp(subgroup_id, subgroup_id, subgroup_id))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (1u ^ 1u)), (subgroup_size) - (1u ^ 1u));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))) || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) - 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (workgroup_base) - 0u))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))), uint(uint(~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) - vec2(0.0, 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)) + (injectionSwitch)))).x > injectionSwitch.y))) && true), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) || false)))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  barrier();
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) % 2, subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)), subgroup_local_id % 2))))) == 0), false || (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), bool(bvec4(_GLF_IDENTITY(((subgroup_local_id % 2) == 0), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(((subgroup_local_id % 2) == 0), ! (! (((subgroup_local_id % 2) == 0)))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true))))) && _GLF_IDENTITY(true, (true) || false)))
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != 0), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true)))), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true)))), (! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true))))) || false)) || false))))), false, false)))); _injected_loop_counter --)
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) | 0)), 4, 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0)))), mix(float(_GLF_FUZZED(4833.4660)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0)))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0))))))), bool(true)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ (~ (read))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_DEAD(false)) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-294.612) : injectionSwitch.y))))), (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-294.612) : injectionSwitch.y)))))) || false)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-294.612) : injectionSwitch.y)))))))), true)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-78.05))), injectionSwitch.y)), bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.5)), bool(false))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2979.6872, -4640.3824)))).y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.5)), bool(false))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2979.6872, -4640.3824)))).y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.5)), bool(false))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2979.6872, -4640.3824)))).y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)) || false))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)) || false))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))))) || false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), true))))), (! (false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
