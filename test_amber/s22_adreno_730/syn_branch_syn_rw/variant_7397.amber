#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   else
    {
    }
  }
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.0) : _GLF_IDENTITY(0.0, (0.0) + 0.0)))) - 0.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(asinh(-9.7)))), 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, float(mat3x2((1.0) / 1.0, determinant(mat3(0.0, abs(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0)), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0))))))))), dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(9.6)), bool(false)))), float(_GLF_FUZZED(-443.872)), bool(false))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), min(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), vec4(0.0, 0.0, 0.0, 0.0)))), abs(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-52.06)), float(0.0), bool(true))), 0.0, 0.0))), _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(378.496, 8480.0950, _GLF_IDENTITY(0.4, float(vec2(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(_GLF_IDENTITY(370.821, (370.821) - 0.0)) : 0.4)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), determinant(mat3(1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), (float(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), determinant(mat3(1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))) / 1.0))))), -9922.1539, 140.754, -34.76, _GLF_IDENTITY(-4.7, (-4.7) * 1.0), -9.2, -3.9, -229.166, -45.41, -9193.8301, -219.694, -41.44, -70.37, 395.205)))) + (mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 0.0 + (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.2))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(float(mat4x2(abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(float(mat4x2(abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, abs(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (false ? _GLF_FUZZED(3408.1243) : float(mat4x2(float(mat4x2(abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, abs(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))), 1.0), (mat2(1.0, 0.0, abs(1.0), 1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-52.06)), float(0.0), bool(true))), 0.0, 0.0))), _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(vec2(-12.39, -439.924).x)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-407.882)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(58981))), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.9))), 1.0, 1.0)))) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(378.496, 8480.0950, 0.4, -9922.1539, 140.754, -34.76, -4.7, -9.2, _GLF_IDENTITY(-3.9, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-3.9, min(_GLF_IDENTITY(-3.9, (_GLF_IDENTITY(-3.9, (true ? -3.9 : _GLF_FUZZED(3.8)))) / 1.0), -3.9)), max(-3.9, -3.9)), _GLF_IDENTITY(-3.9, 0.0 + (_GLF_IDENTITY(-3.9, float(mat3x2(-3.9, 1.0, 1.0, 1.0, 1.0, 1.0))))), -3.9)), -229.166, _GLF_IDENTITY(-45.41, (_GLF_IDENTITY(-45.41, 0.0 + (-45.41))) * 1.0), -9193.8301, -219.694, _GLF_IDENTITY(-41.44, mix(float(_GLF_FUZZED(vec2(-315.074, -73.05).r)), _GLF_IDENTITY(float(-41.44), float(mat4(_GLF_IDENTITY(float(-41.44), (float(-41.44)) * 1.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), bool(true))), -70.37, 395.205)))) + (mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - sqrt(0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), injectionSwitch)).y), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))))), 1.0, 0.0, 0.0, 0.0)))) - mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-22685))), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-9.3, 945.685, -76.15).x)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0, 1.0, 1.0, 0.0, 0.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0, abs(1.0), abs(0.0))), float(_GLF_IDENTITY(mat4(float(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.1)))), _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-692.311)), bool(false)))), max(abs(0.0), abs(0.0))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat4(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-888.526), _GLF_FUZZED(1128.0276), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))[0], _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), mix(vec3(((vec3(1.0, 0.0, 0.0)))[0], _GLF_IDENTITY(((vec3(1.0, 0.0, 0.0)))[1], mix(float(((vec3(1.0, 0.0, 0.0)))[1]), float(_GLF_FUZZED(_GLF_IDENTITY(4.4, clamp(_GLF_IDENTITY(4.4, (true ? 4.4 : _GLF_FUZZED(7.1))), 4.4, _GLF_IDENTITY(4.4, max(4.4, _GLF_IDENTITY(4.4, (false ? _GLF_FUZZED(2.3) : 4.4)))))))), bool(false))), ((vec3(1.0, 0.0, 0.0)))[2]), vec3(_GLF_FUZZED((5509.7001)), _GLF_FUZZED((-71.72 * -3875.2081)), _GLF_FUZZED(-66.41)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))[1], _GLF_FUZZED(64.56)), bvec3(true, true, false))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-4.4, -7.8, 8.4, 8.8).sstp))))), abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0), mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6100.2207)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.7)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), (mat4(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(mat3x2(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat4(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-888.526), _GLF_FUZZED(1128.0276), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED(_GLF_IDENTITY(64.56, max(64.56, _GLF_IDENTITY(64.56, mix(float(64.56), float(_GLF_FUZZED(-6.2)), bool(false))))))), bvec3(true, true, false))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), abs(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) + (injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-4.7)), bool(false))))))), _GLF_IDENTITY(mix(float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(vec3(-66.13, 815.136, -38.47).bg.x)), bool(false)), (mix(float(round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((9327.1192 + -442.521))), float(1.0), bool(true)))))))), float(_GLF_FUZZED(vec3(-66.13, 815.136, -38.47).bg.x)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(false))))) + 0.0)), 0.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), float(mat4(abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0)), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2(0.0, sin(0.0), 1.0, 0.0))), 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, tan(0.0), 0.0, 0.0)), (float(mat3x2(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8760.4612)), bool(false))))), 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat4(_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(-888.526), _GLF_FUZZED(1128.0276), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED(_GLF_IDENTITY(64.56, max(64.56, _GLF_IDENTITY(64.56, mix(float(64.56), float(_GLF_FUZZED(-6.2)), bool(false))))))), bvec3(true, true, false))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-39.76), (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), vec3((vec3(1.0, 1.0, 1.0))[0], _GLF_FUZZED((-2.1 / -6975.1727)), _GLF_FUZZED((-0.5 / 646.345))), bvec3(true, false, false)))), vec3(1.0, 1.0, 1.0) * (normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-39.76), (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), vec3((vec3(1.0, 1.0, 1.0))[0], _GLF_FUZZED((-2.1 / -6975.1727)), _GLF_FUZZED((-0.5 / 646.345))), bvec3(true, false, false)))))))), mix(float(round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((1435.7837 - -3338.9532))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))))))), float(_GLF_FUZZED(vec3(-66.13, 815.136, -38.47).bg.x)), bool(false))), 0.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat2(log(1.0), 0.0, 1.0, 0.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), float(mat2(abs(0.0), sqrt(0.0), 1.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(max(min(1.0, 1.0), min(1.0, 1.0)), min(max(min(1.0, 1.0), min(1.0, 1.0)), max(min(1.0, 1.0), min(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2(0.0, sin(0.0), 1.0, 0.0))), 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, tan(0.0), 0.0, 0.0))) / 1.0))), 0.0, abs(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), abs(0.0))), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0, 1.0, 1.0)))) / 1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0))), bool(true))), 1.0))), 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, float(float(0.0))), injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, abs(0.0), 0.0, 0.0, abs(1.0), cos(0.0)), transpose(transpose(mat2x3(0.0, abs(0.0), 0.0, 0.0, abs(1.0), cos(0.0)))))))), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(5.5), float(mat2x3(_GLF_FUZZED(5.5), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(5.5), float(mat2x3(_GLF_FUZZED(5.5), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), 1.0 * (float(_GLF_IDENTITY(_GLF_FUZZED(5.5), float(mat2x3(_GLF_FUZZED(5.5), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) + 0.0), bool(false))), 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), mix(float(_GLF_FUZZED(69.27)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0)), bool(true))))))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) - 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-609.643) : injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), float(vec4(float(1.0), 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-2814.6666)), bool(false))), float(_GLF_FUZZED(-573.188)), bool(false))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0))), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-5.4)))), 0.0, abs(1.0), abs(0.0))), max(float(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), mix(float(_GLF_FUZZED(69.27)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0)), bool(true))))))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) - 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-609.643) : injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), float(vec4(float(1.0), 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-2814.6666)), bool(false))), float(_GLF_FUZZED(-573.188)), bool(false))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0))), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-5.4)))), 0.0, abs(1.0), abs(0.0))), float(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0), mix(float(_GLF_FUZZED(69.27)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))) * 1.0)), bool(true))))))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) - 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-609.643) : injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), float(vec4(float(1.0), 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-2814.6666)), bool(false))), float(_GLF_FUZZED(-573.188)), bool(false))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0))), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-5.4)))), 0.0, abs(1.0), abs(0.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), 0.0 + (dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0)), mat4(1.0) * (_GLF_IDENTITY(transpose(mat4(float(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], clamp((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), _GLF_FUZZED(vec4(-3.2, 5.4, 477.261, -0.3).w)), vec2(_GLF_FUZZED(-0.2), (vec2(0.0, 1.0))[1]), bvec2(false, true)))))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(trunc(720.047)) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)) + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0))), 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)) + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0))), 0.0, 0.0, 0.0), (mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)) + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0))), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(tan(6.0)) : 1.0)), 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0))), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0))), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(718.827, -2401.2409, -127.706, 7.8, -5.5, -8909.1929, 4.5, 511.760, -920.097, 3.9, 897.347, -46.73, 986.849, 49.79, 273.947, -0.6)) : mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0))), 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)), min(mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))))) / 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(1.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-522.389, -2418.3864, -8.6, _GLF_IDENTITY(331.916, min(331.916, 331.916)), -2.8, 7.4))))), clamp(float(_GLF_IDENTITY(mat2x3(1.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? mat2x3(1.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-522.389, -2418.3864, -8.6, 331.916, -2.8, 7.4))))), float(_GLF_IDENTITY(mat2x3(1.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(1.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-522.389, -2418.3864, -8.6, 331.916, -2.8, 7.4))))), float(_GLF_IDENTITY(mat2x3(1.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(1.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-522.389, -2418.3864, -8.6, 331.916, -2.8, 7.4)))))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(3716.8711), _GLF_FUZZED(273.122), _GLF_FUZZED(645.126)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-5.4)))), 0.0, abs(1.0), abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), min(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-42.28)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.8)), float(1.0), bool(true))))))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), max(vec4(0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), 1.0, 1.0), vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))), _GLF_IDENTITY(0.0 + (0.0), mix(float(_GLF_IDENTITY(0.0 + (0.0), (false ? _GLF_FUZZED(acosh(902.876)) : 0.0 + (0.0)))), float(_GLF_FUZZED(-4.8)), bool(false)))), 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0)), (true ? transpose(mat4(float(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(66.62) : 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(1.0), bool(true))))), (1.0) / 1.0), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.5)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.4)), float(0.0), bool(true))), 0.0)), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))), clamp((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false)))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-573.188)), bool(false))))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), float(_GLF_FUZZED((-6.9 + 4.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6827.6548)), float(1.0), bool(true))))), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 1.0, 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-3.2, 2179.9481, -5.2).g)), float(1.0), bool(true)))) - 0.0), 0.0, 0.0), (vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-3.2, 2179.9481, -5.2).g)), float(1.0), bool(true)))) - 0.0), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-3.2, 2179.9481, -5.2).g)), float(1.0), bool(true)))) - 0.0), 0.0, 0.0), (vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-3.2, 2179.9481, -5.2).g)), float(1.0), bool(true)))) - 0.0), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), vec3(mat4x2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-3.2, 2179.9481, -5.2).g)), float(1.0), bool(true)))) - 0.0), 0.0, 0.0), (vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-3.2, 2179.9481, -5.2).g)), float(1.0), bool(true)))) - 0.0), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))) + cross(vec3(_GLF_IDENTITY(0.1, (true ? 0.1 : _GLF_FUZZED(-0.2))), -3136.3094, -68.86), vec3(0.1, -3136.3094, -68.86))), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-573.188, (false ? _GLF_FUZZED(asin(-0.1)) : -573.188)))), bool(false)), abs(1.0) * (mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-573.188, (false ? _GLF_FUZZED(asin(-0.1)) : -573.188)))), bool(false))))))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(560.776, 1.3), min(vec2(560.776, 1.3), vec2(560.776, 1.3))).t)), float(abs(0.0)), bool(true))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))) : _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) - 0.0)))), 0.0, abs(1.0), abs(0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0))) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mod(vec2(-242.996, 546.721), vec2(5.4, -5.1))), vec2(vec3(_GLF_IDENTITY(_GLF_FUZZED(mod(vec2(-242.996, 546.721), vec2(5.4, -5.1))), mat2(1.0) * (_GLF_FUZZED(mod(vec2(-242.996, 546.721), vec2(5.4, -5.1))))), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0)))))) : _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))))))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 1.0))))))), 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0), 0.0, 1.0)) : _GLF_FUZZED(mat4(-84.95, -6.2, -6.8, -6.9, 89.97, -7.9, 6876.7373, -8.8, 0.1, -13.24, -552.367, -60.07, _GLF_IDENTITY(915.259, min(_GLF_IDENTITY(915.259, clamp(915.259, 915.259, _GLF_IDENTITY(915.259, (true ? 915.259 : _GLF_FUZZED(-1235.7416))))), 915.259)), 88.31, 7.6, 45.10))))))))))), 0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), ((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) - 0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (mat3(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), ((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) - 0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, length(vec2(0.0, 0.0)))), 0.0))).x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.y = subgroup_size, 0u | (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.y = subgroup_size));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
            barrier();
           barrier();
          }
         GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(183562u), _GLF_IDENTITY(uint(uvec3(_GLF_FUZZED(183562u), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), max(uint(uvec3(_GLF_FUZZED(183562u), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec3(_GLF_FUZZED(183562u), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.b, (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.b) << 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(183562u), uint(uvec3(_GLF_FUZZED(183562u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? _GLF_IDENTITY(_GLF_FUZZED(183562u), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED(183562u), (_GLF_FUZZED(183562u)) >> 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size[0]))))) : _GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), ~ (~ (int(1))))))))), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true)))), (! (false)) && true)))))) && true)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.w * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_base, (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_base) ^ 0u);
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.x, 0u ^ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.x)) * GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) && _GLF_IDENTITY(true, true && (true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) / 1u) ^ 0u)) : _GLF_FUZZED(subgroup_size)));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_base + ((subgroup_local_id + 1) % GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.y), (false ? _GLF_FUZZED(atomicXor(virtual_gid, subgroup_local_id)) : GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_14subgroup_idsubgroup_sizeworkgroup_baseworkgroup_size.y)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1 & 1, (true ? 1 & 1 : _GLF_FUZZED((_injected_loop_counter)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))), max(uint(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))), uint(_GLF_IDENTITY(uint(0u), clamp(uint(_GLF_IDENTITY(0u, (0u) + 0u)), uint(0u), uint(0u))))))) ^ (next_virtual_gid), ~ (_GLF_IDENTITY(~ (0u ^ (next_virtual_gid)), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(1260u) : _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec3(_GLF_IDENTITY(7u, (7u) | (7u)), 1u, 1u))), uint(uvec3(7u, 0u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(7u))))) | (_GLF_IDENTITY(~ (0u ^ (next_virtual_gid)), (~ (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 0u)) ^ (next_virtual_gid))) >> 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) / 1));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 & -81491, max(_GLF_IDENTITY(0 & -81491, clamp(0 & -81491, 0 & -81491, 0 & -81491)), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)) & -81491, (0 & -81491) >> 0))), (_GLF_IDENTITY(0 & -81491, max(_GLF_IDENTITY(0 & -81491, clamp(0 & -81491, 0 & -81491, 0 & -81491)), 0 & -81491))) << 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0 & -81491, _GLF_IDENTITY(max(_GLF_IDENTITY(0 & -81491, clamp(0 & -81491, 0 & -81491, 0 & -81491)), _GLF_IDENTITY(0 & -81491, (_GLF_IDENTITY(0, ~ (~ (0))) & -81491) >> 0)), max(max(_GLF_IDENTITY(0 & _GLF_IDENTITY(-81491, _GLF_IDENTITY(int(int(-81491)), max(int(int(-81491)), int(int(-81491))))), clamp(0 & -81491, 0 & -81491, 0 & -81491)), _GLF_IDENTITY(0 & -81491, (_GLF_IDENTITY(0, (0) << 0) & -81491) >> 0)), max(_GLF_IDENTITY(0 & -81491, clamp(0 & -81491, 0 & -81491, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) >> 0) & -81491)), _GLF_IDENTITY(0 & -81491, (0 & -81491) >> 0))))), (_GLF_IDENTITY(0 & -81491, max(_GLF_IDENTITY(0 & -81491, clamp(0 & -81491, 0 & -81491, _GLF_IDENTITY(0 & -81491, (0 & -81491) << 0))), _GLF_IDENTITY(0, (0) | (0)) & -81491))) << 0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 | 1), ! (! (_GLF_IDENTITY(_injected_loop_counter != (1 | 1), (_GLF_IDENTITY(_injected_loop_counter != (1 | 1), ! (! (_injected_loop_counter != (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> (0 << _GLF_IDENTITY(int(7), int(7)))) | 1))))) && true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0) | 1), max((_GLF_IDENTITY(1, (1) ^ 0) | 1), (_GLF_IDENTITY(1, (1) ^ 0) | _GLF_IDENTITY(1, min(1, 1))))))) && true))); _injected_loop_counter ++)
  {
   if((subgroup_local_id % 2) == 0)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))), true && (! (! (false)))))))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup, (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup) - uvec2(0u, 0u)).x], _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)).y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, sqrt(0.0), abs(0.0), tan(0.0), log(1.0)))) > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(ivec3(int(8), 0, 0)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, clamp(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, min(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup, (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup) / uvec2(1u, 1u)).x, GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x) | 0u), min(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x)), _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, min(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x)))), _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, min(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))))), true)))), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), true)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), false, true)), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), true)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), false)))), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), true)))))))))))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), true)))))))), (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), _GLF_IDENTITY(false, true && (false)) || ((bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))), _GLF_IDENTITY((! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true))))))) || false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) || ((! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, (false) && true))), (false) && true), false, true))), false || ((bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))))) || false)))))) && true) || false)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(141830u, 36831u), (uvec2(141830u, 36831u)) | (uvec2(162833u, 48013u) & uvec2(0u, 0u)))) : GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup)).x)), GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x))))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, min(1, 1))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), ~ (~ (_GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1))))))))) << 0))), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (1))])), mix(vec2(_GLF_FUZZED((+ 6270.4883)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))[1], 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch))) - vec2(0.0, 0.0)).x), 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), 0.0)))), _GLF_IDENTITY((vec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], 0.0, 1.0)) / vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x3((vec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], 0.0, 1.0)) / vec3(1.0, 1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0), (mat4x3((vec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], 0.0, 1.0)) / vec3(1.0, 1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0)) * mat4(1.0))), (false ? _GLF_FUZZED(vec3(3.2, -3.3, 4698.9998)) : vec3(_GLF_IDENTITY(mat4x3((vec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], 0.0, 1.0)) / vec3(1.0, 1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0), (mat4x3((vec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], 0.0, 1.0)) / vec3(1.0, 1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0)) * mat4(1.0)))))))))), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-5.9)), bvec2(true, false))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))))))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), bvec2(true, false))))).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - _GLF_ZERO(0.0, injectionSwitch.x)))))), false, false))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))))), true, true, false))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4(! (bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, true, true))), (! (bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)).x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))), false || (bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)).x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), false)))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, true)))))))))))))))), bool(bvec4(! (bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, true, true))), (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y)))))))))) || false))))))))) && true))))))))), false, false, false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * mat2(1.0)).x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       subgroupBarrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-5609.6288, -369.755)) : mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false)), false)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), true))))), (bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, false || (true)) && ((false) && true)))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), true)))))) || false)), false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(false, false || (false)))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) ^ 0u), _GLF_IDENTITY(4, (16014 & _GLF_IDENTITY(0, min(0, 0))) | (4)), 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
