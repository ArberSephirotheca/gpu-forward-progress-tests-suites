#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_39 {
 bvec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_38 {
 mat2x3 _f0;
 mat2 _f1;
 mat3 _f2;
 bvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_37 {
 bvec3 _f0;
 uvec2 _f1;
 vec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_40 {
 ivec2 _f0;
 uvec2 _f1;
 vec3 _f2;
 _GLF_struct_37 _f3;
 _GLF_struct_38 _f4;
 mat3x4 _f5;
 _GLF_struct_39 _f6;
} ;

struct _GLF_struct_35 {
 ivec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_36 {
 _GLF_struct_35 _f0;
} ;

struct _GLF_struct_41 {
 mat3x4 _f0;
 ivec2 _f1;
 vec4 _f2;
 mat4 _f3;
 _GLF_struct_36 _f4;
 mat3 _f5;
 int _injected_loop_counter;
 _GLF_struct_40 _f6;
} ;

struct _GLF_struct_32 {
 ivec4 _f0;
 uvec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_31 {
 ivec4 _f0;
} ;

struct _GLF_struct_30 {
 mat4x2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_29 {
 bvec4 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 ivec4 _f3;
 mat3x2 _f4;
 bool _f5;
} ;

struct _GLF_struct_33 {
 _GLF_struct_29 _f0;
 bvec4 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
 _GLF_struct_32 _f4;
} ;

struct _GLF_struct_27 {
 bvec2 _f0;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
 ivec3 _f1;
 vec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_25 {
 mat4x3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 uvec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_26 {
 uvec3 _f0;
 mat4x3 _f1;
 _GLF_struct_25 _f2;
} ;

struct _GLF_struct_23 {
 ivec4 _f0;
 uint _f1;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 ivec4 _f3;
 mat2x4 _f4;
 mat3x4 _f5;
 float _f6;
} ;

struct _GLF_struct_21 {
 mat4 _f0;
 uint _f1;
 vec3 _f2;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
} ;

struct _GLF_struct_19 {
 mat3x2 _f0;
 uvec4 _f1;
 uvec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_18 {
 mat3x2 _f0;
 uvec4 _f1;
 ivec4 _f2;
 mat3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_17 {
 int _f0;
 mat4 _f1;
 uint _f2;
 uvec4 _f3;
 mat4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_20 {
 ivec4 _f0;
 uint _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 bvec2 _f4;
 int _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_34 {
 _GLF_struct_20 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_26 _f3;
 uint _f4;
 _GLF_struct_28 _f5;
 uint workgroup_base;
 _GLF_struct_33 _f6;
} ;

struct _GLF_struct_14 {
 uint workgroup_id;
 uvec3 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
 mat2 _f1;
 bool _f2;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 uint _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_13 _f0;
 float _f1;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 vec2 _f1;
 float _f2;
 mat3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 _GLF_struct_9 _f1;
 uint subgroup_id;
} ;

struct _GLF_struct_7 {
 uint _f0;
 bvec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 vec4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat2x3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 mat2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 ivec3 _f1;
 uint next_virtual_gid;
 _GLF_struct_0 _f2;
 uvec4 _f3;
 int _f4;
 _GLF_struct_1 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_8(_GLF_struct_4(mat3(1.0)), _GLF_struct_5(vec2(1.0)), _GLF_struct_6(uvec3(1u), mat2x3(1.0)), _GLF_struct_7(1u, bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))), _GLF_IDENTITY(1u, max(1u, 1u))), vec4(1.0), vec4(1.0)), _GLF_struct_10(mat3(1.0), _GLF_struct_9(bvec3(true), vec2(1.0), 1.0, mat3(1.0), bvec2(true)), gl_SubgroupID));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(63294) : 0)) | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat2(1.0)))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) * mat2(1.0)))[1]) / 1.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
          barrier();
        }
       barrier();
      }
     for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0)) & 43422), min((_GLF_IDENTITY(0, min(0, 0)) & 43422), (_GLF_IDENTITY(0, min(0, 0)) & 43422))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))))))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(vec3(18.69, -3670.4218, _GLF_IDENTITY(_GLF_IDENTITY(8.2, mix(float(_GLF_FUZZED(-7722.1915)), float(8.2), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2501.7308) : 8.2))), vec3(5130.7766, -95.79, _GLF_IDENTITY(91.40, clamp(_GLF_IDENTITY(91.40, (_GLF_IDENTITY(false ? _GLF_FUZZED(-494.017) : 91.40, (true ? false ? _GLF_FUZZED(-494.017) : 91.40 : _GLF_FUZZED(5.1))))), 91.40, 91.40))))))), mix(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(201.935))), 0.0, 1.0)))), float(_GLF_IDENTITY(mat2(float(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(201.935))), 0.0, 1.0)))), 0.0, round(length(normalize(1.0))), 0.0), transpose(_GLF_IDENTITY(transpose(mat2(float(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(201.935))), 0.0, 1.0)))), 0.0, round(length(normalize(1.0))), 0.0)), mat2(mat2x4(transpose(mat2(float(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(201.935))), 0.0, 1.0)))), 0.0, round(length(normalize(1.0))), 0.0))))))))), bool(true))), injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), sqrt(exp(0.0)))), min(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(sqrt(exp(0.0)), mix(float(_GLF_FUZZED(-222.120)), float(sqrt(exp(0.0))), bool(true))))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), sqrt(exp(0.0))))))) > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) && true))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (1) * 1), 1), (clamp(1, _GLF_IDENTITY(1, (1) * 1), 1)) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false)))), bool(bool((_GLF_WRAPPED_IF_FALSE(false)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))) || false, ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))) || (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))))) || false) || _GLF_IDENTITY(false, true && (false))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_WRAPPED_IF_FALSE(false))))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false)))))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), false, false, false)))) || false))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), false, false, false)))) || false))))))) && true)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_WRAPPED_IF_FALSE(false)))) || false)))))), ! (! ((bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bool(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), true && (! ((_GLF_WRAPPED_IF_FALSE(false))))))))))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bool(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), true && (! ((_GLF_WRAPPED_IF_FALSE(false))))))))))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))) && true))))))))) || false))) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.4), max(_GLF_FUZZED(-5.4), _GLF_IDENTITY(_GLF_FUZZED(-5.4), mix(float(_GLF_FUZZED(-5.4)), float(_GLF_FUZZED(-48.02)), bool(false))))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-4.6)), float(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))), bool(true))))))))[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.4), max(_GLF_FUZZED(-5.4), _GLF_IDENTITY(_GLF_FUZZED(-5.4), mix(float(_GLF_FUZZED(-5.4)), float(_GLF_FUZZED(-48.02)), bool(false))))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-4.6)), float(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))), bool(true))))))))[1]), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.4), max(_GLF_FUZZED(-5.4), _GLF_IDENTITY(_GLF_FUZZED(-5.4), mix(float(_GLF_FUZZED(-5.4)), float(_GLF_FUZZED(-48.02)), bool(false))))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-4.6)), float(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))), bool(true))))))))[1])) - vec2(0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(6604.0066)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 & 1) * (int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(94826) : _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0))))) | (_injected_loop_counter ++))) - 0))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(5)) - 0), int(5), int(5)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(false, false), false)))))))
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8)))), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8)))), (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8))))) ^ (0 | 0)), 0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8)))))))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), true, false))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), true, false)))))) || false)))), true, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), false, false)))))))))) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), false))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), false))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true))))))))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), false))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), false))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true)))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || ((false))), false, true, true))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))), false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || ((false))), false, true, true))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))), false))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) && true), true, false), false)))))))), false))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), false))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), false))), false, true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), false))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), false))), false, true)))))))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), false))), false))), false, true)), true))))), false))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true, ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true))), true, false)))) && true))))))))))) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, true))), true && (_GLF_IDENTITY((false) || false, ((false) || false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_13(_GLF_struct_12(ivec3(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0)))), mat4x3(1.0), mat3x2(1.0), 1u, bvec4(true)), ivec4(1)), 1.0, _GLF_struct_15(_GLF_struct_14(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))) | (gl_WorkGroupID)))).x, _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(129554u, 65266u, 194188u)) : uvec3(1u)))), mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), true));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), (_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(14.71)), float(dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), bool(true)))) * _GLF_IDENTITY(1.0, (1.0) / 1.0)), dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2294.8107)), float(1.0), bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false))), bool(true)))), 0.0, 0.0)), 0.0)), (dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(8.3, 1.0, -1646.1960, -463.705)) : _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))), _GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false))), bool(true)))), 0.0, 0.0)), mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false))), bool(true)))), 0.0, 0.0))), bool(true))), 0.0), (vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), (false ? _GLF_FUZZED(-74.20) : _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), (false ? _GLF_FUZZED(-721.711) : _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), float(mat4x3(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), bool(true)))), 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.5), max(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5)))), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false))), bool(true)))), 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false))), bool(true)))))), 0.0, 0.0))), bool(true))), 0.0)) * mat4(1.0)))) * 1.0), dot(_GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0)))))), 0.0), mix(vec4(_GLF_FUZZED(_GLF_IDENTITY(-54.45, 1.0 * (-54.45))), _GLF_FUZZED((7.2 / -6.6)), _GLF_FUZZED(-4959.6456), (vec4(0.0, 1.0, 0.0, 0.0))[3]), vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], (vec4(0.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED((-70.87 * 5.6))), bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.6) : injectionSwitch.x)) < injectionSwitch.y)), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), vec4(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-24.20)), _GLF_IDENTITY(float(mat3(float(_GLF_FUZZED(-24.20)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(7.6), _GLF_IDENTITY((vec2(1.0, 0.0))[1], min((vec2(1.0, 0.0))[1], (vec2(1.0, 0.0))[1]))), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(388.910)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(0.0, 1.0))))), 0.0, 0.0, 1.0)), _GLF_IDENTITY((float(mat3(float(_GLF_FUZZED(-24.20)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 0.0, 0.0, 1.0))) / 1.0, max((float(mat3(float(_GLF_FUZZED(-24.20)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 0.0, 0.0, 1.0))) / 1.0, (float(mat3(float(_GLF_FUZZED(-24.20)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 0.0, 0.0, 1.0))) / 1.0)))), bool(false))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)), false, false)))))))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(1.0), min((vec4(0.0, 1.0, 0.0, 0.0)) * mat4(1.0), (vec4(0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))), bool(true)))), 0.0, 0.0)), 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2((_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 0.0), mat2(1.0) * (mat2((_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 0.0)))), (true ? float(_GLF_IDENTITY(mat2((_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 0.0), mat2(1.0) * (mat2((_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 0.0)))) : _GLF_FUZZED(-10.55)))) - 0.0), 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false))), bool(true)))), 0.0, 0.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), min(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-24.20), max(_GLF_FUZZED(-24.20), _GLF_FUZZED(-24.20)))), bool(false))), bool(true)))), 0.0, 0.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5167.6597)), bool(false))), 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false)), mix(float(_GLF_FUZZED(91.38)), float(mix(float(0.0), float(_GLF_FUZZED(-24.20)), bool(false))), bool(true)))), 0.0, 0.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) : _GLF_FUZZED(8.9))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0))), (float(mat3(injectionSwitch.y, log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((+ 9321.4036)) : 1.0), (_GLF_IDENTITY((false ? _GLF_FUZZED((+ 9321.4036)) : 1.0), max((false ? _GLF_FUZZED((+ 9321.4036)) : 1.0), (false ? _GLF_FUZZED((_GLF_IDENTITY(+ 9321.4036, clamp(_GLF_IDENTITY(+ 9321.4036, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(76.54) : _GLF_IDENTITY(+ 9321.4036, clamp(+ 9321.4036, + 9321.4036, + 9321.4036)))), + 9321.4036, + 9321.4036)))) : 1.0)))) - abs(0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED((+ 9321.4036)) : 1.0), (_GLF_IDENTITY((false ? _GLF_FUZZED((+ 9321.4036)) : 1.0), max(_GLF_IDENTITY((false ? _GLF_FUZZED((+ 9321.4036)) : 1.0), clamp((false ? _GLF_FUZZED((+ 9321.4036)) : 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((+ 9321.4036)) : 1.0), min((false ? _GLF_FUZZED((+ 9321.4036)) : 1.0), (false ? _GLF_FUZZED((+ 9321.4036)) : 1.0))), (false ? _GLF_FUZZED((+ 9321.4036)) : 1.0))), (false ? _GLF_FUZZED((_GLF_IDENTITY(+ 9321.4036, clamp(_GLF_IDENTITY(+ 9321.4036, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(76.54) : _GLF_IDENTITY(+ 9321.4036, clamp(+ 9321.4036, + 9321.4036, + 9321.4036)), 0.0 + (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(76.54) : _GLF_IDENTITY(+ 9321.4036, clamp(+ 9321.4036, + 9321.4036, + 9321.4036)), mix(float(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(76.54) : _GLF_IDENTITY(+ 9321.4036, clamp(+ 9321.4036, + 9321.4036, + 9321.4036))), float(_GLF_FUZZED(-429.310)), bool(false))))))), + 9321.4036, + 9321.4036)))) : 1.0)))) - abs(0.0))) / 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((+ 9321.4036)) : 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((+ 9321.4036)) : 1.0)), float(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((+ 9321.4036)) : 1.0))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((+ 9321.4036)) : 1.0)))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((+ 9321.4036)) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((+ 9321.4036)) : 1.0)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED((+ 9321.4036)) : 1.0, clamp(false ? _GLF_FUZZED((+ 9321.4036)) : 1.0, false ? _GLF_FUZZED((+ 9321.4036)) : 1.0, false ? _GLF_FUZZED((+ 9321.4036)) : 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.66)), float(1.0), bool(true)))) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(6.2, min(_GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED(-157.769)), float(6.2), bool(true))), _GLF_IDENTITY(6.2, mix(float(6.2), float(_GLF_FUZZED(-28.44)), bool(false))))), 241.987), 614.244)))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))))[1]), vec2(_GLF_FUZZED(-702.026), _GLF_FUZZED(1.2)), bvec2(false, false))), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.66)), float(1.0), bool(true)))) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(6.2, min(_GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED(-157.769)), float(6.2), bool(true))), _GLF_IDENTITY(6.2, mix(float(6.2), float(_GLF_FUZZED(-28.44)), bool(false))))), 241.987), 614.244)))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))))[1]), vec2(_GLF_FUZZED(-702.026), _GLF_FUZZED(1.2)), bvec2(false, false))), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))), clamp(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.66)), float(1.0), bool(true)))) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(6.2, min(_GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED(-157.769)), float(6.2), bool(true))), _GLF_IDENTITY(6.2, mix(float(6.2), float(_GLF_FUZZED(-28.44)), bool(false))))), 241.987), 614.244)))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))))[1]), vec2(_GLF_FUZZED(-702.026), _GLF_FUZZED(1.2)), bvec2(false, false))), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.66)), float(1.0), bool(true)))) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(6.2, min(_GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED(-157.769)), float(6.2), bool(true))), _GLF_IDENTITY(6.2, mix(float(6.2), float(_GLF_FUZZED(-28.44)), bool(false))))), 241.987), 614.244)))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))))[1]), vec2(_GLF_FUZZED(-702.026), _GLF_FUZZED(1.2)), bvec2(false, false))), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.66)), float(1.0), bool(true)))) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(6.2, min(_GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED(-157.769)), float(6.2), bool(true))), _GLF_IDENTITY(6.2, mix(float(6.2), float(_GLF_FUZZED(-28.44)), bool(false))))), 241.987), 614.244)))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))))[1]), vec2(_GLF_FUZZED(-702.026), _GLF_FUZZED(1.2)), bvec2(false, false))), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-25.66)), float(1.0), bool(true)))) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(6.2, min(_GLF_IDENTITY(6.2, mix(float(_GLF_FUZZED(-157.769)), float(6.2), bool(true))), _GLF_IDENTITY(6.2, mix(float(6.2), float(_GLF_FUZZED(-28.44)), bool(false))))), 241.987), 614.244)))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(mod(vec2(6.2, 241.987), 614.244)))))[1]), vec2(_GLF_FUZZED(-702.026), _GLF_FUZZED(1.2)), bvec2(false, false))), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0)))), 0.0), clamp(vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0)))), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), clamp(determinant(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(262.470), _GLF_FUZZED(_GLF_IDENTITY(-8.4, clamp(-8.4, -8.4, -8.4))), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(877.827))), 1.0)), 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_IDENTITY(_GLF_FUZZED((- 1.0)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 1.0)), min(_GLF_FUZZED((- 1.0)), _GLF_FUZZED((- 1.0)))), _GLF_IDENTITY(_GLF_FUZZED((- 1.0)), (_GLF_FUZZED((- 1.0))) / 1.0), _GLF_FUZZED((- 1.0))))), bvec3(true, true, false))))), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-563.004), mix(float(_GLF_FUZZED(-563.004)), float(_GLF_FUZZED(-4.5)), bool(false)))), bool(false))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))) ? _GLF_FUZZED(-9.2) : determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-9.2) : determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-9.2) : determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)) : _GLF_FUZZED(log(2884.1655))))) / 1.0))), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))), 1.0, exp(0.0), 1.0, 1.0, 0.0))), injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, log(1.0)))) / 1.0))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = ((1 & int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))), ! (! (false))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_20(ivec4(1), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), clamp(_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | 0u), uint(uint(1u)), uint(uint(1u))))), _GLF_struct_17(_GLF_IDENTITY(1, (1) ^ 0), mat4(1.0), 1u, uvec4(1u), mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0))), 1.0, 1.0))), mat2x3(1.0)), _GLF_struct_18(mat3x2(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1))))) ^ ivec4(0, 0, 0, 0)), _GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0))), mat4x2(1.0)), bvec2(true), 1, _GLF_struct_19(mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))), uvec3(1u), true)), _GLF_struct_22(_GLF_struct_21(mat4(1.0), 1u, vec3(1.0))), _GLF_struct_24(_GLF_struct_23(ivec4(1), 1u), mat2x4(1.0), mat3x2(1.0), ivec4(1), mat2x4(1.0), mat3x4(1.0), 1.0), _GLF_struct_26(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), ~ (~ (uvec3(uvec4(uvec3(1u), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), mat4x3(1.0), _GLF_struct_25(mat4x3(1.0), mat4x3(1.0), mat2x3(1.0), uvec4(1u), bvec2(true))), 1u, _GLF_struct_28(_GLF_struct_27(bvec2(true)), ivec3(1), vec3(1.0), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec4(ivec3(1), 1)), max(ivec3(ivec4(ivec3(1), 1)), ivec3(ivec4(ivec3(1), 1)))))), workgroup_size * _GLF_struct_replacement_16._f2._f0.workgroup_id, _GLF_struct_33(_GLF_struct_29(bvec4(true), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(-9338.0278) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))), (false ? _GLF_FUZZED(63.55) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(475.075) : 1.0)), mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(-8097.8246)), bool(false))))), max(1.0, 1.0))))), mat4x3(1.0), ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), mat3x2(1.0), true), bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, true, _GLF_IDENTITY(true, ! (! (true))))))), _GLF_struct_30(mat4x2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, cos(determinant(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + tan(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.3)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (0.0) / 1.0), 0.0)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-942.312) : 1.0)), 0.0))), length(0.0))))), mat2x3(1.0)), _GLF_struct_31(_GLF_IDENTITY(ivec4(1), (ivec4(1)) / ivec4(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(85487) : (~ (1)))), clamp(~ _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(85487) : (~ (1)))), ~ _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(85487) : (~ (1)))), ~ _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(85487) : (~ (1))))))), 1, 1))), _GLF_struct_32(ivec4(_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(50091u, 92474u, 50511u)) : _GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED(uvec3(29398u, 149960u, 11746u)))), uvec3(1u), uvec3(1u))))), (uvec3(1u)) + uvec3(0u, 0u, 0u)))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = _GLF_struct_replacement_11._f1.subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9862.3438) : injectionSwitch.y), (true ? (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9862.3438) : injectionSwitch.y) : _GLF_FUZZED(floor(-7.1)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) << _GLF_IDENTITY(int(7), int(7))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))) && true), bool(bvec4((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))), true, true, true))), ((! (false))) || false))))))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))), false, false)), (bool(bvec3(_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))), false, false))) && true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, true, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, true, true))))) || false); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))), true)))))))
                {
                }
               else
                {
                 do
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.1)))))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true))))))));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(_GLF_struct_41 _GLF_struct_replacement_41 = _GLF_struct_41(mat3x4(1.0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_IDENTITY(_GLF_FUZZED(-71250), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), min(~ (int(1)), ~ (int(1))))))))), min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))))), int(int(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), min(~ (int(1)), ~ (int(1))))))))), min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ _GLF_IDENTITY((int(1)), ((int(1))) - 0)))))), min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), (false ? _GLF_FUZZED(67480) : 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))))))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), max(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))), _GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), (_GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), ~ (~ (min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))))))) ^ ivec3(0, 0, 0)))))))) | (_GLF_FUZZED(-71250)))))) >> 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_IDENTITY(_GLF_FUZZED(-71250), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), min(~ (int(1)), ~ (int(1))))))))), min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))))), int(int(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), min(~ (int(1)), ~ (int(1))))))))), min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ _GLF_IDENTITY((int(1)), ((int(1))) - 0)))))), min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), (false ? _GLF_FUZZED(67480) : 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))))))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), max(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))), _GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), (_GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), ~ (~ (min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))))))) ^ ivec3(0, 0, 0)))))))) | (_GLF_FUZZED(-71250)))))) >> 0)), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_IDENTITY(_GLF_FUZZED(-71250), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), min(~ (int(1)), ~ (int(1))))))))), min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))))), int(int(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), min(~ (int(1)), ~ (int(1))))))))), min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ _GLF_IDENTITY((int(1)), ((int(1))) - 0)))))), min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), (false ? _GLF_FUZZED(67480) : 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))))))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), max(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))), _GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), (_GLF_IDENTITY(min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))), ~ (~ (min(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-71250), (_GLF_FUZZED(-71250)) | 0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))))))) ^ ivec3(0, 0, 0)))))))) | (_GLF_FUZZED(-71250)))))) >> 0))))) >> ivec2(0, 0)), vec4(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(631.337)))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), (mat4(1.0)) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_struct_36(_GLF_struct_35(ivec4(1), uvec4(1u))), mat3(1.0), 0, _GLF_struct_40(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)), uvec2(1u), vec3(1.0), _GLF_struct_37(bvec3(true), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), vec4(1.0), vec3(1.0)), _GLF_struct_38(mat2x3(1.0), mat2(1.0), _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0)))), mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) * (transpose(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) * mat3(1.0)))))))))))), bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false)))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false)))), false)))))))))))), mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, tan(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(95.76) : 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3((false ? _GLF_FUZZED(95.76) : 0.0), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x)), mat3(mat3x4(mat3((false ? _GLF_FUZZED(95.76) : 0.0), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(mat4x2(float(_GLF_IDENTITY(mat3((false ? _GLF_FUZZED(95.76) : 0.0), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x)), mat3(mat3x4(mat3((false ? _GLF_FUZZED(95.76) : 0.0), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))))), log(1.0), 1.0)))))), _GLF_struct_39(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bool((true))))) && true)), _GLF_IDENTITY(((! (true))) && true, bool(bvec4(_GLF_IDENTITY(((! (true))) && true, bool(bvec3(((! (true))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true, true)))))), (! (_GLF_IDENTITY(true, ! (! (true))))) || false))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && _GLF_IDENTITY(true, false || (true)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (true), true, false), bvec3(bvec4(bvec3(! (true), true, false), false))))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(true, bool(bool(true))))), true, true, true)), (bool(bvec4((! (true)), true, true, true))) && true))))))), (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), (_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(_GLF_IDENTITY(vec3(injectionSwitch[0], 1.0, 1.0), vec3(mat3(vec3(injectionSwitch[0], 1.0, 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), true, false))))))) || false))))) && true)))) || false))), true, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), ! (! (_GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (true), true, false), bvec3(bvec4(bvec3(! (true), true, false), false))))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(true, bool(bool(true))))), true, true, true)), (bool(bvec4((! (true)), true, true, true))) && true))))))), (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), (_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(_GLF_IDENTITY(vec3(injectionSwitch[0], 1.0, 1.0), vec3(mat3(vec3(injectionSwitch[0], 1.0, 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), true, false))))))) || false))))) && true)))) || false))), true, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), ! (! (_GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (true), true, false), bvec3(bvec4(bvec3(! (true), true, false), false))))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(true, bool(bool(true))))), true, true, true)), (bool(bvec4((! (true)), true, true, true))) && true))))))), (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), (_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(_GLF_IDENTITY(vec3(injectionSwitch[0], 1.0, 1.0), vec3(mat3(vec3(injectionSwitch[0], 1.0, 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), true, false))))))) || false))))) && true)))) || false))), true, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), ! (! (_GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (true), true, false), bvec3(bvec4(bvec3(! (true), true, false), false))))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(true, bool(bool(true))))), true, true, true)), (bool(bvec4((! (true)), true, true, true))) && true))))))), (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), (_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(_GLF_IDENTITY(vec3(injectionSwitch[0], 1.0, 1.0), vec3(mat3(vec3(injectionSwitch[0], 1.0, 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), true, false))))))) || false))))) && true)))) || false))), true, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), ! (! (_GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (true), true, false), bvec3(bvec4(bvec3(! (true), true, false), false))))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(true, bool(bool(true))))), true, true, true)), (bool(bvec4((! (true)), true, true, true))) && true))))))), (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), (_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(_GLF_IDENTITY(vec3(injectionSwitch[0], 1.0, 1.0), vec3(mat3(vec3(injectionSwitch[0], 1.0, 1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((- 9896.5124))), vec2(_GLF_FUZZED(vec3(-53.30, 2.3, -8.8).g), (vec2(1.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch)).y)), true, true)), ! (! (bool(bvec4((! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(vec3(injectionSwitch[0], 1.0, 1.0)), max(float(vec3(injectionSwitch[0], 1.0, 1.0)), float(vec3(injectionSwitch[0], 1.0, 1.0))))), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)), true, true)))))) && true, false), true, false))))))) || false))))) && true)))) || false))), true, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))), true && (! (! (true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), ! (! (_GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), false, true))))))), true, false, false))), (injectionSwitch.x < injectionSwitch.y)))))))))), false))))))))), mat3x2(1.0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_41._injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_struct_replacement_41._injected_loop_counter, clamp(_GLF_IDENTITY(_GLF_struct_replacement_41._injected_loop_counter, ~ (~ (_GLF_struct_replacement_41._injected_loop_counter))), _GLF_IDENTITY(_GLF_struct_replacement_41._injected_loop_counter, max(_GLF_struct_replacement_41._injected_loop_counter, _GLF_struct_replacement_41._injected_loop_counter)), _GLF_struct_replacement_41._injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)))), true && (! (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_41._injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_41._injected_loop_counter ++, (_GLF_struct_replacement_41._injected_loop_counter ++) << 0), (true ? _GLF_IDENTITY(_GLF_struct_replacement_41._injected_loop_counter ++, (_GLF_struct_replacement_41._injected_loop_counter ++) << _GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(3), int(3))))) : _GLF_FUZZED(55511))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true))))))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint virtual_gid = _GLF_struct_replacement_34.workgroup_base + subgroup_base + subgroup_local_id;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(ivec2(1), ivec3(1), _GLF_struct_replacement_34.workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u)))) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))))) + 1)))) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), max((_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY(1, min(1, 1))))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), 1u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), 1u, 1u)) - uvec3(0u, 0u, 0u))))), (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), max((_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY(1, min(1, 1))))) - 0)), max((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (subgroup_local_id + 1)))) | ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (187791u & 0u))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(13935u))))) % subgroup_size, (true ? _GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1))))) | (ivec2(1, 1))), ivec2(0, 0) | (ivec2(1, 1))))), 0 + _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), ((1)) / 1)))), 1), min(1, 1))))) - 0, (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))), 0 + (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))), 0 + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))), 0 + (1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))), 0 + (1))))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))), 0 + (1)))), 1), min(1, 1))))) - 0, (true ? (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1)), 1), ivec2(0, 0) | (ivec2(1, 1))))), 0 + (1)), 1), min(1, 1))))) - 0 : _GLF_FUZZED(-3212)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, (0u) / 1u)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))))))), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(13935u), min(_GLF_IDENTITY(_GLF_FUZZED(13935u), (true ? _GLF_FUZZED(13935u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(13935u), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_FUZZED(13935u)))))), min((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(13935u), min(_GLF_IDENTITY(_GLF_FUZZED(13935u), (true ? _GLF_FUZZED(13935u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(13935u), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_FUZZED(13935u)))))), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(13935u), min(_GLF_IDENTITY(_GLF_FUZZED(13935u), (true ? _GLF_FUZZED(13935u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(13935u), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_FUZZED(13935u)))))), ((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(13935u), min(_GLF_IDENTITY(_GLF_FUZZED(13935u), (true ? _GLF_FUZZED(13935u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(13935u), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_FUZZED(13935u))))))) ^ 0u)))))) % subgroup_size : _GLF_FUZZED((subgroup_size >> subgroup_size))))), _GLF_struct_0(mat4x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), _GLF_IDENTITY(0u, 0u + (0u)) ^ (_GLF_IDENTITY(min(1u, 1u), min(_GLF_IDENTITY(min(1u, 1u), 0u ^ (min(1u, 1u))), min(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))), (true ? ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) : _GLF_FUZZED(subgroup_base))), ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))))), 1u)))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), _GLF_IDENTITY(0u, 0u + (0u)) ^ (_GLF_IDENTITY(min(1u, 1u), min(_GLF_IDENTITY(min(1u, 1u), 0u ^ (min(1u, 1u))), min(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))), (true ? ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) : _GLF_FUZZED(subgroup_base))), ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))))), 1u))))))) ^ 0u))), uvec4(1u), 1, _GLF_struct_1(mat4x3(1.0), mat2x3(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u))), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(1448.0940)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)), max(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(1.0, 1.0))) * 1.0)), 1.0 * (max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)))))), bool(true))) : _GLF_FUZZED(-3771.8113)), float(mat3x2((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(1448.0940)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)), max(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(1.0, 1.0))) * 1.0)), 1.0 * (max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)))))), bool(true))) : _GLF_FUZZED(-3771.8113)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0)))) - 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(-8272.5413, clamp(-8272.5413, -8272.5413, -8272.5413)))))), _GLF_IDENTITY(bool(true), false || (bool(true))))) : _GLF_FUZZED(-3771.8113)), clamp((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0)))) - 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(-8272.5413, clamp(-8272.5413, -8272.5413, -8272.5413)))))), _GLF_IDENTITY(bool(true), false || (bool(true))))) : _GLF_FUZZED(-3771.8113)), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0)))) - 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(-8272.5413, clamp(-8272.5413, -8272.5413, -8272.5413)))))), _GLF_IDENTITY(bool(true), false || (bool(true))))) : _GLF_FUZZED(-3771.8113)), _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0)))) - 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(-8272.5413, clamp(-8272.5413, -8272.5413, -8272.5413)))))), _GLF_IDENTITY(bool(true), false || (bool(true))))) : _GLF_FUZZED(-3771.8113)), min((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0)))) - 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(-8272.5413, clamp(-8272.5413, -8272.5413, -8272.5413)))))), _GLF_IDENTITY(bool(true), false || (bool(true))))) : _GLF_FUZZED(-3771.8113)), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0)))) - 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(-8272.5413, clamp(-8272.5413, -8272.5413, -8272.5413)))))), _GLF_IDENTITY(bool(true), false || (bool(true))))) : _GLF_FUZZED(-3771.8113)))))), ((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3769.0728)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0)), clamp(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-40.40)))))))) * 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) * 1.0)))))), bool(true))) : _GLF_FUZZED(-3771.8113))) / 1.0)) - 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, sin(0.0), 0.0, sin(sin(0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, sin(0.0), 0.0, sin(sin(0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))))), 1.0)))))));
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))) + 0u), virtual_gid))))], 4, _GLF_IDENTITY(64, ~ (~ (64))), 2);
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bool((_GLF_DEAD(false)) || false)))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     do
      {
       if(_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), uint(uvec3(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u), (0u | 0u), 1u))), 0u + ((subgroup_local_id % 2)))) | ((subgroup_local_id % 2)))) ^ 0u) == 0)
        {
         do
          {
           atomicStore(buf[_GLF_struct_replacement_3._f0.next_virtual_gid], uint(1), 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-796.317) : injectionSwitch.y))))))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter)) != _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), ((0) | (0)) * 1)) >> _GLF_IDENTITY(int(1), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0)) | 0), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, max(0, 0)) | 0), 1, (1 ^ 1), 0), (ivec4((_GLF_IDENTITY(0, max(0, 0)) | 0), 1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))) ^ 1), 0)) ^ ivec4(0, 0, 0, 0)))) << _GLF_IDENTITY(int(1), int(1)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), ((0) | (0)) * 1)) >> _GLF_IDENTITY(int(1), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0)) | 0), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, max(0, 0)) | 0), 1, (1 ^ 1), 0), (ivec4((_GLF_IDENTITY(0, max(0, 0)) | 0), 1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))) ^ 1), 0)) ^ ivec4(0, 0, 0, 0)))) << _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), ((0) | (0)) * 1)) >> _GLF_IDENTITY(int(1), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, max(0, 0)) | 0), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, max(0, 0)) | 0), 1, (1 ^ 1), 0), (ivec4((_GLF_IDENTITY(0, max(0, 0)) | 0), 1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))) ^ 1), 0)) ^ ivec4(0, 0, 0, 0)))) << _GLF_IDENTITY(int(1), int(1))))) * 1)))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, false)), true && (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, false))))))
                {
                 barrier();
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), float(vec3(tan(0.0), 1.0, exp(0.0))))) - 0.0), float(mat4x2(tan(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 1.0), (true ? mat3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), float(vec3(tan(0.0), 1.0, exp(0.0))))) - 0.0), float(mat4x2(tan(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 1.0) : _GLF_FUZZED((+ mat3(-78.02, -7.2, -85.09, 6454.4774, 1.8, -1.9, -64.03, -2.9, -9.6)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1506.3781)), bool(false)))))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (log(1.0)) / 1.0), 1.0)))), (false ? _GLF_FUZZED(92319) : int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(49369)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(84.38)), bvec2(true, false))).x), float(mat3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(160.467)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 1.0)))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-8474.9942)), bool(false))), float(mat3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(-56.69, 1748.3690, -1.3, -8042.9203).r)), float(1.0), bool(true))), min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), (log(1.0)) / 1.0), 1.0)))), (false ? _GLF_FUZZED(92319) : int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(49369)), min(_GLF_FUZZED(float(49369)), _GLF_FUZZED(float(49369)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(84.38)), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false))).x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), (log(1.0)) / 1.0), 1.0)))))))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), _GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(((uvec2(119528u, 56431u) ^ subgroup_size) , 1297.2507)) : log(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 1.0, 0.0, 1.0)))))))))))), log(1.0), log(1.0)))) / 1.0), 1.0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), _GLF_IDENTITY(1.0, float(mat4x3(1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0)))))))))))) & _GLF_IDENTITY(ivec2(7462, 27116).t, max(ivec2(7462, 27116).t, _GLF_IDENTITY(ivec2(7462, 27116).t, (ivec2(7462, 27116).t) | 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (int(4))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ((0) - 0) | ((0) - 0)))), (0 >> _GLF_IDENTITY(int(5), int(5))) | ((_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ((0) - 0) | ((0) - 0)))))) << 0)) + (0 & -4650)) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(0 | (int(4)), (_GLF_IDENTITY(0 | (int(4)), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ((0 >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(6), int(6))) + (_GLF_FUZZED(_injected_loop_counter))) : _GLF_IDENTITY(0 | (int(4)), (true ? 0 | (int(4)) : _GLF_FUZZED(_injected_loop_counter)))))) + 0))))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                        barrier();
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2036.3134), _GLF_FUZZED(-17.93)), bvec2(false, false)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 barrier();
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(97.76) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))) > injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          barrier();
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ((false)) || false)))) && true), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))), false || (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))))) && _GLF_IDENTITY(true, ! (! (true))))))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) && true)) && true)) && true), _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0)), (mat2x3(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y)) && (_GLF_IDENTITY((! (false)), ((! (false))) && true))) && true)))))));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(buf[_GLF_struct_replacement_3._f0.next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) << 0));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY((0 & 56642), (true ? (0 & 56642) : _GLF_FUZZED(14146))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true))), bvec2(bvec4(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, false), false))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), (dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0))) - 0.0)), 1.0), (vec3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), (dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0))) - 0.0)), 1.0)) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y) || false)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) || false)), true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && true))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), true)))))), false, false), false))))), _GLF_IDENTITY(bool(bvec2((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), (dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0))) - 0.0)), 1.0), (vec3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), (dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0))) - 0.0)), 1.0)) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y) || false)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) || false)), true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && true))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), true)))))), false, false), false))))), true)), bool(bvec4(bool(bvec2((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), (dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0))) - 0.0)), 1.0), (vec3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0)), (dot(vec3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0))) - 0.0)), 1.0)) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y) || false)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) || false)), true)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && true))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), true)))))), false, false), false))))), true)), true, true, true))))))) && true)))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(20.65) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3636.4175)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(20.65) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3636.4175)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y)), true, false), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), false)), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).y)), true, false), false)))), true, true, _GLF_IDENTITY(false, bool(bool(false)))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(20.65) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3636.4175)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(20.65) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3636.4175)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y)), true, false), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), false)), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).y)), true, false), false)))), true, true, _GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(20.65) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3636.4175)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(20.65) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3636.4175)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y)), true, false), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)), false)), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).y)), true, false), false)))), true, true, _GLF_IDENTITY(false, bool(bool(false)))))))), true, false))))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.3, 597.187)))).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-82.38) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.3, 597.187)))).x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))), 0 ^ (~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))))), ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))))))) >> 0), 64, 4);
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
