#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), 1.0, 1.0)), float(mat2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7503.9934)), bool(false))), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? normalize(vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(-7.7, -79.99, 5.9)))), normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 1.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.7) : 0.0)), 1.0, 0.0, 0.0, 0.0)), 1.0))), 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), 1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, 0.0)), (true ? float(mat2(1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-9.3)))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0)))))))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), 1.0, 1.0)), float(mat2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), 1.0, 1.0)), 1.0, 1.0, 1.0)))))))) || false)), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) / 1.0)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), float(mat2(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), 1.0, 1.0)), 1.0, 1.0, 1.0)))))))) || false)), false, true)))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), 1.0, 1.0)), float(mat2(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), 1.0, 1.0)), 1.0, 1.0, 1.0)))))))) || false)), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y) / 1.0)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), float(mat2(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, sin(0.0), 1.0, 1.0)), 1.0, 1.0, 1.0)))))))) || false)), false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_DEAD(false))), false)), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false)))))), false || _GLF_IDENTITY((false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false))))))), bool(bvec4((false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false))))))), true, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((true), false), bvec2(bvec3(bvec2((true), false), false)))))))))))))), (bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((true), false), bvec2(bvec3(bvec2((true), false), false))))))))))))))) || false), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-6276.3939, -49.77, -2.8, -6835.4395, -1.3, -80.56, -1180.6667, 0.1, 6.0, -7.6, 6.6, 7.5)) : mat3x4(injectionSwitch, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), (true ? vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-6276.3939, -49.77, -2.8, -6835.4395, -1.3, -80.56, -1180.6667, 0.1, 6.0, -7.6, 6.6, 7.5)) : mat3x4(injectionSwitch, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((true), false), bvec2(bvec3(bvec2((true), false), false)))))))))))))), (bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((true), false), bvec2(bvec3(bvec2((true), false), false))))))))))))))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false))))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3.5)), (float(_GLF_FUZZED(-3.5))) / _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-93.24)), bool(false)))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), 0.0 + (max(0.0, 0.0))))), bool(_GLF_IDENTITY(true, (true) && true)))), 0.0, 0.0)), max(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.6) : 0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(false ? _GLF_FUZZED(-2.6) : 0.0, clamp(false ? _GLF_FUZZED(-2.6) : 0.0, false ? _GLF_FUZZED(-2.6) : 0.0, false ? _GLF_FUZZED(-2.6) : 0.0)), exp(0.0), 1.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0), (true ? mat3x4(_GLF_IDENTITY(false ? _GLF_FUZZED(-2.6) : 0.0, clamp(false ? _GLF_FUZZED(-2.6) : 0.0, false ? _GLF_FUZZED(-2.6) : 0.0, false ? _GLF_FUZZED(-2.6) : 0.0)), exp(0.0), 1.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat3x4(6.3, 6.3, -4.7, -4439.2060, -8.7, -7.6, -24.73, 5.2, -8823.1299, 8.3, 53.85, -88.92)))))))), sin(0.0), 0.0, 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(-6131.6345) : sin(0.0), (false ? _GLF_FUZZED(-6131.6345) : sin(0.0)) / 1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)))))).y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))), log(1.0), 0.0))), vec2(1.0, 1.0)))).y, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9165.5972)))))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9165.5972)))))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0))), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9165.5972)))))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9165.5972)))))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9165.5972)))))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9165.5972)))))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, 1.0, 0.0)))))))))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), float(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), 1.0, tan(0.0))))))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0 + ((_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), tan(0.0), 1.0, 1.0, 1.0, 0.0))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))) && (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, abs(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), log(1.0), sqrt(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), log(1.0), sqrt(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), clamp(dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), log(1.0), sqrt(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), log(1.0), sqrt(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(round(length(normalize(vec2(1.0, 1.0)))), log(1.0), sqrt(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))))), 1.0, 0.0))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true))), (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true)))) || false))))))), false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (~ (gl_NumWorkGroups)))))) | _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), 0u), (uvec4((gl_NumWorkGroups), 0u)) >> uvec4(0u, 0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4((gl_NumWorkGroups), 0u))), (uvec4((gl_NumWorkGroups), 0u)) >> uvec4(0u, 0u, 0u, 0u))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-1243.6537)), bool(false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(5.0, -68.51), -9054.1470, -96.14)))).y)) && (! (! (false)))))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))))), false || (true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))))), clamp(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))))))))))).y)) && (! (! (false)))))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! _GLF_IDENTITY((false), false || ((false)))))))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (! (! (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (! (! (false)))))) && true)), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, false))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, false))))), false, true)), ! (! (bool(bvec3(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, false))))), false, true))))))))), bool(bool(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), false))), true)))))), ! (! (false)))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))))))), ! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (false)), true, false)))))))), (_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (false)), true, false)))))))), (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(! (! (false)), true, false))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, false))))))), _GLF_IDENTITY(bool(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false)))))))))))))))))), (bool(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))))))))))))) && true)))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), _GLF_IDENTITY(true && (bool(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), true))))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))))))))), (_GLF_IDENTITY(true, (true) && true) && (bool(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(! (! (false)), true, false))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(true, (true) && true), false))))), true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(true, (true) && true), false))))), true))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(true, (true) && true), false))))), true)))))))), bool(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(true, (true) && true), false))))), true)))))))), false))))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), false))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))))) || false)))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))))), ! (! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false))))))))))), bool(bool(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (! ((! (false)))))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (_GLF_IDENTITY(! (false), true && (! (false)))), true, false))))))))))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))))))), ! (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) || false)) && _GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) || false)) && true), true && (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) || false)) && true)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))))), ! (! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false))))))))))), bool(bool(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (! ((! (false)))))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (_GLF_IDENTITY(! (false), true && (! (false)))), true, false))))))))))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))))))), ! (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) || false)) && _GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) || false)) && true), true && (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) || false)) && true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))))), ! (! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false))))))))))), bool(bool(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! _GLF_IDENTITY((false), ((false)) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) || false)), true && (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) || false))))))), ((! (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))) && true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))))))))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))), false))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))), false))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))), false))))))))), bool(bvec4((_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))), false))))))))), true, false, false)))) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (! ((! (false)))))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (_GLF_IDENTITY(! (false), true && (! (false)))), true, false))))))))))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))))))), ! (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) || false)) && _GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))), bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), (_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), ! (! (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))))))) || false), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) || false)) && true), true && (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))) && true)))))))))))), (! (! (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))), true && (bool(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))))))))) || false)) && true))))))))))) || false))))))))))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(902.902)), bool(false)))), float(_GLF_FUZZED(-5.4)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0), _GLF_IDENTITY(mat2x4(mat4(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(902.902)), bool(false)))), float(_GLF_FUZZED(-5.4)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0), (mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(902.902)), bool(false)))), float(_GLF_FUZZED(-5.4)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0)) * mat2(1.0)))), (mat2x4(mat4(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(902.902)), bool(false)))), float(_GLF_FUZZED(-5.4)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0), (mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(902.902)), bool(false)))), float(_GLF_FUZZED(-5.4)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), 1.0, log(1.0), 1.0)) * mat2(1.0))))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y)))), false, true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / abs(exp(0.0))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)))), (_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(((_GLF_DEAD(false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((_GLF_DEAD(false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (((_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))) || false))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-2.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))) && true))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base)))) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))))) ^ 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), min(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) << 0))), ((_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) << 0)))) >> 0), (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(1, (1) ^ 0) * (4))), clamp((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), min(1 * (4), 1 * (4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4))))))), min((_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4))) >> 0), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-52498) : 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4))))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, (4) * 1))))))))))))) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4))) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-39097) : 0))))), 64, 4);
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) | (4)))), 64, 2);
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, 0u | (read_val))) ^ 0u))))), (uint(subgroupAllEqual(read_val))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) - 0u), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((uint(subgroupAllEqual(read_val))) - 0u, ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))) - 0u) << 0u))) >> 0u)) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((uint(subgroupAllEqual(read_val))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))) - 0u, ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))) - 0u) ^ (0u ^ (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(_GLF_IDENTITY((uint(subgroupAllEqual(read_val))) - 0u, ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))) - 0u) << 0u), (_GLF_IDENTITY((uint(subgroupAllEqual(read_val))) - 0u, ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))) - 0u) << 0u)) / 1u)) : _GLF_FUZZED(workgroup_id), (true ? _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(_GLF_IDENTITY((uint(subgroupAllEqual(read_val))) - 0u, ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))) - 0u) << 0u), (_GLF_IDENTITY((uint(subgroupAllEqual(read_val))) - 0u, ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))) - 0u) << 0u)) / 1u)) : _GLF_FUZZED(workgroup_id)) / 1u))), (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) >> (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u)))))))), _GLF_IDENTITY((uint(subgroupAllEqual(read_val))) - 0u, ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u | (uint(subgroupAllEqual(read_val)))) : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u | (uint(subgroupAllEqual(read_val)))) : _GLF_FUZZED(workgroup_base), (true ? _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u | (uint(subgroupAllEqual(read_val)))) : _GLF_FUZZED(workgroup_base)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))) - 0u) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), uint(uvec3((0u), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) >> 0u)))), 1u)))))))))) ^ (_GLF_IDENTITY(170342u, (170342u) << _GLF_IDENTITY(0u, 0u | (0u))) & 0u))) >> 0u)) ^ 0u) / 1u));
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
