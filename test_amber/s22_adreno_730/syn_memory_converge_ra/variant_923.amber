#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-548.487, -14.03)) : (injectionSwitch) * mat2(1.0)))), (false ? _GLF_FUZZED(vec2(-245.700, 6101.6836)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-245.700, 6101.6836)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-7.1), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0], _GLF_FUZZED(2.7)), bvec2(true, false)))))[0], injectionSwitch[1])) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)), vec2(1.0, 1.0))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-523.420, 3.4)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))])), injectionSwitch[0])), injectionSwitch[1])))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), (true ? ~ (~ (workgroup_size * workgroup_id)) : _GLF_FUZZED(atomicExchange(num_workgroup, num_workgroup)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), false, false)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, false, true)))) && true))), false || (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))) || false)) || false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(bvec4(false, false, _GLF_IDENTITY(false, true && (false)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id)))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) >> _GLF_IDENTITY(((_GLF_IDENTITY(139826u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(139826u, min(139826u, 139826u)), _GLF_IDENTITY((_GLF_IDENTITY(139826u, clamp(139826u, 139826u, 139826u))), ((139826u)) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * 1u) : _GLF_FUZZED((workgroup_size ++)))) % 101273u) & 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(139826u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(139826u, min(139826u, 139826u)), _GLF_IDENTITY((_GLF_IDENTITY(139826u, clamp(139826u, 139826u, 139826u))), ((139826u)) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * 1u) : _GLF_FUZZED((workgroup_size ++)))) % 101273u) & 0u), 0u | (((_GLF_IDENTITY(139826u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(139826u, min(139826u, 139826u)), _GLF_IDENTITY((_GLF_IDENTITY(139826u, clamp(139826u, 139826u, 139826u))), ((139826u)) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * 1u) : _GLF_FUZZED((workgroup_size ++)))) % 101273u) & 0u)))) ^ 0u)) * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (1u | 1u) * (subgroup_id)) * subgroup_size) << 0u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(subgroup_id, (1u | 1u) * (subgroup_id)) * subgroup_size) << 0u, 1u), uvec2(uvec4(uvec2((_GLF_IDENTITY(subgroup_id, (1u | 1u) * (subgroup_id)) * subgroup_size) << 0u, 1u), 0u, 0u)))))), min(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(true ? workgroup_base : subgroup_size, min(true ? workgroup_base : subgroup_size, _GLF_IDENTITY(true ? workgroup_base : subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED((111816u - _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))))) : true ? workgroup_base : subgroup_size, min(false ? _GLF_FUZZED((111816u - _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))))) : true ? workgroup_base : subgroup_size, false ? _GLF_FUZZED((111816u - _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))))) : true ? workgroup_base : subgroup_size)))))))), (_GLF_FUZZED((_GLF_IDENTITY(true ? workgroup_base : subgroup_size, min(true ? workgroup_base : subgroup_size, _GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(111816u - _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))))), (111816u - _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) - 0u))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), uint(uvec2(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (0u | 0u)))), ~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)))))))) / 1u)), min((_GLF_IDENTITY(111816u - _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), (0u | 1u) * (max(workgroup_base, workgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))))), (111816u - _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), uint(uvec2(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (0u | 0u)))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))) / 1u)), (_GLF_IDENTITY(111816u - _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))), (111816u - _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), uint(uvec2(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (0u | 0u)))), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))) / 1u))))) : true ? workgroup_base : subgroup_size))))))) + (0u | 0u)) : subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))), uvec3(uvec4(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))), 1u)))), _GLF_IDENTITY((uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | (uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), ((uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(1u, (1u) - 0u))))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) | (uint(uvec2(0u, 0u))))) | 0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), (uint(uvec2(0u, 0u))) | (uint(uvec2(0u, 0u))))) | 0u) >> 0u)) + ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u)) << 0u))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u)) << 0u)))))) | 0u), 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-178.926))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size)), (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))), (uvec3(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-178.926))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size)), (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u, _GLF_IDENTITY(1u, ~ (~ (1u))))) - uvec3(0u, 0u, 0u)), 1u)))), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), 0u, 1u))) | (uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))), ((uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(141468u))), 0u, 1u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u)))) ^ 0u)))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))))) | (_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u, (0u) | 0u)), max(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))))) | (_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))))) | (_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u, (0u) | 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(clamp(subgroup_id, subgroup_id, subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), min(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id))), clamp(subgroup_id, subgroup_id, subgroup_id))))))) / 1u) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) - (_GLF_IDENTITY(97503u & 0u, (_GLF_IDENTITY(97503u & 0u, (true ? 97503u & 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (subgroup_id * subgroup_size) << 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED((true ? workgroup_base : subgroup_size)) : subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (subgroup_id * subgroup_size) << 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED((true ? workgroup_base : subgroup_size)) : subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) / 1u), 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) + (subgroup_id)))) * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, 0u, 1u)), (uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, min(1u, 1u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (true ? uvec3(uvec3(subgroup_id * subgroup_size, 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))))) : _GLF_FUZZED(uvec3(105647u, 154464u, 119788u)))), (uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), min(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))))))))) | (uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), 0u, 1u)))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (1u & 1u) * (0u))), min(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ 0u) * subgroup_size) - (97503u & 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id, subgroup_id)) * subgroup_size) << 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) ? _GLF_FUZZED((true ? workgroup_base : subgroup_size)) : subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_local_id)))))))), _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (false ? _GLF_FUZZED(uvec3(195464u, 32489u, 144871u)) : _GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), max(uvec3(subgroup_id, 0u, 1u), uvec3(subgroup_id, 0u, 1u))))), uvec3(subgroup_id, 0u, 1u), uvec3(subgroup_id, 0u, 1u)))), uint(uvec2(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (false ? _GLF_FUZZED(uvec3(195464u, 32489u, 144871u)) : _GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), max(uvec3(subgroup_id, 0u, 1u), uvec3(subgroup_id, 0u, 1u))))), uvec3(subgroup_id, 0u, 1u), uvec3(subgroup_id, 0u, 1u)))), 1u))), 0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0)), (float(mat2x3(injectionSwitch.x, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0))) + 0.0)))) + (subgroup_id)))) * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | uvec3(0u, 0u, 0u)))))))) | (uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))))))))) | (subgroup_size)), 0u, 1u)))))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / (0u | 1u)), _GLF_IDENTITY((0u) | _GLF_IDENTITY(0u, (1u & 1u) * (0u)), ((0u) | _GLF_IDENTITY(0u, (1u & 1u) * (0u))) | (_GLF_IDENTITY((0u) | _GLF_IDENTITY(0u, (1u & 1u) * (0u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ ((0u) | _GLF_IDENTITY(0u, (1u & 1u) * (0u))))))), min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, (_GLF_IDENTITY((0u) | 0u, (_GLF_IDENTITY((0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | ((0u))) | 0u) << 0u)) | 0u)), _GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - (97503u & 0u))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((true ? workgroup_base : subgroup_size)) : subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size), (clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((true ? workgroup_base : subgroup_size)) : subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size)) ^ 0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((true ? workgroup_base : subgroup_size)) : subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size)), (1u | 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u))), uint(uint(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u)))))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id)))) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u))), uint(uint(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u)))))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id)))) * subgroup_size, 0u), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u))), uint(uint(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u)))))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id)))) * subgroup_size, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u))), uint(uint(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u)))))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id)))) * subgroup_size, 0u), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u))), uint(uint(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u)))))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id)))) * subgroup_size, 0u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u))), uint(uint(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u)))))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id)))) * subgroup_size, 0u), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u))), uint(uint(_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), 0u, 0u, 0u)))))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id)))) * subgroup_size, 0u)))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_local_id, 57097, -28931)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_local_id, 57097, -28931)))))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_local_id, 57097, -28931))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(clamp(workgroup_base, 26449u, num_workgroup)))) >> 0u), subgroup_id, subgroup_id)) * subgroup_size, 0u, 1u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 1u), max(uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 1u), _GLF_IDENTITY(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 1u), uvec3(0u, 0u, 0u) ^ (uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 0u : _GLF_FUZZED(subgroup_id))), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | uvec3(0u, 0u, 0u)))))) | (uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), 0u, 1u)))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (1u & 1u) * (0u))), min(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u), (subgroup_id) | 0u), subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) - _GLF_IDENTITY((97503u & 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((97503u & 0u), uint(uvec4((97503u & 0u), 0u, 1u, 0u))), 1u, 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((97503u & 0u), uint(uvec4((97503u & 0u), 0u, _GLF_IDENTITY(1u, 0u + (1u)), 0u))), 1u, 1u, 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((97503u & 0u), uint(uvec4((_GLF_IDENTITY(97503u, (97503u) | (_GLF_IDENTITY(97503u, ~ (~ (97503u))))) & 0u), 0u, 1u, 0u))), 1u, 1u, 0u), ~ _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY((97503u & 0u), uint(uvec4(_GLF_IDENTITY((97503u & 0u), ((97503u & 0u)) >> 0u), 0u, 1u, 0u))), 1u, 1u, 0u))), (_GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY((97503u & 0u), uint(uvec4(_GLF_IDENTITY((97503u & 0u), ((97503u & 0u)) >> 0u), 0u, 1u, 0u))), 1u, 1u, 0u))), ((~ (uvec4(_GLF_IDENTITY((97503u & 0u), uint(uvec4(_GLF_IDENTITY((97503u & 0u), ((97503u & 0u)) >> 0u), 0u, 1u, 0u))), 1u, 1u, 0u)))) | ((~ (uvec4(_GLF_IDENTITY((97503u & 0u), uint(uvec4(_GLF_IDENTITY((97503u & 0u), ((97503u & 0u)) >> 0u), 0u, 1u, 0u))), 1u, 1u, 0u)))))) - uvec4(0u, 0u, 0u, 0u)))))))))) ^ 0u)), (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED((true ? workgroup_base : subgroup_size)) : subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u)), 1u)), 0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0) : _GLF_FUZZED(-6.8)))) + (subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))) | (0u)), 1u)), 0u, 0u, 0u))))) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id)))) * subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) / uvec2(1u, 1u)))))), 1u))) | uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(56969u, 72946u, 61529u)) : _GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) / uvec2(1u, 1u)))))), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(uaddCarry(min(workgroup_id, subgroup_local_id), subgroup_local_id, workgroup_size))))))) | uvec3(0u, 0u, 0u)))))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) | 0u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) >> 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size, subgroup_size)), 0u)))) | (subgroup_size)))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) | 0u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) >> 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size, subgroup_size)), 0u)))) | (subgroup_size)))), 0u, 1u))) >> 0u)), ~ (~ _GLF_IDENTITY(((uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)) : _GLF_FUZZED(workgroup_id))), (79099u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))), 0u, 1u)))), clamp(((uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)) : _GLF_FUZZED(workgroup_id))), (79099u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))), 0u, 1u)))), _GLF_IDENTITY(((uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)) : _GLF_FUZZED(workgroup_id))), (79099u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))), 0u, 1u)))), (_GLF_IDENTITY(((uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)) : _GLF_FUZZED(workgroup_id))), (79099u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))), 0u, 1u)))), max(((uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)) : _GLF_FUZZED(workgroup_id))), (79099u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))), 0u, 1u)))), ((uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)) : _GLF_FUZZED(workgroup_id))), (79099u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))), 0u, 1u))))))) << 0u), ((uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)) : _GLF_FUZZED(workgroup_id))), (79099u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))))), 0u, 1u))))))))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (1u & _GLF_IDENTITY(1u, (1u) + 0u)) * (0u))), min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ~ (~ ((0u) | 0u)))), _GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - (_GLF_IDENTITY(97503u & 0u, (97503u & 0u) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))), (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))) << 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((true ? workgroup_base : subgroup_size)) : subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 0u, 1u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u + (0u))))), 0u, 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3915.8933)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) || false))))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))), ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(16.76, -4.1, -4138.3288).p)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))), 1u * ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))), 1u * ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))), 1u * ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))), 1u * ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))), 1u * ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_id))))), 0u)))))))) * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uvec3(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(62125u, 76109u, 170550u)) : uvec3(0u, 0u, 0u)))))))) | (uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u, 1u)))))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)), (0u) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) / 1u), _GLF_IDENTITY((1u & 1u) * (0u), (_GLF_IDENTITY((1u & 1u), 0u + ((1u & 1u))) * (0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) ^ 0u) * subgroup_size, (subgroup_id * subgroup_size) - (97503u & 0u)))) ^ 0u))) + 0u))), 1u * (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED((true ? workgroup_base : subgroup_size)) : _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (uint(uvec3(subgroup_id * subgroup_size, 0u, 1u))) | (uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 1u), (uvec3(subgroup_id * subgroup_size, 0u, 1u)) | (uvec3(subgroup_id * subgroup_size, 0u, 1u)))))))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + (0u ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u) | 0u), min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, _GLF_IDENTITY(1u * ((0u) | 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u), ((0u)) << 0u) | 0u), (_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) - 0u)), uint(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(_GLF_IDENTITY(1u, (1u) * 1u) * ((0u) | 0u))))))) | 0u)), clamp(uint(_GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), ((0u)) << 0u) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) - 0u)), uint(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u))))))) | 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) - 0u)), uint(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u))))))) | 0u, ((_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) - 0u)), uint(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u))))))) | 0u) << 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u), ((0u)) << 0u) | 0u), (_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) - 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u))))), max(uint(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u))))), uint(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u))))))))) | 0u)), (uint(_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u), ((0u)) << 0u) | 0u), (_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)))), (_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)))), (_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u))))) ^ 0u)))))) | 0u))) >> 0u), uint(_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u), ((0u)) << 0u) | 0u), (_GLF_IDENTITY(1u * (_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)))), 1u * (_GLF_IDENTITY(uint(1u * ((0u) | 0u)), clamp(uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u)), uint(1u * ((0u) | 0u))))))))) | 0u)))))))), _GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) - (97503u & 0u)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) - (97503u & 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) - (97503u & 0u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) - (97503u & 0u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) - (97503u & 0u))) ^ 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), (max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) / 1u))) - (97503u & 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) - (97503u & 0u)))))))))) >> (0u & 48907u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-85.34), _GLF_FUZZED(851.226)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), sqrt(abs(0.0)), log(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(0.1)), bool(false)))), abs(0.0))), (vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), sqrt(abs(0.0)), log(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(0.1)), bool(false)))), abs(0.0)))) + vec2(0.0, 0.0)))[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.0)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, false))))))))), bool(bool(_GLF_IDENTITY((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, false))))))))), true && ((! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, false)))))))))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0), mix(vec4(_GLF_FUZZED((3946.2679 - 237.639)), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))[1], _GLF_FUZZED(-73.18), _GLF_FUZZED(650.957)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))[0], _GLF_FUZZED(-9.8), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))[3]), bvec4(true, false, true, true))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0), mix(vec4(_GLF_FUZZED((3946.2679 - 237.639)), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))[1], _GLF_FUZZED(-73.18), _GLF_FUZZED(650.957)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))[0], _GLF_FUZZED(-9.8), (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0))[3]), bvec4(true, false, true, true))))).x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) << 0))), (4) | (4)), 1 * (4)), 64, _GLF_IDENTITY(4, (4) - 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y))))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) && true), bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-27.04)), float(injectionSwitch.x), bool(true))), float(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), float(_GLF_FUZZED(2.5)), bool(false))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, ! (! (false)))))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0)), _GLF_IDENTITY(mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0)))), mat4x3(mat4(mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0))))))))), float(mat4x3(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0)), _GLF_IDENTITY(mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0)))), mat4x3(mat4(mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0))))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0)), _GLF_IDENTITY(mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0)))), mat4x3(mat4(mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0))))))))), float(mat4x3(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0)), _GLF_IDENTITY(mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0)))), mat4x3(mat4(mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y) + 0.0), sqrt(1.0), 0.0, sin(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, log(1.0))))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))), bool(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))), true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(-70831, clamp(-70831, -70831, _GLF_IDENTITY(-70831, (_GLF_IDENTITY(-70831, (-70831) | (-70831))) | (_GLF_IDENTITY(-70831, int(_GLF_IDENTITY(ivec3(-70831, 0, 0), ivec3(0, 0, 0) | (ivec3(-70831, 0, 0)))))))))) : _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(93938))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-70831, clamp(_GLF_IDENTITY(-70831, 0 ^ (-70831)), -70831, _GLF_IDENTITY(_GLF_IDENTITY(-70831, (-70831) | (-70831)), max(_GLF_IDENTITY(-70831, (-70831) | (-70831)), _GLF_IDENTITY(-70831, (-70831) | (-70831))))))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_FUZZED(_GLF_IDENTITY(-70831, clamp(-70831, -70831, _GLF_IDENTITY(-70831, (-70831) | (-70831))))) : _GLF_FUZZED(-48629))) : _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(93938))))), (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(-70831, clamp(-70831, -70831, _GLF_IDENTITY(-70831, (-70831) | (-70831))))) : _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(93938)))))) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(-70831, clamp(-70831, -70831, _GLF_IDENTITY(_GLF_IDENTITY(-70831, (false ? _GLF_FUZZED(-65163) : -70831)), (-70831) | (-70831))))) : _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(93938)))))))) - 0), 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(92.56, -0.1)) : injectionSwitch)).y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(false))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))))))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0)), max(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), (_GLF_IDENTITY(true, ! (! (true))) ? mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0) : _GLF_FUZZED(mat3(-8.9, -4035.8846, 9143.7610, -4315.3423, -9547.0830, 28.80, -3.8, -8461.1197, -53.38))))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.0)), bool(false))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(6.9)), float(float(1.0)), bool(true))), float(_GLF_FUZZED(8.0)), bool(false))), 1.0))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(8.0), min(_GLF_IDENTITY(_GLF_FUZZED(8.0), max(_GLF_FUZZED(8.0), _GLF_FUZZED(8.0))), _GLF_FUZZED(8.0)))), bool(false))), 1.0))[1]), vec2(_GLF_FUZZED((-2476.0010)), _GLF_IDENTITY(_GLF_FUZZED(-91.36), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-91.36), max(_GLF_FUZZED(-91.36), _GLF_FUZZED(-91.36)))))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * (vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false, false)))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true))), true, false)), false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((! (_GLF_DEAD(false)))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))), ((! (_GLF_DEAD(false)))) || false)))) || false))) || false)), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true))), true, false)), false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((! (_GLF_DEAD(false)))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))), ((! (_GLF_DEAD(false)))) || false)))) || false))) || false)))))), false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), false || _GLF_IDENTITY((! (! (true))), ((! (! (true)))) || false)))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), false))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && true)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! (! (((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))) && true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true)))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && _GLF_IDENTITY(true, false || (true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
