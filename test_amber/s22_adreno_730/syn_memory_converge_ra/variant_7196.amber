#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true, true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true), false || (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, false)))))))))), true, true))) && true)))), bool(bool(false || (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) && true))))))), false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asinh(11.70)) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uvec4 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), (bool(bvec4(_GLF_DEAD(false), true, false, true))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.y = _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), _GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), (! (bool(bvec4(false, false, true, false)))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6741.3052)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) || false))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ((_GLF_DEAD(false))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))), bool(bvec4((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))) || (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-348.035)), bool(false))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), clamp(max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-348.035)), bool(false))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-348.035)), bool(false))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-348.035)), bool(false))), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(4.4)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-348.035)), bool(false))), injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x))))) / _GLF_IDENTITY(1.0, (1.0) / 1.0)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.4) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) && true, true && ((_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && ((false)))) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))))))))), true))))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.z = subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false))))))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false))))))))))))) || _GLF_IDENTITY(false, false || (false))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), vec2(mat2x3(injectionSwitch, abs(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(7.3)), bool(false))) : _GLF_FUZZED(-823.173)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49)))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), float(float(1.0))))), 0.0))), float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), float(mat4x3((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49)))))))), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(sign(-77.44)) : float(mat4x3(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), float(mat4x3((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49)))))))), 1.0, 1.0, 0.0))))), 0.0, 0.0, 1.0))), 0.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), vec2(mat2x3(injectionSwitch, abs(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(7.3)), bool(false))) : _GLF_FUZZED(-823.173)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49)))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), float(float(1.0))))), 0.0))), float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), float(mat4x3((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49)))))))), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(sign(-77.44)) : float(mat4x3(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), float(mat4x3((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-30.95) : 0.0))), float(_GLF_FUZZED(8377.6312)), bool(false))), min(0.0, 0.0)) : _GLF_FUZZED(distance(-98.82, -16.49)))))))), 1.0, 1.0, 0.0))))), 0.0, 0.0, 1.0))), 0.0))).y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), (! (! _GLF_IDENTITY((false), ((false)) || false))) || false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_DEAD(false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), transpose(transpose(mat2(injectionSwitch, 0.0, 1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), false), true)), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), true && (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), mat2(mat4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))))))))))), true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.z = workgroup_id;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, min((workgroup_size) + 0u, (workgroup_size) + 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id)))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-9551.7289))))).x)) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id)))), max((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id), _GLF_IDENTITY((~ (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id)) >> uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((~ (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id)) >> uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id, _GLF_IDENTITY(~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id)), ~ (~ (~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id))))))))))) | _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), max(0u, 0u))), (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ~ (~ (_GLF_IDENTITY(uint(6u), uint(6u))))))), max(0u, 0u))), (uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), max(0u, 0u)))) | (uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), max(0u, 0u)))))) | uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id)))) | uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), max(0u, 0u))))))).z;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, (true) || false), true))))), ((false)) && true), ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), false || (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))))) || false)), ! (! ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, (true) || false), true))))), ((false)) && true), ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), false || (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))))) || false)))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false)))))) || (false)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), false)))), false)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true) || false), true))))), ((false)) && true), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))) || false))))), true, true), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, (true ? _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size) >> uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(121408u, 109522u, 145579u, _GLF_IDENTITY(95882u, (95882u) / _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))))))), ~ (~ (uvec4(121408u, 109522u, 145579u, _GLF_IDENTITY(95882u, (95882u) / _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))))))))))), uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u) ^ (_GLF_IDENTITY(uvec4(121408u, _GLF_IDENTITY(109522u, (109522u) + 0u), 145579u, 95882u), (uvec4(121408u, 109522u, 145579u, 95882u)) >> uvec4(0u, 0u, 0u, 0u)))), uvec4(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u) * (_GLF_IDENTITY(uvec4(121408u, 109522u, 145579u, _GLF_IDENTITY(95882u, (_GLF_IDENTITY(95882u, uint(uint(95882u)))) / 1u)), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(121408u, 109522u, 145579u, 95882u)))))))).w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, ~ (~ (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(173027u, 177736u, 30958u, 90107u)))) : _GLF_FUZZED(uvec4(121408u, 109522u, _GLF_IDENTITY(145579u, uint(uint(145579u))), 95882u)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(173027u, 177736u, 30958u, 90107u)))) : _GLF_FUZZED(uvec4(121408u, 109522u, _GLF_IDENTITY(145579u, uint(uint(145579u))), 95882u))) >> uvec4(0u, 0u, 0u, 0u)))).w, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(121408u, 109522u, _GLF_IDENTITY(145579u, (145579u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 95882u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(121408u, 109522u, 145579u, 95882u)))))).w));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   return;
  }
 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.y = subgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, exp(0.0), 1.0)), (float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec3(-81.63, 661.281, -7.1))))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec3(-81.63, 661.281, -7.1))))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec3(-81.63, 661.281, -7.1))))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0, exp(0.0), 1.0))) / 1.0)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.y, (workgroup_base + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.y) << 0u) + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.z, 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size) ^ uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size)).y, (workgroup_base + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.y) << 0u) + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.z));
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), _GLF_IDENTITY((uint(virtual_gid)), max((uint(virtual_gid)), (uint(virtual_gid)))) >> 0u), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, (false ? _GLF_FUZZED(workgroup_base) : write_val)), write_val)), 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(read_val, uint(_GLF_IDENTITY(uint(read_val), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, ~ (~ (read_val))), read_val)))), 0u | (~ (uint(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, 1u * (read_val))) ^ 0u))))))))), (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(read_val, uint(_GLF_IDENTITY(uint(read_val), ~ (_GLF_IDENTITY(~ (uint(read_val)), 0u | (~ (uint(read_val))))))))) ^ 0u), 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(read_val, uint(_GLF_IDENTITY(uint(read_val), ~ (_GLF_IDENTITY(~ (uint(read_val)), 0u | (~ (uint(read_val)))))))), (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(read_val, uint(_GLF_IDENTITY(uint(read_val), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(read_val)), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_val), 0u | (uint(read_val))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(read_val), (uint(read_val)) << 0u)), ~ (~ (1u * (_GLF_IDENTITY(uint(read_val), (uint(read_val)) << 0u)))))))))), 1u * ((_GLF_IDENTITY(~ (uint(read_val)), 0u | (~ (_GLF_IDENTITY(uint(read_val), 1u * (_GLF_IDENTITY(uint(read_val), (uint(read_val)) << 0u))))))))))))) ^ 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(753.428)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-47.12)), bool(false))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0), mat3x2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0)))), mat3(mat3x4(mat3(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size, _GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u), clamp(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))) | (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_13read_valsubgroup_basesubgroup_local_idsubgroup_size)))).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), float(mat2x3(injectionSwitch.x, cos(tan(0.0)), 1.0, exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
