#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), true && (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])))).y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).y)))))) && true))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)))))))))))))) || false), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(311.556)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(1685.7405))))))), true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(3460.2495)), vec2(_GLF_FUZZED(6.8), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y)), true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))), true))), (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), true && (! ((_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(false, (false) && true))))), (bool(bool(! ((_GLF_IDENTITY(false, (false) && true)))))) || false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (true && (false)), (! (true && _GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((false), ((false)) && true))))) || false)), bool(bvec4((_GLF_IDENTITY(! (true && (false)), (! (true && _GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((false), ((false)) && true))))) || false)), false, false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(vec2(0.5, -1.0), -4.3, -97.99)) : injectionSwitch)).x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))), bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))))) > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8168.4879)), bool(false))))), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), true)))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true), true))))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.7)), bool(false))))))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true && (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true && (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true && (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bool(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), true)))) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) || false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4((_GLF_IDENTITY(false, (false) || false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), false), bvec2(bvec3(bvec2(bool(bvec2(false, false)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), exp(0.0))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.y = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8456.8932)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1318.8075)), float(injectionSwitch.y), bool(true)))), bool(true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2952.0460) : injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), cos(0.0) * (_GLF_FUZZED(-1.7)))), bool(false))) > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.0)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) || false)))))))))), (false ? _GLF_FUZZED(2952.0460) : injectionSwitch.x))), float(_GLF_FUZZED(-1.7)), bool(false))) > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))) || false))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), 1.0 * (_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(2.0) : (injectionSwitch.x), sqrt(0.0) + (false ? _GLF_FUZZED(2.0) : (injectionSwitch.x)))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.w * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(subgroup_local_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, max(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size))) | (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size)) : _GLF_FUZZED(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, max(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size))) | (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size)) : _GLF_FUZZED(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size), uvec4(0u, 0u, 0u, 0u) | (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, max(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size))) | (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size)) : _GLF_FUZZED(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size)))) | uvec4(0u, 0u, 0u, 0u)))).y;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u))), workgroup_base), ~ (~ (clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (1u) ^ 0u))))))))), workgroup_base))))), workgroup_base, workgroup_base)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false, false)))), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))) || false), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) || false)))) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) && true, bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false)))))))) || false))) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  barrier();
 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.z = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.z), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(determinant(mat2(62.56, -445.676, 2.9, 5.9))), max(_GLF_FUZZED(determinant(mat2(62.56, -445.676, 2.9, 5.9))), _GLF_FUZZED(determinant(mat2(62.56, -445.676, 2.9, 5.9))))) : injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true) && true), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))) || false))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true) && true), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))) && true)))))), false, false, false)))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && _GLF_IDENTITY(true, false || (true))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bool(bool(bool(true))), (bool(bool(bool(true)))) || false)))) && (_GLF_IDENTITY(false, true && (false))))), false)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bool(bool(bool(true))), (bool(bool(bool(true)))) || false)))) && (_GLF_IDENTITY(false, true && (false))))), false))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), false)), true && (bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), false))))))) || false)))))), ((bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false))))))) && true) || false), bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), false)), true && (bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), false))))))) || false)))))), ((bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false))))))) && true) || false))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((+ vec2(2663.1230, 1.5))) : injectionSwitch))) * vec2(1.0, 1.0)).y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)) && true)), (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))) && (false), false || (_GLF_IDENTITY(true, bool(bool(true))) && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))) && (false), false || (_GLF_IDENTITY(true, bool(bool(true))) && (false)))) && true)), (injectionSwitch.x > injectionSwitch.y))))) || false)), true, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED((true ? -33.13 : (+ -21.77)))), bool(false))), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, 0 ^ (4)))), _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, min((4) >> 0, (4) >> 0)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) >> 0)), _GLF_IDENTITY(int(ivec4(min(4, _GLF_IDENTITY(4, (4) >> 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec4(min(4, _GLF_IDENTITY(4, (4) >> 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-78771))))), int(ivec4(min(4, _GLF_IDENTITY(4, (4) >> 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))), (int(int(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) >> 0)), _GLF_IDENTITY(int(ivec4(min(4, _GLF_IDENTITY(4, (4) >> 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), min(int(ivec4(min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), max((4), (4))))) >> 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec4(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (-93939 & 0) | (4)), (4) >> 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))))) ^ 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))), (false ? _GLF_FUZZED(-22712) : max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))), max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)))))) : _GLF_FUZZED(_GLF_IDENTITY(4190, clamp(_GLF_IDENTITY(4190, (4190) >> 0), 4190, 4190))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), 4)), 4)) : _GLF_FUZZED(_GLF_IDENTITY(4190, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), _GLF_IDENTITY((_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190))))), int(int((_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))))))) >> 0))))))), clamp(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190), _GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190), _GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, _GLF_IDENTITY(4, ~ (~ (4))))) << 0)) : _GLF_FUZZED(4190)), (false ? _GLF_FUZZED(92435) : (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(4190, max(_GLF_IDENTITY(4190, (4190) - 0), 4190)))))) + 0), true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), 0, 1)))) | (1 ^ 1)), (_GLF_IDENTITY(4, min(4, 4))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(_GLF_IDENTITY(4, (4) + 0), 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(clamp(min(4, 4), min(4, 4), min(4, 4)), int(int(clamp(min(4, 4), min(4, 4), min(4, 4))))))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0)))))) : _GLF_FUZZED(4190))), 0, 0, _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(59365) : 0))))), (int(ivec4(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(4, (4) << 0))))), 4)) : _GLF_FUZZED(_GLF_IDENTITY(4190, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0)))))) >> 0), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 0 | (4190)), 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1 * (_GLF_IDENTITY(4190, (4190) | (4190))), (true ? 1 * (_GLF_IDENTITY(4190, (4190) | (4190))) : _GLF_FUZZED(75202))))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | _GLF_IDENTITY((4190), ~ (~ ((4190)))))))) >> 0))))))))))), clamp(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190), _GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190), _GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) << 0)) : _GLF_FUZZED(_GLF_IDENTITY(4190, (4190) << (1 ^ 1)))), (false ? _GLF_FUZZED(92435) : (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(4190, max(_GLF_IDENTITY(4190, _GLF_IDENTITY((4190) - 0, min(_GLF_IDENTITY((4190) - 0, ~ (~ ((4190) - 0))), (4190) - 0))), 4190)))))) + 0), true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0)))))) : _GLF_FUZZED(4190))), 0, 0, _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(59365) : 0)))))) | (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), 4)), 4)) : _GLF_FUZZED(_GLF_IDENTITY(4190, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (_GLF_IDENTITY(4190, clamp(4190, _GLF_IDENTITY(4190, (_GLF_IDENTITY(4190, clamp(4190, 4190, 4190))) | (4190)), _GLF_IDENTITY(4190, (0 & 73345) ^ (4190))))) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 0 ^ (_GLF_IDENTITY(5, (5) / 1))))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, _GLF_IDENTITY(1, (1) | (1)) * (_GLF_IDENTITY(4190, (4190) | (4190))))) >> 0))))))), clamp(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190), _GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) << 0)) : _GLF_FUZZED(4190)), (false ? _GLF_FUZZED(92435) : (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(4190, max(_GLF_IDENTITY(4190, (4190) - 0), 4190)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) << 0)) : _GLF_FUZZED(4190)), (false ? _GLF_FUZZED(92435) : (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(4190, max(_GLF_IDENTITY(4190, (4190) - 0), 4190)))))))) + 0), true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(0), int(0)))), 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) << 0, ~ (~ ((_GLF_IDENTITY(4, min(4, 4))) << 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0))) + 0), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)))), (_GLF_IDENTITY(4, min(4, 4))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED((- -45148))))), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0)))))) : _GLF_FUZZED(4190))), 0, 0, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(59365) : 0)), 0 ^ (_GLF_IDENTITY((1) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(59365) : 0)), int(ivec2((1) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(59365) : 0)), 1)))))))), (false ? _GLF_FUZZED(-61775) : int(ivec4(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), 4)), 4)) : _GLF_FUZZED(_GLF_IDENTITY(4190, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190))))) * 1), ((96027 + -12912) & (0 << _GLF_IDENTITY(int(5), int(5)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190)))), (_GLF_IDENTITY(4190, 1 * (_GLF_IDENTITY(4190, (4190) | (4190))))) >> 0))))))), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190), int(int(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190), (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190)) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(4190), _GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) << 0)) : _GLF_FUZZED(4190)), (false ? _GLF_FUZZED(92435) : (true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) / 1), 4)) : _GLF_FUZZED(_GLF_IDENTITY(4190, max(_GLF_IDENTITY(_GLF_IDENTITY(4190, (_GLF_IDENTITY(4190, (4190) / 1)) ^ 0), (4190) - 0), 4190)))))) + 0), true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, 0 | (4)), 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(_GLF_IDENTITY(4, 1 * (4)), 4), min(4, 4)))) >> _GLF_IDENTITY(0, (0) | (0)))), (_GLF_IDENTITY(4, min(4, 4))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), clamp(min(4, 4), min(4, 4), min(4, 4)))) >> 0)), (_GLF_IDENTITY(4, min(4, 4))) << 0)))))) : _GLF_FUZZED(4190))), 0, 0, _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(59365) : 0)))))))))))), 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val, 0u | (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val)), (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uint(0u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val, 0u | (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val)), (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uint(0u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val, 0u | (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val)), (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val, 0u | (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val)), (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x = read_val) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, uint(uint(0u)))), ((0u) | (_GLF_IDENTITY(0u, uint(uint(0u))))) | ((0u) | (_GLF_IDENTITY(0u, uint(uint(0u))))))))) ^ 0u);
 buf[GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.z] = uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x, (GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_14read_valsubgroup_sizevirtual_gidworkgroup_size.x) / 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
