#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val;
 uvec4 GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))))))));
  }
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy = GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uvec4 GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  return;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, false), false))))))), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))), true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, false || (true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, false || (true))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(true, false || (true))), false, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bvec2(bvec4(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, true))), true)))))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), true, true)))))), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, false || (true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(true, false || (true))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(true, false || (true))), false, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bvec2(bvec4(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, true))), true)))))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.5))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), true, true)))))), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.z = subgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, false))))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (1 & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 return;
                }
              }
            }
           else
            {
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(17.35), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(17.35), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(17.35), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0), _GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((injectionSwitch)[1], 0.0, cos(0.0), 1.0, 0.0, 1.0)))))), vec2(_GLF_FUZZED(17.35), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(17.35), (injectionSwitch)[1]))), bvec2(false, true)))[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(-2.6))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-581.346), _GLF_FUZZED(6632.3657)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.5)), vec2(_GLF_FUZZED(17.35), (injectionSwitch)[1]), bvec2(false, true)))[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y)), true, false, false)), true && (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, max((injectionSwitch.x) * 1.0, _GLF_IDENTITY((injectionSwitch.x) * 1.0, (_GLF_IDENTITY((injectionSwitch.x) * 1.0, clamp((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0))) + 0.0)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-0.5, mix(float(_GLF_FUZZED((false ? 2.6 : -7.6))), float(_GLF_IDENTITY(-0.5, (_GLF_IDENTITY(-0.5, (false ? _GLF_FUZZED(-26.10) : -0.5))) - 0.0)), bool(true))))), vec2(_GLF_FUZZED(17.35), (injectionSwitch)[1]), bvec2(false, true)))[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y)), true, false, false)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.5)), vec2(_GLF_FUZZED(17.35), (injectionSwitch)[1]), bvec2(false, true)))[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y)), true, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.5)), vec2(_GLF_FUZZED(17.35), (injectionSwitch)[1]), bvec2(false, true)))[1])), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y)), true, false, false)))), false, false, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x = _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 1u * (_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u ^ ((_GLF_FUZZED(subgroup_id)))))) - 0u)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy, (_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy, ~ (~ (GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy)))) | uvec2(0u, 0u)).x, _GLF_IDENTITY(clamp(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x, _GLF_IDENTITY(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) * uvec4(1u, 1u, 1u, 1u)).xy.x, GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x), (false ? _GLF_FUZZED(write_val) : clamp(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x, _GLF_IDENTITY(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) * uvec4(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u), 1u, 1u)).xy.x, GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.x))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 14837)); _injected_loop_counter --)
        {
         return;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.x = subgroup_local_id;
    }
   else
    {
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.z = num_workgroup;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec3(68.83, -2978.4662, _GLF_IDENTITY(434.850, (_GLF_IDENTITY(434.850, (434.850) - 0.0)) * 1.0)).rr))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec3(68.83, -2978.4662, 434.850).rr)))) - vec2(0.0, 0.0)).x < injectionSwitch.y))))
    {
     GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.x = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.z, (true ? GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.z : _GLF_FUZZED(num_workgroup)));
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, false || (true)))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true), true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))) && true)))
  {
   for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - 0)))), ((0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5)))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
  }
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-142.472)), _GLF_IDENTITY(float(1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), mix(float(_GLF_FUZZED(194.035)), float(float(1.0)), bool(true))), float(1.0))), bool(true)))), _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) << (1 ^ 1))), int(_GLF_IDENTITY(1, (1) << 0))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.7) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(78.75), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6184.1761)), bvec2(true, false))))).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(5.7), 0.0 + (_GLF_FUZZED(5.7))) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(78.75), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6184.1761)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))).y)))) || false))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 for(int _injected_loop_counter = (-82929 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.w;
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)), (vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0))))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-166.878) : 1.0)), 1.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))) / exp(0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)), (vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0))))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-166.878) : 1.0)), 1.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))) / exp(0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)), (vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), max(1.0, 1.0)))) / cos(0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0, ((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-166.878) : 1.0)), 1.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))) / exp(0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false, false, true)))) && true)))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 do
  {
   GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z = workgroup_id;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.9)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.9)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.9)), bool(false))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.9)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))) / 1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))), (false ? _GLF_FUZZED(min(-459.503, -33.08)) : _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) + 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0)))))), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 1.0)) / exp(vec3(0.0, 0.0, 0.0)))))))), float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, determinant(mat3(sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, tan(0.0), sqrt(1.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, _GLF_IDENTITY(0.0, log(1.0) + (0.0)), 0.0, 1.0)), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(3.1, -4.2)) : 1.0))))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), mix(float(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)), clamp(mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)), mix(float(_GLF_FUZZED(-8647.9715)), float(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)), (true ? mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)) : _GLF_FUZZED(1357.7784)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, round(length(normalize(vec2(1.0, 1.0)))) * (1.0)), 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))), float(_GLF_FUZZED(9508.7633)), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(7682.6619, max(7682.6619, 7682.6619)) + (+ -0.9)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) - 0.0))))), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.9)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.9)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.9)), bool(false))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.9)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))) / 1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8348.8775) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))), (false ? _GLF_FUZZED(min(-459.503, -33.08)) : _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) + 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0)))))), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 1.0)) / exp(vec3(0.0, 0.0, 0.0)))))))), float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, determinant(mat3(sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, tan(0.0), sqrt(1.0), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, _GLF_IDENTITY(0.0, log(1.0) + (0.0)), 0.0, 1.0)), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(3.1, -4.2)) : 1.0))))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), mix(float(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)), clamp(mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)), mix(float(_GLF_FUZZED(-8647.9715)), float(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)), (true ? mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false)) : _GLF_FUZZED(1357.7784)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(0.0), float(_GLF_FUZZED(9595.4605)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, round(length(normalize(vec2(1.0, 1.0)))) * (1.0)), 0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))), float(_GLF_FUZZED(9508.7633)), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(7682.6619, max(7682.6619, 7682.6619)) + (+ -0.9)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) - 0.0)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(exp(vec2(0.0, 0.0)))).x)), float(_GLF_FUZZED(20.58)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(542.073)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true)))))) + 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, abs(1.0)))))), max(float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-957.367)), float(1.0), bool(true))), 0.0, 0.0, 0.0, abs(1.0)), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(9347.1866) : abs(1.0)))))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, abs(1.0)), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0))), 0.0)), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.7) : 0.0)), max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.7) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.7) : 0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, length(0.0), 0.0))), injectionSwitch)).y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
    }
   else
    {
     _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, _GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z) / 1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z) / 1u, ((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z) / 1u) >> 0u), 0u + (_GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z) / 1u, ((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z) / 1u) >> 0u))))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, _GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z) / 1u, ~ (~ (_GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z) / 1u, _GLF_IDENTITY(((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, min(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z))) | 0u)) / 1u) >> 0u, ~ (_GLF_IDENTITY(~ (((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, min(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z))) | 0u)) / 1u) >> 0u), 0u | (~ (((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, min(GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.z))) | 0u)) / 1u) >> 0u)))))))))))));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(68.97) : injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (false) || false), false))))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, log(1.0))), clamp(vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, log(1.0))), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), 0.0, log(1.0))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, log(1.0)))))).y))));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw, (GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw) - uvec2(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, sqrt(1.0), 1.0, 0.0, exp(0.0), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-6.7) : float(mat4x3(0.0, 1.0, sqrt(1.0), 1.0, 0.0, exp(0.0), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(15.61)), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0)))) + _GLF_ZERO(0.0, injectionSwitch.x)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y * GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.y;
 GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base;
 GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x = GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(-21.14, 6.9)))))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(-21.14, 6.9)))))))).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(-21.14, 6.9)))))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(-21.14, 6.9)))))))).y))))), true, false, false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0)))) * mat2(1.0)) * mat2(1.0))))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), vec2(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), 1.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))) / vec2(1.0, 1.0))), min(min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))) / vec2(1.0, 1.0))))))))).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) != (1 & _GLF_IDENTITY(1, int(ivec4(1, 0, 0, (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) & 1)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      break;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint subgroup_base = GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.z * GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.zw.x;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base), uint(uvec3((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base), (0u | 0u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base), 0u ^ ((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base), 0u ^ ((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base), 0u ^ ((GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))) | (uvec4(0u, 0u, 0u, 0u))))))) ^ 0u) | (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base)), 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(num_workgroup) : 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base, (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, clamp(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, max(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy)))).x + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)))))), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u) >> 0u)))), (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base) | (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base)), 1u, 0u))) - 0u), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base, (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, clamp(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, max(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy)))).x + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)))))), 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base, (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, clamp(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, max(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy)))).x + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base, (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, clamp(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, max(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy)))).x + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)))))), 1u, 0u))), uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base, (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, clamp(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, max(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy)))).x + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)))))), 1u, 0u), uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base, (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, clamp(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, max(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy, GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy)))).x + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)))))), 1u, 0u)))), (uint(uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u) >> 0u))), ~ (~ ((~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u) >> 0u))))))), (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base) | (GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.xy.x + subgroup_base)), 1u, 0u))) - 0u))))))) + GLF_merged4_0_1_17_1_1_14_2_1_12_3_1_14subgroup_local_idworkgroup_baseworkgroup_idworkgroup_size.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y = virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-6.7, 8.0, 92.88).z)), float(injectionSwitch.y), bool(true)))))));
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3((int(_GLF_ONE(1.0, injectionSwitch.y))), 0, 1))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), ! (! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) || false)))))))))
    return;
   if(_GLF_DEAD(false))
    continue;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))))))))
      break;
     GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y, max(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y, _GLF_IDENTITY(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y, (true ? GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y : _GLF_FUZZED(num_workgroup)))) | 0u))), (GLF_merged2_0_2_49_2_2_52GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidGLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.xy.y) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), (1) ^ 0)); _injected_loop_counter ++)
      {
       atomicStore(write_val, _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid[3])).w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_size) : 0u)))), clamp(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), max(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), 1u * ((GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w))), (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), (_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), min(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w))), (_GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), min(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w)))) | (_GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), min(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), _GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), min(_GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), clamp(uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w), uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w))), uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w)))))))) | (uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w))), _GLF_IDENTITY(0u, (0u) * ((0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) ^ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w))))), 4, 64, 4);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED((-2.5))), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED((-2.5))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED((-2.5))), bool(false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.w = read_val;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(607.471, 5.7).x)), bool(false))), injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    break;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(mod(564.788, -805.039)) : injectionSwitch.y))))))
        {
        }
       else
        {
         GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.y = GLF_merged3_0_2_51_2_1_13_3_1_8GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_val.w;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         break;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)) > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 ^ 1) << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     do
      {
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 return;
                }
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
    }
  }
 do
  {
   buf[GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.w] = uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.y, max(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.y, GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_11num_workgroupread_valsubgroup_idvirtual_gid.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
