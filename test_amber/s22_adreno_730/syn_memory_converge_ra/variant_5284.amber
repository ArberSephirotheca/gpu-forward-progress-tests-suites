#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x)), gl_NumWorkGroups.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))) : _GLF_FUZZED(uvec3(3827u, 161984u, 189330u)))).x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], (true ? gl_NumWorkGroups[1] : _GLF_FUZZED(write_val))), gl_NumWorkGroups[2]))) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(127022u, 60099u, 199420u) + subgroup_size))))[1], (true ? gl_NumWorkGroups[1] : _GLF_FUZZED(write_val))), gl_NumWorkGroups[2]))) + uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), 0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), gl_NumWorkGroups.x))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false), true))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.6))))), false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x))) << 0u), uint(uvec4(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(packUnorm2x16(injectionSwitch))))), 1u)))) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))), _GLF_IDENTITY(true && (bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))), ! (! (true && (bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, ((subgroup_local_id) + 0u) | ((subgroup_local_id) + 0u)))) / 1u, max((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, min(_GLF_IDENTITY((subgroup_local_id) + 0u, ((subgroup_local_id) + 0u) ^ 0u), _GLF_IDENTITY((subgroup_local_id) + 0u, ((subgroup_local_id) + 0u) | 0u))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) + 0u), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) + 0u), 0u, 1u)))) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uint(1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), 1u, 0u, 1u)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8177.7458) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mix(0.5, -845.394, false)) : injectionSwitch.x))))))) : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), clamp((_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), max(_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)) | (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)))) >> 0u), _GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(subgroup_id), (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, max(3u, 3u)), 3u))))) + (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)))))), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))))) + _GLF_IDENTITY(0u, (0u) / 1u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id)), (false ? _GLF_FUZZED(packUnorm4x8(vec4(-27.38, 14.71, -6.6, -0.7))) : ~ ((subgroup_local_id)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(atomicMin(write_val, workgroup_base)))))), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(mix(subgroup_base, subgroup_size, false))))), (~ (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(mix(subgroup_base, subgroup_size, false)))))) | (~ (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(mix(subgroup_base, subgroup_size, false))))))), 1u, 0u, 1u)))) ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)))) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), uint(uvec4(~ ((subgroup_local_id)), 1u, 0u, 1u)))) ^ 0u)) * _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(1u, (1u) | (1u))) : _GLF_FUZZED(subgroup_base))))), _GLF_IDENTITY(0u, min(0u, 0u)), 1u)))) ^ 0u)) * 1u), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u * (_GLF_IDENTITY(1u, ~ (~ (1u))))), 0u, 1u)))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) * 1u)) - 0u)))), min(_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(1u, (1u) | (1u))) : _GLF_FUZZED(subgroup_base))))), _GLF_IDENTITY(0u, min(0u, 0u)), 1u)))) ^ 0u)) * 1u), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u * (_GLF_IDENTITY(1u, ~ (~ (1u))))), 0u, 1u)))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) * 1u)) - 0u)))), (_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(1u, (1u) | (1u))) : _GLF_FUZZED(subgroup_base))))), _GLF_IDENTITY(0u, min(0u, 0u)), 1u)))) ^ 0u)) * 1u), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u * (_GLF_IDENTITY(1u, ~ (~ (1u))))), 0u, 1u)))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) * 1u)) - 0u)))), 0u + (uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(1u, (1u) | (1u))) : _GLF_FUZZED(subgroup_base))))), _GLF_IDENTITY(0u, min(0u, 0u)), 1u)))) ^ 0u)) * 1u), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u * (_GLF_IDENTITY(1u, ~ (~ (1u))))), 0u, 1u)))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) * 1u)) - 0u))))))) | 0u), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(1u, (1u) | (1u))) : _GLF_FUZZED(subgroup_base))))), _GLF_IDENTITY(0u, min(0u, 0u)), 1u)))) ^ 0u)) * 1u), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), uint(uvec4(~ ((subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u * (_GLF_IDENTITY(1u, ~ (~ (1u))))), 0u, 1u)))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) * 1u)) - 0u)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), uint(uvec4(~ ((subgroup_local_id)), 1u, 0u, 1u)))) ^ 0u)) * 1u), uint(uvec3(_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id))), (subgroup_local_id)))), uint(uvec4(~ ((subgroup_local_id)), 1u, 0u, 1u)))) ^ 0u)) * 1u), 0u, 1u)))), uint(uint((_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((subgroup_local_id)), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))), uint(uvec4(~ ((subgroup_local_id)), 1u, 0u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u | (1u))))))))) ^ 0u)) * 1u))))))))) << 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id))))), 0u | (_GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id))))), min((~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id))))), (~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id)))))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY((subgroup_local_id), ~ (~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id))))))), (_GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY((subgroup_local_id), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))), 0u ^ (((subgroup_local_id)))))))) - 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id))))), 0u | (_GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id))))), min((~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id))))), (~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id)))))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY((subgroup_local_id), ~ (~ _GLF_IDENTITY(((subgroup_local_id)), 0u ^ (((subgroup_local_id))))))), (_GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY((subgroup_local_id), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))), 0u ^ (((subgroup_local_id)))))))) - 0u)))) * 1u) << 0u), clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, 1u * (0u)))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id)), (~ ((subgroup_local_id))) | 0u))), (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))))) << 0u), ~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | 0u)) | ((subgroup_local_id))), ~ (~ (_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_base) : (subgroup_local_id))))))) << 0u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), clamp(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), max(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))))), 0u, 0u))))), ~ (~ ((subgroup_local_id))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)), ((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id)), (false ? _GLF_FUZZED(42628u) : _GLF_IDENTITY(~ ((subgroup_local_id)), min(_GLF_IDENTITY(~ ((subgroup_local_id)), ~ (~ (~ ((subgroup_local_id))))), ~ ((subgroup_local_id))))))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), _GLF_IDENTITY(((subgroup_local_id)), 0u | (((subgroup_local_id)))) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) ^ (_GLF_IDENTITY(((subgroup_local_id)) | 0u, ~ (~ (((subgroup_local_id)) | 0u))))))) | ((subgroup_local_id))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id)), ~ (~ (~ ((subgroup_local_id)))))))) << 0u, uint(uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u)))))), (clamp((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ((subgroup_local_id)) | _GLF_IDENTITY(0u, (0u) | (0u)))) | ((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u)))))), ~ (~ ((subgroup_local_id))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id)))) / 1u), ~ (~ (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))))))) << 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u) << 0u)) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) / 1u)) << _GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u), clamp(uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u), _GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u), (uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u)) * 1u), uint((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))), ~ (~ ((subgroup_local_id))))) << 0u))))))))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(0u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(0u), 0u)))), (uint(_GLF_IDENTITY(uvec2(uint(0u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(0u), 0u))))) / 1u)), uint(_GLF_IDENTITY(0u, (0u) << 0u))))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), (true ? _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) << 0u) : _GLF_FUZZED(uvec2(164457u, 115832u).r))), (_GLF_IDENTITY(((subgroup_local_id)), (true ? _GLF_IDENTITY(((subgroup_local_id)), _GLF_IDENTITY((((subgroup_local_id))), ((((subgroup_local_id)))) << _GLF_IDENTITY(0u, 0u + (0u))) << 0u) : _GLF_FUZZED(uvec2(164457u, 115832u).r)))) - (0u ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), max((~ (_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))), (subgroup_local_id))))), _GLF_IDENTITY((~ ((subgroup_local_id))), ((~ ((subgroup_local_id)))) | 0u)))), (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))) << 0u)))) | _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | 0u))) << 0u)), ((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) >> 0u)) | (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))))))))) | 0u))) << 0u))) | (_GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), 0u, 0u, 0u)), min(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), 0u, 0u, 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), 0u, 0u, 0u))))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(max((subgroup_local_id), (subgroup_local_id)), (max((subgroup_local_id), (subgroup_local_id))) - (1u ^ 1u)))))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))))) << 0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | 0u))) << 0u)), 0u ^ ((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | 0u))) << 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | 0u))) << 0u)), 0u ^ ((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | 0u))) << 0u)))), (_GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | 0u))) << 0u)), 0u ^ ((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | 0u))) << 0u))))) + 0u), _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | 0u))) << 0u)), 0u ^ ((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))), ~ (~ ((subgroup_local_id)))), (_GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))) | 0u))) << 0u)))))))))))))));
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false, (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)) || false))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)) || false))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)) || false)))))))) || false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) && true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4529.8073))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], injectionSwitch[1])).y))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true))))), (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false))) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true) || false)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))).y))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false, true))), false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], injectionSwitch[1])).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], injectionSwitch[1])).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], injectionSwitch[1])).y)))) || false))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true && (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) && true)))) || false))) && true), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false, _GLF_IDENTITY(true, (true) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat2(1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true))))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true))))))))))) && true)) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), false, true))), false)))), true))))), (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4529.8073))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)) && true), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4529.8073))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-7.9))))).x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, sin(0.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-7.9))))).x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) && true)) && true))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)), min(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))))], _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[1])).y))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true))))), (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3778.9569)), bool(false)))))) && true)))) || false))) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true))))), (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3778.9569)), bool(false)))))) && true)))) || false))) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false, true)), (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true))))), (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3778.9569)), bool(false)))))) && true)))) || false))) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true) || false)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))).y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) >> 0)], injectionSwitch[1]), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2094.3980)), float(0.0), bool(true))), 0.0) + (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))[0], injectionSwitch[1])))).y)))) && true))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))) && true), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true))), false, true))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true) || false)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))).y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) >> 0)], injectionSwitch[1]), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2094.3980)), float(0.0), bool(true))), 0.0) + (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))[0], injectionSwitch[1])))).y)))) && true))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))) && true), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true))), false, true))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true) || false)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))).y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) >> 0)], injectionSwitch[1]), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2094.3980)), float(0.0), bool(true))), 0.0) + (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))[0], injectionSwitch[1])))).y)))) && true))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))) && true), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true))), false, true))), false))), false || (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)))))))) && true)) && true) || false)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(injectionSwitch[0], injectionSwitch[1])))).y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) >> 0)], injectionSwitch[1]), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2094.3980)), float(0.0), bool(true))), 0.0) + (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))[0], injectionSwitch[1])))).y)))) && true))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))) && true), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true))), false, true))), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], _GLF_IDENTITY(injectionSwitch[1], float(mat3x4(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, sqrt(1.0), 0.0))))).y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], injectionSwitch[1])).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], injectionSwitch[1])).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], injectionSwitch[1])).y)))) || false))))), false || (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))], injectionSwitch[1])).y))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), int(_GLF_IDENTITY(int(min(0, 0)), max(int(min(0, 0)), int(min(0, 0))))))), 0))], injectionSwitch[1])).y)))) || false))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true && (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))) && true))), true && (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))) && true)))))))))), (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) && true)))) || false))) && true), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false, _GLF_IDENTITY(true, (true) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat2(1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false))))))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(91714u))), bool(false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(142211u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(56.44)), bvec2(true, false))))).x > injectionSwitch.y, false)))), false, true))))))))))) && true)) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) && _GLF_IDENTITY(true, bool(bool(true)))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(0.0)), vec2(1.0, 1.0)), dot(vec2(0.0, abs(0.0)), vec2(1.0, 1.0))), tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))))))))), false, true))), false)))), true)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false)))), true), false, false))))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((0u), ((0u)) << 0u))), (false ? _GLF_FUZZED((virtual_gid << workgroup_size)) : (~ (_GLF_IDENTITY((0u), ((0u)) << 0u)))))) | (0u))), 0u | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), ((0u)) / 1u))))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) + (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))), max(_GLF_IDENTITY((0u), _GLF_IDENTITY(~ (~ ((0u))), (~ (~ ((0u)))) ^ 0u)), _GLF_IDENTITY((0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) >> 0u), ((73793u & 36120u) & 0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) >> 0u))))))))) | _GLF_IDENTITY((0u), (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> (0u | 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> (0u | 0u)), (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (_GLF_IDENTITY((0u), ((0u)) >> (0u | 0u)))), _GLF_IDENTITY((0u), ((0u)) >> (0u | 0u))))) / 1u))), 0u | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | (0u))))))), (~ (_GLF_IDENTITY(0u, (0u) | (0u)))) | (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | (0u))), 0u | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), ((0u)) / 1u))))))), (false ? _GLF_FUZZED(workgroup_id) : ~ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ _GLF_IDENTITY(((0u)), max(((0u)), ((0u)))))) | (0u))), 0u | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(0u, max(0u, 0u)))))))), ((0u)) / 1u))))))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))), max(_GLF_IDENTITY((0u), _GLF_IDENTITY(~ (~ ((0u))), (~ (~ ((0u)))) ^ 0u)), _GLF_IDENTITY((0u), ~ (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) >> 0u))))))) | _GLF_IDENTITY((0u), (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> (0u | 0u)), max(_GLF_IDENTITY((0u), ((0u)) >> (0u | 0u)), _GLF_IDENTITY((0u), ((0u)) >> (0u | 0u))))) / 1u))), 0u | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | (0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))), max(_GLF_IDENTITY((0u), _GLF_IDENTITY(~ (~ ((0u))), (~ (~ ((0u)))) ^ 0u)), _GLF_IDENTITY((0u), ~ (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) >> 0u))))))) | _GLF_IDENTITY((0u), (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> (0u | 0u)), max(_GLF_IDENTITY((0u), ((0u)) >> (0u | 0u)), _GLF_IDENTITY((0u), ((0u)) >> (0u | 0u))))) / 1u))), 0u | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | (0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))), max(_GLF_IDENTITY((0u), _GLF_IDENTITY(~ (~ ((0u))), (~ (~ ((0u)))) ^ 0u)), _GLF_IDENTITY((0u), ~ (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) >> 0u))))))) | _GLF_IDENTITY((0u), (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> (0u | 0u)), max(_GLF_IDENTITY((0u), ((0u)) >> (0u | 0u)), _GLF_IDENTITY((0u), ((0u)) >> (0u | 0u))))) / 1u))), 0u | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | (0u))))))))), (~ (_GLF_IDENTITY(0u, (0u) | (0u)))) | (~ (_GLF_IDENTITY(0u, (0u) | (0u))))))) + 0u)) | _GLF_IDENTITY((uint(subgroupAllEqual(read_val))), _GLF_IDENTITY(((uint(subgroupAllEqual(read_val)))) ^ 0u, ~ (~ (((uint(subgroupAllEqual(read_val)))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))))) | (uint(subgroupAllEqual(read_val))), _GLF_IDENTITY((0u | _GLF_IDENTITY((uint(subgroupAllEqual(read_val))), ((uint(subgroupAllEqual(read_val)))) / 1u)) / 1u, 0u ^ ((0u | (uint(subgroupAllEqual(read_val)))) / 1u)))) / (_GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
