#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))), true, true), true)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))).y, mix(float(_GLF_FUZZED((7825.6294 + -726.015))), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))).y), bool(true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))))) || false), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(float(float(injectionSwitch.x)), max(float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(float(float(injectionSwitch.x)), max(float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(float(float(injectionSwitch.x)), max(float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))))) > injectionSwitch.y)))), false)), (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), float(vec4(float(injectionSwitch.x), 0.0, 0.0, 1.0))), float(injectionSwitch.x)))), max(float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))))) > injectionSwitch.y)), false))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(! (false)))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3191.0392)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(false, false), true))))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(true, false))))))), 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))), min(min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(true, false))))))), 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(true, false))))))), 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9781.4999)))) / 1.0), mix(float(_GLF_FUZZED(55.86)), float(injectionSwitch.y), bool(true))), float(mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.1)), bool(false))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.1)), bool(false))))))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.1)), bool(false))))))[1]), vec2(_GLF_FUZZED(float(65214)), _GLF_FUZZED(float(140874u))), bvec2(false, false)))[_GLF_IDENTITY(0, (0) ^ 0)], mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), max(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(float(_GLF_FUZZED(562.068)), (_GLF_IDENTITY(true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0), clamp(_GLF_IDENTITY(true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0), max(true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0), true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0))), _GLF_IDENTITY(true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0), (false ? _GLF_FUZZED(978.421) : true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0))), _GLF_IDENTITY(true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0), max(true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0), _GLF_IDENTITY(true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0), (true ? float(_GLF_IDENTITY(_GLF_FUZZED(562.068), (false ? _GLF_FUZZED(-48.77) : _GLF_FUZZED(_GLF_IDENTITY(562.068, mix(float(_GLF_FUZZED((-5.7 / -3.8))), float(562.068), bool(true))))))) : _GLF_FUZZED(2.0)) + 0.0))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068)))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))))), float(_GLF_FUZZED((98.72 / -1.7))), bool(false))), _GLF_IDENTITY(float(_GLF_FUZZED(562.068)), max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068)))))), float(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED((_GLF_IDENTITY(- -0.8, (- -0.8) / 1.0)))), bool(false)))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) && true))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(reflect(injectionSwitch, vec2(_GLF_IDENTITY(5.5, max(_GLF_IDENTITY(5.5, max(5.5, 5.5)), 5.5)), _GLF_IDENTITY(-7812.9269, (false ? _GLF_FUZZED(-7770.8002) : -7812.9269))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sin(0.0), 0.0))), (_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sin(0.0), 0.0)))) * 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-432.933) : float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(mat2((0.0), 0.0, 0.0, 0.0)), (float(mat2((0.0), 0.0, 0.0, 0.0))) - 0.0)))) + 0.0), 1.0, 1.0))))), 0.0, 1.0, 0.0)))))))[1])).x, (false ? _GLF_FUZZED(550.600) : injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.1)), bool(false)))))[_GLF_IDENTITY(0, (0) ^ 0)], mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), max(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(float(_GLF_FUZZED(562.068)), (true ? float(_GLF_FUZZED(562.068)) : _GLF_FUZZED(2.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068)))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))))), float(_GLF_FUZZED((98.72 / -1.7))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), min(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), 1.0 * (float(_GLF_FUZZED(562.068)))), float(_GLF_FUZZED(562.068)))), max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068)))))), float(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED((_GLF_IDENTITY(- -0.8, (- -0.8) / 1.0)))), bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) && true))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(reflect(injectionSwitch, vec2(5.5, _GLF_IDENTITY(-7812.9269, (false ? _GLF_FUZZED(-7770.8002) : -7812.9269))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 1.0, sin(0.0), 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-432.933) : float(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-432.933) : float(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0))))), (false ? _GLF_FUZZED(-925.671) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-432.933) : float(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))), 0.0, 1.0, 0.0)))))))[1])).x, (false ? _GLF_FUZZED(550.600) : injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.1)), bool(false)))))[_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, min(_GLF_IDENTITY((0) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(49611))), ((0) ^ 0) << 0), (0) ^ 0)))], mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(562.068, min(562.068, 562.068)))), max(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(float(_GLF_FUZZED(562.068)), (_GLF_IDENTITY(true, (true) && true) ? float(_GLF_FUZZED(_GLF_IDENTITY(562.068, max(562.068, 562.068)))) : _GLF_FUZZED(2.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))), (true ? max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))) : _GLF_FUZZED(22.26))))), float(_GLF_FUZZED((98.72 / -1.7))), bool(false)), mix(float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))), (true ? max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))) : _GLF_FUZZED(22.26))))), float(_GLF_FUZZED((98.72 / -1.7))), bool(false)), min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))), (true ? max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))) : _GLF_FUZZED(22.26))))), float(_GLF_FUZZED((98.72 / -1.7))), bool(false)), clamp(mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))), (true ? max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))) : _GLF_FUZZED(22.26))))), float(_GLF_FUZZED((98.72 / -1.7))), bool(false)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))), (true ? max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))) : _GLF_FUZZED(22.26))))), float(_GLF_FUZZED((98.72 / -1.7))), bool(false)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))), (true ? max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))) : _GLF_FUZZED(22.26))))), float(_GLF_FUZZED((98.72 / -1.7))), bool(false)))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(562.068)), _GLF_IDENTITY(max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))), (true ? max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068))) : _GLF_FUZZED(22.26))))), float(_GLF_FUZZED((98.72 / -1.7))), bool(false))))), float(_GLF_FUZZED(158.763)), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(562.068)), max(float(_GLF_FUZZED(562.068)), float(_GLF_FUZZED(562.068)))))), float(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(- -0.8, min(- -0.8, - -0.8)), (- -0.8) / _GLF_IDENTITY(1.0, (1.0) - 0.0))))), bool(false)))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) && true))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y) - 0.0))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y) - 0.0))), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y) - 0.0))), true)))), false))))))))), false, true))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y) - 0.0))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y) - 0.0))), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.9, 7.9, -7.8, 897.496)) : mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.04, 964.740)) : injectionSwitch)), 0.0, 0.0)))))) * vec2(1.0, 1.0)).y) - 0.0))), true)))), false))))))))), false, true))), false, false)))))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])) : _GLF_FUZZED(reflect(injectionSwitch, _GLF_IDENTITY(vec2(5.5, _GLF_IDENTITY(-7812.9269, (false ? _GLF_FUZZED(-7770.8002) : -7812.9269))), (vec2(5.5, _GLF_IDENTITY(-7812.9269, (false ? _GLF_FUZZED(-7770.8002) : -7812.9269)))) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sin(0.0), 0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-432.933) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))))), 0.0, 0.0))) + 0.0), 1.0, 1.0), (vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0)) - vec3(0.0, 0.0, 0.0)))))), 0.0, 1.0, 0.0)))))))[1])).x, (false ? _GLF_FUZZED(550.600) : injectionSwitch.x)) > injectionSwitch.y) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (_GLF_IDENTITY(true, true && (true)))) || false))), false)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))) && true))))))), false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))), true)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (false ? _GLF_FUZZED(343.188) : (injectionSwitch.y) - 0.0))), injectionSwitch.y)), injectionSwitch.y))), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (false ? _GLF_FUZZED(343.188) : (injectionSwitch.y) - 0.0))), injectionSwitch.y)), injectionSwitch.y))), true, false, true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((_GLF_IDENTITY(false, true && (false))) || false) || false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (_GLF_IDENTITY(bool((false)), (bool((false))) && true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))) || false, false || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)))))) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))) || false, false || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)))))) || false))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))) || false, false || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)))))) || false))), false, true))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false))), ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true))), ! (! (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), false)))))))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), false || (_GLF_IDENTITY(((false) && true), false || (((false) && true)))))))), false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)) || false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))))) && true))), ! (! (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((false) && true), ! (! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true)))))))), false, true), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((false) && true), false || (((false) && true)))), false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec3(bvec3((! ((false) && true)), false, true)))), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), false)))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)) || false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))))) && true))), ! (! (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((false) && true), ! (! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true)))))))), false, true), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((false) && true), false || (((false) && true)))), false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec3(bvec3((! ((false) && true)), false, true)))), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), false)))))))))), false, true))))), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(((false) && true), false || (_GLF_IDENTITY(((false) && true), ! (_GLF_IDENTITY(! (((false) && true)), (! (((false) && true))) || false)))))))))), false, true)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false))), ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true))), ! (! (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), false)))))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false))), ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true))), ! (! (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), false)))))))))), false, true))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true, ! (! _GLF_IDENTITY(((false) && true), false || (_GLF_IDENTITY(((false) && true), false || (((false) && true)))))))), false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), true, true)), bool(bvec4(bool(bvec3((true), true, true)), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), true, true)), bool(bvec4(bool(bvec3((true), true, true)), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)) || false)), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), true, true)), bool(bvec4(bool(bvec3((true), true, true)), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)) || false)))), false)))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))))) && true))), ! (! (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((false) && true), ! (! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), false || (((false) && true)))), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), false || (((false) && true)))), false || (_GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), false || (((false) && true)))), ! (! ((! _GLF_IDENTITY(((false) && true), false || (((false) && true))))))))), true))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), true, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), true, false), true))))))), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false) && true), ! (! (_GLF_IDENTITY(! ((false) && true), false || (! ((false) && true))))))), bool(bool(! (_GLF_IDENTITY(! ((false) && true), ! (! (_GLF_IDENTITY(! ((false) && true), false || (! ((false) && true))))))))))))), false, true)))), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), false)))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)) || false)), true && (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false)) || false)))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))))) && true))), ! (! (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), true && ((false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), true && ((false))), true)))))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((false) && true), ! (! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true)))))))), false, true), bvec3(bvec4(bvec3((! _GLF_IDENTITY(((false) && true), false || _GLF_IDENTITY((((false) && true)), bool(bvec4((((false) && true)), false, false, false))))), false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((false) && true)), false, true), bvec3(bvec3(bvec3((! ((false) && true)), false, true)))), bvec3(bvec4(bvec3((! ((false) && true)), false, true), true))), false)))))))))), false, true))))), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false) || (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && true)) && true), false || (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true), ! (_GLF_IDENTITY(! (((false) && true)), (! (((false) && true))) || false)))))))))), false, true)))))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false, true, _GLF_IDENTITY(false, (false) || false))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, true)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false, true, false), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, exp(0.0) * (0.0)), 0.0, 0.0))), vec4(0.0, 0.0, cos(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, cos(0.0), 0.0))), 0.0, sqrt(1.0), 1.0, exp(0.0), 1.0, 0.0, sqrt(abs(1.0)), length(vec2(0.0, 0.0)), 0.0)))) * 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, abs(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.1)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), log(sqrt(1.0)), 0.0, 1.0)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), _GLF_IDENTITY(abs(0.0), float(vec4(abs(0.0), 0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 0.0, 0.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), log(sqrt(1.0)), 0.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y), true)), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) && true)) || false)) && true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((-6.4 * -960.620)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false)), clamp(mix(vec2(_GLF_FUZZED((-6.4 * -960.620)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false)), mix(vec2(_GLF_FUZZED((-6.4 * -960.620)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((-6.4 * -960.620)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false)), clamp(mix(vec2(_GLF_FUZZED((-6.4 * -960.620)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false)), mix(vec2(_GLF_FUZZED((-6.4 * -960.620)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false)), mix(vec2(_GLF_FUZZED((-6.4 * -960.620)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false))))))))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, cos(0.0))))))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-198.988))))))), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-844.281))), length(vec2(0.0, 0.0)), cos(0.0), 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)))))), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (subgroup_base) + 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) >> 0u, ~ (~ ((virtual_gid) >> 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4)))), int(ivec4(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)) : _GLF_FUZZED(40864))), 0, ((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))), 0))), (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) - 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (true ? _GLF_IDENTITY(4, (4) - 0) : _GLF_FUZZED(51445))), 1, 1)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(4, (4) ^ 0)) >> 0), (4) - 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) - 0), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) ^ 0)))), 1))) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) + 0)))) * 1))) << 0))), max(min(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (true ? _GLF_IDENTITY(4, (4) - 0) : _GLF_FUZZED(51445))), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (true ? _GLF_IDENTITY(4, (4) - 0) : _GLF_FUZZED(51445))), 1, 1))) << (1 ^ 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) - 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) - 0), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), 1))) ^ _GLF_IDENTITY(0, (0) * 1))) << 0, int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) - 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) - 0), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), 1))) ^ _GLF_IDENTITY(0, (0) * 1))) << 0, clamp((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) - 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) - 0), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), 1))) ^ _GLF_IDENTITY(0, (0) * 1))) << 0, (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) - 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) - 0), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), 1))) ^ _GLF_IDENTITY(0, (0) * 1))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) - 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) - 0), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), 1))) ^ _GLF_IDENTITY(0, (0) * 1))) << 0, 0 | ((_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) - 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) - 0), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), 1))) ^ _GLF_IDENTITY(0, (0) * 1))) << 0)))), 1)))))), min(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) - 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (true ? _GLF_IDENTITY(4, (4) - 0) : _GLF_FUZZED(51445))), 1, 1)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) - 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), 1))) ^ _GLF_IDENTITY(0, (0) * 1))) << 0))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, 1 * (1)), 1)))) - 0) | (min(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (4) - 0), 1, 1)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1)), (int(ivec3(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(0, 0 + (0)), 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(-9.0, -3821.6045).s)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))))), clamp(1, 1, 1)), 1))) ^ 0)) << 0)))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))), true && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + 0.0) > injectionSwitch.y), false, false, false))))))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, 0 ^ (2)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))))))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8384.5878)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(float(true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-13.22), max(_GLF_FUZZED(-13.22), _GLF_FUZZED(-13.22))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY(_GLF_FUZZED(-13.22), max(_GLF_FUZZED(-13.22), _GLF_FUZZED(-13.22))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-13.22), max(_GLF_FUZZED(-13.22), _GLF_FUZZED(-13.22))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-13.22), max(_GLF_FUZZED(-13.22), _GLF_FUZZED(-13.22))), (injectionSwitch)[1]))), bvec2(false, true))))).y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(tan(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), ~ (_GLF_IDENTITY(~ (max(0, 0)), (false ? _GLF_FUZZED(ivec3(95903, 71277, 44089).p) : ~ (max(0, 0)))))))], _GLF_FUZZED(float(true))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-13.22), (_GLF_IDENTITY(_GLF_FUZZED(-13.22), mix(float(_GLF_FUZZED(-13.22)), float(_GLF_FUZZED(-8240.1776)), bool(false)))) * abs(1.0)), max(_GLF_FUZZED(-13.22), _GLF_FUZZED(-13.22))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), (bool(bvec3(false, false, true))) && true)), true))))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u, (_GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u, 0u | ((buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u))) - 0u), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true), false))) ? _GLF_FUZZED(workgroup_id) : (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u))), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u + (uint(subgroupAllEqual(read_val)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u ^ (uint(subgroupAllEqual(read_val)))))), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(read_val, ~ (~ (read_val))), min(_GLF_IDENTITY(read_val, ~ (~ (read_val))), _GLF_IDENTITY(read_val, ~ (~ (read_val))))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (true ? uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(workgroup_base))))), ((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (true ? uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val)))) : _GLF_FUZZED(workgroup_base)))))) / 1u))), (~ (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (true ? uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(workgroup_base))))), ((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (true ? uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val)))) : _GLF_FUZZED(workgroup_base)))))) / 1u)))) | (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))), ~ (~ ((~ (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (true ? uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(workgroup_base))))), ((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (true ? uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val)))) : _GLF_FUZZED(workgroup_base)))))) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), 0u ^ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) | 0u))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(0u, (195910u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << (0u & 12088u)), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) - 0u), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u)) >> 0u)))))))), ~ (~ (~ ((~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << (0u & 12088u)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u)) >> 0u)))))))))))), ((_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(0u, (195910u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << (0u & 12088u)), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) - 0u), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u)) >> 0u)))))))), ~ (~ (~ ((~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << (0u & 12088u)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u)) >> 0u))))))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val))))))), ~ (~ (~ ((~ (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u)), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << (0u & 12088u)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u)) >> 0u)))))))))))), 0u ^ ((_GLF_IDENTITY(~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), _GLF_IDENTITY(~ (~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) ^ 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << (0u & 12088u)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u)) >> 0u)))))))))), (true ? _GLF_IDENTITY(~ (~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) ^ 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << (0u & 12088u)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u)) >> 0u)))))))))), (~ (~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) ^ 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u)), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << (0u & 12088u)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u)) >> 0u))))))))))) | 0u) : _GLF_FUZZED(workgroup_base)))))))) | ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))) | 0u)) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), _GLF_IDENTITY((uvec4(0u, 0u, 1u, 1u)), clamp(_GLF_IDENTITY((uvec4(0u, 0u, 1u, 1u)), ((uvec4(0u, 0u, 1u, 1u))) | ((uvec4(0u, 0u, 1u, 1u)))), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) << (171244u & 0u)), 1u, 1u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(0u, _GLF_IDENTITY(0u, (0u) << (171244u & 0u)), 1u, 1u)))), _GLF_IDENTITY((uvec4(0u, 0u, 1u, 1u)), _GLF_IDENTITY(max((_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))), (max((_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), (uvec4(0u, 0u, 1u, 1u)))) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_id) : 7u))), max(uvec4(7u), uvec4(7u))))))))) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))))) * 1u) >> 0u), (true ? _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))) >> 0u) : _GLF_FUZZED((num_workgroup | subgroup_id)))), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), ~ (~ (~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))))), (_GLF_IDENTITY(~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), ~ (~ (~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))))))) - 0u)), ((_GLF_IDENTITY(~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), ~ (~ (~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, uint(uvec2(_GLF_IDENTITY(read_val, 1u * (read_val)), 0u))))))))))))) >> 0u)))) | 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 63076u) + ((_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))), ~ (_GLF_IDENTITY(~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))), (true ? ~ (~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (_GLF_IDENTITY(~ _GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))), ((buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) ^ 0u), (true ? ~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) : _GLF_FUZZED(num_workgroup)))) << 0u)))) : _GLF_FUZZED(workgroup_size)))), ~ (~ (~ (_GLF_IDENTITY(~ (~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))), (true ? ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (_GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (false ? _GLF_FUZZED(workgroup_size) : (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))) - 0u), (true ? ~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) : _GLF_FUZZED(num_workgroup)))) << 0u)))), (_GLF_IDENTITY((~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (_GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (false ? _GLF_FUZZED(workgroup_size) : (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))) - 0u), (true ? ~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) : _GLF_FUZZED(num_workgroup)))) << 0u)))), 0u ^ ((~ ((_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (read_val))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (_GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))), (false ? _GLF_FUZZED(workgroup_size) : (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))) - 0u), (true ? ~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) : _GLF_FUZZED(num_workgroup)))) << 0u))))))) - 0u) : _GLF_FUZZED(workgroup_size)))))))))))) | 0u)))) >> 0u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.0)), bool(false))), injectionSwitch.x)))) < injectionSwitch.y)) ? 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))) >> 0u), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) | 0u), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), (_GLF_IDENTITY(((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), ~ (_GLF_IDENTITY(~ (((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))) : _GLF_FUZZED(53087u)))))) << 0u), ~ (~ (_GLF_IDENTITY(~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), (~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), (_GLF_IDENTITY((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), (_GLF_IDENTITY(((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), ~ (_GLF_IDENTITY(~ (((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))) : _GLF_FUZZED(53087u)))))) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), (~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u ^ (_GLF_IDENTITY(~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))), (~ ((~ (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))))) >> _GLF_IDENTITY(0u, uint(uint(0u)))))) | 0u)) >> 0u)) : _GLF_FUZZED(47622u))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(false, false || (false)) || (true && (false))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y)), true), true, false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y)), true), true, false)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(_GLF_IDENTITY(mat3(0.0 + (injectionSwitch.y), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat3(mat3(mat3(0.0 + (injectionSwitch.y), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))), transpose(transpose(mat3(mat3(mat3(0.0 + (injectionSwitch.y), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + 0.0))), max(_GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + 0.0))), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + 0.0))), mix(float(_GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + 0.0)))), float(_GLF_FUZZED(-5.1)), bool(false))) : _GLF_FUZZED(-6.4))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3989.4344)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), clamp(float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0)))))), bool(true))) < injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
