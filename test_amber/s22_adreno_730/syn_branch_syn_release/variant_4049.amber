#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint num_workgroup;
 ivec4 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.0)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), min(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) * (injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), float(float(float(vec2(0.0, 0.0))))))) * 1.0), 1.0), mat4x3(mat4(mat4x3(vec2(1.0, 1.0) * (injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))), vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), min(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(vec2(1.0, 1.0) * (injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat4x3(mat4(mat4x3(vec2(1.0, 1.0) * (injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))), vec2(injectionSwitch[0], injectionSwitch[1])).y), true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true, true))), false || (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(false, true)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(false, true)), false)))))), true, _GLF_IDENTITY(false, (false) || false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(false, true)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(false, true)), false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(false, true)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(false, true)), false))))))))), true, false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x : _GLF_FUZZED(47.96)), ((true ? _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x : _GLF_FUZZED(47.96))) / 1.0)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), true)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))) + (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(517.113)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) | (ivec4(1)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(83.05)), bool(false))), injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat4x3((injectionSwitch) * mat2(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4(mat4x3((injectionSwitch) * mat2(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)), mix(vec2(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_IDENTITY(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))[1], mix(float(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))[1]), float(_GLF_FUZZED(6.3)), bool(false)))), vec2(_GLF_FUZZED(8534.3899), _GLF_FUZZED(-908.671)), bvec2(false, _GLF_IDENTITY(false, false || (false))))))))).y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).y))) || false)), true, false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, 1.0, 0.0, tan(0.0), 0.0, 0.0)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, 1.0, 0.0, tan(0.0), 0.0, 0.0)))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, tan(0.0), 0.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, 1.0, 0.0, tan(0.0), 0.0, 0.0)))))) > injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4653.7219)), float(injectionSwitch.x), bool(true)), (true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED(4653.7219), (_GLF_IDENTITY(_GLF_FUZZED(4653.7219), max(_GLF_FUZZED(4653.7219), _GLF_FUZZED(4653.7219)))) - 0.0)), float(injectionSwitch.x), bool(true)) : _GLF_FUZZED(mix(2190.4064, -806.283, false))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(7135.8714), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6007.7751)), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(7135.8714), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6007.7751)), bvec2(true, false)), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(7135.8714), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(7135.8714), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(7135.8714), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(7135.8714), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(7135.8714, clamp(7135.8714, _GLF_IDENTITY(7135.8714, (7135.8714) - log(1.0)), 7135.8714))), (injectionSwitch)[1]))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1477.1045), _GLF_FUZZED(-5.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(sqrt(1.0), 0.0))), 0.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 1.0, exp(0.0), exp(0.0))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 1.0, exp(0.0), exp(0.0))))))), (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(6007.7751)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(7135.8714), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(6007.7751)), (vec2((injectionSwitch)[0], _GLF_FUZZED(6007.7751))) - vec2(0.0, 0.0)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(7135.8714), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6007.7751)), bvec2(true, false))))))), mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true, true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, round(length(normalize(1.0))), 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(mat4(0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.x), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3(injectionSwitch.x, round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))) && true)))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) && true)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))) || false)) && true)), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) && true)), _GLF_IDENTITY(true, (true) || false)))), bvec2(bvec2(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) && true))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) && true)), _GLF_IDENTITY(true, (true) || false)))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bool(true))), false || (_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((5628.3551))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), mix(float(_GLF_FUZZED(65.95)), float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((5628.3551))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), bool(true)))), (injectionSwitch.y) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0)), float(_GLF_FUZZED(7547.5381)), bool(false))), 0.0)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupID.x)), (~ (~ (gl_WorkGroupID.x))) | (~ (~ (gl_WorkGroupID.x))))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), min(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), uvec3(uvec3(uvec3(0u, 0u, 0u) | (gl_WorkGroupID))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], 0u ^ (gl_WorkGroupID[2])))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_WorkGroupID), (uvec3(0u, 0u, 0u) | (gl_WorkGroupID)) >> uvec3(0u, 0u, 0u)))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))) ^ uvec3(0u, 0u, 0u))))).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x))) | (gl_WorkGroupID.x), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u | 0u) | (0u)), 0u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(0u, (0u | 0u) | (0u)), 0u, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(uvec4(uvec3(gl_WorkGroupID), 0u)))) / uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(gl_WorkGroupID))))))), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(subgroup_size, 38539u, 35876u)) : _GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))))), 1u)) | uvec4(0u, 0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED((max(uvec3(49191u, 70471u, 13321u), workgroup_size) << uvec3(82844u, 105159u, 178948u))))), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), 1u)) | uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(subgroup_size, 38539u, 35876u)) : _GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))))), 1u)) | uvec4(0u, 0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED((max(uvec3(49191u, 70471u, 13321u), workgroup_size) << uvec3(82844u, 105159u, 178948u))))), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), 1u)) | uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))))) >> uvec3(0u, 0u, 0u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(gl_WorkGroupID))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), 1u)) | uvec4(0u, 0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u), uvec3(0u, 0u, 0u)))), 1u)) | uvec4(0u, 0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(uvec4((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) * 1u)), 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) * uvec3(1u, 1u, 1u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 1u)) | uvec4(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))).x) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(gl_WorkGroupID))))))), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(uvec2(_GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), (true ? (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))) : _GLF_FUZZED(workgroup_size))), 1u)))), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), 1u)) | uvec4(0u, 0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u), 0u)))))))) >> ((0u ^ 0u) | 0u)), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(0u))))))), _GLF_IDENTITY(1u, ~ (~ (1u)))), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), 1u)) | uvec4(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), min(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))), ~ (~ (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), min(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))))))).x)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x))) | (gl_WorkGroupID.x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) | (gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(1u)), ~ (~ (_GLF_IDENTITY(uvec3(1u), uvec3(1u))))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (~ (~ (gl_WorkGroupID))))), uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)).x))) | (gl_WorkGroupID.x))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(17932u) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)) + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (47952u & 0u) | (subgroup_id)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (47952u & 0u) | (subgroup_id)), (false ? _GLF_FUZZED((workgroup_id * workgroup_base)) : _GLF_IDENTITY(subgroup_id, (47952u & 0u) | (subgroup_id)))), 0u, 1u))) * subgroup_size, subgroup_id * subgroup_size)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) + 0u), ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1333.4036)), bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ (buf[virtual_gid] = 1)))) + (0u & 12841u)), (buf[virtual_gid] = 1) / 1u), (false ? _GLF_FUZZED(workgroup_size) : buf[virtual_gid] = 1)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))), (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) / 1u), (false ? _GLF_FUZZED(workgroup_size) : buf[virtual_gid] = 1)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))))) << 0u), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) / 1u), (false ? _GLF_FUZZED(workgroup_size) : buf[virtual_gid] = 1)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))))));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) - vec2(0.0, 0.0)))[1])).x > injectionSwitch.y, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]) + determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]) + determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(9.6)), bvec2(true, false))).x < injectionSwitch.y, true, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]) + determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(9.6)), bvec2(true, false))).x < injectionSwitch.y, true, false)))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true, ! (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true))))))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))) || false)))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))) || false))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec3((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)) || false)))), ((false)) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))) || false)))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))) || false))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec3((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)) || false)))), ((false)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))) || false)))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))) || false)))))))))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))), bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))), false, true, true))), bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false))))), true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)) || false)))), ((false)) || false)))))))), true, false, true))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) && true), true, true, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))), bool(bvec4(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) && true), true, true, true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) && true), true, true, true))))))), ((! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec4(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) && true), true, true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), (false || (bool(false))) && true)))))), ((_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), (false || (bool(false))) && true))))))) || false)))))))) && true)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false))))) && true))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))) || false)) || false)), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))))), ((false)) || false))), _GLF_IDENTITY(true, ! (! (true))), false, true))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), true)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))), ((false)) || false))), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true), true, false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true), true, false)))))) || false))))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false)) || false))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false, true))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true))) || false))), ((false)) || false))), true, false, true))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))) && true))) && true))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((false)) || false))), true, false, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))) && true)), (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, false)))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! (! ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, false)))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bool(false))))), (! ((_GLF_IDENTITY(false, bool(bool(false)))))) && true), false))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true, ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true, ! (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))))), false || ((! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true)))))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(false))))))) && true)))), ((false)) || false))), true, false, _GLF_IDENTITY(true, (true) && true)))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(false))))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(false))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(false))))))) && true))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (((false))) || false)) && true)), ! (! (! (((false)))))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))), ((false)) || false))), true, false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true))) || false))), ((false)) || false))), true, false, true))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))) && true))) && true))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((false)) || false))), true, false, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))) && true)), (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, false)))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! (! ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, false)))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bool(false))))), (! ((_GLF_IDENTITY(false, bool(bool(false)))))) && true), false))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true, ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true, ! (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))))), false || ((! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true)))))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(false))))))) && true)))), ((false)) || false))), true, false, _GLF_IDENTITY(true, (true) && true)))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(false))))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(false))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(false))))))) && true))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (((false))) || false)) && true)), ! (! (! (((false)))))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))), ((false)) || false))), true, false, true))), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))) && true)))), ! (! ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))))) && true)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, bool(bool(false))))), true && (! (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false))))) && true))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))) || false)) || false)), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), true)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)))), ((false)) || false))), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, true, true)))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true, false || ((! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true)))))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true, false || ((! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true)))))), ((false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))), ((false)) || false))), true, false, true)))) || false), bool(bvec3(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))) && true), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))))), _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), ! (! (! (((false)))))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), true, false, true)), false || (bool(bvec4(bool(bool(false)), true, false, true)))))) || false)))))) && true)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), true, false, true)), false || (bool(bvec4(bool(bool(false)), true, false, true)))))) || false)))))) && true))))))), ((false)) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(false || (_GLF_IDENTITY(false, bool(bool(false)))), false, true))), true))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))), ((false)) || false))), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) / 1u), _GLF_IDENTITY(4, (4) << (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) / 1) & -21052)), 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3758.2725)), bool(false)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y), (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (true))) && true)))), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && true, bool(bool((false) && true))), true, false, true)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), bool(bool((false) && true))), true, false, true)))), ! (! ((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), bool(bool((false) && true))), true, false, true))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), bool(bool((false) && true))), true, false, true))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-3.6))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x)) : _GLF_FUZZED((-82.16 - radians(-358.118))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(68880) : 64)), 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
