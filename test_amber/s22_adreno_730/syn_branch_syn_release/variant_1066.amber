#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_67 {
 mat2x4 _f0;
 bvec2 _f1;
 vec2 _f2;
 uvec3 _f3;
 vec2 _f4;
 vec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_66 {
 ivec2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_65 {
 bvec4 _f0;
} ;

struct _GLF_struct_64 {
 mat4x3 _f0;
 ivec4 _f1;
 ivec4 _f2;
 bvec4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_68 {
 _GLF_struct_64 _f0;
 vec3 _f1;
 _GLF_struct_65 _f2;
 _GLF_struct_66 _f3;
 uint _f4;
 _GLF_struct_67 _f5;
} ;

struct _GLF_struct_62 {
 ivec3 _f0;
} ;

struct _GLF_struct_63 {
 _GLF_struct_62 _f0;
} ;

struct _GLF_struct_61 {
 uvec2 _f0;
 uint num_workgroup;
} ;

struct _GLF_struct_69 {
 _GLF_struct_61 _f0;
 bool _f1;
 _GLF_struct_63 _f2;
 uint _f3;
 _GLF_struct_68 _f4;
} ;

struct _GLF_struct_59 {
 mat4x3 _f0;
 ivec3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_57 {
 ivec4 _f0;
 ivec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_56 {
 mat2x3 _f0;
 vec4 _f1;
 uvec4 _f2;
 ivec3 _f3;
 mat4x2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_55 {
 ivec4 _f0;
 mat3 _f1;
 mat4x3 _f2;
 mat2x3 _f3;
 ivec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_54 {
 mat3x2 _f0;
} ;

struct _GLF_struct_58 {
 _GLF_struct_54 _f0;
 _GLF_struct_55 _f1;
 bool _f2;
 _GLF_struct_56 _f3;
 mat3x4 _f4;
 mat2x4 _f5;
 _GLF_struct_57 _f6;
} ;

struct _GLF_struct_60 {
 uint subgroup_size;
 bvec3 _f0;
 _GLF_struct_58 _f1;
 vec2 _f2;
 _GLF_struct_59 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_51 {
 mat3 _f0;
 mat2x4 _f1;
 vec2 _f2;
 mat3 _f3;
 uvec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_50 {
 vec4 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_52 {
 vec2 _f0;
 mat4 _f1;
 bool _f2;
 _GLF_struct_50 _f3;
 _GLF_struct_51 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_48 {
 ivec2 _f0;
 int _f1;
} ;

struct _GLF_struct_47 {
 mat3 _f0;
 bvec3 _f1;
 bvec4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_46 {
 ivec3 _f0;
 bool _f1;
 mat2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_45 {
 int _f0;
} ;

struct _GLF_struct_44 {
 ivec4 _f0;
 bvec3 _f1;
 ivec2 _f2;
 mat3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_43 {
 bvec3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_42 {
 vec2 _f0;
 uint _f1;
 mat2x3 _f2;
 ivec2 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_49 {
 _GLF_struct_42 _f0;
 _GLF_struct_43 _f1;
 _GLF_struct_44 _f2;
 _GLF_struct_45 _f3;
 _GLF_struct_46 _f4;
 _GLF_struct_47 _f5;
 _GLF_struct_48 _f6;
} ;

struct _GLF_struct_41 {
 mat4x3 _f0;
} ;

struct _GLF_struct_53 {
 _GLF_struct_41 _f0;
 _GLF_struct_49 _f1;
 uint subgroup_local_id;
 uvec4 _f2;
 _GLF_struct_52 _f3;
 bvec3 _f4;
 mat4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_39 {
 mat4x3 _f0;
} ;

struct _GLF_struct_37 {
 mat4 _f0;
 mat2x4 _f1;
 uint _f2;
 mat3 _f3;
 mat3x4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_38 {
 ivec4 _f0;
 _GLF_struct_37 _f1;
 int _f2;
} ;

struct _GLF_struct_35 {
 vec4 _f0;
 mat4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_34 {
 bvec3 _f0;
} ;

struct _GLF_struct_33 {
 int _f0;
 ivec2 _f1;
 bvec4 _f2;
 float _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_32 {
 vec2 _f0;
 ivec4 _f1;
 uint _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_36 {
 mat3x4 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_33 _f2;
 _GLF_struct_34 _f3;
 _GLF_struct_35 _f4;
} ;

struct _GLF_struct_31 {
 bvec2 _f0;
 vec2 _f1;
 mat2x3 _f2;
 vec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_30 {
 uvec3 _f0;
} ;

struct _GLF_struct_40 {
 uint next_virtual_gid;
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 _GLF_struct_36 _f2;
 _GLF_struct_38 _f3;
 _GLF_struct_39 _f4;
} ;

struct _GLF_struct_27 {
 uvec4 _f0;
 ivec4 _f1;
 uvec2 _f2;
 uvec3 _f3;
 ivec3 _f4;
 mat3x4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_26 {
 mat3 _f0;
 vec4 _f1;
 mat4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_25 {
 mat3x2 _f0;
 ivec2 _f1;
 uvec2 _f2;
 ivec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_28 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 vec2 _f2;
 vec2 _f3;
 _GLF_struct_27 _f4;
} ;

struct _GLF_struct_23 {
 ivec4 _f0;
} ;

struct _GLF_struct_24 {
 mat3x4 _f0;
 _GLF_struct_23 _f1;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 bvec4 _f1;
 mat3x4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_20 {
 mat2x4 _f0;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 uvec4 _f1;
 _GLF_struct_21 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_19 {
 uvec3 _f0;
 int i;
 mat4 _f1;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 bvec2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_15 {
 mat3 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 mat4x3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_29 {
 mat3x2 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_24 _f4;
 _GLF_struct_28 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 bvec2 _f3;
 bvec4 _f4;
 mat4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_9 {
 int _f0;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 _GLF_struct_9 _f1;
 mat2 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 uint subgroup_id;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 bvec4 _f1;
 vec3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 mat3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
 uint _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 mat3x4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_1 _f0;
 mat2x3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 ivec3 _f4;
 _GLF_struct_12 _f5;
 _GLF_struct_13 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_1(_GLF_struct_0(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), cos(0.0), 0.0, 1.0)), 1.0 * (float(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), max(1.0, 1.0)))))), cos(0.0), 0.0, 1.0)))))), mat2x3(1.0))), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(cos(7.0))))), _GLF_struct_7(_GLF_struct_2(mat4(1.0), mat3x2(1.0), mat3x2(1.0), 1u), mat3x4(1.0), _GLF_struct_3(uvec2(1u), mat3(1.0), mat2x4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), tan(0.0), 1.0))))), _GLF_struct_4(mat2x3(1.0)), _GLF_struct_5(mat4x2(1.0), bvec4(true), vec3(1.0), mat3(1.0)), _GLF_struct_6(vec3(1.0))), _GLF_struct_8(uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), gl_SubgroupID), ivec3(1), _GLF_struct_12(uvec3(_GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))) << 0u))), _GLF_struct_9(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)))))), mat2(1.0), _GLF_struct_10(mat3x2(1.0), mat4x3(1.0), ivec4(1), bvec2(true), bvec4(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), mat4(1.0), uvec4(1u)), _GLF_struct_11(bvec2(true)), bvec4(true)), _GLF_struct_13(vec2(1.0)));
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = _GLF_struct_replacement_14._f3.subgroup_id;
 _GLF_struct_60 _GLF_struct_replacement_60 = _GLF_struct_60(gl_SubgroupSize, _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_struct_58(_GLF_struct_54(mat3x2(1.0)), _GLF_struct_55(ivec4(1), mat3(1.0), mat4x3(1.0), mat2x3(1.0), ivec2(1), mat3x4(1.0)), true, _GLF_struct_56(mat2x3(1.0), vec4(1.0), uvec4(1u), ivec3(1), mat4x2(1.0), mat4x2(1.0)), mat3x4(1.0), mat2x4(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0))), _GLF_struct_57(ivec4(1), ivec4(1), ivec4(1))), vec2(1.0), _GLF_struct_59(mat4x3(1.0), ivec3(1), uvec4(1u)), mat3(1.0));
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = _GLF_struct_replacement_60.subgroup_size;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, clamp(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))))) | 0u);
 _GLF_struct_53 _GLF_struct_replacement_53 = _GLF_struct_53(_GLF_struct_41(mat4x3(1.0)), _GLF_struct_49(_GLF_struct_42(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.6))), float(mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6660.2057))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), sqrt(1.0), abs(log(1.0)), 0.0, 0.0)))), 1u, mat2x3(1.0), ivec2(1), mat3x4(1.0)), _GLF_struct_43(bvec3(true), ivec4(1)), _GLF_struct_44(ivec4(1), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))), bool(_GLF_IDENTITY(bool(true), true && (bool(true)))))), _GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1))), mat3(1.0), uvec2(1u)), _GLF_struct_45(1), _GLF_struct_46(ivec3(1), true, mat2(1.0), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.9)), float(1.0), bool(true))))), _GLF_struct_47(mat3(1.0), bvec3(true), bvec4(true), uvec3(1u)), _GLF_struct_48(ivec2(1), 1)), gl_SubgroupInvocationID, _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), _GLF_struct_52(vec2(1.0), mat4(1.0), true, _GLF_struct_50(vec4(1.0), uvec2(1u), mat2x4(1.0), bvec2(true)), _GLF_struct_51(mat3(1.0), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.5) : 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0))), float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), length(vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0) * (_GLF_ONE(1.0, injectionSwitch.y))), 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4595.6459) : 1.0)), 1.0, 0.0, length(vec2(0.0, 0.0)), tan(0.0), 1.0)))), vec2(1.0), mat3(1.0), uvec2(1u), vec4(1.0)), uvec2(1u)), bvec3(true), mat4(1.0), mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3151.8181)))));
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = _GLF_IDENTITY(_GLF_struct_replacement_53.subgroup_local_id, clamp(_GLF_struct_replacement_53.subgroup_local_id, _GLF_struct_replacement_53.subgroup_local_id, _GLF_struct_replacement_53.subgroup_local_id));
 _GLF_struct_69 _GLF_struct_replacement_69 = _GLF_struct_69(_GLF_struct_61(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) + (uvec3(7u))))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), ~ (~ (uvec3(7u)))))), max((gl_NumWorkGroups) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) + (uvec3(7u))))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), ~ (~ (uvec3(7u)))))), (gl_NumWorkGroups) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) + (uvec3(7u))))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), ~ (~ (uvec3(7u))))))))), clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x), true, _GLF_struct_63(_GLF_struct_62(ivec3(1))), 1u, _GLF_struct_68(_GLF_struct_64(mat4x3(1.0), _GLF_IDENTITY(ivec4(1), max(ivec4(1), _GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))), ivec4(1))))), ivec4(1), bvec4(true), mat3x2(1.0)), vec3(1.0), _GLF_struct_65(bvec4(true)), _GLF_struct_66(ivec2(1), bvec2(true)), 1u, _GLF_struct_67(mat2x4(1.0), bvec2(true), vec2(1.0), uvec3(1u), vec2(1.0), vec3(1.0), ivec3(1))));
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(117451u, 195570u, 193247u)), (_GLF_FUZZED(uvec3(117451u, 195570u, 193247u))) - uvec3(0u, 0u, 0u)) : gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(117451u, 195570u, 193247u)), (_GLF_FUZZED(uvec3(117451u, 195570u, 193247u))) - uvec3(0u, 0u, 0u)) : gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))).x)));
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x;
 uint virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 _GLF_struct_40 _GLF_struct_replacement_40 = _GLF_struct_40(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, _GLF_IDENTITY(min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y), uint(uint(min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y))))) + 1, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x))))), (_GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x)))))) * 1u) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, max(1, 1)), (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y)), GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y)) + 1) - (3246u & 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (true ? GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y : _GLF_FUZZED(virtual_gid))) + 1)))) / (1u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)), (1u & 1u) * (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u), uint(uvec3(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u), ~ (~ ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u)))), 1u, 1u))))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, (1) | 0), (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))) + uvec2(0u, 0u)).y + 1)))) | ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)))))) | ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u), ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u)) / 1u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))))))) << 0u), (0u & 142684u) ^ (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x))))), (_GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x)))))) * 1u) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, max(1, 1)), (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y)), GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y)) + 1) - (3246u & 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (true ? GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y : _GLF_FUZZED(virtual_gid))) + 1)))) / (1u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)), (1u & 1u) * (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u), uint(uvec3(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u), ~ (~ ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u)))), 1u, 1u))))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, (1) | 0), (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, min(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))) + uvec2(0u, 0u)).y + 1)))) | ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)))))) | ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u), ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - (3246u & 0u)) / 1u))) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))))))) << 0u)))))) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x) | 0u)), _GLF_struct_30(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) : _GLF_FUZZED(115101u))) ^ 0u))), _GLF_struct_31(bvec2(true), vec2(1.0), mat2x3(1.0), vec2(1.0), true), _GLF_struct_36(mat3x4(1.0), _GLF_struct_32(vec2(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))), 1u, _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_struct_33(1, ivec2(1), bvec4(true), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), uvec2(1u)), _GLF_struct_34(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), true)))), _GLF_struct_35(vec4(1.0), mat4(1.0), ivec2(1))), _GLF_struct_38(ivec4(_GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(2), int(2))))), _GLF_struct_37(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(898.825)), float(1.0), bool(true)))), mat2x4(1.0), 1u, mat3(1.0), mat3x4(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0))), mat4x2(1.0)), 1), _GLF_struct_39(mat4x3(1.0)));
 _GLF_IDENTITY(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = 1, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))) : _GLF_FUZZED(workgroup_id))) + _GLF_IDENTITY((buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = 1), (_GLF_IDENTITY((buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = 1), ((buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = 1)) ^ 0u)) | 0u));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u) + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u) + 1) | 0u) < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, 0u ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x, 0u ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, 1u * (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y)), (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)), clamp(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)), min(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)), ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))), ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))))))) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y))) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))))) + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, 1u * (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y))) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)), GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)).y)) ^ (1u ^ 1u)) / 1u)))))) + _GLF_IDENTITY(1, (1) | (1)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))))) | 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))))) | 0u)), max((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))))) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))))) | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))))) | 0u)), uint(uvec2((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))))) | 0u)), 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), clamp(~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id), ~ (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))).y) / 1u)), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u))) | (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) / 1u)))))) | 0u)))) + 0u)) + 1, 0u, 0u, 1u))) : _GLF_FUZZED(72341u))))) < GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x) && true))
    {
     _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(mat3x2(1.0), _GLF_struct_18(_GLF_struct_15(mat3(1.0)), _GLF_struct_16(uvec3(1u), uvec2(1u)), _GLF_struct_17(mat4x3(1.0), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false), bvec2(bvec3(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false), false)))))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false), bvec2(bvec3(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false), false)))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false), bvec2(bvec3(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false), false)))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), false, true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), false, true)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), false, true)))))))))), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), false, true)))))))))), true, true))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), false, true)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), false, true)))))))))), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false)))), true, false)))))) || false) && true), false, true)))))))))), true, true)))))))))))) && true)))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(80.96) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y) && true))))), false, false))), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false)) && _GLF_IDENTITY(true, ! (! (true))))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false)) && _GLF_IDENTITY(true, ! (! (true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false)) && _GLF_IDENTITY(true, ! (! (true)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false)) && _GLF_IDENTITY(true, ! (! (true)))))))))))))), ! (! ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(87.39, -3400.7148)) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.3))) < injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.3))) < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.3))) < injectionSwitch.y), true, true))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.3))) < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.3))) < injectionSwitch.y), true, true))))), false, true))))))), false)))) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), injectionSwitch)).y)))), false)))) || false)) && _GLF_IDENTITY(true, ! (! (true)))))))))))))) && true)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) || false))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true))))), false)))), vec3(1.0)), mat4x3(1.0), ivec2(1)), _GLF_struct_19(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), 0, mat4(1.0)), _GLF_struct_22(_GLF_struct_20(mat2x4(1.0)), uvec4(1u), _GLF_struct_21(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(299.671), min(_GLF_FUZZED(299.671), _GLF_FUZZED(299.671))) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(85.19) : 1.0)), 1.0, 1.0)))), 1.0))), bvec4(true), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-76.56) : 1.0))), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat4(1.0))), mat3x4(1.0)), _GLF_struct_24(mat3x4(1.0), _GLF_struct_23(ivec4(1))), _GLF_struct_28(_GLF_struct_25(mat3x2(1.0), ivec2(1), uvec2(1u), ivec4(1), true), _GLF_struct_26(mat3(1.0), vec4(1.0), mat4(1.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max((1.0), (1.0))) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0))))), vec2(1.0), vec2(1.0), _GLF_struct_27(uvec4(1u), ivec4(1), uvec2(1u), uvec3(1u), ivec3(1), mat3x4(1.0), vec4(1.0))), vec4(1.0));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[_GLF_struct_replacement_40.next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
      }
    }
   else
    {
     atomicStore(buf[_GLF_struct_replacement_40.next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
