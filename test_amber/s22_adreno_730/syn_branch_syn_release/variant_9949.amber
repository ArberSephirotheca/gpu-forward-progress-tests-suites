#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, false)))), bool(bvec4(! (! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.0), _GLF_FUZZED(-4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, false || (true)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false))))), (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true)), false, true, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true)), false, true, false))) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])).y, false)), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])).y, false))) && true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0)), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(-1702.2449) : 1.0))) * determinant(mat3(abs(1.0), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((- 8.0))), bool(_GLF_IDENTITY(false, false || (false))))))).y) || false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0]))) / 1.0), injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(49126) : 1))])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9958.2666)), bool(false)))))), injectionSwitch[1])).y) || false))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])))), determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0))))), 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(0.0), sqrt(1.0))), clamp(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])))), determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0))))), 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(0.0), sqrt(1.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])))), determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0))))), 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(0.0), sqrt(1.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])))), determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(0.0, 1.0, 0.0))))), 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, abs(0.0), sqrt(1.0)))))).y) || false, ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))), max(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))), mix(float(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : _GLF_IDENTITY(1.0, (1.0) - 0.0))))), float(_GLF_FUZZED(251.035)), bool(false))))), injectionSwitch[1])).y) || false) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8)))))))), injectionSwitch))[0]) / 1.0), injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8)))))))), injectionSwitch))[0]) / 1.0), injectionSwitch[1])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, _GLF_IDENTITY(-9666.8480, mix(float(_GLF_FUZZED(5069.4057)), float(_GLF_IDENTITY(-9666.8480, (-9666.8480) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -0.8))))), _GLF_IDENTITY(clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8)))))), min(clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8)))))), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8)))))))))), injectionSwitch))[0]) / 1.0), injectionSwitch[1])).y) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])).y) || _GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8)))))))), injectionSwitch))[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (false ? _GLF_FUZZED(95434) : 0)) : _GLF_FUZZED(-85235)))]) / 1.0), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]), max((injectionSwitch[0]), _GLF_IDENTITY((injectionSwitch[0]), max((injectionSwitch[0]), (injectionSwitch[0]))))) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])).y) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), clamp(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), tan(0.0), 1.0, 1.0, 0.0))), 0.0))) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0) : _GLF_FUZZED(mat2(-2.5, -648.804, -9666.8480, -0.8)))))))), injectionSwitch))[0]) / 1.0), injectionSwitch[1])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])).y) || false))))) || false), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(37379) : int(0)))))])), (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[_GLF_IDENTITY(1, (1) * (1 | 1))]), min(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch[0]))) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])))).y) || false))), bool(bvec2(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(37379) : int(0)))))])), (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[_GLF_IDENTITY(1, (1) * (1 | 1))]), min(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch[0]))) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1702.2449) : 1.0))), injectionSwitch[1])))).y) || false))), _GLF_IDENTITY(true, true && (true))))) && true)))), false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), (bool(bool(_GLF_IDENTITY(false, (false) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-1936.1998 + -5534.8318))), vec2(_GLF_FUZZED(-8.2), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), false, false)), false, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_IDENTITY(true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true))), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(140870u, 6091u, 138173u)) : gl_WorkGroupID)).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)) | (gl_WorkGroupID.x)), gl_WorkGroupID.x))) | (gl_WorkGroupID.x), min((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), min(uvec3(uvec4(gl_WorkGroupID, 0u)), uvec3(uvec4(gl_WorkGroupID, 0u))))).x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)) | (gl_WorkGroupID.x)), gl_WorkGroupID.x))) | (gl_WorkGroupID.x), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)) | (gl_WorkGroupID.x)), gl_WorkGroupID.x))) | (gl_WorkGroupID.x), ((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)) | 0u)) | (gl_WorkGroupID.x)), gl_WorkGroupID.x))) | (gl_WorkGroupID.x)) | ((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u)) | (gl_WorkGroupID.x)), gl_WorkGroupID.x))) | (gl_WorkGroupID.x))))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), (workgroup_size * workgroup_id) << 0u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u) + _GLF_IDENTITY(subgroup_local_id, ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) & 12951u) + (subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) + (56151u & 0u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), 1u, 1u, (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), _GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))))))))))) >> 0u);
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(-25364))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), abs(1.0), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7254.8193)))) + 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)), max(float(mat3x4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(-25364))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), abs(1.0), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7254.8193)))) + 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(-25364))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), abs(1.0), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7254.8193)))) + 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)))), max(float(mat3x4(0.0, 1.0, 0.0, abs(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(0.0, 1.0, 0.0, abs(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0))))), 1.0, 1.0, length(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.8)), float(0.0), bool(true))))), 1.0))), 0.0, abs(0.0), 1.0)))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-904.108), _GLF_FUZZED(6.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1784.7904, 252.200)))).y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-904.108), _GLF_FUZZED(6.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1784.7904, 252.200)))).y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-904.108), _GLF_FUZZED(6.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1784.7904, 252.200)))).y)), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false))), bool(bvec4(! (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-637.583, 5.8)))))).y) / 1.0))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-70.07) : (injectionSwitch.y))) / 1.0))), false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0))))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)) : _GLF_FUZZED(mix(0.5, 5191.1050, 4.7))))))), false, false))))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) / 1.0)), false, false)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) / 1.0)), false, false))))))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false))))))))))), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)))), false, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(fract(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(fract(injectionSwitch))))) / exp(vec2(0.0, 0.0))).y) || false)) || false, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(fract(injectionSwitch)))).y) || false)) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) * 1u), (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) * 1u), false || (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u), (subgroup_size) | 0u)) * 1u)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false || (false), false, true)), (bool(bvec3(false || (false), false, true))) && true), bool(bvec4(bool(bvec3(false || (false), false, true)), false, true, true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)) << _GLF_IDENTITY(uint(5u), uint(5u))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, max(2, 2))), clamp(uint(2), uint(2), uint(2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u) : _GLF_FUZZED(workgroup_base)))))], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), int(ivec2(_GLF_IDENTITY(4, (4) - 0), 0)))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (56493 & 0) | (_GLF_IDENTITY(4, (4) - 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (56493 & 0) | (_GLF_IDENTITY(4, (4) - 0))))) | 0) | 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, abs(0.0), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0)))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0)))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.1)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))), 0.0 + (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.1)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(mat4x2(52.56, _GLF_IDENTITY(-4751.1594, max(-4751.1594, _GLF_IDENTITY(-4751.1594, max(_GLF_IDENTITY(-4751.1594, float(mat2(-4751.1594, 0.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(-4751.1594, min(-4751.1594, -4751.1594)))))), -2.1, -741.939, -2729.9449, -79.49, 5.1, 9.3)[0]) : injectionSwitch, (false ? _GLF_FUZZED(vec2(-167.365, -73.39)) : _GLF_IDENTITY(false ? _GLF_FUZZED(mat4x2(52.56, -4751.1594, -2.1, -741.939, -2729.9449, _GLF_IDENTITY(-79.49, mix(float(_GLF_FUZZED(4.0)), float(-79.49), bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true))))))), 5.1, 9.3)[0]) : injectionSwitch, vec2(0.0, 0.0) + (false ? _GLF_FUZZED(mat4x2(52.56, -4751.1594, -2.1, -741.939, -2729.9449, _GLF_IDENTITY(-79.49, mix(float(_GLF_FUZZED(4.0)), float(-79.49), bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true))))))), 5.1, 9.3)[0]) : injectionSwitch)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(52.56, -4751.1594, -2.1, _GLF_IDENTITY(-741.939, (_GLF_IDENTITY(-741.939, mix(float(-741.939), float(_GLF_FUZZED(-11.39)), bool(false)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), -2729.9449, _GLF_IDENTITY(_GLF_IDENTITY(-79.49, mix(float(_GLF_FUZZED(float(true))), float(-79.49), bool(true))), mix(float(-79.49), float(_GLF_FUZZED(5.0)), bool(false))), 5.1, _GLF_IDENTITY(9.3, clamp(_GLF_IDENTITY(9.3, (9.3) + 0.0), 9.3, 9.3)))[0]) : injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(mat4x2(52.56, -4751.1594, -2.1, -741.939, -2729.9449, _GLF_IDENTITY(_GLF_IDENTITY(-79.49, mix(float(-79.49), float(_GLF_FUZZED(5.0)), bool(false))), clamp(_GLF_IDENTITY(-79.49, mix(float(_GLF_IDENTITY(-79.49, min(_GLF_IDENTITY(-79.49, float(mat2x4(-79.49, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, exp(0.0)))), -79.49))), float(_GLF_FUZZED(5.0)), bool(false))), _GLF_IDENTITY(-79.49, mix(float(-79.49), float(_GLF_FUZZED(5.0)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-79.49, mix(float(-79.49), float(_GLF_FUZZED(5.0)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(-79.49, mix(float(-79.49), float(_GLF_FUZZED(5.0)), bool(false))), max(_GLF_IDENTITY(-79.49, mix(float(-79.49), float(_GLF_FUZZED(5.0)), bool(false))), _GLF_IDENTITY(-79.49, mix(float(-79.49), float(_GLF_FUZZED(5.0)), bool(false)))))) / 1.0), max(_GLF_IDENTITY(-79.49, mix(float(-79.49), float(_GLF_FUZZED(5.0)), bool(false))), _GLF_IDENTITY(-79.49, mix(float(-79.49), float(_GLF_FUZZED(5.0)), bool(false))))))), 5.1, 9.3)[0]) : injectionSwitch)).y : _GLF_FUZZED(_GLF_IDENTITY(-4324.5672, mix(float(_GLF_FUZZED(-40.82)), float(-4324.5672), bool(true))))))) + 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(2.1)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (false), false || (! (false)))), true, true, true)), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (false), false || (! (false)))), true, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.3)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y))))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), false))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
