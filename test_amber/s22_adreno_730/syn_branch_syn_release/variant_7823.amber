#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec2(-87.95, 89.18)))), injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), sqrt(1.0), 0.0, abs(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true), false, false)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true), false, false))))))))))), ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true), false, false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true), false, false)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false || (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, sqrt(1.0), 0.0, determinant(mat4(1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, abs(0.0), log(1.0), 0.0, 1.0)), 1.0, cos(0.0)))).x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true), false, false))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), false, false)), true)))), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true), false, false)))))))))))), ! (! (((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), false, false)), true)))), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true), false, false))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) || false)))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (mat2(1.0) * (injectionSwitch))) * mat2(1.0)))).y))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), true && (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))
              {
              }
             else
              {
               barrier();
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(83.81), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(-7087.9855)), bvec2(true, false))).y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? 1.0 : _GLF_FUZZED(4667.5881))), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0))), 0.0, tan(0.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, abs(exp(0.0)), 1.0, 0.0))), 0.0, 1.0))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(gl_NumWorkGroups.x, gl_NumWorkGroups.x), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u)) | (gl_NumWorkGroups.x)), max(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u))), uint(uint(gl_NumWorkGroups.x))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)).x, (gl_NumWorkGroups.x) ^ (0u ^ 0u)), max(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x)))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))))))))), gl_NumWorkGroups.x), 0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x), _GLF_IDENTITY(min(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))).x), 0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp(min(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))).x), 0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(min(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))).x), 0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u ^ (min(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))).x), 0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))).x), 0u ^ (min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u)), uint(uvec4(gl_NumWorkGroups.x, 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u))), gl_NumWorkGroups.x)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), 0u + (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, 1u, 1u), (uvec4(gl_NumWorkGroups.x, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u)))), 0u | (gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_local_id) : (gl_NumWorkGroups.x))))) | 0u))))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) | 0u))), (false ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(97027u, 117963u, 84658u) << uvec3(158447u, 68250u, 160271u), (uvec3(97027u, 117963u, 84658u) << uvec3(158447u, 68250u, 160271u)) << uvec3(0u, 0u, 0u)))) : uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))).x, gl_NumWorkGroups.x)))))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u))))) + uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2])).x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), true, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), true, false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(! (false), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (false), true, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (false), true, false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (false), true, false)))), true)), true)))))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), false)))))), true, false))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), false)))))), true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) * (injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(8829.0161, float(mat4x2(_GLF_IDENTITY(8829.0161, max(8829.0161, 8829.0161)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8829.0161))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8829.0161))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0]))) - 0.0), injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8829.0161))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / sqrt(1.0))))) - 0.0))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size)), subgroup_size, subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u);
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((0 << _GLF_IDENTITY(int(4), int(4))) | 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(51315u, 167337u)) : uvec2(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), 1u)))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(51315u, 167337u)) : uvec2(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(51315u, 167337u)) : uvec2(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), 1u))))))))) * 1u) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) | (_GLF_IDENTITY((subgroup_local_id + 1) >> 0u, max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) >> 0u, (subgroup_local_id + 1) >> 0u)))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u))) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))) >> 0u)), clamp((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))) >> 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))) >> 0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))) >> 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))) >> 0u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(~ (~ ((subgroup_local_id + 1))), min(_GLF_IDENTITY(~ (~ ((subgroup_local_id + 1))), min(~ (~ ((subgroup_local_id + 1))), ~ (~ ((subgroup_local_id + 1))))), _GLF_IDENTITY(~ (~ ((subgroup_local_id + 1))), 0u + (_GLF_IDENTITY(~ (~ ((subgroup_local_id + 1))), (false ? _GLF_FUZZED(workgroup_base) : ~ (~ ((subgroup_local_id + 1))))))))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) * 1u))))))))))))) >> 0u)))) % subgroup_size)));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && _GLF_IDENTITY(true, (true) && true))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   do
    {
     do
      {
       for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), max(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) | 0)))) ^ (0 ^ 0))) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), 1), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), 1), int(ivec4(min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), 1), (0 | 0), 0, 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), max(~ (clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), ~ (clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), max(1 * (1), _GLF_IDENTITY(1 * (1), 0 ^ (1 * (1)))))), 1, 1))))))) | _GLF_IDENTITY(0, (0) ^ 0))), 1), (min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), 1)) | (1 ^ 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) - 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1)), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), (_GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), (int(ivec4(1, 0, 1, 0))) << 0)) | 0)), _GLF_IDENTITY((1) * 1, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-92763), 0 | (_GLF_FUZZED(-92763))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-92763), 0 | (_GLF_FUZZED(-92763)))))) : (1) * 1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) ^ 0))) : _GLF_FUZZED(-32267))), min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, (true ? _GLF_IDENTITY((1) | 0, ((1) | 0) | 0) : _GLF_FUZZED(34394)))), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)), clamp(int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0), max(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0), ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)))) / ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)))), int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)))))) * 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-92763, (-92763) | (-92763))) : (1) * 1)))))))), clamp((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))), 1, 1, 1)), 0 | (int(ivec4((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))), 1, 1, 1))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(_injected_loop_counter)))))) | (int(1))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) >> 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0)))) | 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (0 << _GLF_IDENTITY(int(6), int(6)))))))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))), max((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), 1))) - 0)))))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) << (0 << _GLF_IDENTITY(int(8), int(8)))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | 0)) ^ 0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-92763), 0 | (_GLF_FUZZED(-92763))) : (1) * 1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY(int(7), int(7))))), 0)), clamp(int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)))), int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))), 0)))))) * 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-92763, (-92763) | (-92763))) : (1) * 1)))))))), clamp((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY((0), ~ (~ ((0)))) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))), (true ? _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) : _GLF_FUZZED(-71473))) << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))), (true ? _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) : _GLF_FUZZED(-71473))) << _GLF_IDENTITY(int(1), int(1))), max((_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))), (true ? _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) : _GLF_FUZZED(-71473))) << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))), (true ? _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) : _GLF_FUZZED(-71473))) << _GLF_IDENTITY(int(1), int(1)))))) | 0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) ^ 0))), (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))), 1 * ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ~ (~ ((0) | 0)))))) << _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) ^ _GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, (0 << _GLF_IDENTITY(int(7), int(7))) ^ (_GLF_IDENTITY((0) | 0, 0 ^ ((0) | 0))))))) << _GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 | _GLF_IDENTITY((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0))))), (true ? _GLF_IDENTITY((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0))))), ((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0)))))) | ((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0))))))) : _GLF_FUZZED(-28572)))))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 | _GLF_IDENTITY((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0))))), (true ? _GLF_IDENTITY((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0))))), ((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0)))))) | ((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0))))))) : _GLF_FUZZED(-28572)))))), 0, 0)), (false ? _GLF_FUZZED(-6206) : int(ivec3((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 | _GLF_IDENTITY((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0))))), (true ? _GLF_IDENTITY((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0))))), ((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0)))))) | ((int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) - 0))))))) : _GLF_FUZZED(-28572)))))), 0, 0))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))), int(1)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-92763), 0 | (_GLF_FUZZED(-92763))) : (1) * 1))))), 0 | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-92763), 0 | (_GLF_FUZZED(-92763))) : (1) * 1))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)), clamp(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)), ~ (_GLF_IDENTITY(~ (int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0))), max(~ (int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0))), ~ (int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0))))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(7), int(7))), 0)))), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), 1, (0 << _GLF_IDENTITY(int(7), int(7))), 0)))))) * _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, 21812)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-92763, (-92763) | (_GLF_IDENTITY(-92763, ~ (_GLF_IDENTITY(~ (-92763), int(ivec3(~ (-92763), 0, 1)))))))) : (1) * 1)))))))), clamp((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))), (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), 1 * (_GLF_IDENTITY(0, (0) | 0)))) ^ 0))) << _GLF_IDENTITY(int(1), int(1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))), 1 * ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19334) : _GLF_IDENTITY(1, (1) - 0)))))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(1))))))))) - 0) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) ^ (1))) * 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-92763, 1 * (_GLF_IDENTITY(-92763, (-92763) | (-92763))))) : (1) * 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : _GLF_IDENTITY((1) * 1, (_GLF_IDENTITY((1) * 1, clamp((1) * 1, (1) * 1, (1) * 1))) >> 0)))))), clamp(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) | (_GLF_IDENTITY(0, (0) | 0))))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))), ((_GLF_IDENTITY(1, 0 ^ (1)))) / 1) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), ~ (~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0))))), (0) | _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-46253) : 0))))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : _GLF_IDENTITY((1), (_GLF_IDENTITY((1), min((1), (1)))) | 0) * 1))))), min(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1)))))))))) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, _GLF_IDENTITY((false ? _GLF_FUZZED(-92763) : (1) * 1), ((false ? _GLF_FUZZED(-92763) : (1) * 1)) | ((false ? _GLF_FUZZED(-92763) : (1) * 1)))))))))), clamp((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(1, (1) + 0) * ((0))) | 0))) << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), (int(1)) | (int(1))))), max((_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))))), max(min(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0)))))), min(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))))))) << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), min((_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), ((_GLF_IDENTITY(0, (0) | (0)))) / (1 & 1)))) | 0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), int(ivec3(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), 0, 1))), int(1))))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), 0 ^ (_GLF_IDENTITY(0, (0) | 0))))) << _GLF_IDENTITY(int(1), int(1)))))), 1 * ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), clamp(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1)))), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1)))), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))))))), clamp(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-13553) : _GLF_IDENTITY(1, 1 * (1)))), 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), ~ (~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-92763, (-92763) * 1)) : (1) * 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1))))), min(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-92763), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-92763), min(_GLF_FUZZED(-92763), _GLF_IDENTITY(_GLF_FUZZED(-92763), ~ (~ (_GLF_FUZZED(-92763)))))), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) : (1) * 1))))), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1)))))))))) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))) * 1, (false ? _GLF_FUZZED(-92763) : (1) * 1)))))))), clamp((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), 1 * ((0))) | 0))) << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), (int(1)) | (int(1))))), max((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))))) << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))))) << _GLF_IDENTITY(int(1), int(1))) - 0)), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), int(ivec3(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), 0, 1))), int(1))))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))))) << _GLF_IDENTITY(int(1), int(1)))))))) ^ 0) << _GLF_IDENTITY((_GLF_IDENTITY(0 & -71023, (true ? 0 & -71023 : _GLF_FUZZED(_injected_loop_counter)))), 1 * (_GLF_IDENTITY((0 & -71023), ((0 & -71023)) >> 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3 : _GLF_FUZZED(findLSB(clamp(workgroup_base, next_virtual_gid, subgroup_local_id)))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), clamp(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), int(ivec3(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), 0, 1)))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), clamp(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), int(ivec3(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), 0, 1)))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), clamp(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(_injected_loop_counter)))), int(3)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) / 1), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), max(int(3), int(3)))) - 0), int(ivec3(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) >> 0)), max(int(3), int(3)))) - 0), 0, 1)))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))) ^ (3), (true ? (0 >> _GLF_IDENTITY(int(4), int(4))) ^ (3) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(_injected_loop_counter)))), 1 * (int(3)))))), _GLF_IDENTITY(((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(95607)), max(_GLF_IDENTITY((true ? 3 : _GLF_FUZZED(95607)), ((true ? 3 : _GLF_FUZZED(95607))) - (0 >> _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(95607)), _GLF_IDENTITY(int(ivec4((true ? 3 : _GLF_FUZZED(95607)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1)), max(int(ivec4((true ? 3 : _GLF_FUZZED(95607)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1)), int(ivec4((true ? 3 : _GLF_FUZZED(95607)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1))))))))), 1 * (int(3))))))), max(_GLF_IDENTITY(((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (3) - 0)))), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * (int(3))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * (int(3))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * (int(3))), 0 ^ (_GLF_IDENTITY(int(3), 1 * (int(3)))))), 1 * (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * (int(3))), 0 ^ (_GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | (_GLF_IDENTITY(int(3), 1 * (int(3))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(1, (1) + (58734 & 0)) * (int(3))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3)))))))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3))))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), min((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3))))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(1 * (int(3)), (1 * (int(3))) - 0)))))), 0 ^ (((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), int(ivec3(clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))), 1, 0)))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (3))), 1 * (int(3)))))))))))))) * 1)))) / 1), ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * (int(3))), max(_GLF_IDENTITY(int(3), 1 * (int(3))), _GLF_IDENTITY(int(3), 1 * (int(3))))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))))), (_GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, (3) | (0 & (false ? 7559 : 77265)))), int(3), _GLF_IDENTITY(int(3), 1 * _GLF_IDENTITY((int(3)), max((int(3)), (int(3)))))))))))) | 0)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0, max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0, _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0, ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(_injected_loop_counter) : 3)))))) | 0) / 1)))))) ^ 0, min(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), clamp((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), clamp(_GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) | 0), clamp(int(3), int(3), int(3)), clamp(int(3), int(3), int(3)))))))) | 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 + (3))), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(_GLF_IDENTITY(3, (3) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(3), int(3))) * 1))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))))) | 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, (3) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))), clamp(int(3), int(3), int(3)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ~ (~ ((false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3)))))))) | 0)), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))) * (3))), clamp(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), 0 + (int(3))), int(3))), int(3), _GLF_IDENTITY(int(3), (int(3)) | _GLF_IDENTITY((_GLF_IDENTITY(int(3), (int(3)) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(int(3), (int(3)) - 0)), clamp((_GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), (int(3)) - 0)), (_GLF_IDENTITY(int(3), (int(3)) - 0)))), (_GLF_IDENTITY(int(3), (int(3)) - 0)))))))), (false ? _GLF_FUZZED(-72678) : _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), clamp((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), max((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))))) | ((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), max(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) / 1), int(3), int(3)))))))))))) | 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(3, 0 | (3))))))), min((false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(3, 0 | (3))))))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(3, 0 | (3)))))))))) | 0))))))), ((_GLF_IDENTITY(0, (0) | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))) >> _GLF_IDENTITY(int(3), int(3))) * ((false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) ^ 0), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), clamp(int(3), int(3), int(3)))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) << 0))), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), max(clamp(int(3), int(3), int(3)), clamp(int(3), int(3), int(3)))))))) | 0), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0, 0 + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0, (_GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0) - 0))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0)))))))) | ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | 0)) | (int(3))), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), max(false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) - 0), int(3), int(3)))), false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (-76151 & 0))), clamp(int(3), int(3), int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec4(3, 1, 0, 0), max(ivec4(3, 1, 0, 0), ivec4(3, 1, 0, 0))))))))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) / 1), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) >> 0), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0)) + 0)), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(mix(_injected_loop_counter, 28249, true)))), clamp(int(3), int(3), int(3)))), (false ? _GLF_FUZZED(-72678) : (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) | 0))))))))) ^ 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), min((int(3)), (int(3)))) | (int(3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0))) - 0)) ^ 0)))), true && (_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), 0 + (int(_GLF_IDENTITY(3, (3) | (3))))), int(_GLF_IDENTITY(3, (3) | (3))), int(_GLF_IDENTITY(3, (3) | (3))))), clamp(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, int(ivec4(3, 0, 0, 1)))) << 0)), int(3)))) | 0)), _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (3), (_GLF_IDENTITY(~ (3), max(~ (3), ~ (3)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(int(3), int(3), int(_GLF_IDENTITY(3, max(3, 3)))))) | 0))), max((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (3), (_GLF_IDENTITY(~ (3), max(~ (3), ~ (3)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(int(3), int(3), int(_GLF_IDENTITY(3, max(3, 3)))))) | 0))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (3), (_GLF_IDENTITY(~ (3), max(~ (3), ~ (3)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(int(3), int(3), int(_GLF_IDENTITY(3, max(3, 3)))))) | 0))))) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), 0 + (int(3))))))))))) | 0)), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)) / 1))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), (~ (int(3))) | (~ (int(3)))))), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 1 * (3))) << 0)), int(3), int(3)))) | 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | _GLF_IDENTITY(0, min(0, 0))))))), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, 0 | (3)))) - 0), clamp(int(3), int(3), int(3)))) | 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0))))))))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(3), (int(3)) << 0))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(_GLF_IDENTITY(3, (3) << 0)), int(3)))) | 0))) * 1)) ^ _GLF_IDENTITY(0, (0) ^ 0), ~ (~ ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), clamp(int(3), int(3), int(3)))) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | 0)), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | _GLF_IDENTITY(0, (0) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | 0)), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | _GLF_IDENTITY(0, (0) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))))) * 1)) ^ 0))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), clamp(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), ~ (~ (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), (true ? _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0) : _GLF_FUZZED(_injected_loop_counter)))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), clamp(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), ~ (~ (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), (true ? _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0) : _GLF_FUZZED(_injected_loop_counter)))))), (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), clamp(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), ~ (~ (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), clamp(int(3), int(3), int(3)))) | 0), (true ? _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, clamp((int(3)) - 0, (int(3)) - 0, _GLF_IDENTITY((int(3)) - 0, ((int(3)) - 0) / 1)))), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 0 + (int(3)))))) | 0) : _GLF_FUZZED(_injected_loop_counter))))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), int(ivec2((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), 1))) | 0))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), int(ivec2((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), 1))) | 0))) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), int(ivec2((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), 1))) | 0))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), int(ivec2((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), 1))) | 0))) * 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), (_GLF_IDENTITY((int(3)), _GLF_IDENTITY(int(ivec4((int(3)), 1, 1, 0)), 0 | (int(ivec4((int(3)), 1, 1, 0)))))) | ((int(3)))) - 0), clamp(int(3), int(3), int(3)))) | 0)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), int(3)))) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0))), ((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)))) | ((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), int(3)))) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0))), ((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)))) | ((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0))))) * 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) + 0), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) << 0)))) >> 0)), (int(3)) - 0), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) ^ 0))) | 0), int(ivec2(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) << 0)))) >> 0)), (int(3)) - 0), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) ^ 0))) | 0), 0)))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) << 0)) | 0), int(3))), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))) | 0))))) * 1)) ^ 0)), min((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) + 0), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) << 0)))) >> 0)), (int(3)) - 0), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) ^ 0))) | 0), int(ivec2(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) << 0)))) >> 0)), (int(3)) - 0), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) ^ 0))) | 0), 0)))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) << 0)) | 0), int(3))), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))) | 0))))) * 1)) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) + 0), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) << 0)))) >> 0)), (int(3)) - 0), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) ^ 0))) | 0), int(ivec2(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) << 0)))) >> 0)), (int(3)) - 0), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) ^ 0))) | 0), 0)))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) << 0)) | 0), int(3))), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))) | 0))))) * 1)) ^ 0)), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) + 0), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) << 0)))) >> 0)), (int(3)) - 0), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) ^ 0))) | 0), int(ivec2(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) << 0)))) >> 0)), (int(3)) - 0), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) ^ 0))) | 0), 0)))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) << 0)) | 0), int(3))), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))) | 0))))) * 1)) ^ 0))) / 1))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), (int(3)) - 0), clamp(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3), int(3)))) | 0)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) >> 0)), clamp(int(3), int(3), int(3)))) | 0))) * 1), (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) >> 0)), clamp(int(3), int(3), int(3)))) | 0))) * 1), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) >> 0)), clamp(int(3), int(3), int(3)))) | 0))) * 1)) << 0)) << 0)) ^ 0)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY((int(3)), clamp(_GLF_IDENTITY((int(3)), ((int(3))) | ((int(3)))), (int(3)), (int(3)))) - 0, (_GLF_IDENTITY((int(3)), clamp(_GLF_IDENTITY((int(3)), ((int(3))) | ((int(3)))), (int(3)), (int(3)))) - 0) * 1)), clamp(int(3), int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, (false ? _GLF_FUZZED(-63789) : 3))))), int(3)))) | 0)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), 0 + (int(3))), int(3))), int(3))), int(3), int(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(3, ((0 | 0) << _GLF_IDENTITY(int(0), int(0))) ^ (3)))))) | 0))) * 1)) ^ 0)))))) >> 0))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))), min(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))), clamp(~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))), ~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))), ~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))))))) | (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))))) | (0 & -41631))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           buf[virtual_gid] = 1;
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), clamp(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (0 & -10945)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(int(int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) && true), true && ((false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) && true), true && ((false) || false))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))), (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))) && true)))), false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (int(3)) | 0), int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, 0 ^ (3)))), 3)))), ~ (~ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (int(_GLF_IDENTITY(3, max(3, 3)))) >> 0), (int(3)) | 0), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (int(3)) | 0), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, max(3, 3)), (_GLF_IDENTITY(3, max(3, 3))) | (_GLF_IDENTITY(_GLF_IDENTITY(3, max(3, 3)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(3, max(3, 3)), (_GLF_IDENTITY(3, max(3, 3))) | (_GLF_IDENTITY(3, max(3, 3))))))))), (int(3)) | 0), int(3)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))) && true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) || false) || (false))) && true)))))))))), false || (_GLF_WRAPPED_LOOP(false)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) || false, true && ((_GLF_IDENTITY(false, bool(bool(false)))) || false))))) || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))), false || (false))) && true)), false || (_GLF_WRAPPED_LOOP(false))))))))), _GLF_IDENTITY(true, (true) && true), true, _GLF_IDENTITY(false, false || (false))))))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(1, (1) << 0) < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size), (! (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size)) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1)) | 0))
                {
                 barrier();
                }
              }
             barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))));
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sin(0.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(743.146)), bool(false)))))), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 1.0, sin(0.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * abs(1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(3749.8206)))) - abs(0.0))), 1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(84.77) : 0.0)), 0.0) + (mat4x3(injectionSwitch, 1.0, sin(0.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.1)), bool(false))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sin(0.0), 1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 1.0, sin(0.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))) / vec2(1.0, 1.0)), 0.0, 1.0)))).y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))))))), (! (! (_GLF_IDENTITY(false, true && (false))))) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false))))))))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, length(0.0) + (injectionSwitch.y))))))
        barrier();
      }
     int i = 0;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | 0)), (int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY(false ? _GLF_FUZZED(65975) : (1), max(false ? _GLF_FUZZED(65975) : (1), false ? _GLF_FUZZED(65975) : (1)))))) | 0) | 0))) / 1)), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | 0)), (int(_GLF_IDENTITY(1, (1) | 0))) / 1))) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
              }
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (next_virtual_gid)), (next_virtual_gid) - 0u)], uint(2), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY((((1 & _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))), max(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))), (min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), clamp(ivec4(1, 1, 1, 0), ivec4(1, 1, 1, 0), _GLF_IDENTITY(ivec4(1, 1, 1, 0), (ivec4(1, 1, 1, 0)) | (ivec4(1, 1, 1, 0))))))))) >> (0 | 0)))))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))))) && true)) ? _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec3(1, 0, 1)))), _GLF_IDENTITY((int(1)) / 1, ((int(1)) / 1) | ((int(1)) / 1))) : _GLF_FUZZED(_injected_loop_counter)), (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY((int(1)) / 1, ((int(1)) / 1) | ((int(1)) / 1)), (false ? _GLF_FUZZED(atomicExchange(i, i)) : _GLF_IDENTITY((int(1)) / 1, ((int(1)) / 1) | ((int(1)) / 1))))) : _GLF_FUZZED(_injected_loop_counter)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) / 1, ((int(1)) / 1) | ((int(1)) / 1))) : _GLF_FUZZED(_injected_loop_counter)), 0 | ((_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) / 1, ((int(1)) / 1) | ((int(1)) / 1))) : _GLF_FUZZED(_injected_loop_counter))))))) / _GLF_IDENTITY(1, min(1, 1)))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.5)), bool(false))))) ^ ((((1 & _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)), 0)))))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? _GLF_IDENTITY(int(1), (int(1)) / 1) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(int(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, 1), ivec2(1, 1) * (ivec2(_injected_loop_counter, 1)))))) | (_injected_loop_counter))))) != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED((abs(i) << _injected_loop_counter)) : int(0)))), int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), 1))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-154.352))) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1), (ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), min(int(4), int(4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1)) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), min(int(4), int(4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1), ivec4(_GLF_IDENTITY(int(4), min(int(_GLF_IDENTITY(4, (4) | (4))), int(4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1), ivec4(_GLF_IDENTITY(int(4), min(int(4), int(4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))))))), int(_GLF_IDENTITY(4, 0 ^ (4))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), true), bvec2(bvec4(bvec2(! (true), true), false, false))))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))) || false)))))))))) && (false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
    }
   else
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (uint(2))), min(_GLF_IDENTITY(uint(2), 0u | (uint(2))), _GLF_IDENTITY(uint(2), 0u | (uint(2))))), 4, 64, 4);
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
