#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true)))))))))), _GLF_IDENTITY(mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))), min(_GLF_IDENTITY(mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))), max(mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))), mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))))), mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true)))))))))), _GLF_IDENTITY(mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))), min(_GLF_IDENTITY(mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))), max(mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))), mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))))), mat2(1.0) * (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1)))), mat2(1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-79190), max(float(-79190), float(-79190)))), _GLF_FUZZED((- (- -7.1))))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec3(bvec3(bvec2(true, true), true))))))))))))))).x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), sin(0.0), 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, abs(0.0), 0.0))), injectionSwitch.y))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) - uvec3(0u, 0u, 0u), uvec3(uvec4((gl_WorkGroupSize) - uvec3(0u, 0u, 0u), 0u)))).x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (true)))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-19.26)), vec2(_GLF_FUZZED(561.638), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true, true))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true, true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true))), true, _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), true, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))))))), true), true, false))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED((uvec3(182411u, 15630u, 115523u) ^ uvec3(87856u, 67687u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(118941u, max(118941u, 118941u)), max(118941u, 118941u)), min(_GLF_IDENTITY(_GLF_IDENTITY(118941u, max(118941u, 118941u)), max(118941u, 118941u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(118941u, max(118941u, 118941u)), max(118941u, 118941u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(118941u, max(118941u, 118941u)), max(118941u, 118941u))))))))) : gl_WorkGroupID)).x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(420.531), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-4.9)), float((injectionSwitch)[1]), bool(true))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-4.9)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-4.9)), float((injectionSwitch)[1]), bool(true)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(516.544)), bvec2(true, false)))) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))) || false)))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, bool(bool((injectionSwitch.x > injectionSwitch.y) && true)))))), false, true)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) && true))))))) || false)), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    {
     do
      {
       return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))))))));
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = _GLF_IDENTITY((-40423 & 0), ((-40423 & 0)) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) && true))), false || (! (! (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) && true))))))))), ! (! (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = 1;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter > 0))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1)))))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)) < subgroup_size, ! (! (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) | (1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(((1)), int(ivec2(((1)), 0)))) | (1)))), 1)) < subgroup_size))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (false) && true)))
          {
          }
         else
          {
           barrier();
          }
        }
       int i = _GLF_IDENTITY(0, min(0, 0));
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 1), (ivec4(4, 1, 0, 1)) + ivec4(0, 0, 0, 0))), 1 * (int(_GLF_IDENTITY(ivec4(4, 1, 0, 1), (ivec4(4, 1, 0, 1)) + ivec4(0, 0, 0, 0)))))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true && ((_GLF_DEAD(false))))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), true && ((! (_GLF_IDENTITY(false, false || (false)))))))));
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, true)))))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED((vec2(-79.54, 659.429) - -0.9)), mix(vec2(_GLF_FUZZED(9.7), _GLF_FUZZED(-2.7)), vec2((_GLF_FUZZED((vec2(-79.54, 659.429) - -0.9)))[0], _GLF_IDENTITY((_GLF_FUZZED((vec2(-79.54, 659.429) - -0.9)))[1], mix(float(_GLF_FUZZED(52.91)), float((_GLF_FUZZED((vec2(-79.54, 659.429) - -0.9)))[1]), bool(true)))), bvec2(true, true))) : injectionSwitch)).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true)))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / _GLF_IDENTITY(6.3, (true ? 6.3 : _GLF_FUZZED(-765.517)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196)) * 1.0), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196)))))))), bool(true)))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(5.5)), float(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))) - 0.0, min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))) - 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))) - 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)), (false ? _GLF_FUZZED(1.1) : mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - sin(0.0)), mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY((0.3 / 6.3), clamp((0.3 / 6.3), _GLF_IDENTITY((0.3 / 6.3), max((0.3 / 6.3), (0.3 / 6.3))), (0.3 / 6.3))))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED((0.3 / 6.3))), mix(float(_GLF_FUZZED(-8090.4945)), float(float(_GLF_FUZZED((0.3 / 6.3)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), float(injectionSwitch.x), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat2x3(float(injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0 * (float(mat2x3(float(injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED(9978.5920)), bool(false))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))))))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))))), float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), max(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), clamp(_GLF_FUZZED((0.3 / 6.3)), _GLF_FUZZED((0.3 / 6.3)), _GLF_FUZZED((0.3 / 6.3)))), _GLF_FUZZED((0.3 / 6.3))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 0.0), vec3(mat3x4(vec3(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), max(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), clamp(_GLF_FUZZED((0.3 / 6.3)), _GLF_FUZZED((0.3 / 6.3)), _GLF_FUZZED((0.3 / 6.3)))), _GLF_FUZZED((0.3 / 6.3))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 0.0), sqrt(1.0), tan(0.0), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 1.0, 0.0))), 0.0))))))), float(_GLF_FUZZED(-75.61)), bool(false))) - 0.0) * _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), float(mat2(abs(1.0), 0.0, 0.0, 1.0)))) - 0.0)))), clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(step(-2.0, -9.4)))), mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-345.150 - 8687.1806)), _GLF_FUZZED(vec4(60.58, -4435.0626, -8.4, 4.3).a)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED((vec2(-79.54, 659.429) - -0.9)), mix(vec2(_GLF_FUZZED(9.7), _GLF_FUZZED(-2.7)), vec2((_GLF_FUZZED((vec2(-79.54, 659.429) - -0.9)))[0], _GLF_IDENTITY((_GLF_FUZZED((vec2(-79.54, 659.429) - -0.9)))[1], mix(float(_GLF_FUZZED(52.91)), float((_GLF_FUZZED((vec2(-79.54, 659.429) - -0.9)))[1]), bool(true)))), bvec2(true, true))) : injectionSwitch)).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true)))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / _GLF_IDENTITY(6.3, (true ? 6.3 : _GLF_FUZZED(-765.517)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196)) * 1.0), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(47.83), max(_GLF_FUZZED(47.83), _GLF_FUZZED(47.83))) : injectionSwitch.x)) : _GLF_FUZZED(-403.196)))))))), bool(true)))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(5.5)), float(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))) - 0.0, min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))) - 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))) - 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)), (false ? _GLF_FUZZED(1.1) : mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - sin(0.0)), mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY((0.3 / 6.3), clamp((0.3 / 6.3), _GLF_IDENTITY((0.3 / 6.3), max((0.3 / 6.3), (0.3 / 6.3))), (0.3 / 6.3))))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED((0.3 / 6.3))), mix(float(_GLF_FUZZED(-8090.4945)), float(float(_GLF_FUZZED((0.3 / 6.3)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), float(injectionSwitch.x), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat2x3(float(injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0 * (float(mat2x3(float(injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED(9978.5920)), bool(false))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))))))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))))), float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), max(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), clamp(_GLF_FUZZED((0.3 / 6.3)), _GLF_FUZZED((0.3 / 6.3)), _GLF_FUZZED((0.3 / 6.3)))), _GLF_FUZZED((0.3 / 6.3))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 0.0), vec3(mat3x4(vec3(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), max(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), clamp(_GLF_FUZZED((0.3 / 6.3)), _GLF_FUZZED((0.3 / 6.3)), _GLF_FUZZED((0.3 / 6.3)))), _GLF_FUZZED((0.3 / 6.3))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 0.0), sqrt(1.0), tan(0.0), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec3(1.0, 1.0, 0.0))), 0.0))))))), float(_GLF_FUZZED(-75.61)), bool(false))) - 0.0) * _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), float(mat2(abs(1.0), 0.0, 0.0, 1.0)))) - 0.0)))), clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(step(-2.0, -9.4)))), mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-345.150 - 8687.1806)), _GLF_FUZZED(vec4(60.58, -4435.0626, -8.4, 4.3).a)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)) || false), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(log(vec2(1.0, 1.0))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)))) / abs(vec2(1.0, 1.0))).x), bool(true)))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), clamp(_GLF_FUZZED((0.3 / 6.3)), _GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), max(_GLF_FUZZED((0.3 / 6.3)), _GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), (_GLF_FUZZED((0.3 / 6.3))) * 1.0))), _GLF_FUZZED((0.3 / 6.3))))), float(injectionSwitch.x), bool(true)))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))), clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), clamp(_GLF_FUZZED((0.3 / 6.3)), _GLF_FUZZED(_GLF_IDENTITY((0.3 / 6.3), 0.0 + ((0.3 / 6.3)))), _GLF_FUZZED((0.3 / 6.3))))), float(injectionSwitch.x), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(0.3 / 6.3, (0.3 / 6.3) * 1.0)), max((_GLF_IDENTITY(0.3 / 6.3, (0.3 / 6.3) * 1.0)), (_GLF_IDENTITY(0.3 / 6.3, (0.3 / 6.3) * 1.0)))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), bool(bool(! (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))))))), (! (_GLF_IDENTITY(! (bool(true)), bool(bool(! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))), bool(bool(! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))))))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((false ? -1450.6369 : 1812.4211))), float(1.0), bool(true)))), mat3x2(mat3x2(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0)))))), mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), clamp(_GLF_FUZZED(_GLF_IDENTITY((0.3 / 6.3), min(_GLF_IDENTITY((0.3 / 6.3), ((0.3 / 6.3)) - 0.0), (0.3 / 6.3)))), _GLF_IDENTITY(_GLF_FUZZED((0.3 / 6.3)), float(vec3(_GLF_FUZZED((0.3 / 6.3)), 1.0, 0.0))), _GLF_FUZZED((0.3 / 6.3))))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.3)), bool(false))), injectionSwitch.x)), injectionSwitch.x))), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(! (_GLF_IDENTITY(true, (true) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), 1.0 * (mix(float(_GLF_FUZZED((0.3 / 6.3))), float(injectionSwitch.x), bool(true)))))))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false, ! (! ((false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(13387) : 4)))), 64, 4);
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true)))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), false || (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false))))))))));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
        break;
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))));
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
