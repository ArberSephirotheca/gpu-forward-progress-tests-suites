#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))).y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false, true, true)))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(-282.740, -0.8)) : injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-26.56)), vec2(_GLF_FUZZED(-703.783), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), injectionSwitch))) * mat2(1.0)).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(4004.5568)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (1) * 1)])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (1) * 1)])).y) / 1.0)), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))))));
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), true))))) && true)))
          {
           return;
          }
         else
          {
          }
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(3619.7628)), bool(false)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))));
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u) | uvec3(0u, 0u, 0u))).x) ^ 0u);
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(34.17)), float(injectionSwitch.y), bool(true)))) / 1.0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), ! (! ((bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-93.53), _GLF_FUZZED(-27.85)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))))))) || false)) || false)), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(34.17)), float(injectionSwitch.y), bool(true)))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(34.17)), float(injectionSwitch.y), bool(true)))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(34.17)), float(injectionSwitch.y), bool(true)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(34.17)), float(injectionSwitch.y), bool(true)))) / 1.0))) + 0.0)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mat2x3(mat2x4(mat2x3(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))).y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false || (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), ! (! ((bool((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((bool((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! ((bool((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! ((bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! ((bool((injectionSwitch.x > injectionSwitch.y))))), true))))))))))))), ((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), ! (! ((bool((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((bool((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! ((bool((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! ((bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! ((bool((injectionSwitch.x > injectionSwitch.y))))), true)))))))))))))) && true))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-93.53), _GLF_FUZZED(-27.85)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))).y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)))))))) || false)) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) || false))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || ((injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id))))))), max(uint(uint(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id))))))), uint(uint(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ (0 ^ 1)), ((1 ^ (0 ^ 1))) | ((1 ^ (0 ^ 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true))) && true))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((5243 & 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)))) / 1u), ~ (subgroup_local_id), ~ (subgroup_local_id))), max(~ (subgroup_local_id), ~ (subgroup_local_id)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)))) / 1u), ~ (subgroup_local_id), ~ (subgroup_local_id))), max(~ (subgroup_local_id), ~ (subgroup_local_id)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)))) / 1u), ~ (subgroup_local_id), ~ (subgroup_local_id))), max(~ (subgroup_local_id), ~ (subgroup_local_id)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)))) / 1u), ~ (subgroup_local_id), ~ (subgroup_local_id))), max(~ (subgroup_local_id), ~ (subgroup_local_id)))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)))) / 1u), ~ (subgroup_local_id), ~ (subgroup_local_id))), max(~ (subgroup_local_id), ~ (subgroup_local_id)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)))) / 1u), ~ (subgroup_local_id), ~ (subgroup_local_id))), max(~ (subgroup_local_id), ~ (subgroup_local_id)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)))) / 1u), ~ (subgroup_local_id), ~ (subgroup_local_id))), max(~ (subgroup_local_id), ~ (subgroup_local_id)))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)))) / 1u), ~ (subgroup_local_id), ~ (subgroup_local_id))), max(~ (subgroup_local_id), ~ (subgroup_local_id)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)))) / 1u), ~ (subgroup_local_id), ~ (subgroup_local_id))), max(~ (subgroup_local_id), ~ (subgroup_local_id))))))))) | 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
    }
   else
    {
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (min(subgroup_size, subgroup_size)) | _GLF_IDENTITY((min(subgroup_size, subgroup_size)), ~ (~ ((_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) ^ 0u)))))))), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | _GLF_IDENTITY((min(subgroup_size, subgroup_size)), ~ (~ ((min(subgroup_size, subgroup_size))))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | _GLF_IDENTITY((min(subgroup_size, subgroup_size)), ~ (~ ((min(subgroup_size, subgroup_size)))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | _GLF_IDENTITY((min(subgroup_size, subgroup_size)), ~ (~ ((min(subgroup_size, subgroup_size)))))))))), ~ (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), ~ (~ (_GLF_IDENTITY(min(subgroup_size, subgroup_size), uint(uvec2(min(subgroup_size, subgroup_size), 0u))))))) | _GLF_IDENTITY((min(subgroup_size, subgroup_size)), ~ _GLF_IDENTITY((~ ((min(subgroup_size, subgroup_size)))), ((~ ((min(subgroup_size, subgroup_size))))) + 0u))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))
      return;
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   buf[virtual_gid] = 1;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)))) || false))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), max(_GLF_IDENTITY(log(vec2(1.0, 1.0)), (log(vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), clamp(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0))))))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))) * (injectionSwitch)))), mix(vec2(_GLF_FUZZED(float(49206u)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), max(_GLF_IDENTITY(log(vec2(1.0, 1.0)), (log(vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), clamp(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0))))))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))) * (injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), max(_GLF_IDENTITY(log(vec2(1.0, 1.0)), (log(vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), clamp(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0))))))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))) * (injectionSwitch)))))[0], _GLF_FUZZED(-8809.7887)), bvec2(true, false))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), max(_GLF_IDENTITY(log(vec2(1.0, 1.0)), (log(vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), clamp(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0))))))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))) * (injectionSwitch)))), mix(vec2(_GLF_FUZZED(float(49206u)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), max(_GLF_IDENTITY(log(vec2(1.0, 1.0)), (log(vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), clamp(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0))))))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))) * (injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), max(_GLF_IDENTITY(log(vec2(1.0, 1.0)), (log(vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), clamp(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), clamp(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0)))))), 1.0, abs(1.0), 0.0, 0.0))))))) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))) * (injectionSwitch)))))[0], _GLF_FUZZED(-8809.7887)), bvec2(true, false))).y)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (1u ^ 1u) ^ _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))) * 1u)) + 1 < subgroup_size, false || (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) - 0u)))), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)), subgroup_size)))))), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), uint(uint((subgroup_size) | (subgroup_size))))), subgroup_size)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(6678.8253, 0.6, 1384.5922).b, clamp(vec3(6678.8253, 0.6, 1384.5922).b, _GLF_IDENTITY(vec3(6678.8253, 0.6, 1384.5922).b, min(vec3(6678.8253, 0.6, 1384.5922).b, vec3(6678.8253, 0.6, 1384.5922).b)), vec3(6678.8253, 0.6, 1384.5922).b))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5768.7068)), bvec2(true, false))).y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)))), (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, log(1.0), 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, log(1.0), 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 0.0))))), false))) && true)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        barrier();
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))))))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat3x4(mat4(mat3x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_FUZZED(2625.7207)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0))), mat4(1.0) * (mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0)), (mat4(mat3x4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((false), false || ((false)))) && true, true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY((false), false || ((false)))) && true, true, false)))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-121.520, -6.1, -99.93, -66.72).x)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((false), false || ((false)))) && true, true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY((false), false || ((false)))) && true, true, false)))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-121.520, -6.1, -99.93, -66.72).x)), bool(false))) > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((false), false || ((false)))) && true, true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY((false), false || ((false)))) && true, true, false)))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-121.520, -6.1, -99.93, -66.72).x)), bool(false))) > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          break;
         break;
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (22555 & 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           barrier();
          }
        }
       barrier();
      }
     int i = 0;
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) - 0u)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (_GLF_IDENTITY(2, max(2, 2))) | 0)) | 0)), 4, 64, 4);
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float((mat4x2(7837.8726, 83.68, 27.64, 3259.2974, 6.9, 7107.0216, 42.66, -67.61) == mat4x2(-7577.5411, -90.87, -2.1, -249.169, -470.342, -8526.8486, -2678.7697, -7.7)))), _GLF_FUZZED(23.53)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), _GLF_FUZZED(8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float((mat4x2(7837.8726, 83.68, 27.64, 3259.2974, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9)), 7107.0216, 42.66, -67.61) == mat4x2(-7577.5411, -90.87, -2.1, _GLF_IDENTITY(-249.169, mix(float(-249.169), float(_GLF_FUZZED(11.22)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -470.342, -8526.8486, -2678.7697, -7.7)))), _GLF_FUZZED(23.53)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false, true, false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        continue;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) - 0.0), bool(false))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0), (mat4x2(5736.4964, 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.8) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2448.9020)), bool(false)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0), (0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, clamp((0.0) * 1.0, (0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0)))))), tan(0.0), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)) - mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-98.66 * 1.4))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9.7)), float(_GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat2x3(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), bool(true)))), 0.0, 0.0, 0.0, 0.0)))))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 1.0, 0.0)), (true ? float(vec4(1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-1.8)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.4) : 1.0)))) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(657.225), clamp(_GLF_IDENTITY(_GLF_FUZZED(657.225), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(657.225), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), float(mat4(float(vec4(_GLF_FUZZED(657.225), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_FUZZED(657.225), _GLF_FUZZED(657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(657.225, 0.0 + (657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-331.822))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(657.225, (false ? _GLF_FUZZED(-53.26) : 657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mat3(1.0) * (vec3(injectionSwitch, 1.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-2.6)))))), (true ? float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-90.97), float(vec2(_GLF_FUZZED(-90.97), 1.0)))))))) : _GLF_FUZZED(-150.644)))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5736.4964, (5736.4964) * 1.0), float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_FUZZED(-40.90)), float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(9.9)), float(float(mat4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), bool(true))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(9649.0816)), bool(false)))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, abs(0.0)))), 0.0)), 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(5736.4964, clamp(_GLF_IDENTITY(5736.4964, min(5736.4964, 5736.4964)), 5736.4964, 5736.4964)), 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(43.63) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y)), 1.0 * _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))), (true ? float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))) : _GLF_FUZZED(-90.97)))))) : _GLF_FUZZED(-150.644)))), true, false, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) - 0.0), bool(false))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0), (mat4x2(5736.4964, 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.8) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2448.9020)), bool(false)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0), (0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, clamp((0.0) * 1.0, (0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0)))))), tan(0.0), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)) - mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-98.66 * 1.4))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9.7)), float(_GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat2x3(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), bool(true)))), 0.0, 0.0, 0.0, 0.0)))))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 1.0, 0.0)), (true ? float(vec4(1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-1.8)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.4) : 1.0)))) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(657.225), clamp(_GLF_IDENTITY(_GLF_FUZZED(657.225), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(657.225), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), float(mat4(float(vec4(_GLF_FUZZED(657.225), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_FUZZED(657.225), _GLF_FUZZED(657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(657.225, 0.0 + (657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-331.822))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(657.225, (false ? _GLF_FUZZED(-53.26) : 657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mat3(1.0) * (vec3(injectionSwitch, 1.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-2.6)))))), (true ? float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-90.97), float(vec2(_GLF_FUZZED(-90.97), 1.0)))))))) : _GLF_FUZZED(-150.644)))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5736.4964, (5736.4964) * 1.0), float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_FUZZED(-40.90)), float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(9.9)), float(float(mat4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), bool(true))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(9649.0816)), bool(false)))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, abs(0.0)))), 0.0)), 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(5736.4964, clamp(_GLF_IDENTITY(5736.4964, min(5736.4964, 5736.4964)), 5736.4964, 5736.4964)), 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(43.63) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y)), 1.0 * _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))), (true ? float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))) : _GLF_FUZZED(-90.97)))))) : _GLF_FUZZED(-150.644)))), true, false, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) - 0.0), bool(false))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0), (mat4x2(5736.4964, 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.8) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2448.9020)), bool(false)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0), (0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, clamp((0.0) * 1.0, (0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0)))))), tan(0.0), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)) - mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-98.66 * 1.4))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9.7)), float(_GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat2x3(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), bool(true)))), 0.0, 0.0, 0.0, 0.0)))))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 1.0, 0.0)), (true ? float(vec4(1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-1.8)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.4) : 1.0)))) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(657.225), clamp(_GLF_IDENTITY(_GLF_FUZZED(657.225), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(657.225), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), float(mat4(float(vec4(_GLF_FUZZED(657.225), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_FUZZED(657.225), _GLF_FUZZED(657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(657.225, 0.0 + (657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-331.822))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(657.225, (false ? _GLF_FUZZED(-53.26) : 657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mat3(1.0) * (vec3(injectionSwitch, 1.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-2.6)))))), (true ? float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-90.97), float(vec2(_GLF_FUZZED(-90.97), 1.0)))))))) : _GLF_FUZZED(-150.644)))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5736.4964, (5736.4964) * 1.0), float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_FUZZED(-40.90)), float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(9.9)), float(float(mat4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), bool(true))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(9649.0816)), bool(false)))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, abs(0.0)))), 0.0)), 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(5736.4964, clamp(_GLF_IDENTITY(5736.4964, min(5736.4964, 5736.4964)), 5736.4964, 5736.4964)), 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(43.63) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y)), 1.0 * _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))), (true ? float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))) : _GLF_FUZZED(-90.97)))))) : _GLF_FUZZED(-150.644)))), true, false, true)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) - 0.0), bool(false))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0), (mat4x2(5736.4964, 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.8) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2448.9020)), bool(false)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0), (0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, clamp((0.0) * 1.0, (0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0)))))), tan(0.0), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)) - mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-98.66 * 1.4))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9.7)), float(_GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat2x3(float(mat4x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), bool(true)))), 0.0, 0.0, 0.0, 0.0)))))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 1.0, 0.0)), (true ? float(vec4(1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-1.8)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.4) : 1.0)))) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(657.225), clamp(_GLF_IDENTITY(_GLF_FUZZED(657.225), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(657.225), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), float(mat4(float(vec4(_GLF_FUZZED(657.225), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_FUZZED(657.225), _GLF_FUZZED(657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(657.225, 0.0 + (657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-331.822))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(657.225, (false ? _GLF_FUZZED(-53.26) : 657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mat3(1.0) * (vec3(injectionSwitch, 1.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-2.6)))))), (true ? float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-90.97), float(vec2(_GLF_FUZZED(-90.97), 1.0)))))))) : _GLF_FUZZED(-150.644)))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5736.4964, (5736.4964) * 1.0), float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_FUZZED(-40.90)), float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(9.9)), float(float(mat4(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), bool(true))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(9649.0816)), bool(false)))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, abs(0.0)))), 0.0)), 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(5736.4964, clamp(_GLF_IDENTITY(5736.4964, min(5736.4964, 5736.4964)), 5736.4964, 5736.4964)), 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(43.63) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(657.225))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(5736.4964, float(_GLF_IDENTITY(mat4x2(5736.4964, 0.0, sqrt(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0), (mat4x2(5736.4964, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 1.0, 1.0)) - mat4x2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(657.225))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(1.1, -7440.5455))))).y)), 1.0 * _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))), (true ? float(mat2x4(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0))) : _GLF_FUZZED(-90.97)))))) : _GLF_FUZZED(-150.644)))), true, false, true))))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
