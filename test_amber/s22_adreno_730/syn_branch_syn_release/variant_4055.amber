#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uint virtual_gid;
 int _f0;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 mat4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 vec3 _f1;
 ivec3 _f2;
 ivec2 _f3;
 mat2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 uvec2 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 mat3x4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 int _f1;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 uint subgroup_id;
 _GLF_struct_3 _f1;
 bvec4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(ivec2(1), gl_SubgroupID, _GLF_struct_3(_GLF_struct_2(ivec2(1)), _GLF_IDENTITY(1, (1) << 0)), bvec4(true), mat3(1.0));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (uvec3(uvec4(gl_WorkGroupSize, 0u))) | (uvec3(uvec4(gl_WorkGroupSize, 0u))))), ~ (~ (gl_WorkGroupSize))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (uvec3(uvec4(gl_WorkGroupSize, 0u))) | (uvec3(uvec4(gl_WorkGroupSize, 0u))))), ~ (~ (gl_WorkGroupSize))), 0u))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(40.38)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), mix(vec4((((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[0], _GLF_FUZZED(-7164.0545), (((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[2], (((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[3]), vec4(_GLF_FUZZED(7504.5738), (((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[1], _GLF_FUZZED(10.04), _GLF_FUZZED(-1.2)), bvec4(false, true, false, false))))) * vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), mix(vec4((((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[0], _GLF_FUZZED(-7164.0545), (((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[2], (((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[3]), vec4(_GLF_FUZZED(7504.5738), (((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[1], _GLF_FUZZED(10.04), _GLF_FUZZED(-1.2)), bvec4(false, true, false, false))))) * vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY((vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), mix(vec4((((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[0], _GLF_FUZZED(-7164.0545), (((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[2], (((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[3]), vec4(_GLF_FUZZED(7504.5738), (((_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))[1], _GLF_FUZZED(10.04), _GLF_FUZZED(-1.2)), bvec4(false, true, false, false))))) * vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))), uvec2(1u), _GLF_struct_5(_GLF_IDENTITY(vec4(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(-493.664, 27.54, -30.24, _GLF_IDENTITY(-3.4, clamp(_GLF_IDENTITY(-3.4, (-3.4) - 0.0), -3.4, -3.4)))), vec4(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec4(-493.664, 27.54, -30.24, -3.4)), mat4(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(vec4(-493.664, 27.54, -30.24, -3.4)), clamp(_GLF_FUZZED(vec4(-493.664, _GLF_IDENTITY(27.54, float(mat2(_GLF_IDENTITY(27.54, clamp(27.54, 27.54, _GLF_IDENTITY(27.54, float(mat4x3(27.54, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), exp(0.0), 1.0, 1.0))), -30.24, -3.4)), _GLF_FUZZED(vec4(-493.664, 27.54, -30.24, -3.4)), _GLF_FUZZED(vec4(-493.664, 27.54, -30.24, -3.4)))))), 0.0, 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))), vec3(1.0), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (true ? ivec3(1) : _GLF_FUZZED(ivec3(66807, -79274, _GLF_IDENTITY(_GLF_IDENTITY(46660, (46660) | 0), (_GLF_IDENTITY(true, (true) && true) ? 46660 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-25140, -63824), (_GLF_IDENTITY(ivec2(-25140, -63824), (ivec2(-25140, -63824)) | (ivec2(-25140, -63824)))) << ivec2(0, 0)).g, max(_GLF_IDENTITY(ivec2(-25140, -63824), (_GLF_IDENTITY(ivec2(-25140, -63824), (ivec2(-25140, -63824)) | (ivec2(-25140, -63824)))) << ivec2(0, 0)).g, _GLF_IDENTITY(ivec2(-25140, -63824), (_GLF_IDENTITY(ivec2(-25140, -63824), (ivec2(-25140, -63824)) | (ivec2(-25140, -63824)))) << ivec2(0, 0)).g)))))))))) << ivec3(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29626))), 0, 0)), ~ (~ (_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (true ? ivec3(1) : _GLF_FUZZED(ivec3(66807, -79274, _GLF_IDENTITY(46660, min(_GLF_IDENTITY(46660, clamp(46660, 46660, 46660)), 46660))))))) << ivec3(0, 0, 0)))))) | ivec3(0, _GLF_IDENTITY(0, (0) << (0 ^ 0)), 0)), ivec2(1), mat2(1.0), mat4x2(1.0)), _GLF_struct_6(uvec2(1u), mat3x4(1.0), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9798.9331)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-848.207))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-8.5, -43.59, 4.7, 65.89, 9.5, -3750.0924, 8103.5120, -392.568, -33.29, 2.2, -657.794, 3224.0458, 4700.5528, -9.3, 487.093, -9385.3064)) : _GLF_IDENTITY((_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9798.9331)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-848.207))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), transpose(transpose((_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9798.9331)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-848.207))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))) * mat4(1.0)), ivec3(1)), mat3x4(1.0), vec2(1.0)), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(mat4x3(1.0)), mat3x4(1.0), workgroup_size * _GLF_struct_replacement_8.workgroup_id);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), _GLF_IDENTITY(bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), false, true)), ! (! (bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), false, true))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), _GLF_IDENTITY(bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), false, true)), ! (! (bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), _GLF_IDENTITY(bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), false, true)), ! (! (bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), false, true)))))))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), _GLF_IDENTITY(bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), false, true)), ! (! (bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(float((injectionSwitch.y) / 1.0)))))), false, true))))))))))))))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))) || false), false)))))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, max(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_struct_replacement_4.subgroup_id) / 1u), _GLF_struct_replacement_4.subgroup_id, _GLF_struct_replacement_4.subgroup_id)), _GLF_struct_replacement_4.subgroup_id)) * subgroup_size, (_GLF_IDENTITY(true, (true) || false) ? _GLF_struct_replacement_1.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, max(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_4.subgroup_id) / 1u, (_GLF_IDENTITY((_GLF_struct_replacement_4.subgroup_id) / 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_struct_replacement_4.subgroup_id) / 1u))) / 1u)), _GLF_struct_replacement_4.subgroup_id, _GLF_struct_replacement_4.subgroup_id)), _GLF_struct_replacement_4.subgroup_id)) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), _GLF_IDENTITY(0u ^ ((_GLF_FUZZED(subgroup_size))), min(0u ^ ((_GLF_FUZZED(subgroup_size))), 0u ^ ((_GLF_FUZZED(subgroup_size)))))), (_GLF_FUZZED(subgroup_size)))), (~ (_GLF_FUZZED(subgroup_size))) | 0u))))) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), subgroup_local_id)))))), (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), min(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))), subgroup_local_id, subgroup_local_id)), uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (uvec2(subgroup_local_id, 1u)) - uvec2(0u, 0u)))), subgroup_local_id))))))) - 0u), uint(uint(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))))) << 0u), subgroup_local_id)), 1);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))))), ((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (false)))), false || ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || ((_GLF_IDENTITY(false, ! (! (false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))))), true && (! (! (false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), false, false)))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), false || (_GLF_IDENTITY(! (false), true && (! (false))))))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), true && (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))), false || ((! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))), ((! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), ! (! ((false)))) && true)), _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) < injectionSwitch.y)), false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || ((false)))))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true)))))) && _GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), _GLF_IDENTITY(false, ! (! (false))), true))))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))), false || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), _GLF_IDENTITY(false, ! (! (false))), true)))))) || false)) && _GLF_IDENTITY(true, (true) && true), ((_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))) || false))))), _GLF_IDENTITY(false, ! (! (false))), true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && (false)), ! (! (false))), _GLF_IDENTITY(true, (true) || false)))))) || false))) && true) || false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))))))), false, _GLF_IDENTITY(true, ! (! (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), ((_GLF_IDENTITY((false), false || ((false))))) || false), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (! (false))), true)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), ! (! ((_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))))))) || false)) || false), _GLF_IDENTITY(false, ! (! (false))), true)))))) && true, ((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))) || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (! (false))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), _GLF_IDENTITY(true, (true) || false))))))))) || false))) && true) || false)) || false)))), false, _GLF_IDENTITY(true, ! (! (true))))))), ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec2((false), true)))))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (! (false))), true)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), _GLF_IDENTITY(false, ! (! (false))), true)))))) && true, ((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), false, true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false)))))) || false))) && true) || false)) || false)))), false, _GLF_IDENTITY(true, ! (! (true)))))))) && true)), (! (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), true)))))) && true, ((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false))))))), ((! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))))) || false)), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false)))))) || false))) && true) || false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), (! (_GLF_IDENTITY((false), false || ((false))))) && true), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true))))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), true))), _GLF_IDENTITY(false, false || (false)), true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), true))), _GLF_IDENTITY(false, false || (false)), true)), false, true, true))))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), false || (! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false)))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), false || (! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false)))))) || false), true && (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), false || (! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))))) && _GLF_IDENTITY(true, (true) || false)) || false)) || false)))))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), true)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, false || (false)))))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), _GLF_IDENTITY(false, ! (! (false))), true)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))), false, false)))))) && true)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), ! (! (bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))) && true))) && true)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! _GLF_IDENTITY((false), ! (! ((false))))))))) || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), _GLF_IDENTITY(true, (true) || false)))))) || false))), true && ((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))) && true))) && true)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), ! (! (bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))) && true)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), ! (! (! ((! (true)))))))))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))) || ((false)))), bool(bvec3(! (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (false))))) || false))), _GLF_IDENTITY(true, (true) || false)))))) || false))))) && true) || false)) || false)))), false, _GLF_IDENTITY(true, ! (! (true)))))))) && true))) && true))) || false) && true)))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_1.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_4.subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, clamp(_GLF_struct_replacement_4.subgroup_id, _GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_struct_replacement_4.subgroup_id) << 0u)), ((_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_struct_replacement_4.subgroup_id) << 0u))) - 0u) + 0u))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, clamp(_GLF_struct_replacement_4.subgroup_id, _GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_struct_replacement_4.subgroup_id) + _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, 0u + (0u)), 0u), 0u | (min(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u + (0u), (0u + (0u)) >> 0u)), 0u))))))))))), max((_GLF_struct_replacement_4.subgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(clamp(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, 0u ^ (_GLF_struct_replacement_4.subgroup_id)), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_struct_replacement_4.subgroup_id) + 0u)), ~ (~ (_GLF_IDENTITY(clamp(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, 0u ^ _GLF_IDENTITY((_GLF_struct_replacement_4.subgroup_id), min(_GLF_IDENTITY((_GLF_struct_replacement_4.subgroup_id), ((_GLF_struct_replacement_4.subgroup_id)) | 0u), (_GLF_struct_replacement_4.subgroup_id)))), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_struct_replacement_4.subgroup_id) + 0u)), (true ? clamp(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u | (0u)))) ^ (_GLF_struct_replacement_4.subgroup_id)), _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_struct_replacement_4.subgroup_id) + 0u)) : _GLF_FUZZED(169947u)))))))), _GLF_IDENTITY((_GLF_struct_replacement_4.subgroup_id), ((_GLF_struct_replacement_4.subgroup_id)) | 0u) | (_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, clamp(_GLF_struct_replacement_4.subgroup_id, _GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_struct_replacement_4.subgroup_id) + 0u))))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(15899u))), subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(1, 0 + (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(1, 0 + (1))))) | (_GLF_IDENTITY(1, 0 + (1))))) | 0), subgroup_local_id + 1), uint(uint(clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(1, 0 + (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(1, 0 + (1))))) | (_GLF_IDENTITY(1, 0 + (1))))) | 0), subgroup_local_id + 1)))), _GLF_IDENTITY((clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(1, 0 + (1)))), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), 0 + (1)))), 1u, 0u))), subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint((clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) - 0)) | (_GLF_IDENTITY(1, 0 + (1)))), subgroup_local_id + 1))), (uint((clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(1, 0 + (1)))), subgroup_local_id + 1)))) | 0u))) * (1u | 0u)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[_GLF_struct_replacement_9.virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u + (uint(2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
