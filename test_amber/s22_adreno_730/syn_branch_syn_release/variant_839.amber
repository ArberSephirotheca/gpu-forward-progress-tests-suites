#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true, true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && ((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false, true))), true, true)), false || (bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false, true))), true, true))))), true, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (true)), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.6, clamp(-9.6, -9.6, -9.6)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) >> 0u) * subgroup_size + subgroup_local_id, 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(min(virtual_gid, subgroup_size)) : ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(min(virtual_gid, subgroup_size)) : ((subgroup_local_id + 1) % subgroup_size), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) - sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(mat2x4((0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, exp(0.0), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, exp(0.0), sin(0.0))), mix(float(_GLF_FUZZED(88.32)), float(float(mat2x4((0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, exp(0.0), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, exp(0.0), sin(0.0)))), bool(true)))) * 1.0))))) ^ (false ? _GLF_FUZZED(min(virtual_gid, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : subgroup_size)))) << 0u) | (subgroup_size)))) : ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id))))) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-1061) : 1))) % subgroup_size)))), (false ? _GLF_FUZZED(min(virtual_gid, subgroup_size)) : ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : subgroup_size)), 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)) + _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u)))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)) + _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u)))) + 1) % subgroup_size) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)) + _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u)))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)) + _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), ~ (~ (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) + 0u))))) | 0u) * 1u)))) + 1) % subgroup_size) - 0u)))), (false ? _GLF_FUZZED(min(virtual_gid, subgroup_size)) : ((subgroup_local_id + 1) % subgroup_size)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((true ? workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup)))), clamp((true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup)))), _GLF_IDENTITY((true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - _GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u))))))), ((true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup))))) - 0u), (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup))), (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup)))) << 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup))), (_GLF_IDENTITY(true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup))), min(true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup))), true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup)))))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * 1u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (true ? workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (true ? ~ (subgroup_id) : _GLF_FUZZED(subgroup_size))))))) * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup)))))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 0u, 1u, 0u)), uint(uvec2(uint(uvec4(subgroup_local_id, 0u, 1u, 0u)), 1u)))) + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(min(virtual_gid, subgroup_size)) : ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(min(virtual_gid, subgroup_size)) : ((subgroup_local_id + 1) % subgroup_size)) >> 0u))), (true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size), (false ? _GLF_FUZZED(min(virtual_gid, subgroup_size)) : ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(35387u)))), (false ? _GLF_FUZZED(166462u) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((true ? workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup)))), clamp((true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup)))), _GLF_IDENTITY((true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((_GLF_IDENTITY(40263u - _GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u))), 0u | (40263u - _GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u))))))))), ((true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup))))) - 0u), (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size))), subgroup_id * subgroup_size)) : _GLF_FUZZED(((40263u - num_workgroup))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) : _GLF_FUZZED(((40263u - num_workgroup))), (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup)))) << 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(((40263u - num_workgroup)))))) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id)) * subgroup_size : _GLF_FUZZED(((40263u - num_workgroup)))))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 0u, 1u, 0u)), uint(uvec2(uint(uvec4(subgroup_local_id, 0u, 1u, 0u)), 1u)))) + 1) % subgroup_size), (false ? _GLF_FUZZED(min(virtual_gid, subgroup_size)) : ((subgroup_local_id + 1) % subgroup_size))), (true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size), (false ? _GLF_FUZZED(min(virtual_gid, subgroup_size)) : ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))) : _GLF_FUZZED(35387u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, abs(sqrt(1.0)))), max(float(mat2(injectionSwitch.y, 1.0, 1.0, abs(sqrt(1.0)))), float(mat2(injectionSwitch.y, 1.0, 1.0, abs(sqrt(1.0)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 1u, 0u, 0u), (uvec4(next_virtual_gid, 1u, 0u, 0u)) | uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), _GLF_IDENTITY(0u, (0u) | 0u)), clamp(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), _GLF_IDENTITY(0u, (0u) | 0u)), uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), _GLF_IDENTITY(0u, (0u) | 0u)), uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), _GLF_IDENTITY(0u, (0u) | 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), _GLF_IDENTITY(0u, (0u) | 0u)), clamp(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), _GLF_IDENTITY(0u, (0u) | 0u)), uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), _GLF_IDENTITY(0u, (0u) | 0u)), uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)), _GLF_IDENTITY(0u, (0u) | 0u)))))) >> 0u)), (0u) - 0u), 0u, 0u))))], _GLF_IDENTITY(uint(2), (uint(2)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))))).x))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-84.57))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bvec3(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), false, false)))))))), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), true, true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), bool(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), true), bvec2(bvec2(bvec2(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))), true))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, false, false), bvec3(bvec3(bvec3((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, false, false), bvec3(bvec3(bvec3((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, false, false))))))))))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, true))) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y))))) || false)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), (bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), ! (! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((false) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((false) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((false) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((false) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))) || false))))), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))), ((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).y))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (false), (! (false)) || false)), false)), (bool(bvec2(! (_GLF_IDENTITY(! (false), (! (false)) || false)), false))) || false)))) || false))) || _GLF_IDENTITY(false, ! (! (false)))))))), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (true) && true), true, false, false))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, true && (false))))))))))) && true) || false))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-178.542), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED((53.91))), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)) || false)) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 + (~ (1)))))], injectionSwitch[1])))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(7127.6866)), bool(false))))), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(7127.6866)), bool(false))))), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(7127.6866)), bool(false))))), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), _GLF_IDENTITY(mat4x3(mat4(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(718.134)), bool(false))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), (false ? _GLF_FUZZED(mat4x3(34.88, _GLF_IDENTITY(-747.990, float(mat4x2(-747.990, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0))), 636.839, 23.97, 3.1, -1678.2330, 4326.9232, -53.56, -56.19, 24.23, 7.3, 29.08)) : mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(length(0.0), _GLF_IDENTITY(float(mat4x2(length(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (float(mat4x2(length(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) - 0.0))))))), mat3(1.0) * (mat4x3(mat4(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(fma(194.472, -291.764, (true ? 7773.5897 : 5867.4035))))))), (false ? _GLF_FUZZED(mat4x3(34.88, -747.990, 636.839, 23.97, 3.1, -1678.2330, 4326.9232, -53.56, -56.19, 24.23, 7.3, 29.08)) : mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0))))))))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x) / 1.0))) < injectionSwitch.y))))) || false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 + (~ (1)))))], injectionSwitch[1])))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), _GLF_IDENTITY(mat4x3(mat4(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), (false ? _GLF_FUZZED(mat4x3(34.88, -747.990, 636.839, 23.97, 3.1, -1678.2330, 4326.9232, -53.56, -56.19, 24.23, 7.3, 29.08)) : mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)))))), mat3(1.0) * (mat4x3(mat4(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), (false ? _GLF_FUZZED(mat4x3(34.88, -747.990, 636.839, 23.97, 3.1, -1678.2330, 4326.9232, -53.56, -56.19, 24.23, 7.3, 29.08)) : mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0))))))))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x) / 1.0)), (true ? max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), _GLF_IDENTITY(mat4x3(mat4(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), (false ? _GLF_FUZZED(mat4x3(34.88, -747.990, 636.839, 23.97, 3.1, -1678.2330, 4326.9232, -53.56, -56.19, 24.23, 7.3, 29.08)) : mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)))))), mat3(1.0) * (mat4x3(mat4(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), (false ? _GLF_FUZZED(mat4x3(34.88, -747.990, 636.839, 23.97, 3.1, -1678.2330, 4326.9232, -53.56, -56.19, 24.23, 7.3, 29.08)) : mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))))))))))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x) / 1.0)) : _GLF_FUZZED(77.58)))) < injectionSwitch.y))))) || false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))))), true && (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 + (~ (1)))))], injectionSwitch[1])))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), length(0.0)), _GLF_IDENTITY(mat4x3(mat4(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), (false ? _GLF_FUZZED(mat4x3(34.88, _GLF_IDENTITY(-747.990, (_GLF_IDENTITY(-747.990, max(_GLF_IDENTITY(-747.990, clamp(-747.990, -747.990, -747.990)), -747.990))) / exp(0.0)), 636.839, 23.97, 3.1, -1678.2330, 4326.9232, -53.56, -56.19, 24.23, _GLF_IDENTITY(7.3, clamp(_GLF_IDENTITY(7.3, clamp(7.3, 7.3, 7.3)), _GLF_IDENTITY(7.3, min(7.3, 7.3)), 7.3)), 29.08)) : mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)))))), mat3(1.0) * (mat4x3(mat4(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0)), (false ? _GLF_FUZZED(mat4x3(34.88, -747.990, 636.839, 23.97, 3.1, -1678.2330, 4326.9232, -53.56, -56.19, 24.23, 7.3, 29.08)) : mat4x3(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 0.0, 0.0)), (float(vec4(0.0, 1.0, 0.0, 0.0))) + 0.0)))), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0))))))))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))[1])))).x) / 1.0))) < injectionSwitch.y))))) || false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false) || false))))))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-178.542), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(vec2((injectionSwitch)), min(vec2((injectionSwitch)), vec2((injectionSwitch))))))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], ((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))]) / 1.0), _GLF_FUZZED((53.91))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2((mix(vec2(_GLF_FUZZED(-178.542), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(vec2((injectionSwitch)), min(vec2((injectionSwitch)), vec2((injectionSwitch))))))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], ((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))]) / 1.0), _GLF_FUZZED((53.91))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], _GLF_FUZZED((2088.5098 / 6629.8822))), vec2(_GLF_FUZZED(5055.2975), (mix(vec2(_GLF_FUZZED(-178.542), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(vec2((injectionSwitch)), min(vec2((injectionSwitch)), vec2((injectionSwitch))))))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], ((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))]) / 1.0), _GLF_FUZZED((53.91))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), bvec2(false, true)))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-4090.2170)), bvec2(false, false))).y))) || false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)), true && (bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false)))))), (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bvec2(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), true)))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-178.542), _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, cos(0.0), 1.0, abs(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0, 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED((53.91))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), sin(0.0) + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)), true && (bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false)))))), (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bvec2(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), true)))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-178.542), _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, cos(0.0), 1.0, abs(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0, 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED((53.91))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), sin(0.0) + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true, true)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 6.5))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), vec2(_GLF_FUZZED(-863.328), _GLF_FUZZED(3894.6092)), bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, (false) && true)))))), injectionSwitch)).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false)))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((uint(2))) / (1u | 1u)) | (uint(2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, clamp(2, 2, 2)))))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, clamp(2, 2, 2)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, clamp(2, 2, 2)))))), ((_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, clamp(2, 2, 2))))))) | 0)), (true ? max(~ (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, clamp(2, 2, 2)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, clamp(2, 2, 2)))))), ((_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(2, 2, 2))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(2, clamp(2, 2, 2))), 1, 1)), (int(ivec3(int(_GLF_IDENTITY(2, clamp(2, 2, 2))), 1, 1))) - 0)))))) | 0)) : _GLF_FUZZED((69615 & -55774)))))))), _GLF_IDENTITY((uint(2)), _GLF_IDENTITY(((uint(2))), (((uint(2)))) | (((uint(2))))) / (1u | _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(2))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((uint(2))) / (1u | 1u)) | (uint(2))), max(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), clamp((uint(2)), (uint(2)), (uint(2)))), ((uint(2))) / (1u | 1u)) | (uint(2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (1 | 1) * (2)), ~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(bitfieldInsert(-34130, 84471, -36903, -62818)) : _GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(mix(9650, 93665, false)) : ~ (2)))))))), _GLF_IDENTITY((uint(2)), _GLF_IDENTITY(_GLF_IDENTITY(((uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(-48625) : 2, 0 | (false ? _GLF_FUZZED(-48625) : 2))))))) / (1u | _GLF_IDENTITY(1u, 0u ^ (1u))), min(((uint(2))) / (1u | 1u), (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))) / (1u | 1u))), 0u ^ (_GLF_IDENTITY(((uint(2))) / (1u | 1u), min(((uint(2))) / (1u | 1u), ((uint(2))) / (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, (1u) << (0u ^ 0u)))) | 1u)))))) | (uint(2))))), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, 0 ^ (2)))), ((uint(2))) / (1u | 1u)) | (uint(2)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, 0 ^ (2)))), ((uint(2))) / (1u | 1u)) | (uint(2)), 0u), (uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, 0 ^ (2)))), ((uint(2))) / (1u | 1u)) | (uint(2)), 0u)) / uvec2(1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((uint(2))) / (1u | 1u)) | (uint(2))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-34917) : _GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((uint(2)), ((uint(2))) / (1u | 1u)) | (uint(2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-34917) : _GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((uint(2)), ((uint(2))) / (1u | 1u)) | (uint(2))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-34917) : _GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((uint(2)), ((uint(2))) / (1u | 1u)) | (uint(2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-34917) : _GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((uint(2)), ((uint(2))) / (1u | 1u)) | (uint(2)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-34917) : _GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((uint(2)), ((uint(2))) / (1u | 1u)) | (uint(2)))))))))) | (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) << 0u)), ((uint(2))) / (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u)) | 1u, (1u | _GLF_IDENTITY(1u, 0u ^ (1u))) >> 0u))) | (uint(2))))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(1.0)))))))), true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-6.2, -8.8)))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).y)), true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true))))), true)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1049.0122) : injectionSwitch.y)) : _GLF_FUZZED(-8.3))), bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1049.0122) : injectionSwitch.y)) : _GLF_FUZZED(-8.3))), bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true))), bool(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1049.0122) : injectionSwitch.y)) : _GLF_FUZZED(-8.3))), bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true)))))))))), true))), bool(bvec3((bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1049.0122) : injectionSwitch.y)) : _GLF_FUZZED(-8.3))), bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true))))), true))), false, false))) || false)))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))) + 0.0), max(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))) + 0.0), clamp(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))) + 0.0), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))) + 0.0), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-55.02, 69.40, -8.1, 8.7)[2]) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))) + 0.0))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), true))))), true)), (bool(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), true))))), true))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true)))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true)))) || false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat2(-60.77, -658.585, 1.0, -631.905))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(pow(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch))))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(pow(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(pow(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(pow(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(pow(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch))))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) || false)))))), ! (! (bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0))), injectionSwitch[1])))).y)))))) || false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false))))), (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false)))))) && true))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, false, false))))) && true)), bool(bvec2(false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))), false, false, false))))) && true)), true)))), false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
