#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(93443) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
          return;
         continue;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(-8.2)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED(-42.31)), bool(false))) > injectionSwitch.y))));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, 0))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), (true ? float(mat4x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(-1.4)))), injectionSwitch.x))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), true, false)), (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), (bool(bvec4(false, false, true, false))) && true))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((uvec3(1848u, 39351u, 13563u) ^ subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) * 1.0), 1.0, 1.0, 0.0)), (float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) * 1.0), 1.0, 1.0, 0.0))) - 0.0)), 1.0, abs(1.0), 1.0))) / 1.0)), (false ? _GLF_FUZZED(uvec3(47558u, 84814u, 75746u)) : _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).x), _GLF_ZERO(0.0, injectionSwitch.x))) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)) | (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(30.64, float(mat2(30.64, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(step(-8720.2856, 4042.3783)) : injectionSwitch.x), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(step(-8720.2856, _GLF_IDENTITY(4042.3783, (true ? 4042.3783 : _GLF_FUZZED(sign(-706.342)))))) : injectionSwitch.x)) * 1.0))), bool(true)))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-18604))), bool(false))), injectionSwitch.x))))) | (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2x3(2.5, -8057.2854, 4333.2286, 4593.3420, -66.86, -1643.6750)) : mat2x3(injectionSwitch, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))).x)) : _GLF_FUZZED((uvec3(1848u, 39351u, 13563u) ^ subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(47558u, min(_GLF_IDENTITY(47558u, (true ? 47558u : _GLF_FUZZED(123934u))), 47558u)), 84814u, 75746u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(47558u, clamp(47558u, 47558u, 47558u)), 84814u, 75746u)))) : _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(injectionSwitch.y) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))) + uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)))), (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), min(uvec3(2u), uvec3(2u))))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.64)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(_GLF_IDENTITY(-8720.2856, (-8720.2856) - 0.0), 4042.3783)) : injectionSwitch.x))), bool(true)))), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.64)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(-8720.2856, 4042.3783)) : injectionSwitch.x))), bool(true))))) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-6168.4971), (true ? _GLF_FUZZED(-6168.4971) : _GLF_FUZZED(-975.347))) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6168.4971) : _GLF_IDENTITY(0.0, (0.0) - 0.0), (true ? false ? _GLF_FUZZED(-6168.4971) : _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(asin(5.3)))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6168.4971) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch.x))))))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-3.9) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), uvec3(1u, 1u, 1u) * (uvec3(2u))))))).x, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((uvec3(1848u, 39351u, 13563u) ^ subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) * 1.0), 1.0, 1.0, 0.0)), (float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) * 1.0), 1.0, 1.0, 0.0))) - 0.0)), 1.0, abs(1.0), 1.0))) / 1.0)), (false ? _GLF_FUZZED(uvec3(47558u, 84814u, 75746u)) : _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).x), _GLF_ZERO(0.0, injectionSwitch.x))) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)) | (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(30.64, float(mat2(30.64, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(step(-8720.2856, 4042.3783)) : injectionSwitch.x), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(step(-8720.2856, _GLF_IDENTITY(4042.3783, (true ? 4042.3783 : _GLF_FUZZED(sign(-706.342)))))) : injectionSwitch.x)) * 1.0))), bool(true)))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-18604))), bool(false))), injectionSwitch.x))))) | (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2x3(2.5, -8057.2854, 4333.2286, 4593.3420, -66.86, -1643.6750)) : mat2x3(injectionSwitch, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))).x)) : _GLF_FUZZED((uvec3(1848u, 39351u, 13563u) ^ subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(47558u, min(_GLF_IDENTITY(47558u, (true ? 47558u : _GLF_FUZZED(123934u))), 47558u)), 84814u, 75746u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(47558u, clamp(47558u, 47558u, 47558u)), 84814u, 75746u)))) : _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(injectionSwitch.y) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))) + uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)))), (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), min(uvec3(2u), uvec3(2u))))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.64)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(_GLF_IDENTITY(-8720.2856, (-8720.2856) - 0.0), 4042.3783)) : injectionSwitch.x))), bool(true)))), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.64)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(-8720.2856, 4042.3783)) : injectionSwitch.x))), bool(true))))) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-6168.4971), (true ? _GLF_FUZZED(-6168.4971) : _GLF_FUZZED(-975.347))) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6168.4971) : _GLF_IDENTITY(0.0, (0.0) - 0.0), (true ? false ? _GLF_FUZZED(-6168.4971) : _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(asin(5.3)))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6168.4971) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch.x))))))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-3.9) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), uvec3(1u, 1u, 1u) * (uvec3(2u))))))).x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((uvec3(1848u, 39351u, 13563u) ^ subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) * 1.0), 1.0, 1.0, 0.0)), (float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) * 1.0), 1.0, 1.0, 0.0))) - 0.0)), 1.0, abs(1.0), 1.0))) / 1.0)), (false ? _GLF_FUZZED(uvec3(47558u, 84814u, 75746u)) : _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).x), _GLF_ZERO(0.0, injectionSwitch.x))) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)) | (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(30.64, float(mat2(30.64, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(step(-8720.2856, 4042.3783)) : injectionSwitch.x), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(step(-8720.2856, _GLF_IDENTITY(4042.3783, (true ? 4042.3783 : _GLF_FUZZED(sign(-706.342)))))) : injectionSwitch.x)) * 1.0))), bool(true)))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-18604))), bool(false))), injectionSwitch.x))))) | (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2x3(2.5, -8057.2854, 4333.2286, 4593.3420, -66.86, -1643.6750)) : mat2x3(injectionSwitch, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))).x)) : _GLF_FUZZED((uvec3(1848u, 39351u, 13563u) ^ subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(47558u, min(_GLF_IDENTITY(47558u, (true ? 47558u : _GLF_FUZZED(123934u))), 47558u)), 84814u, 75746u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(47558u, clamp(47558u, 47558u, 47558u)), 84814u, 75746u)))) : _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(injectionSwitch.y) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))) + uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)))), (uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), min(uvec3(2u), uvec3(2u))))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.64)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(_GLF_IDENTITY(-8720.2856, (-8720.2856) - 0.0), 4042.3783)) : injectionSwitch.x))), bool(true)))), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(30.64)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(-8720.2856, 4042.3783)) : injectionSwitch.x))), bool(true))))) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-6168.4971), (true ? _GLF_FUZZED(-6168.4971) : _GLF_FUZZED(-975.347))) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6168.4971) : _GLF_IDENTITY(0.0, (0.0) - 0.0), (true ? false ? _GLF_FUZZED(-6168.4971) : _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(asin(5.3)))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6168.4971) : _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch.x))))))) | (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-3.9) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))))))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), uvec3(1u, 1u, 1u) * (uvec3(2u))))))).x));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)))) || false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
      {
       return;
      }
    }
   for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(7), int(7))) & 65656); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(937.668, min(937.668, 937.668)))), float(injectionSwitch.y), bool(true)))))), false || _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-37.73) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))), bool(bvec3(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))), false, false)))) && true))))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(937.668, min(937.668, 937.668)))), float(injectionSwitch.y), bool(true)))))), false || _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-37.73) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))), bool(bvec3(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))), false, false)))) && true))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) || false)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))).y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
        {
        }
       else
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(3.9, -584.400)), clamp(_GLF_FUZZED(vec2(3.9, -584.400)), _GLF_IDENTITY(_GLF_FUZZED(vec2(3.9, -584.400)), (_GLF_FUZZED(vec2(3.9, -584.400))) * mat2(1.0)), _GLF_FUZZED(vec2(3.9, -584.400)))))).y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), min((1), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(56364) : 1))))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)));
 do
  {
   do
    {
     buf[virtual_gid] = 1;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true))))), false, false)), bool(bool(bool(bvec3(! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true))))), false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) && true))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bool(bool(bool(bvec3(! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true))))), false, false))))))))))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false))))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED((-2.5))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.3))), 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / exp(vec2(0.0, 0.0)))))))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat4x3(normalize(vec2(1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0))))))))), 0.0, sin(sqrt(0.0)), 1.0, 1.0)), max(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), 0.0, sin(sqrt(0.0)), 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (true ? length(normalize(vec2(1.0, 1.0))) : _GLF_FUZZED(-80.52)))))), dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), 0.0), vec4(0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), 0.0, sin(sqrt(0.0)), 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7569.0328)), float(injectionSwitch.y), bool(true)))))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))), (max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8))))))), int(8))), int(_GLF_IDENTITY(int(8), int(8))))) * 1))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, (8) / 1)))))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), 1, 0)))))) | 0), (true ? _GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))), (max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8))))))), int(8))), int(_GLF_IDENTITY(int(8), int(8))))) * 1))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, (8) / 1)))))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), 1, 0)))))) | 0), 0 ^ (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))), (max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8))))))), int(8))), int(_GLF_IDENTITY(int(8), int(8))))) * 1))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, (8) / 1)))))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), 1, 0)))))) | 0))) : _GLF_FUZZED(_injected_loop_counter))), max(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> 0)) - 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))), (max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), clamp(~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8))))))))), int(8))), int(_GLF_IDENTITY(int(8), int(8))))) * 1))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8))))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))), max(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))), ~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))))))))))), _GLF_IDENTITY(0, ~ (~ (0)))), 1, 0)))), clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))), (max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), clamp(~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8))))))))), int(8))), int(_GLF_IDENTITY(int(8), int(8))))) * 1))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8))))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))), max(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))), ~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))))))))))), _GLF_IDENTITY(0, ~ (~ (0)))), 1, 0)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))), (max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), clamp(~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8))))))))), int(8))), int(_GLF_IDENTITY(int(8), int(8))))) * 1))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8))))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))), max(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))), ~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))))))))))), _GLF_IDENTITY(0, ~ (~ (0)))), 1, 0)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))), (max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), clamp(~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8)))))), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8))))))))), int(8))), int(_GLF_IDENTITY(int(8), int(8))))) * 1))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), ivec2(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8))))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))), max(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))), ~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8))))))))))))))), _GLF_IDENTITY(0, ~ (~ (0)))), 1, 0)))))))) | 0), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))), (max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), ~ (~ (int(8))))))), int(8))), int(_GLF_IDENTITY(int(8), int(8))))) * 1))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (0 | 0) ^ (int(8))))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), ivec2(_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), _GLF_IDENTITY(1, ~ (~ (1))), 0), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), _GLF_IDENTITY(1, ~ (~ (1))), 0), ~ (~ (ivec4(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), int(8))), max(int(_GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(int(8), int(8)))))))))), 0), _GLF_IDENTITY(1, ~ (~ (1))), 0))))))))))) | 0))))); _injected_loop_counter --)
              {
               return;
              }
            }
          }
         continue;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      continue;
     if(subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) << 0))))), 1 * (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) << 0))))), (false ? _GLF_FUZZED(76788) : (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) << 0))))))))) * 1)), max((_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) << 0))))), 1 * (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) << 0))))), (false ? _GLF_FUZZED(76788) : (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) << 0))))))))) * 1)), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) << 0))))), 1 * (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) << 0))))), (false ? _GLF_FUZZED(76788) : (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) << 0))))))))) * 1))))) < subgroup_size)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false, true)), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false, true))), true)))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, true))), true)))))
            return;
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        break;
       int i = 0;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec3(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0) : _GLF_FUZZED(-83.12))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))) + 0.0) : _GLF_FUZZED(-83.12))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, injectionSwitch.y)))))))) + sqrt(sin(0.0)))), 0, 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(44134))) > int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0, min((_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) * 1.0), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(tan(970.540)))), injectionSwitch.x)) * 1.0), sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 0.0), (mat2(1.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0)))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) + 0.0, _GLF_IDENTITY((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) + 0.0, min(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4((_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-46.40, -18.86, 2.7, 6.4, _GLF_IDENTITY(-9153.6664, (-9153.6664) - 0.0), 246.926, -8323.6076, -71.52, -677.949, 0.1, 5.1, 0.3)) : mat3x4((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)) + 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), (float(_GLF_IDENTITY(mat3x4((_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-46.40, -18.86, 2.7, 6.4, _GLF_IDENTITY(-9153.6664, (-9153.6664) - 0.0), 246.926, -8323.6076, -71.52, -677.949, 0.1, 5.1, 0.3)) : mat3x4((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)) + 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) / 1.0)), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-7014.1835)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.3)), float(injectionSwitch.x), bool(true)))), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)))).x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), max(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) * mat2(1.0), ((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) * mat2(1.0)) - vec2(0.0, 0.0))))))) / vec2(1.0, 1.0)).x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)))) - 0.0))), 0.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) + _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.2)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(floor(784.626)) : 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, tan(0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(tan(0.0), sqrt(0.0) + (_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0)))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x3(2138.0225, -0.0, 8956.2803, _GLF_IDENTITY(-11.36, min(-11.36, _GLF_IDENTITY(-11.36, mix(float(-11.36), float(_GLF_FUZZED(-4906.0158)), bool(false))))), _GLF_IDENTITY(2.9, mix(float(2.9), float(_GLF_FUZZED(7.9)), bool(false))), 7120.0532, -8.0, 82.13, -5.9, 603.584, -4231.4389, -550.974)) : mat4x3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.2)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, tan(0.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, tan(0.0)), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0))))), clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * exp(0.0))))))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(61.08))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)))) + 0.0))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           do
            {
             atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_injected_loop_counter > 0, true, true, false)))); _injected_loop_counter --)
          {
           atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> _GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> _GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, 0 | (4)))), max(~ ((_GLF_IDENTITY(4, 0 | (4)))), ~ ((_GLF_IDENTITY(4, 0 | (4)))))))))) >> _GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), int(_GLF_IDENTITY(ivec3(0 | (4), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(0, 0, 0) ^ (ivec3(0 | (4), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) * int(_GLF_ONE(1.0, injectionSwitch.y))))))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldInsert(_injected_loop_counter, _injected_loop_counter, 36590, 84503)) : 4))))) >> 0))) ^ 0) - 0), (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0))) ^ 0) - 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0))) ^ 0) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0))) ^ 0) - 0), 0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0))) ^ 0) - 0))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0))) ^ 0) - 0), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) >> 0))) ^ 0) - 0))))), 64, _GLF_IDENTITY(4, (4) - 0));
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), abs(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0)), mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), abs(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0))))))).y))); _injected_loop_counter ++)
            {
             return;
            }
          }
         for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * (int(_GLF_ZERO(0.0, injectionSwitch.x)))) & 8396); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
              {
               do
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
        }
       break;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(ivec2(28338, -62596).y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-984.795)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) * mat2(1.0), max((vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) * mat2(1.0), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))) * mat2(1.0))))).x, injectionSwitch.x)) > injectionSwitch.y)), false, true, true))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x)), injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((-587.242 * 4490.7088))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, sqrt(cos(0.0)))), (float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, sqrt(cos(0.0))))) - 0.0))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), cos(0.0), 1.0)))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, abs(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, abs(0.0))))), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, ! (! (false))))), true, true))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ (0 >> _GLF_IDENTITY(int(3), int(3))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-7130.5006), clamp(_GLF_FUZZED(-7130.5006), _GLF_FUZZED(-7130.5006), _GLF_IDENTITY(_GLF_FUZZED(-7130.5006), float(mat4x2(_GLF_FUZZED(-7130.5006), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED(-7130.5006), clamp(_GLF_FUZZED(-7130.5006), _GLF_FUZZED(-7130.5006), _GLF_IDENTITY(_GLF_FUZZED(-7130.5006), float(mat4x2(_GLF_FUZZED(-7130.5006), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-7130.5006), clamp(_GLF_FUZZED(-7130.5006), _GLF_FUZZED(-7130.5006), _GLF_IDENTITY(_GLF_FUZZED(-7130.5006), float(mat4x2(_GLF_FUZZED(-7130.5006), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), 1.0))))), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-7130.5006), clamp(_GLF_FUZZED(-7130.5006), _GLF_FUZZED(-7130.5006), _GLF_IDENTITY(_GLF_FUZZED(-7130.5006), float(mat4x2(_GLF_FUZZED(-7130.5006), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), 1.0))))), 0.0, 1.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-7130.5006), clamp(_GLF_FUZZED(-7130.5006), _GLF_FUZZED(-7130.5006), _GLF_IDENTITY(_GLF_FUZZED(-7130.5006), float(mat4x2(_GLF_FUZZED(-7130.5006), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-7130.5006), clamp(_GLF_FUZZED(-7130.5006), _GLF_IDENTITY(_GLF_FUZZED(-7130.5006), max(_GLF_FUZZED(-7130.5006), _GLF_FUZZED(-7130.5006))), _GLF_IDENTITY(_GLF_FUZZED(-7130.5006), float(mat4x2(_GLF_FUZZED(-7130.5006), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), 1.0))))))))) > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))) && true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(713.154, 11.54, -1705.0319, -590.457, 679.151, 0.2, 8955.7523, 93.13, 564.748, 1.8, 67.35, 3.8)))))).y))))) || false)))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (! (false)), bool(bvec2(true && (! (false)), true))))))))))
          {
          }
         else
          {
           return;
          }
        }
       break;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-9.8)), vec2(_GLF_FUZZED(4.6), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
