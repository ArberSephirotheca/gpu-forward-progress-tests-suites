#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))) && true)), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (false))) || false, true))))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), (bool(bool(_GLF_IDENTITY(false, (false) && true)))) && true), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! ((bool(bool(_GLF_IDENTITY(false, (false) && true)))))))) || false)) || false)))) || (_GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))) && true))))))) || _GLF_IDENTITY(false, true && (false)), bool(bool(((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, bool(bvec2((_GLF_IDENTITY(false, true && (false))) || false, true))))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), (bool(bool(_GLF_IDENTITY(false, (false) && true)))) && true), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! ((bool(bool(_GLF_IDENTITY(false, (false) && true)))))))) || false)) || false)))) || (_GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))) && true))))))) || _GLF_IDENTITY(false, true && (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! (_GLF_IDENTITY(false, true && (false))))) || false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), vec4(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * ((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), clamp(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), vec4(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * ((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), vec4(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * ((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), mix(vec2(_GLF_FUZZED(60.34), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), vec4(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * ((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))[1]), vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), vec4(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * ((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))[0], _GLF_FUZZED((true ? 0.6 : -9.2))), bvec2(true, false))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), vec4(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * ((_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(78.58, 1.7, -834.957, -8.9)) : vec4(injectionSwitch, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))).x, _GLF_IDENTITY((false ? _GLF_FUZZED(-2.1) : injectionSwitch.x), ((false ? _GLF_FUZZED(-2.1) : injectionSwitch.x)) * 1.0)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), (_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true)))) / 1.0), _GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), max(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), (_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true)))) - 0.0))))), -0.0)), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), (_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true)))) / 1.0), _GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), max(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true))), (_GLF_IDENTITY(54.13, mix(float(_GLF_FUZZED(1520.8472)), float(54.13), bool(true)))) - 0.0))))), -0.0))) / vec2(1.0, 1.0)))))).y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5554.2899)), bool(false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))).x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(abs(vec2(1.0, 1.0))) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(abs(vec2(1.0, 1.0))) + (injectionSwitch), (false ? _GLF_FUZZED(vec2(20.52, -737.554)) : log(abs(vec2(1.0, 1.0))) + (injectionSwitch))))) + vec2(0.0, 0.0)))).y, mix(float(_GLF_FUZZED(-516.850)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, log(abs(vec2(1.0, 1.0))) + (injectionSwitch)))).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], max(_GLF_IDENTITY((vec2(0.0, 0.0))[1], clamp((vec2(0.0, 0.0))[1], (vec2(0.0, 0.0))[1], (vec2(0.0, 0.0))[1])), (vec2(0.0, 0.0))[1]))), vec2(_GLF_FUZZED(216.224), _GLF_FUZZED(-7679.6691)), bvec2(false, false))) + (injectionSwitch)).y))))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y)), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), clamp(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mat2(1.0) * (vec2(0.0, 0.0) + (injectionSwitch))), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch))), vec2(0.0, 0.0) + (injectionSwitch)))).y)))))) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) || false)))) || false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, false))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, log(1.0), 1.0)))), min(_GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, log(1.0), 1.0)))), clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, log(1.0), 1.0)))), _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, log(1.0), 1.0)))), max(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, log(1.0), 1.0)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, log(1.0), 1.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, log(1.0), 1.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, log(1.0), 1.0))))))) > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (_GLF_IDENTITY(! (! (! (true))), bool(bvec2(! (! (! (true))), true)))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      barrier();
     barrier();
    }
  }
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), true, false, false)))))), ((! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))))))) && true)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), _GLF_IDENTITY(false, true && (false)) || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat2(sqrt(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0), (false ? _GLF_FUZZED(mat4(-2028.0268, -18.00, -1.2, -8422.1323, -2838.1650, -359.710, -4782.2995, -5.2, 623.795, -815.043, -8.3, 3867.5128, 88.72, -2.8, 325.323, 9.6)) : mat4(0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(95.81)), bool(false)))), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))) && (bool(false)))), (bool(bool(false))) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))[0], _GLF_IDENTITY(gl_WorkGroupID[1], _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) << (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u))))))), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(clamp(uvec3(gl_WorkGroupID[1], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec3(gl_WorkGroupID[1], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec3(gl_WorkGroupID[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), min(clamp(uvec3(gl_WorkGroupID[1], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec3(gl_WorkGroupID[1], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec3(gl_WorkGroupID[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), clamp(uvec3(gl_WorkGroupID[1], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec3(gl_WorkGroupID[1], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec3(gl_WorkGroupID[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))))), (false ? _GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u & 193704u)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))))), 20849u, 14250, 91800)) : uint(_GLF_IDENTITY(uvec3(gl_WorkGroupID[1], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(uvec3(gl_WorkGroupID[_GLF_IDENTITY(1, (1) ^ 0)], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec3(gl_WorkGroupID[1], 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u))[1], (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u))[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u))[1])))) + 0u), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(uvec2((0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u)))))))))), gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y = workgroup_id, 0u ^ (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y = workgroup_id));
 uint workgroup_base = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z * GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (workgroup_base), ~ (~ (0u | (workgroup_base)))))), 0u | ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (workgroup_base), ~ (~ (0u | (workgroup_base)))))))) - 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)), clamp(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u))) >> 0u), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u))))));
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + subgroup_local_id, min(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + subgroup_local_id, GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false, true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))) && true), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)), true, true)))), ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))) && true), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)), true, true))))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))), bvec3(bvec4(bvec3(true, true, true), true))), true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))), false, true)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), 1u))))).x + (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) << 0u)), (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) + uvec2(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u)), uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) << 0u))), 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(-39.96), (false ? _GLF_FUZZED(num_workgroup) : floatBitsToUint(-39.96)))), (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(-39.96), (false ? _GLF_FUZZED(num_workgroup) : floatBitsToUint(-39.96))))) * 1u)), ((_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(-39.96), (false ? _GLF_FUZZED(num_workgroup) : floatBitsToUint(-39.96)))), (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(-39.96), (false ? _GLF_FUZZED(num_workgroup) : floatBitsToUint(-39.96))))) * 1u))) - 0u))))))).x + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(uint(uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, 1u)), (uint(uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, 1u))) - 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY(1u, 0u ^ (1u))), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY(1u, 0u ^ (1u))), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u)))) | (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY(1u, 0u ^ (1u))), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))))).x + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), _GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, 1u * ((subgroup_id) ^ 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u)))))) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))))).x + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), 0u | (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) ^ _GLF_IDENTITY(0u, (0u) | 0u)), max(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, 1u * ((subgroup_id) ^ 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u)))))) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))))).x + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), 0u | (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) ^ _GLF_IDENTITY(0u, (0u) | 0u)), GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, 1u * ((subgroup_id) ^ 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u)))))) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))))).x + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), 0u | (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) ^ _GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x) << 0u)) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, 1u))))).x + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) / 1u))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(91853) : 1))) << (1 ^ 1), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(91853) : 1))) << (1 ^ 1)) >> 0)), 1));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(unpackHalf2x16(virtual_gid), (unpackHalf2x16(virtual_gid)) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.8)), float(1.0), bool(true))), 1.0))))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6374.3516) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false, false)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))), (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))) * mat2(1.0)) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y) && true))))), false, false, false)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))))[0], _GLF_FUZZED(11.84)), vec2(_GLF_FUZZED(-771.525), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))))), mat2(1.0) * (injectionSwitch)))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))))[0], _GLF_FUZZED(11.84)), vec2(_GLF_FUZZED(-771.525), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))))[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)))))), mat2(1.0) * (injectionSwitch)))).x : _GLF_FUZZED(-6.6))) > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6374.3516) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6374.3516) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6374.3516) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false, false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).y, (false ? _GLF_FUZZED(-6374.3516) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false, false))))) || false))))))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)))).x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))), (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))) * mat2(1.0)) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-956.534, 9.6)) : injectionSwitch)))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-956.534, 9.6)) : injectionSwitch)))))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-956.534, 9.6)) : injectionSwitch)))))).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), clamp(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(1.0, 1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))))), false, false, false)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))) || false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 8.9))), bvec2(true, false))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), false)))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), true && (! ((_GLF_IDENTITY(false, true && (false))))))))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), bool(bvec4(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), false, false, false))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false))))))))))) || false)))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) / 1)), 4, 64, 4);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, abs(1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, abs(0.0), sin(0.0), sin(0.0), 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid))) - _GLF_IDENTITY((_GLF_IDENTITY(0u & 142391u, (0u & 142391u) | 0u)), ((_GLF_IDENTITY(0u & 142391u, (0u & 142391u) ^ 0u))) / 1u)) : _GLF_FUZZED(num_workgroup)))], uint(2), 4, _GLF_IDENTITY(64, 0 | (64)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)))))), (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)))))), ((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false))))))) && true)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)) && true))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && ((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false)) && true))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false))))))), false || (_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false))))))), bool(bvec4(((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), (! (bool(_GLF_IDENTITY(false, false || (false))))) || false))))))), false, true, false))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), bool(bvec3((bool(bool(_GLF_IDENTITY(false, false || (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false)))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))))))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))), _GLF_IDENTITY(bool(bvec3((bool(bool(_GLF_IDENTITY(false, false || (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-748.689 / -676.646))), float(injectionSwitch.y), bool(true)))))))) && true))))))))) || _GLF_IDENTITY(false, true && (false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false)))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), bool(bvec3((bool(bool(_GLF_IDENTITY(false, false || (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false)))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), bool(bvec3((bool(bool(_GLF_IDENTITY(false, false || (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false)))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), bool(bvec3((bool(bool(_GLF_IDENTITY(false, false || (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true)), (bool(bvec2(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false)))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), bool(bvec3((bool(bool(_GLF_IDENTITY(false, false || (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true))) && true)))), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, true, false)))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false))))))), bool(bvec3((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false))))))), true, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec3((bool(bool(_GLF_IDENTITY(false, false || (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bvec3((bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ((false)) && true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))) || false)), false, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))) - tan(vec2(0.0, 0.0))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (true ? ((injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))).x > injectionSwitch.y))) || false), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat2x4((injectionSwitch), 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))) - tan(vec2(0.0, 0.0))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (true ? ((injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))).x > injectionSwitch.y))) || false), true, true, false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, sqrt(1.0) * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), min(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), _GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_IDENTITY(_GLF_FUZZED(8.9), (_GLF_FUZZED(8.9)) - 0.0)), bool(false))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))) || false, bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0))).y))) || false)))), true, true, false))))))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
