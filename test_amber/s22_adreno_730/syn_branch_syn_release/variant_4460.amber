#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), true && (true && ((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true, true, true)))), bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true, true, true)))), bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(56.46)), bool(false))))), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false))))))) && true), true, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), _GLF_IDENTITY(true, true && (true)), true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED((-7.9 - -576.769))), bool(false))))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(87.75), _GLF_FUZZED(-157.019)), bvec2(false, false)))) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(8.4, -3.7, -5.7).p), _GLF_FUZZED(81.61)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))))), false || (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))))), false, true))))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false)))), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false)))), false, true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, _GLF_IDENTITY(false, ! (! (false))))))), false, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false)))), false, true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false)))), false, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false)))), false, true)))))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(69.71), (_GLF_FUZZED(_GLF_IDENTITY(69.71, (69.71) * 1.0))) / 1.0), max(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(69.71), (_GLF_FUZZED(_GLF_IDENTITY(69.71, (69.71) * 1.0))) / 1.0), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(69.71), (_GLF_FUZZED(_GLF_IDENTITY(69.71, (69.71) * 1.0))) / 1.0), float(mat4x3(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(69.71), (_GLF_FUZZED(_GLF_IDENTITY(69.71, (69.71) * 1.0))) / 1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))) && true))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false)))))))
          barrier();
         return;
        }
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), false || (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / sqrt(sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))) && true))))))))))))
              return;
             barrier();
            }
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch.x, length(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(-999.289, -6278.2257))) : injectionSwitch)) : _GLF_FUZZED(vec2(-4.6, -97.21)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(acosh(-966.229)))), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(280.922)), bool(false))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(280.922)), bool(false))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(280.922)), bool(false))) > injectionSwitch.y)))))), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true))), false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0))), min(_GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0))), (_GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0)))) - 0.0)))), 0.0, 0.0, 0.0, exp(0.0), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(619.196))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-64.29)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-8117.8804)))), 0.0, 0.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0)))), bool(true))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), _GLF_IDENTITY(max(abs(log(1.0)), abs(log(1.0))), (true ? max(_GLF_IDENTITY(abs(log(1.0)), min(abs(log(1.0)), abs(log(1.0)))), abs(log(1.0))) : _GLF_FUZZED(597.996)))), clamp(_GLF_IDENTITY(abs(log(1.0)), _GLF_IDENTITY(max(abs(log(1.0)), abs(log(1.0))), (max(abs(log(1.0)), _GLF_IDENTITY(abs(log(1.0)), float(vec3(abs(log(1.0)), 0.0, 0.0))))) / 1.0)), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(975.127))))), abs(log(1.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), _GLF_IDENTITY(abs(log(1.0)), (abs(log(1.0))) + 0.0))), max(_GLF_IDENTITY(abs(log(1.0)), mix(float(abs(log(1.0))), float(_GLF_FUZZED(0.9)), bool(false))), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), float(mat2(abs(log(1.0)), cos(sqrt(0.0)), 0.0, round(length(normalize(1.0)))))), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))))), float(_GLF_FUZZED(8.6)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(67.87), (_GLF_FUZZED(67.87)) + 0.0)), bool(_GLF_IDENTITY(false, (false) || false)))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) / 1.0)))), 0.0))), min(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(_GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), mix(float(abs(log(1.0))), float(_GLF_FUZZED(-582.024)), bool(false))), max(abs(log(1.0)), _GLF_IDENTITY(abs(log(1.0)), min(abs(log(1.0)), abs(log(1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), mix(float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), clamp(clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))))), float(_GLF_FUZZED(-2.3)), bool(false)))), _GLF_IDENTITY(abs(log(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(max(abs(log(1.0)), abs(log(1.0))), min(max(abs(log(1.0)), abs(log(1.0))), _GLF_IDENTITY(max(abs(log(1.0)), abs(log(1.0))), max(max(abs(log(1.0)), abs(log(1.0))), max(abs(log(1.0)), abs(log(1.0))))))), (_GLF_IDENTITY(max(abs(log(1.0)), abs(log(1.0))), min(max(abs(log(1.0)), abs(log(1.0))), _GLF_IDENTITY(max(abs(log(1.0)), abs(log(1.0))), max(max(abs(log(1.0)), abs(log(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), max(abs(log(1.0)), abs(log(1.0)))))))) - 0.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5135.8190)), float(1.0), bool(true))))), abs(log(1.0)))))), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat4x2(vec3(0.0, 0.0, 0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(log(1.0), _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-7119.7709))), log(1.0))), log(1.0)))), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0))), 0.0, exp(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0)))))), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), float(_GLF_IDENTITY(mat2x4(abs(log(1.0)), 0.0, 0.0, determinant(mat4(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0, 1.0, abs(0.0), sin(0.0)), (_GLF_IDENTITY(mat2x4(abs(log(1.0)), 0.0, 0.0, determinant(mat4(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0, 1.0, abs(0.0), sin(0.0)), (mat2x4(abs(log(1.0)), 0.0, 0.0, determinant(mat4(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0, 1.0, abs(0.0), sin(0.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(abs(log(1.0)), abs(_GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(_GLF_IDENTITY(log(1.0), float(_GLF_IDENTITY(mat4x3(log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)))))), (true ? mat4x3(log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(mat4x3(-22.59, -5588.0232, 1683.2850, 1.1, -57.03, -21.49, -1.6, 705.222, -4.1, 2.9, 31.64, -0.2))))))), abs(log(1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), (_GLF_IDENTITY(abs(log(1.0)), max(abs(log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))))) / 1.0), log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), (_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))) / 1.0), log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), max(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), (false ? _GLF_FUZZED(926.059) : abs(log(1.0)))), max(abs(log(1.0)), abs(log(1.0)))), (_GLF_IDENTITY(abs(log(1.0)), max(abs(_GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0)))) + 0.0)), abs(log(1.0))))) / 1.0), log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), mix(float(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), float(_GLF_FUZZED((892.565 - -580.448))), bool(false)))) / 1.0), log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), _GLF_IDENTITY(abs(log(1.0)), mix(float(abs(log(1.0))), float(_GLF_FUZZED(473.031)), bool(false))))), (_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))) / 1.0), log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), (_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))) / 1.0), log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(bvec2(true, false).x))), float(0.0), bool(true))))))))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(_GLF_IDENTITY(log(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0)) + vec3(0.0, 0.0, 0.0), clamp((vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0)) + vec3(0.0, 0.0, 0.0), (vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0)) + vec3(0.0, 0.0, 0.0), (vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0)) + vec3(0.0, 0.0, 0.0))))), 1.0 * (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0), (vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0)) + vec3(0.0, 0.0, 0.0))))))), abs(log(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), (_GLF_IDENTITY(abs(log(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))))) + 0.0)) - 0.0)) * determinant(mat3(1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), min(abs(log(1.0)), abs(log(1.0)))), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(_GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0)))), max(abs(log(1.0)), abs(log(1.0)))))))), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(log(1.0)), _GLF_IDENTITY(clamp(abs(log(1.0)), abs(log(1.0)), abs(log(1.0))), min(clamp(abs(log(1.0)), abs(log(1.0)), abs(log(1.0))), clamp(abs(log(1.0)), abs(log(1.0)), abs(log(1.0)))))), 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(_GLF_IDENTITY(abs(log(1.0)), min(abs(log(1.0)), abs(log(1.0)))), abs(_GLF_IDENTITY(log(1.0), (log(1.0)) - 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), 0.0 + (abs(log(1.0)))), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), mix(float(_GLF_FUZZED(-96.69)), float(abs(log(1.0))), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0)))), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), _GLF_IDENTITY(abs(log(1.0)), (false ? _GLF_FUZZED(-2353.5421) : abs(log(1.0)))))), max(abs(log(1.0)), abs(log(1.0)))))), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false)), (false ? _GLF_FUZZED(5.4) : mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, abs(1.0)))))), 0.0, exp(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), _GLF_IDENTITY(float(injectionSwitch.x), max(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(3.4)), bool(false))), float(injectionSwitch.x))), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)))), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), (abs(log(1.0))) / 1.0), max(abs(log(1.0)), _GLF_IDENTITY(abs(log(1.0)), mix(float(_GLF_FUZZED((-1561.0856 - -206.279))), float(abs(log(1.0))), bool(true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(_GLF_IDENTITY(abs(log(1.0)), (_GLF_IDENTITY(abs(log(1.0)), (false ? _GLF_FUZZED(-272.225) : abs(log(1.0))))) / 1.0), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(_GLF_IDENTITY(abs(log(1.0)), min(abs(log(1.0)), _GLF_IDENTITY(abs(log(1.0)), clamp(abs(log(1.0)), abs(log(1.0)), abs(log(1.0)))))), abs(log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0)))))))), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((_GLF_IDENTITY(8.9, (true ? 8.9 : _GLF_FUZZED(453.912))) - -75.56)) : 1.0)), mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, abs(log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), exp(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 1.0)))))), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), (false ? _GLF_FUZZED(4.2) : _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), 1.0)))), abs(log(1.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), 1.0 * (abs(log(1.0)))), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), min(clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), clamp(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0))))), 0.0 + (min(_GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), clamp(_GLF_IDENTITY(abs(log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, sqrt(cos(0.0)), log(1.0), 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat2x4(1.0, 1.0, sqrt(cos(0.0)), log(1.0), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(75.24)), float(0.0), bool(true))), 0.0)), 0.0, 0.0)))), float(mat3x4(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, sqrt(cos(0.0)), log(1.0), 1.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat2x4(1.0, 1.0, sqrt(_GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0)), log(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(1.0))) * (round(length(normalize(vec3(1.0, 1.0, 1.0))))))), float(_GLF_FUZZED(2.3)), bool(false))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), max(abs(log(1.0)), abs(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(4.8)), bool(_GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), _GLF_IDENTITY(abs(log(1.0)), _GLF_IDENTITY(float(mat2x3(abs(log(1.0)), determinant(mat3(round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(float(mat2x3(abs(log(1.0)), determinant(mat3(round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0, 0.0, 0.0)), max(float(mat2x3(abs(log(1.0)), determinant(mat3(round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0, 0.0, 0.0)), float(mat2x3(abs(log(1.0)), determinant(mat3(round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0, 0.0, 0.0)))), float(mat2x3(abs(log(1.0)), determinant(mat3(round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(abs(log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4630.1319)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), max(abs(log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(1.0, 1.0)))), abs(log(1.0)))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, length(0.0) + (1.0)), float(mat2(1.0, 0.0, 0.0, 0.0))), 1.0)), 1.0)))), abs(_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(-6.9)), float(log(1.0)), bool(true)))))))))), _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))))) - abs(0.0))), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(67.87, clamp(67.87, 67.87, 67.87)))), bool(false))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + 0.0)))), bool(true)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(958.011))), 1.0, abs(log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.7)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0)), (float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.7)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0))) * 1.0)), 1.0), (false ? _GLF_FUZZED(-9.4) : clamp(_GLF_IDENTITY(1.0, exp(0.0) * (1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.7)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0)), (float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-1.7)), bool(false)), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-1.7)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-1.7)), bool(false))) - 0.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-1.7)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-1.7)), bool(false))) - 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0))) * 1.0)), 1.0)))))), 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(roundEven(50.83))))))) - 0.0)), (log(1.0)) * 1.0)))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(251.212))), 0.0)), 0.0, _GLF_IDENTITY(exp(0.0), float(float(exp(0.0)))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(length(2.9)))), 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-64.29)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(injectionSwitch, vec2(264.193, 56.34))) : 0.0)), 0.0, exp(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)))), 0.0), vec3(mat2x4(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)))), 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0)))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.5)), mix(float(float(_GLF_FUZZED(4.5))), float(_GLF_FUZZED(-226.443)), bool(false))), float(injectionSwitch.x), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.8))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0), (mat4x3(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(24.14))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(_GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_IDENTITY(max(0.0, 0.0), (true ? max(0.0, 0.0) : _GLF_FUZZED(-558.593)))), float(_GLF_FUZZED(-75.78)), bool(false))), max(0.0, 0.0)))), 0.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0)), (float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sqrt(0.0), determinant(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0))) - 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.3) : 0.0))) / 1.0), 0.0)), exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), abs(1.0), 1.0)), 0.0 + (float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), abs(1.0), 1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))))))) - mat3x4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(104.907) : 0.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0))), min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat4x2(float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(injectionSwitch, vec2(264.193, 56.34))) : 0.0)), 0.0, exp(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)))), 0.0), vec3(mat2x4(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)))), 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0)))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.5)), mix(float(float(_GLF_FUZZED(4.5))), float(_GLF_FUZZED(-226.443)), bool(false))), float(injectionSwitch.x), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.8))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0), (mat4x3(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(24.14))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(_GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_IDENTITY(max(0.0, 0.0), (true ? max(0.0, 0.0) : _GLF_FUZZED(-558.593)))), float(_GLF_FUZZED(-75.78)), bool(false))), max(0.0, 0.0)))), 0.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0)), (float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sqrt(0.0), determinant(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0))) - 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.3) : 0.0))) / 1.0), 0.0)), exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), abs(1.0), 1.0)), 0.0 + (float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), abs(1.0), 1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))))))) - mat3x4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(104.907) : 0.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0))), min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0)), 1.0, 1.0, 0.0, 1.0, exp(length(vec3(0.0, 0.0, 0.0))), log(1.0))), float(mat3x2(float(mat4x2(float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(injectionSwitch, vec2(264.193, 56.34))) : 0.0)), 0.0, exp(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)))), 0.0), vec3(mat2x4(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)))), 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0)))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.5)), mix(float(float(_GLF_FUZZED(4.5))), float(_GLF_FUZZED(-226.443)), bool(false))), float(injectionSwitch.x), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.8))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0), (mat4x3(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(24.14))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(_GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_IDENTITY(max(0.0, 0.0), (true ? max(0.0, 0.0) : _GLF_FUZZED(-558.593)))), float(_GLF_FUZZED(-75.78)), bool(false))), max(0.0, 0.0)))), 0.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0)), (float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sqrt(0.0), determinant(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0))) - 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.3) : 0.0))) / 1.0), 0.0)), exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), abs(1.0), 1.0)), 0.0 + (float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))), abs(1.0), 1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))))))) - mat3x4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(104.907) : 0.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0))), min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0)), 1.0, 1.0, 0.0, 1.0, exp(length(vec3(0.0, 0.0, 0.0))), log(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(exp(0.0), 1.0 * (exp(0.0))), 1.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.5)), max(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(4.5)))), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-1659.8428)), float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), bool(true)))), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0)), 0.0, 0.0), (mat4x3(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0))), mix(float(_GLF_FUZZED(-2245.2680)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0)))), bool(true))), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1272.4727) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.5) : 0.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))))) - mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.7) : 0.0))) + determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(73.14), float(mat2x4(_GLF_FUZZED(73.14), 0.0, abs(1.0), 0.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0))))), bool(false))), 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(exp(0.0), 1.0 * (exp(0.0))), 1.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.5)), max(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(4.5)))), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-1659.8428)), float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), bool(true)))), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0)), 0.0, 0.0), (mat4x3(mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true)), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0))), mix(float(_GLF_FUZZED(-2245.2680)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0)))), bool(true))), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1272.4727) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.5) : 0.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), abs(log(1.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))))) - mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.7) : 0.0))) + determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(73.14), float(mat2x4(_GLF_FUZZED(73.14), 0.0, abs(1.0), 0.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0))))), bool(false))), 0.0, 0.0)))) : _GLF_FUZZED(-3732.5019)))), float(_GLF_FUZZED((9031.2956 - 371.119))), bool(false))), bool(true)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0)))) / cos(log(vec2(1.0, 1.0)))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat3(sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(1.0), float(_GLF_FUZZED(-5.5)), bool(false))), 0.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0), (mat4(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0)))), (abs(_GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0))))) / abs(exp(0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, exp(0.0), 1.0)) - mat3x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log2(-2.2)))), 0.0, 0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-64.29)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, cos(0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, abs(log(1.0)), 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), _GLF_IDENTITY(abs(log(1.0)), max(_GLF_IDENTITY(abs(log(1.0)), mix(float(_GLF_FUZZED(239.042)), _GLF_IDENTITY(float(abs(log(1.0))), clamp(float(abs(log(1.0))), float(abs(log(1.0))), float(abs(log(1.0))))), bool(true))), abs(log(1.0)))))), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0)))), float(_GLF_FUZZED(67.87)), bool(false))))) - mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(float(0.0))) : _GLF_FUZZED(3.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (float(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, abs(log(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6985.0471))), bool(false))))))), 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4.5, _GLF_IDENTITY((4.5) * 1.0, (_GLF_IDENTITY((4.5) * 1.0, ((4.5) * 1.0) * 1.0)) + 0.0)))), float(injectionSwitch.x), bool(true))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(log(1.0)), max(abs(log(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(abs(log(1.0)), 0.0 + (abs(log(1.0)))), max(_GLF_IDENTITY(abs(log(1.0)), mix(float(_GLF_FUZZED(239.042)), float(abs(log(1.0))), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), abs(log(1.0)))))), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.2)), bool(false)))))), float(_GLF_FUZZED(67.87)), bool(false)), _GLF_ZERO(0.0, injectionSwitch.x) + (mix(float(1.0), float(_GLF_FUZZED(67.87)), bool(false))))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) + 0.0), bool(true)))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), false, _GLF_IDENTITY(true, true && (true)), false))), (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(98.16, clamp(98.16, _GLF_IDENTITY(98.16, max(98.16, 98.16)), 98.16))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0))))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) | (gl_WorkGroupSize))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(uvec3(428u, _GLF_IDENTITY(152806u, clamp(_GLF_IDENTITY(152806u, (152806u) >> 0u), _GLF_IDENTITY(152806u, max(152806u, 152806u)), 152806u)), _GLF_IDENTITY(20959u, 1u * (_GLF_IDENTITY(20959u, uint(uint(20959u))))))) : gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)))), 1u, 0u, 0u))) / 1u)) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)) : _GLF_FUZZED(workgroup_id)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-763.626, -919.755)) : injectionSwitch))), clamp(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-763.626, -919.755)) : injectionSwitch))), min(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-763.626, -919.755)) : injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-763.626, -919.755)) : injectionSwitch))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-763.626, -919.755)) : injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-763.626, -919.755)) : injectionSwitch)))))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false, false)))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u)))), clamp(_GLF_IDENTITY((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u)))), 0u | (_GLF_IDENTITY((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u)))), 0u + ((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u)))))))), _GLF_IDENTITY((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u)))), 0u ^ ((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u)))))), (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))))))) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))), bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(vec3(-3.7, 8.1, -9.5).t)), float(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0))), bool(true)))), (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.x), bool(true))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, true))))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, 0u))), ((subgroup_local_id + 1)) << 0u) % subgroup_size), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, 0u))), uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 0u, 0u))), 0u, 1u, 0u))), ((subgroup_local_id + 1)) << 0u) % subgroup_size)) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(38.05), _GLF_FUZZED((+ 5.4))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.97) : injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.97) : injectionSwitch.y)))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))))))) || false))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(38.05), _GLF_FUZZED((+ 5.4))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.97) : injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.97) : injectionSwitch.y)))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))))))) || false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(38.05), _GLF_FUZZED((+ 5.4))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.97) : injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.97) : injectionSwitch.y)))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))))))) || false))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(38.05), _GLF_IDENTITY(_GLF_FUZZED((+ 5.4)), (_GLF_FUZZED((+ 5.4))) - 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.97) : injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.97) : injectionSwitch.y)))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(974.693, 211.840)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))) || false)))))) && true))))) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), ! (! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, true))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))) && true)), true && (_GLF_DEAD(false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true) && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0))), injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false)), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0))), injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false))), _GLF_IDENTITY(bool(bvec3(bool(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0))), injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false))), false, false)), (bool(bvec3(bool(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0))), injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false))), false, false))) && true))))), true && ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0)))), injectionSwitch.x)) > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) && true), true, false))), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)))) > injectionSwitch.y))), false, false), false)))))))))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(2), 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(80978))), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.3)), bool(false))) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-93.85)), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y) && true)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, true)))))))))) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(exp(0.0)) * (injectionSwitch.x)) > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) && true))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))))), true, true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false)), ! (! (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(906.335), _GLF_FUZZED(762.873)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(_GLF_IDENTITY(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), (vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1])) / vec2(1.0, 1.0)))), vec2(_GLF_FUZZED(vec2(-4.8, 880.837).g), _GLF_FUZZED(34.63)), bvec2(false, false)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x > injectionSwitch.y) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7080.9800)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), (vec4(1.0, 0.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y) || false)) && true, true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), (vec4(1.0, 0.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-462.916) : 0.0)), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-462.916) : 0.0)), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), 0.0))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y) || false)) && true))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0), (true ? mat4x3(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0) : _GLF_FUZZED(mat4x3(12.91, 9505.3751, -90.91, 5.0, 822.311, 383.165, -6.7, 9.2, 0.3, 4.9, 5134.2192, -9071.5769)))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false)), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false)), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)))), bool(bvec2((! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false)), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)))), false)))), ! (! (! (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false)), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)))), bool(bvec2((! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false)), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)))), false))))))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0))))), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), _GLF_IDENTITY((injectionSwitch.x) + sqrt(0.0), clamp(_GLF_IDENTITY((injectionSwitch.x) + sqrt(0.0), max((injectionSwitch.x) + sqrt(0.0), (injectionSwitch.x) + sqrt(0.0))), _GLF_IDENTITY((injectionSwitch.x) + sqrt(0.0), mix(float((injectionSwitch.x) + sqrt(0.0)), float(_GLF_FUZZED(-5378.8721)), bool(false))), (injectionSwitch.x) + sqrt(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0), max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), (injectionSwitch.x) + _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false)), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), (injectionSwitch.x) + sqrt(0.0)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))), true, false))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
