#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))) || false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (0u) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))) | (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(196153u))))), gl_WorkGroupSize.x)), _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))), 0u | (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))))))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) && true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) || false)) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(dot(vec4(-3.9, 6.1, 8.5, 82.80), vec4(-7437.3010, -52.91, -1.0, 684.095))))) > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(70.92)), bool(false)))) / determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(mat4x3(mat2(1.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(outerProduct(pow(injectionSwitch, vec2(-3.2, -3520.1752)), injectionSwitch))))) * mat2(1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(310.402)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(-73.55)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(60294u), min(_GLF_IDENTITY(float(60294u), min(float(60294u), float(60294u))), float(60294u)))), _GLF_FUZZED(-17.37)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y))), false)))))))).y, mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(310.402)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(-6897.9956))), mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)))))))) && true))) && true)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(60294u)), _GLF_FUZZED(-17.37)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(60294u)), _GLF_FUZZED(-17.37)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(vec2(_GLF_FUZZED(float(60294u)), _GLF_FUZZED(-17.37)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(float(60294u)), _GLF_FUZZED(-17.37)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(float(60294u)), _GLF_FUZZED(-17.37)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(float(60294u)), _GLF_FUZZED(-17.37)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y))))))).y, mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(310.402)), (float(_GLF_FUZZED(310.402))) + determinant(mat2(0.0, 1.0, 0.0, 0.0))), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(310.402, clamp(_GLF_IDENTITY(310.402, mix(float(310.402), float(_GLF_FUZZED(1.2)), bool(false))), 310.402, 310.402)))), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(310.402), min(_GLF_IDENTITY(_GLF_FUZZED(310.402), (_GLF_FUZZED(310.402)) / 1.0), _GLF_FUZZED(310.402)))), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(-6897.9956))), mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)))))))) && true))) && true, ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(310.402)), (float(_GLF_FUZZED(310.402))) + determinant(mat2(0.0, 1.0, 0.0, 0.0))), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(310.402, clamp(_GLF_IDENTITY(310.402, mix(float(310.402), float(_GLF_FUZZED(1.2)), bool(false))), 310.402, 310.402)))), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(310.402), min(_GLF_IDENTITY(_GLF_FUZZED(310.402), (_GLF_FUZZED(310.402)) / 1.0), _GLF_FUZZED(310.402)))), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(-6897.9956))), mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(310.402)), (float(_GLF_FUZZED(310.402))) + determinant(mat2(0.0, 1.0, 0.0, 0.0))), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(310.402, clamp(_GLF_IDENTITY(310.402, mix(float(310.402), float(_GLF_FUZZED(1.2)), bool(false))), 310.402, 310.402)))), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(310.402), min(_GLF_IDENTITY(_GLF_FUZZED(310.402), (_GLF_FUZZED(310.402)) / 1.0), _GLF_FUZZED(310.402)))), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(-6897.9956))), 0.0 + (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(310.402), min(_GLF_IDENTITY(_GLF_FUZZED(310.402), (_GLF_FUZZED(310.402)) / 1.0), _GLF_FUZZED(310.402)))), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(-6897.9956))))), mix(float(_GLF_FUZZED(310.402)), float(injectionSwitch.y), bool(true)))))) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))) && true))) && true) && true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4784.9612), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), bvec2(true, false))))).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4784.9612), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.3)), bvec2(true, false))))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))) ? subgroup_id : _GLF_FUZZED(workgroup_id))) * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (true ? (subgroup_id * subgroup_size) << 0u : _GLF_FUZZED(workgroup_base)))), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u) * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1), ~ (~ (clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))))), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), (_GLF_IDENTITY(_GLF_FUZZED(32569u), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) : subgroup_local_id + 1)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u))), subgroup_local_id)))) + 1))) % subgroup_size), uint(uint(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))), ((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) | ((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, min(32569u, 32569u)), (_GLF_IDENTITY(_GLF_IDENTITY(32569u, min(32569u, 32569u)), clamp(_GLF_IDENTITY(32569u, min(32569u, 32569u)), _GLF_IDENTITY(32569u, min(32569u, 32569u)), _GLF_IDENTITY(_GLF_IDENTITY(32569u, min(32569u, 32569u)), uint(uvec3(_GLF_IDENTITY(32569u, min(32569u, 32569u)), 0u, 0u)))))) - 0u)), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) : subgroup_local_id + 1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) : subgroup_local_id + 1))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) : subgroup_local_id + 1)))))), subgroup_local_id + 1, subgroup_local_id + 1), (clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(_GLF_IDENTITY(32569u, 0u ^ (32569u)))))) | 0u) : subgroup_local_id + 1)))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | 0u))) | (clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) : subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1)), subgroup_local_id + 1))), uint(uvec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(32569u), 0u, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(_GLF_FUZZED(32569u), 0u, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << 0u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) | (uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) : subgroup_local_id + 1)))), subgroup_local_id + 1, subgroup_local_id + 1), (clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1)), 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)) : subgroup_local_id + 1)), (uint((false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), _GLF_IDENTITY(min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)), (min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u))) / 1u))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, min((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u))) - 0u)) : subgroup_local_id + 1))) >> 0u)), min(uint(_GLF_IDENTITY(uint((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)), max(_GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u))))) ^ 0u) : subgroup_local_id + 1)), (uint((false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))) << 0u))), uint(1u))) | _GLF_IDENTITY((32569u), max(_GLF_IDENTITY((32569u), (true ? _GLF_IDENTITY((32569u), clamp((32569u), (32569u), (32569u))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((32569u), clamp((32569u), _GLF_IDENTITY((32569u), ((32569u)) - 0u), (32569u)))))), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)) : subgroup_local_id + 1))) >> 0u)), uint(_GLF_IDENTITY(uint((false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)) : subgroup_local_id + 1)), _GLF_IDENTITY((uint((false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)) : subgroup_local_id + 1))), ((uint((false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)) : subgroup_local_id + 1)))) | ((uint((false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u, ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32569u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (32569u)), min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) - 0u)) : subgroup_local_id + 1))))) >> 0u)))))))), subgroup_local_id + 1, subgroup_local_id + 1)) | (clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(32569u), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(32569u, min(32569u, 32569u))), min(_GLF_FUZZED(32569u), _GLF_FUZZED(32569u)))) | 0u) : subgroup_local_id + 1)))), subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), (1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) % subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-86.59), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_FUZZED(-4687.3361)), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(713.389)), vec2(_GLF_FUZZED(-186.477), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(713.389)), vec2(_GLF_FUZZED(-186.477), (injectionSwitch)[1]), bvec2(false, true))).y) - 0.0), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(713.389)), vec2(_GLF_FUZZED(-186.477), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(713.389)), vec2(_GLF_FUZZED(-186.477), (injectionSwitch)[1]), bvec2(false, true))).y)) && true) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.1)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec4(0.0, 0.0, cos(0.0), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, cos(0.0), 1.0), vec4(1.0, 1.0, 0.0, 0.0)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size))))))
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false))) || (bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(vec4(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, injectionSwitch.y))), 0.0, 1.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - tan(0.0))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(684.186)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(684.186)), bool(false)))) / 1.0)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.7, -8.7)) : injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false))))))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
