#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) + (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 & 1) | (1 & (1 ^ 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) || false, false || (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) || false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 9.3))), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 9.3))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 9.3))), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 9.3))), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 9.3))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 9.3))), bool(false)))))) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))), false, true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, _GLF_IDENTITY((6), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((6), _GLF_IDENTITY((true ? (6) : _GLF_FUZZED(26789)), ((true ? (6) : _GLF_FUZZED(26789))) | ((true ? (6) : _GLF_FUZZED(26789)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(26789)))), (~ (_GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(26789))))) | 0), _GLF_IDENTITY(~ (_GLF_IDENTITY((6), (true ? _GLF_IDENTITY((6), (0 ^ 0) + ((6))) : _GLF_FUZZED(26789)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(26789)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY((6), (true ? (_GLF_IDENTITY(6, (6) - 0)) : _GLF_FUZZED(26789)))), (~ (_GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(26789))))) >> 0), 1, 1, 0), (ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(_GLF_IDENTITY(26789, 0 | (_GLF_IDENTITY(26789, (false ? _GLF_FUZZED(80651) : _GLF_IDENTITY(26789, (26789) | (26789)))))))))), (~ (_GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(26789))))) >> 0), 1, 1, 0)) - ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | 0))))), ~ (_GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(26789)))))))))) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), int(6), _GLF_IDENTITY(int(6), (int(6)) / 1)), max(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), int(6), int(6)), 1)), max(int(_GLF_IDENTITY(ivec2(clamp(int(6), int(6), int(6)), 1), max(ivec2(clamp(int(6), int(6), int(6)), 1), ivec2(clamp(int(6), int(6), int(6)), 1)))), int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (true ? clamp(int(6), int(6), int(6)) : _GLF_FUZZED(36926))), 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), max(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (false ? _GLF_FUZZED(-95019) : clamp(int(6), int(6), int(6)))), _GLF_IDENTITY(int(ivec2(clamp(int(6), int(6), int(6)), 1)), max(int(ivec2(clamp(int(6), int(6), int(6)), 1)), int(ivec2(clamp(int(6), int(6), int(6)), 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(3460) : _GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), max(clamp(int(_GLF_IDENTITY(6, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (6))), int(6), int(6)), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, 6)), (6) | 0)))), int(6), int(6)), 1)), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(-80075))), 6))), int(6))) | (0 | 0)), 1)), int(ivec2(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(1, min(1, 1)))))))))), (false ? _GLF_FUZZED(3460) : _GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), max(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) - 0)) - (0 >> _GLF_IDENTITY(int(1), int(1)))), clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1)), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(6), int(6))) | (0 | 0)), 1)), int(ivec2(clamp(int(6), int(6), int(6)), 1))))), max(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1)), (int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1))) >> 0), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(6), int(6))) | (0 | 0)), 1)), int(ivec2(clamp(int(_GLF_IDENTITY(6, (6) | (6))), int(6), int(6)), 1))))), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1)), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, min(6, 6)), 6)))), (clamp(int(6), int(6), int(6))) | _GLF_IDENTITY((0 | 0), 1 * ((0 | 0)))), 1)), int(ivec2(clamp(int(6), int(6), int(6)), 1))))))))))) - (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ 1))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(3460) : _GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), max(clamp(int(_GLF_IDENTITY(6, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (6))), int(6), int(6)), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, 6)), (6) | 0)))), int(6), int(6)), 1)), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(-80075))), 6))), int(6))) | (0 | 0)), 1)), int(ivec2(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(1, min(1, 1)))))))))), (false ? _GLF_FUZZED(3460) : _GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), max(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) - 0)) - (0 >> _GLF_IDENTITY(int(1), int(1)))), clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1)), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(6), int(6))) | (0 | 0)), 1)), int(ivec2(clamp(int(6), int(6), int(6)), 1))))), max(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1)), (int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1))) >> 0), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(6), int(6))) | (0 | 0)), 1)), int(ivec2(clamp(int(_GLF_IDENTITY(6, (6) | (6))), int(6), int(6)), 1))))), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1)), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, min(6, 6)), 6)))), (clamp(int(6), int(6), int(6))) | _GLF_IDENTITY((0 | 0), 1 * ((0 | 0)))), 1)), int(ivec2(clamp(int(6), int(6), int(6)), 1))))))))))) - (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ 1))), (_GLF_IDENTITY(false ? _GLF_FUZZED(3460) : _GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), max(clamp(int(_GLF_IDENTITY(6, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (6))), int(6), int(6)), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, 6)), (6) | 0)))), int(6), int(6)), 1)), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(-80075))), 6))), int(6))) | (0 | 0)), 1)), int(ivec2(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(1, min(1, 1)))))))))), (false ? _GLF_FUZZED(3460) : _GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), max(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) - 0)) - (0 >> _GLF_IDENTITY(int(1), int(1)))), clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1)), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(6), int(6))) | (0 | 0)), 1)), int(ivec2(clamp(int(6), int(6), int(6)), 1))))), max(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1)), (int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1))) >> 0), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(6), int(6))) | (0 | 0)), 1)), int(ivec2(clamp(int(_GLF_IDENTITY(6, (6) | (6))), int(6), int(6)), 1))))), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), _GLF_IDENTITY(int(ivec2(clamp(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, 0 + (6)), 6, _GLF_IDENTITY(6, (6) | 0)))), int(6), int(6)), 1)), max(int(ivec2(_GLF_IDENTITY(clamp(int(6), int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, min(6, 6)), 6)))), (clamp(int(6), int(6), int(6))) | _GLF_IDENTITY((0 | 0), 1 * ((0 | 0)))), 1)), int(ivec2(clamp(int(6), int(6), int(6)), 1))))))))))) - (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ 1))))))) << 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) ^ 0), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))), false, false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(1), int(1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), 0u ^ (uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) - 0u))))))) - 0u) + 1)), 1u * (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), 0u ^ (uint(subgroup_local_id)))))) - 0u) + 1))))) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))) % subgroup_size), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))) % subgroup_size), _GLF_IDENTITY(uint(uvec3(((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))) % subgroup_size), 0u, 1u)), min(uint(uvec3(((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))) % subgroup_size), 0u, 1u)), uint(uvec3(((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))) % subgroup_size), 0u, 1u)))))))))), uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + 0u)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))), 1u * ((subgroup_local_id + 1))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), uint(uvec4(_GLF_FUZZED(virtual_gid), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), uint(uvec4(_GLF_FUZZED(virtual_gid), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 1u * ((~ (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), uint(uvec4(_GLF_FUZZED(virtual_gid), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) | 0u))))) % subgroup_size))), 0u, 1u)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   buf[virtual_gid] = 1;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) * abs(1.0))))), sin(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4808.2254) : 0.0)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)))), mix(float(_GLF_FUZZED(-34.46)), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)))), (false ? _GLF_FUZZED(ldexp(-5.6, i)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))) ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-34.46)), _GLF_IDENTITY(float(mat2x3(float(_GLF_FUZZED(-34.46)), 1.0, 0.0, 1.0, 1.0, 0.0)), float(vec3(float(mat2x3(float(_GLF_FUZZED(-34.46)), 1.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sin(0.0))))), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))))), float(_GLF_FUZZED(-1.4)), bool(false)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0)), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x))))) * 1.0)), float(_GLF_FUZZED((-792.164 - -5315.6504))), bool(false))), sin(0.0), 0.0)), float(mat2x3(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x))))) * 1.0)), float(_GLF_FUZZED((-792.164 - -5315.6504))), bool(false))), sin(0.0), 0.0)), max(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x))))) * 1.0)), float(_GLF_FUZZED((-792.164 - -5315.6504))), bool(false))), sin(0.0), 0.0)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x))))) * 1.0)), float(_GLF_FUZZED((-792.164 - -5315.6504))), bool(false))), sin(0.0), 0.0)))), 0.0, log(1.0), 1.0, determinant(mat3(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0)))), bool(_GLF_IDENTITY(true, true && (true))))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), _GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 1.0 * (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), mix(float(_GLF_FUZZED(-34.46)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), clamp(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), _GLF_IDENTITY(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), min(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), _GLF_IDENTITY(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), (float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)))) + 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-8122.5650)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))), bool(true))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), clamp(_GLF_IDENTITY(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-8122.5650)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))), bool(true))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), mix(float(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-8122.5650)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))), bool(true))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), float(_GLF_FUZZED(-735.311)), bool(false))), float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-8122.5650)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))), bool(true))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-8122.5650)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))), bool(true))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), clamp(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0)), mix(float(_GLF_FUZZED(3.1)), float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0))), bool(true)))), (float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-44.19)), bool(false))))))), float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(773.512), mix(float(_GLF_FUZZED(773.512)), float(_GLF_FUZZED(458.584)), bool(false))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0))), sin(0.0), 0.0)))) - 0.0))), float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - sqrt(0.0)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(4.4)), bool(false)))) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false)), float(mat3x4(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-55.36) : (injectionSwitch.y))))) - 0.0, ((injectionSwitch.y) - 0.0) - 0.0))), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-34.46)), (float(_GLF_FUZZED(_GLF_IDENTITY(-34.46, (_GLF_IDENTITY(-34.46, max(-34.46, -34.46))) / 1.0)))) + log(1.0)), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false))), mix(float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-34.46)), (float(_GLF_FUZZED(_GLF_IDENTITY(-34.46, (_GLF_IDENTITY(-34.46, max(-34.46, -34.46))) / 1.0)))) + log(1.0)), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false)))), float(_GLF_FUZZED(vec4(-4402.8994, 2.7, 5278.2998, 7706.0519).x)), bool(false)))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(773.512), mix(float(_GLF_FUZZED(4816.0869)), float(_GLF_FUZZED(773.512)), bool(true))) : injectionSwitch.x)), sin(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-34.46)), _GLF_IDENTITY((float(_GLF_FUZZED(-34.46))) + log(1.0), min((float(_GLF_FUZZED(-34.46))) + log(1.0), (float(_GLF_FUZZED(-34.46))) + log(1.0)))), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false)), max(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-34.46)), (float(_GLF_FUZZED(-34.46))) + log(1.0)), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_IDENTITY(_GLF_FUZZED(7.3), 0.0 + (_GLF_FUZZED(7.3))) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(773.512) : injectionSwitch.x), (false ? _GLF_FUZZED(dot(569.045, 4400.7856)) : (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)))), _GLF_IDENTITY(sin(0.0), (true ? _GLF_IDENTITY(sin(0.0), float(mat2x4(sin(0.0), 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))) : _GLF_FUZZED(8.1))), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(6.1)), bool(false))))), sin(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-34.46)), (float(_GLF_FUZZED(-34.46))) + log(1.0)), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false)))))) > injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(773.512) : injectionSwitch.x, float(mat2(false ? _GLF_FUZZED(773.512) : injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), sin(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-34.46)), (float(_GLF_FUZZED(-34.46))) + log(1.0)), float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), mix(float(_GLF_FUZZED(-24.21)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(773.512) : injectionSwitch.x, (false ? _GLF_FUZZED(263.764) : _GLF_IDENTITY(false ? _GLF_FUZZED(773.512) : injectionSwitch.x, min(false ? _GLF_FUZZED(773.512) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(773.512) : injectionSwitch.x, float(float(false ? _GLF_FUZZED(773.512) : injectionSwitch.x))))))))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x))))), bool(true))), sin(0.0), 0.0))))), float(_GLF_FUZZED(-1.4)), bool(false)))) > injectionSwitch.y)), true, false))), false, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(773.512, clamp(773.512, _GLF_IDENTITY(773.512, mix(float(_GLF_IDENTITY(773.512, (773.512) + 0.0)), float(_GLF_FUZZED(46.08)), bool(false))), 773.512))) : injectionSwitch.x)), _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(11.42))), sin(0.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))))), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), 0.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(773.512, clamp(773.512, _GLF_IDENTITY(773.512, mix(float(_GLF_IDENTITY(773.512, (773.512) + 0.0)), float(_GLF_FUZZED(46.08)), bool(false))), 773.512))) : injectionSwitch.x)), _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(11.42))), sin(0.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))))), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), 0.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(773.512, clamp(773.512, _GLF_IDENTITY(773.512, mix(float(_GLF_IDENTITY(773.512, (773.512) + 0.0)), float(_GLF_FUZZED(46.08)), bool(false))), 773.512))) : injectionSwitch.x)), _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(11.42))), sin(0.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))))), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), 0.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))))), float(_GLF_FUZZED(-1.4)), bool(false)))) > injectionSwitch.y)), true, false, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(773.512, clamp(773.512, _GLF_IDENTITY(773.512, mix(float(_GLF_IDENTITY(773.512, (773.512) + 0.0)), float(_GLF_FUZZED(46.08)), bool(false))), 773.512))) : injectionSwitch.x)), _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(11.42))), sin(0.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))))), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), 0.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(773.512, clamp(773.512, _GLF_IDENTITY(773.512, mix(float(_GLF_IDENTITY(773.512, (773.512) + 0.0)), float(_GLF_FUZZED(46.08)), bool(false))), 773.512))) : injectionSwitch.x)), _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(11.42))), sin(0.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))))), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), 0.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(773.512, clamp(773.512, _GLF_IDENTITY(773.512, mix(float(_GLF_IDENTITY(773.512, (773.512) + 0.0)), float(_GLF_FUZZED(46.08)), bool(false))), 773.512))) : injectionSwitch.x)), _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(11.42))), sin(0.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))))), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), float(vec3(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0)), 0.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))))))), float(_GLF_FUZZED(-1.4)), bool(false)))) > injectionSwitch.y)), true, false, true))))), false || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(773.512), clamp(_GLF_FUZZED(773.512), _GLF_IDENTITY(_GLF_FUZZED(773.512), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(773.512), float(float(_GLF_FUZZED(773.512))))), mix(float(_GLF_FUZZED((-8.8))), float((_GLF_IDENTITY(_GLF_FUZZED(773.512), float(float(_GLF_FUZZED(773.512)))))), bool(true)))), _GLF_FUZZED(773.512))) : injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(773.512) : injectionSwitch.x)))), sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(2937.2914)), bool(false)))), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(773.512) : injectionSwitch.x), max((false ? _GLF_FUZZED(773.512) : injectionSwitch.x), (false ? _GLF_FUZZED(773.512) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x) + log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(574.632)), float(1.0), bool(true))))))))), sin(0.0), 0.0)), mix(float(_GLF_FUZZED(-34.46)), float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(35.94) : injectionSwitch.x)) : _GLF_FUZZED(375.161))), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp(7.4)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && (false)) ? _GLF_FUZZED(773.512) : injectionSwitch.x)), sin(0.0), 0.0))), bool(true))), (false ? _GLF_FUZZED(7.3) : float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(773.512), mix(float(_GLF_FUZZED(773.512)), float(_GLF_FUZZED(float((36060u ^ 138825u)))), bool(false))) : injectionSwitch.x)), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED((877.623 - 8298.9355))), (true ? float(_GLF_FUZZED((877.623 - 8298.9355))) : _GLF_FUZZED(4434.2156))), clamp(float(_GLF_FUZZED((877.623 - 8298.9355))), float(_GLF_FUZZED((877.623 - 8298.9355))), float(_GLF_FUZZED((877.623 - 8298.9355))))), float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(2.6, 515.403).y)), bool(false)))))), bool(true)))), max(sin(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED((877.623 - 8298.9355))), (true ? float(_GLF_FUZZED((877.623 - 8298.9355))) : _GLF_FUZZED(4434.2156))), clamp(float(_GLF_FUZZED((877.623 - 8298.9355))), float(_GLF_FUZZED((877.623 - 8298.9355))), float(_GLF_FUZZED((877.623 - 8298.9355))))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_IDENTITY(true, bool(bool(true))))))), sin(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED((877.623 - 8298.9355))), (true ? float(_GLF_FUZZED((877.623 - 8298.9355))) : _GLF_FUZZED(4434.2156))), clamp(float(_GLF_FUZZED((877.623 - 8298.9355))), float(_GLF_FUZZED((877.623 - 8298.9355))), float(_GLF_FUZZED((877.623 - 8298.9355))))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true)))))), 0.0))))), float(_GLF_FUZZED(-1.4)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), false, true)))) || false)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y)), true, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(49.61, 875.279)) : injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5)))))), max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false))))))));
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(bvec4(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_IDENTITY(((false)), bool(bvec4(((false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.7)), vec2(_GLF_FUZZED(2.1), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), true, true))) || false))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))))), 1)), int(int(int(ivec2(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))), 1))))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), next_virtual_gid, next_virtual_gid)), (next_virtual_gid) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))], _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), 4, 64, 4);
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))) && true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false), true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false), true)))))), bool(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false), true))))))))))))))));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) > (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) << (0 ^ 0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), mix(_GLF_IDENTITY(vec2((mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(28678) : 0))], _GLF_FUZZED(-8.7)), max(vec2((mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) ^ 0), (false ? _GLF_FUZZED(28678) : 0))], _GLF_FUZZED(-8.7)), vec2((mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(28678) : 0))], _GLF_FUZZED(-8.7)))), vec2(_GLF_FUZZED(-813.237), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, cos(0.0), 0.0, 0.0), mat3x2(_GLF_IDENTITY(mat3(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, cos(0.0), 0.0, 0.0)), (true ? mat3(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, cos(0.0), 0.0, 0.0)) : _GLF_FUZZED(mat3(-1.6, -8.7, 5141.7076, -559.420, 6.6, -502.679, -6.8, 5.3, -7.2))))))))))[1]), bvec2(false, true)))).y), float(_GLF_FUZZED(468.465)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(28678) : 0))], _GLF_FUZZED(-8.7)), vec2(_GLF_FUZZED(-813.237), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).y), float(_GLF_FUZZED(468.465)), bool(false))) : _GLF_FUZZED(-107.773)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.9)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.0)), float(injectionSwitch.y), bool(true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-194.431)), bool(false))) > injectionSwitch.y))))), (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
          barrier();
         for(int _injected_loop_counter = (0 & (83060 | 16722)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 0.0)))), clamp(float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 0.0)))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 0.0)))), float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-81.32), clamp(_GLF_IDENTITY(_GLF_FUZZED(-81.32), (_GLF_FUZZED(-81.32)) / 1.0), _GLF_FUZZED(-81.32), _GLF_IDENTITY(_GLF_FUZZED(-81.32), mix(float(_GLF_FUZZED((0.5 - -8.3))), float(_GLF_FUZZED(-81.32)), bool(true)))))), (float(_GLF_IDENTITY(_GLF_FUZZED(-81.32), clamp(_GLF_IDENTITY(_GLF_FUZZED(-81.32), (_GLF_FUZZED(-81.32)) / 1.0), _GLF_FUZZED(-81.32), _GLF_IDENTITY(_GLF_FUZZED(-81.32), mix(float(_GLF_FUZZED((0.5 - -8.3))), float(_GLF_FUZZED(-81.32)), bool(true))))))) - 0.0), bool(false)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-827.819)), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.6)), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(274.107)), bool(false)))) / 1.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2((injectionSwitch) * mat2(1.0), log(1.0), 1.0)))).y))))
                barrier();
               barrier();
              }
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               for(int _injected_loop_counter = _GLF_IDENTITY((-40679 & 0), ((-40679 & 0)) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
