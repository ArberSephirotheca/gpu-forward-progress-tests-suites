#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.1) : injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.22), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.1)), bvec2(true, false))), sqrt(0.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), injectionSwitch.y), 0.0, sqrt(0.0), 0.0))), 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0))), 1.0, 0.0))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.7) : injectionSwitch.y))), 0.0, sqrt(0.0), 0.0))), 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0, 1.0)), (vec2(mat2(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0))), 1.0, 0.0)))))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), injectionSwitch.y), 0.0, sqrt(0.0), 0.0))), 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0))), 1.0, 0.0))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.7) : injectionSwitch.y))), 0.0, sqrt(0.0), 0.0))), 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0, 1.0)), (vec2(mat2(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0))), 1.0, 0.0)))))))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(false, false))))) || false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false), true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))) && true)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(-50.54)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-981.764), _GLF_FUZZED(-2.7)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch))[0], 0.0 + (((injectionSwitch))[0])), _GLF_IDENTITY((((injectionSwitch))[0]), clamp((((injectionSwitch))[0]), (((injectionSwitch))[0]), _GLF_IDENTITY((((injectionSwitch))[0]), clamp((((injectionSwitch))[0]), (((injectionSwitch))[0]), (((injectionSwitch))[0]))))) + 0.0), ((injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false)), clamp(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false)), _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false)))))))), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(_GLF_IDENTITY(-884.509, max(-884.509, -884.509)))), bvec2(false, false))).y, (false ? _GLF_FUZZED(-502.728) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-981.764), _GLF_FUZZED(-2.7)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch))[0], 0.0 + (((injectionSwitch))[0])), _GLF_IDENTITY((((injectionSwitch))[0]), clamp((((injectionSwitch))[0]), (((injectionSwitch))[0]), _GLF_IDENTITY((((injectionSwitch))[0]), clamp((((injectionSwitch))[0]), (((injectionSwitch))[0]), (((injectionSwitch))[0]))))) + 0.0), ((injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false)), clamp(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false)), _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6836.2052)), bool(false)))))))), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(_GLF_IDENTITY(-884.509, max(-884.509, -884.509)))), bvec2(false, false))).y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ (~ (2)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * 1.0), 0.0, 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, log(1.0), 0.0))), injectionSwitch)).y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1937.2005)), bool(false)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1937.2005)), bool(false)))))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, abs(1.0), log(1.0), 0.0, 1.0, 1.0, exp(0.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch, abs(1.0), log(1.0), 0.0, 1.0, 1.0, exp(0.0)), transpose(transpose(mat2x4(injectionSwitch, abs(1.0), log(1.0), 0.0, 1.0, 1.0, exp(0.0)))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch, abs(1.0), log(1.0), 0.0, 1.0, 1.0, exp(0.0)), transpose(transpose(mat2x4(injectionSwitch, abs(1.0), log(1.0), 0.0, 1.0, 1.0, exp(0.0))))))))))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (true ? mat2(1.0) * (mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bool(bool(bvec4(false, true, true, true))))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true, false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)) + _GLF_IDENTITY(0.0, min(0.0, 0.0)))) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(min(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (true ? mat3(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))) : _GLF_FUZZED(mat3(783.877, -4.8, -62.58, 7.4, -2.9, 903.822, -3.2, -1.2, -1791.5954)))) * (vec3(1.0, 1.0, 0.0))))), clamp(min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, sin(0.0), 0.0, 1.0)), max(float(mat2(1.0, sin(0.0), 0.0, 1.0)), float(mat2(1.0, sin(0.0), 0.0, 1.0))))), 0.0 + (1.0)), 0.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))), min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(91.68) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))), min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), clamp(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), max(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), clamp(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))))))))))), 1.0, 0.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), max(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), (false ? _GLF_FUZZED(fract(667.129)) : _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))))), 1.0, 1.0, 0.0)), vec2(_GLF_IDENTITY(mat3(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true))), 1.0, 0.0))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED((true ? -0.0 : -3847.3486)))))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), cos(_GLF_IDENTITY(0.0, (0.0) / cos(0.0))), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(transpose(mat3(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED((-6.9 * -6.2))), (false ? _GLF_FUZZED(5783.0270) : float(_GLF_FUZZED((-6.9 * -6.2))))), float((0.0)), bool(true)))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2665.5624) : 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec3(1.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0, 1.0))))))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(min(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[0], _GLF_FUZZED(7.2), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2], (true ? (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2] : _GLF_FUZZED(802.408)))), vec3(_GLF_FUZZED(4487.0946), (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[1], _GLF_FUZZED((-4329.3588 + -2.1))), bvec3(false, true, false)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))), max(min(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[0], _GLF_FUZZED(7.2), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2], (true ? (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2] : _GLF_FUZZED(802.408)))), vec3(_GLF_FUZZED(4487.0946), (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[1], _GLF_FUZZED((-4329.3588 + -2.1))), bvec3(false, true, false)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))), _GLF_IDENTITY(min(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[0], _GLF_FUZZED(7.2), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2], (true ? (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2] : _GLF_FUZZED(802.408)))), vec3(_GLF_FUZZED(4487.0946), (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[1], _GLF_FUZZED((-4329.3588 + -2.1))), bvec3(false, true, false)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(min(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[0], _GLF_FUZZED(7.2), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2], (true ? (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2] : _GLF_FUZZED(802.408)))), vec3(_GLF_FUZZED(4487.0946), (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[1], _GLF_FUZZED((-4329.3588 + -2.1))), bvec3(false, true, false)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))), min(min(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[0], _GLF_FUZZED(7.2), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2], (true ? (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2] : _GLF_FUZZED(802.408)))), vec3(_GLF_FUZZED(4487.0946), (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[1], _GLF_FUZZED((-4329.3588 + -2.1))), bvec3(false, true, false)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))), min(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[0], _GLF_FUZZED(7.2), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2], (true ? (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2] : _GLF_FUZZED(802.408)))), vec3(_GLF_FUZZED(4487.0946), (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[1], _GLF_FUZZED((-4329.3588 + -2.1))), bvec3(false, true, false)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))))), min(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[0], _GLF_FUZZED(7.2), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2], (true ? (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[2] : _GLF_FUZZED(802.408)))), vec3(_GLF_FUZZED(4487.0946), (vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED(((-73176 / ivec4(11584, 28503, -14765, 51089)) , -3899.6438)) : _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) - 0.0)))), 0.0))[1], _GLF_FUZZED((-4329.3588 + -2.1))), bvec3(false, true, false)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))))))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-100.940) : _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(99.71)), bool(false)))), (true ? cos(0.0) : _GLF_FUZZED(291.383))))), 0.0, 0.0, 1.0, 1.0, 0.0)), vec2(_GLF_IDENTITY(mat3(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED((true ? -0.0 : _GLF_IDENTITY(_GLF_IDENTITY(-3847.3486, (true ? -3847.3486 : _GLF_FUZZED(-2.9))), min(_GLF_IDENTITY(-3847.3486, (true ? -3847.3486 : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(_GLF_IDENTITY(-3847.3486, (true ? -3847.3486 : _GLF_FUZZED(-2.9))), float(mat4x2(_GLF_IDENTITY(-3847.3486, (true ? -3847.3486 : _GLF_FUZZED(-2.9))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0)))))))))))), 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(transpose(mat3(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0)), exp(0.0), 0.0, 1.0), max(vec4(1.0, exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 1.0), vec4(1.0, exp(0.0), 0.0, 1.0)))), float(mat4x3(float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 0.0, 1.0), max(vec4(1.0, exp(0.0), 0.0, 1.0), vec4(1.0, exp(0.0), 0.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0), 0.0, 1.0), mix(vec3((vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0), 0.0, 1.0))[0], (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0), 0.0, 1.0))[1], _GLF_FUZZED(-476.430)), vec3(_GLF_FUZZED((- 7040.9559)), _GLF_FUZZED(4.9), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0), 0.0, 1.0))[2]), bvec3(false, false, true))), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), abs(vec3(1.0, 1.0, 1.0)) * (vec3(1.0, 1.0, 0.0)))), min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 5.3))), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7854.8440)), bool(false)))), bool(true))), 0.0 + (1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(1.0, 1.0, 0.0)), min((vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY((vec3(1.0, 1.0, 0.0)), max((vec3(1.0, 1.0, 0.0)), (vec3(1.0, 1.0, 0.0)))))))), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), max(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0)))))) : _GLF_FUZZED(-221.876)))))), 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), vec2(_GLF_IDENTITY(mat3(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) + vec3(0.0, 0.0, 0.0))))), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) - tan(0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), max(min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) + vec3(0.0, 0.0, 0.0))))), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) - tan(0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) + vec3(0.0, 0.0, 0.0))))), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) - tan(0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED((true ? -0.0 : -3847.3486)))))), 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), max(1.0, 1.0))), transpose(transpose(mat3(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-794.411))), 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(-1.5)), float((0.0)), bool(true))), (0.0))), _GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(-85.05)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (0.0))), ((0.0)) / 1.0)), _GLF_IDENTITY(min(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), clamp(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0))))), 0.0 + (_GLF_IDENTITY(min(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), clamp(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0))))), (false ? _GLF_FUZZED(-61.25) : _GLF_IDENTITY(min(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), clamp(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0))))), mix(float(_GLF_FUZZED(43.25)), float(min(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), clamp(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)), float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)))))), bool(true))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), max(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))) : _GLF_FUZZED(normalize(5.2)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))))), 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(72.47)), bool(false))), 0.0)), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0, 1.0))))))).y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), false)))))))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
