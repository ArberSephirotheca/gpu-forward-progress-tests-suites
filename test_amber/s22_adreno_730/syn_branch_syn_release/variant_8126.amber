#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), (bool(bvec3(_GLF_DEAD(false), false, true))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (! (bool(bvec4(true, false, true, true)))))), bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), false), false)), false, false)))))), true, true, false))) && (_GLF_DEAD(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)), false), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)), false), false, true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)), false), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)), false), false, true))))), true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))) && true), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (true && (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (true && (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (true && (_GLF_DEAD(false))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))) && true)))))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) || false)))), false || (true && (_GLF_DEAD(false))))))) && true)))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(false || (true && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(false || (true && (_GLF_DEAD(false))), ! (! (false || (true && (_GLF_DEAD(false))))))), false || ((_GLF_IDENTITY(false || (true && (_GLF_DEAD(false))), ! (! (false || (true && (_GLF_DEAD(false))))))))) && true)))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))) && true)))), ! (! (bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))) && true)))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))) && true)))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))) && true)))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))) && true)))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), false, false, false)))))) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || _GLF_IDENTITY((true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((true && (_GLF_DEAD(false))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4((true && (_GLF_DEAD(false))), true, true, false))), bool(bvec2(bool(bool(bvec4((true && (_GLF_DEAD(false))), true, true, false))), true)))))))))) && true)))), ! (! (bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))), (((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))))) && true)) || false) && true)))), ! (! (bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || _GLF_IDENTITY((true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2((true && (_GLF_DEAD(false))), false)), true && (bool(bvec2((true && (_GLF_DEAD(false))), false))))))))), _GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))), false, true)), (bool(bvec3(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (_GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false)))))))))), false, true))) && true)) && true)))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) || false), false || (true && (_GLF_DEAD(false))))))) && true)))), ! (! (bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))), false, false, false)))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))), (((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))))) && true)) || false) && true)))), ! (! (bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || _GLF_IDENTITY((true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2((true && (_GLF_DEAD(false))), false)), true && (bool(bvec2((true && (_GLF_DEAD(false))), false))))))))), _GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))), false, true)), (bool(bvec3(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (_GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false)))))))))), false, true))) && true)) && true)))), ! (! (bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) || false), false || (true && (_GLF_DEAD(false))))))) && true)))), ! (! (bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))), false, false, false)))) || false))) || false))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false))), false || (false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(21.49) : injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))))))), false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9356.6712), _GLF_FUZZED((- 9.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.8) : 0.0))), 0.0, determinant(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5002.5329)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9356.6712), _GLF_FUZZED((_GLF_IDENTITY(- 9.3, min(- 9.3, - 9.3))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.4))), 1.0, 1.0)), 1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9356.6712), _GLF_FUZZED((- 9.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0)))), (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9356.6712), _GLF_FUZZED((- 9.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.8) : 0.0))), 0.0, determinant(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5002.5329)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9356.6712), _GLF_FUZZED((_GLF_IDENTITY(- 9.3, min(- 9.3, - 9.3))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.4))), 1.0, 1.0)), 1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9356.6712), _GLF_FUZZED((- 9.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0))))) / vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.7)))) + (injectionSwitch)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || _GLF_IDENTITY(false, ! (! (false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false))))))) && true), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bool(bvec3(_GLF_DEAD(false), false, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)))), (false ? _GLF_FUZZED(vec4(-783.912, 98.58, -2.6, 688.560)) : vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)))))))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u | 0u) ^ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)))), max(_GLF_IDENTITY(subgroup_size, (0u | 0u) ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_size) : subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), (0u | 0u) ^ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)))))), (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))), max(~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), _GLF_IDENTITY((uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u, (true ? _GLF_IDENTITY((uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u, ((uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u) | 0u) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), 0u | (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)))), _GLF_IDENTITY((uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)))) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u, ((uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> (0u | 0u)), 0u)))) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u) >> 0u)))), (uint(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u))))), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(~ ((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ ((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ ((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(~ ((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(~ ((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ ((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ ((uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)))) | 0u) : _GLF_FUZZED(1923u)))), 0u + (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ _GLF_IDENTITY(0u, (0u) | (0u)))) | 0u) : _GLF_FUZZED(1923u))))))), 0u))) - 0u)))) ^ 0u)), clamp(uint(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), clamp(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, 0u | (1u)), 0u, 0u)), _GLF_IDENTITY((uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u), (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u)) | 0u))) ^ (0u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), (1u ^ 1u) + ((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY(uint(uvec2(0u ^ (0u), 0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(uvec2(0u ^ (0u), 0u))))))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))), _GLF_IDENTITY(max((uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u))) ^ (0u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), (1u ^ 1u) + ((_GLF_IDENTITY(0u, 0u ^ (0u))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), 0u + ((0u))), (~ (0u)) ^ 0u))) ^ (0u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), (1u ^ 1u) + ((_GLF_IDENTITY(0u, 0u ^ (0u))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) << 0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u)))), (false ? _GLF_FUZZED(virtual_gid) : max((uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), 0u ^ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))) ^ 0u))) ^ (0u))), 0u + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), (1u ^ 1u) + ((_GLF_IDENTITY(0u, 0u ^ (0u)))))), max((_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), (1u ^ 1u) + ((_GLF_IDENTITY(0u, 0u ^ (0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), (1u ^ 1u) + ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u)), 0u ^ (0u))))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u), (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u)) | (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u))))) ^ (0u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) | 0u))), (1u ^ 1u) + ((_GLF_IDENTITY(0u, 0u ^ (0u))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u))))) | (uvec2(0u, 1u)))))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))))))) - 0u))), (uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))))), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))), (~ ((_GLF_IDENTITY(0u, 0u ^ (0u))))) | (~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))))))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u)))) ^ 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (uint(uvec3(0u, 1u, 0u))) | (uint(uvec3(0u, 1u, 0u))))), 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), 1u, 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u))), (uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))) ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (uint(uvec3(0u, 1u, 0u))) | (uint(uvec3(0u, 1u, 0u))))), 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), 1u, 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u))), (uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))) ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u)))) ^ 0u), (_GLF_IDENTITY(uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (uint(uvec3(0u, 1u, 0u))) | (uint(uvec3(0u, 1u, 0u))))), 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), 1u, 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u))), (uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))) ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u)))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (uint(uvec3(0u, 1u, 0u))) | (uint(uvec3(0u, 1u, 0u))))), 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), 1u, 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u))), (uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))) ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u)))) ^ 0u), min(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (uint(uvec3(0u, 1u, 0u))) | (uint(uvec3(0u, 1u, 0u))))), 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), 1u, 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u))), (uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))) ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u)))) ^ 0u), _GLF_IDENTITY(uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), (uint(uvec3(0u, 1u, 0u))) | (uint(uvec3(0u, 1u, 0u))))), 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), 1u, 0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u))), (uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), ~ (~ (uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))) ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((_GLF_IDENTITY(0u, 0u ^ (0u)))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u)))) ^ 0u)))))) * 1u)), uint(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ _GLF_IDENTITY((uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), ~ (~ ((uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)))))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size))) / 1u)) >> 0u), 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)))) | 0u) : _GLF_FUZZED(1923u))), 0u))) - 0u))), (uint(min(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) | (0u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x2(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 1.0, 0.0)))))).x)) | (0u))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u), ~ (~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)), ((uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u))) ^ uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) | ((0u))))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u)), 0u | (_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) | ((0u))))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u)), _GLF_IDENTITY((uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) | ((0u))))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u))), ((uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u + ((_GLF_IDENTITY(0u, 0u ^ (0u))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) | ((0u))))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u)) ^ 0u)) | 0u) : _GLF_FUZZED(1923u))), 0u)))) + 0u) ^ 0u)))) - 0u)))) ^ 0u))))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) | (uint(subgroup_local_id))), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))))) + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((true ? subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(workgroup_size)), min((true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY((true ? subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(workgroup_size)), clamp((true ? subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(workgroup_size)), (true ? subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(workgroup_size)), (true ? subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(workgroup_size)))))), max(_GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)), min(_GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)), ((true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size))) + 0u), (true ? subgroup_local_id + 1 : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) / 1u)))), _GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)), min((true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)), (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)))))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)), (_GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)), (true ? (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)) : _GLF_FUZZED(virtual_gid)))) ^ 0u))) % subgroup_size)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-64827) : _GLF_IDENTITY(1, max(1, 1))))) / 1), (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-64827) : _GLF_IDENTITY(1, max(1, 1))))) / 1), (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size)))) % subgroup_size)) / 1u)))) << (0u | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0))), 0.0), max(vec2(_GLF_IDENTITY(0.0, (0.0) - determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0)), 0.0, 0.0))))))))), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0))), 0.0), (true ? vec2(_GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0))), 0.0) : _GLF_FUZZED(vec2(-3.7, 4.7)))))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.4), _GLF_FUZZED(-7825.9967)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))])), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], min((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), mix(vec2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))[0], (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(571.540), _GLF_FUZZED(83.27)), bvec2(false, false)))).x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) + 0.0))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), mix(vec2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))[0], (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(571.540), _GLF_FUZZED(83.27)), bvec2(false, false)))).x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) + 0.0))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), mix(vec2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))[0], (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(571.540), _GLF_FUZZED(83.27)), bvec2(false, false)))).x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) + 0.0))))), true, false)))) || false))) || false)), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (((injectionSwitch.x > injectionSwitch.y)))))))) || false)))))), true, false, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))))), true, false, false))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))) && true)), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))) && true))))) && true))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))) && true)))), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(tan(vec2(0.0, 0.0)))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))) && true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((! (((injectionSwitch.x > injectionSwitch.y))))))))))))))), true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))) && true)))), false)))))))) && true)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.60, 0.1)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-98.90)), vec2(_GLF_FUZZED((_GLF_IDENTITY(float(86091), max(float(86091), float(86091))) / 9787.3264)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-554.090, (-554.090) / 1.0), -863.132))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(-554.090, -863.132)))) * mat2(1.0))))[_GLF_IDENTITY(1, min(1, 1))]), bvec2(false, true))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.60, 0.1)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-98.90)), vec2(_GLF_FUZZED((_GLF_IDENTITY(float(86091), max(float(86091), float(86091))) / 9787.3264)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-554.090, (-554.090) / 1.0), -863.132))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(-554.090, -863.132)))) * mat2(1.0))))[_GLF_IDENTITY(1, min(1, 1))]), bvec2(false, true))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.60, 0.1)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-98.90)), vec2(_GLF_FUZZED((_GLF_IDENTITY(float(86091), max(float(86091), float(86091))) / 9787.3264)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-554.090, (-554.090) / 1.0), -863.132))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(-554.090, -863.132)))) * mat2(1.0))))[_GLF_IDENTITY(1, min(1, 1))]), bvec2(false, true))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-89.60, 0.1), (_GLF_IDENTITY(vec2(-89.60, 0.1), max(vec2(-89.60, 0.1), vec2(-89.60, 0.1)))) / vec2(1.0, 1.0))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-98.90)), vec2(_GLF_FUZZED((_GLF_IDENTITY(float(86091), _GLF_IDENTITY(max(float(86091), float(86091)), min(_GLF_IDENTITY(max(float(86091), float(86091)), mix(float(max(float(86091), float(86091))), float(_GLF_FUZZED(-94.20)), bool(false))), max(float(86091), float(86091))))) / 9787.3264)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-554.090, (_GLF_IDENTITY(-554.090, mix(float(_GLF_FUZZED(-88.93)), float(-554.090), bool(true)))) / 1.0), -863.132))), ((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-554.090, -863.132)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-554.090, -863.132))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) * mat2(1.0))))[_GLF_IDENTITY(1, min(1, 1))]), bvec2(false, true))).x > injectionSwitch.y) && true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(93.72)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))) ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (6530u & 0u)))))], uint(2), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-91.47)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(-6.6, clamp(_GLF_IDENTITY(-6.6, float(vec2(-6.6, 1.0))), -6.6, -6.6))))), injectionSwitch.y), _GLF_IDENTITY(1.0 * (max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false)), max(mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false)), _GLF_IDENTITY(mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false)), max(mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false)), mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false))))))))), bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y))))))), clamp(1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-91.47)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), float(mat3x4(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0))), bool(true))) : _GLF_FUZZED(-6.6))), injectionSwitch.y), _GLF_IDENTITY(1.0 * (max(injectionSwitch.y, injectionSwitch.y)), mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false))))), bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) || (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), false))))))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-91.47)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))) : _GLF_FUZZED(-6.6))), injectionSwitch.y), _GLF_IDENTITY(1.0 * (max(injectionSwitch.y, injectionSwitch.y)), mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false))))), bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-91.47)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.0), max(_GLF_FUZZED(-0.0), _GLF_FUZZED(-0.0)))), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))) : _GLF_FUZZED(-6.6))), injectionSwitch.y), _GLF_IDENTITY(1.0 * (max(injectionSwitch.y, injectionSwitch.y)), mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(-63.63, mix(float(_GLF_FUZZED(-4.7)), float(-63.63), bool(true))))), bool(false))))), bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))))))))))), (1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, sin(sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-91.47)), float(float(float(_GLF_FUZZED(-91.47))))), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true))) : _GLF_FUZZED(-6.6))), injectionSwitch.y), _GLF_IDENTITY(1.0 * (max(injectionSwitch.y, injectionSwitch.y)), mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false))))), bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))))))) - 0.0))), 1.0 * (1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-91.47)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(352.692) : injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0 + (injectionSwitch.y))), bool(true))) : _GLF_FUZZED(-6.6))), injectionSwitch.y), _GLF_IDENTITY(1.0 * (max(injectionSwitch.y, injectionSwitch.y)), mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), float(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-91.47)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(352.692) : injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0 + (injectionSwitch.y))), bool(true))) : _GLF_FUZZED(-6.6))), injectionSwitch.y), _GLF_IDENTITY(1.0 * (max(injectionSwitch.y, injectionSwitch.y)), mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), mix(float(_GLF_FUZZED(9.1)), float(float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-91.47)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(352.692) : injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0 + (injectionSwitch.y))), bool(true))) : _GLF_FUZZED(-6.6))), injectionSwitch.y), _GLF_IDENTITY(1.0 * (max(injectionSwitch.y, injectionSwitch.y)), mix(float(1.0 * (max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-63.63)), bool(false))))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, true)))))), bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bool((false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bool((false))))), ! (! (! (! _GLF_IDENTITY((false), bool(bool((false)))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bool((false))))), ! (! (! (! _GLF_IDENTITY((false), bool(bool((false)))))))), true, false), true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 1.0, 0.0, sin(0.0), 1.0, 0.0, sin(0.0)))), vec2(_GLF_IDENTITY(mat4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), 1.0, 0.0, 0.0, exp(0.0), 1.0))), 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0), mat4(1.0) * (mat4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 0.0, 1.0, exp(0.0), 0.0, 1.0)), max(float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 0.0, 1.0, exp(0.0), 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 0.0, 1.0, exp(0.0), 0.0, 1.0))))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)))))).x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), true)), true && (bool(bvec2(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
