#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(-4.5) : injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), min(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u), (subgroup_id))) | (subgroup_id)) * subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))), 1u))))) | (1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))))) * subgroup_size) / _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))) | (1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))) | (_GLF_IDENTITY(1u, max(1u, 1u))), uint(uvec4((_GLF_IDENTITY(1u, max(1u, 1u))) | (1u), 1u, 0u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))) | (1u), uint(uvec4((_GLF_IDENTITY(1u, max(1u, 1u))) | (1u), 1u, 0u, 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), max(1u, 1u))) | (1u), uint(uvec4((_GLF_IDENTITY(1u, max(1u, 1u))) | _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))) - 0u), 1u, 0u, 1u)))))))))) - (_GLF_IDENTITY(126693u, (false ? _GLF_FUZZED(workgroup_id) : 126693u)) & 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), min(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) + (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), (_GLF_IDENTITY((subgroup_id) | (subgroup_id), max((subgroup_id) | (subgroup_id), (subgroup_id) | (subgroup_id)))) | 0u)) * subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), (subgroup_id) | (subgroup_id)) * subgroup_size) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) << 0u)))) - 0u)) | (1u)), max(1u, 1u))) | (1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), (! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), false || ((! _GLF_IDENTITY((false), ((false)) || false)))), ! (! ((! (false)))))) && true), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, (1u) | (1u)))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(1u, (1u) | (1u))))), (~ ((~ (_GLF_IDENTITY(1u, (1u) | (1u)))))) << 0u))), max(~ (~ (1u)), ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(clamp((~ (1u)), (~ (1u)), _GLF_IDENTITY((~ (1u)), min((~ (1u)), (~ (1u))))), (_GLF_IDENTITY(clamp((~ (1u)), (~ (1u)), _GLF_IDENTITY((~ (1u)), min((~ (1u)), (~ (1u))))), 0u ^ (clamp((~ (1u)), (~ (1u)), _GLF_IDENTITY((~ (1u)), min((~ (1u)), (~ (1u)))))))) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(146241u) : _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) >> 0u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((1u | _GLF_IDENTITY(1u, uint(uvec4(1u, (1u | 1u), 1u, 0u)))), ((1u | _GLF_IDENTITY(1u, uint(uvec4(1u, (1u | 1u), 1u, 0u))))) ^ 0u)))) + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u)) / 1u))), 1u, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u)) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)))))), min((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u)) | 1u), ((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY((~ (~ (1u))) | 0u, ((~ (~ (1u))) | 0u) | 0u)))))) ^ 0u, min((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), ~ (~ (~ (~ (1u))))))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u)) | 1u)) >> 0u)))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))), ((_GLF_IDENTITY(1u, ~ (~ (1u))))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) / 1u)))) ^ 0u)), min((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u)) | 1u), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) | 0u))))) ^ 0u, min((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), ~ (~ (~ (~ (1u))))))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) | 0u))))) ^ 0u, min((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), ~ (~ (~ (~ (1u))))))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u)), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) | 0u))))) ^ 0u, min((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), ~ (~ (~ (~ (1u))))))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u))))))) | 1u)) >> _GLF_IDENTITY(0u, 1u * (0u)))))), _GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)), min((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)), min((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)), min((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)), min((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u)), min((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) - 0u)))))) | 1u), ((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) | 0u)))), uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) | 0u)))), 0u)))) ^ 0u, min((_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), ~ (~ (~ (~ (1u))))))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u) - 0u)))) - 0u)) | 1u)) >> 0u)))))) + _GLF_IDENTITY(1, 0 | (1))), max(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))), ((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))) ^ 0u))) * 1u), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), ~ (~ (subgroup_local_id)))) >> 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((workgroup_size --)) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_size --)) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u ^ (false ? _GLF_FUZZED((workgroup_size --)) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))))) - 0u))), uint(uvec4(_GLF_IDENTITY(~ (~ (subgroup_local_id)), clamp(_GLF_IDENTITY(~ (~ (subgroup_local_id)), 0u ^ (~ (~ (subgroup_local_id)))), ~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id)))), 1u, 1u, 0u)))), 0u + ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((workgroup_size --)) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))), uint(_GLF_IDENTITY(uvec4(~ (~ (subgroup_local_id)), 1u, 1u, 0u), (uvec4(~ (~ (subgroup_local_id)), 1u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u))))))) / (0u ^ 1u))))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), uint(0u))))), 1u * ((0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), uint(0u))))))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) | 1u)))) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-77582)))))), max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) << 0), (false ? _GLF_FUZZED(81682) : _GLF_IDENTITY(~ (1), (~ (1)) << 0))), _GLF_IDENTITY(~ (1), (~ (1)) << 0))))), (true ? _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), min((_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)) - 0)), (~ (1)))) << 0))) : _GLF_FUZZED(43393)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) | ((1))), _GLF_IDENTITY((~ (1)), _GLF_IDENTITY(((~ (1))) >> 0, clamp(_GLF_IDENTITY(((~ (1))) >> 0, (((~ (1))) >> 0) / 1), _GLF_IDENTITY(((~ (1))) >> 0, (false ? _GLF_FUZZED((- -22826)) : ((~ (1))) >> 0)), ((~ (1))) >> 0))) << 0)))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0))))))))), (subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6672.7422)), vec2(_GLF_FUZZED(423.942), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(false, true)), min(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6672.7422)), vec2(_GLF_FUZZED(423.942), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6672.7422)), vec2(_GLF_FUZZED(423.942), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(false, true))))).y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)], uint(1), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) ^ 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id % 2), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id % 2), (~ (subgroup_local_id % 2)) - 0u)), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) % 2), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) % 2), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) % 2))))) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), uint(uvec3((~ (subgroup_local_id % 2)), 0u, 1u)))) | (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))), ~ (~ ((~ (subgroup_local_id % 2))))))) >> 0u, (true ? _GLF_IDENTITY((~ (subgroup_local_id % 2)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id % 2), clamp(_GLF_IDENTITY(~ (subgroup_local_id % 2), (~ (subgroup_local_id % 2)) | (~ (subgroup_local_id % 2))), ~ (subgroup_local_id % 2), ~ (subgroup_local_id % 2)))), uint(uvec3((~ (subgroup_local_id % 2)), 0u, 1u)))) | (_GLF_IDENTITY((~ (subgroup_local_id % 2)), ~ (~ ((~ (subgroup_local_id % 2)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id % 2), clamp(_GLF_IDENTITY(~ (subgroup_local_id % 2), (~ (subgroup_local_id % 2)) | (~ (subgroup_local_id % 2))), ~ (subgroup_local_id % 2), ~ (subgroup_local_id % 2)))), uint(uvec3((~ (subgroup_local_id % 2)), 0u, 1u)))) | (_GLF_IDENTITY((~ (subgroup_local_id % 2)), ~ (~ ((~ (subgroup_local_id % 2))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id % 2), clamp(_GLF_IDENTITY(~ (subgroup_local_id % 2), (~ (subgroup_local_id % 2)) | (~ (subgroup_local_id % 2))), ~ (subgroup_local_id % 2), ~ (subgroup_local_id % 2)))), uint(uvec3((~ (subgroup_local_id % 2)), 0u, 1u)))) | (_GLF_IDENTITY((~ (subgroup_local_id % 2)), ~ (~ ((~ (subgroup_local_id % 2))))))))) >> 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id % 2), _GLF_IDENTITY((~ (subgroup_local_id % 2)), (_GLF_IDENTITY((~ (subgroup_local_id % 2)), uint(uvec3((~ (subgroup_local_id % 2)), 0u, 1u)))) | _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_local_id % 2)), ~ (~ ((~ (subgroup_local_id % 2)))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_local_id % 2)), ~ (~ ((~ (subgroup_local_id % 2)))))), max((_GLF_IDENTITY((~ (subgroup_local_id % 2)), ~ (~ ((~ (subgroup_local_id % 2)))))), (_GLF_IDENTITY((~ (subgroup_local_id % 2)), ~ (~ ((~ (subgroup_local_id % 2))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), ((_GLF_IDENTITY(~ (subgroup_local_id % 2), _GLF_IDENTITY((~ (subgroup_local_id % 2)), (_GLF_IDENTITY((~ (subgroup_local_id % 2)), uint(uvec3((~ (subgroup_local_id % 2)), 0u, 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id % 2), (~ (subgroup_local_id % 2)) | (~ (subgroup_local_id % 2)))), ~ (~ ((~ (subgroup_local_id % 2))))))) >> 0u))) * 1u)) << 0u)), (subgroup_local_id % 2) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (0u) << 0u))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (true ? (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0 : _GLF_FUZZED(-3.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0))), float(_GLF_FUZZED(float(21195u))), bool(false)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (true ? (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0 : _GLF_FUZZED(-3.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0))), float(_GLF_FUZZED(float(21195u))), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (true ? (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0 : _GLF_FUZZED(-3.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0))), float(_GLF_FUZZED(float(21195u))), bool(false)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (true ? (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0 : _GLF_FUZZED(-3.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0))), float(_GLF_FUZZED(float(21195u))), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (true ? (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0 : _GLF_FUZZED(-3.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0))), float(_GLF_FUZZED(float(21195u))), bool(false))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u + _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)), ((atomicLoad(buf[virtual_gid], 4, 64, 2))) | 0u));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(99540) : 64)), 2), 0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid))), (virtual_gid), (virtual_gid))) / 1u)], _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (int(4))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) ^ 0, _GLF_IDENTITY(int(_GLF_IDENTITY(int((int(4)) ^ 0), (int((int(4)) ^ 0)) / 1)), (int(_GLF_IDENTITY(int((int(4)) ^ 0), (int((int(4)) ^ 0)) / 1))) ^ 0))), 0)), (int(ivec2(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) | (4)))) ^ 0), _GLF_IDENTITY(0, max(0, 0))))) / 1)))), 64, 2))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, clamp(2, 2, 2))))), ~ (~ (_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 0))), 0 | (2)), clamp(2, 2, 2)))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 0))), 0 | (_GLF_IDENTITY(2, (false ? _GLF_FUZZED((+ -22687)) : _GLF_IDENTITY(2, int(ivec3(2, 0, 0))))))), clamp(2, 2, 2)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 0))), 0 | (2)), clamp(2, 2, 2))))))))))), 0u ^ (atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], uint(_GLF_IDENTITY(uint(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)]), ~ (~ (uint(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)])))))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) >> 0)) ^ 0), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) ^ 0)))), 0), (ivec2(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec4(int(4), 1, 1, 1)), 0 ^ (int(ivec4(int(4), 1, 1, 1)))))) ^ 0), 0)) >> ivec2(0, 0))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - (1 ^ 1)), _GLF_IDENTITY((int(4)) ^ 0, ((int(4)) ^ 0) | 0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-75457) : _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), clamp(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), clamp(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5)))))))))))) ^ 0)), ((false ? _GLF_FUZZED(-75457) : _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), clamp(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), clamp(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5)))))))))))) ^ 0))) | ((false ? _GLF_FUZZED(-75457) : _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), clamp(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), clamp(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5))))))), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5)))))))))))) ^ 0))))), _GLF_IDENTITY(int(4), (int(4)) ^ 0)), (min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), (false ? _GLF_FUZZED(-75457) : _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), int(5)))))))) ^ 0))), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), int(ivec4(_GLF_IDENTITY(int(4), (int(4)) ^ (0 | 0)), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0))) ^ 0)), _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 | (0)), 0)))), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), int(int(~ (0))))), (~ (_GLF_IDENTITY(~ (0), int(int(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0 | 0) ^ (0)))), 0 + (int(int(_GLF_IDENTITY(0, (0 | 0) ^ (0))))))))))))) * 1))), (false ? _GLF_FUZZED(-75457) : _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5)))))))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (int(4)) ^ 0))), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), (_GLF_IDENTITY(int(4), (int(4)) ^ 0)) - 0), _GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(int(4), (int(4)) ^ 0))), (false ? _GLF_FUZZED(-75457) : _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 1 * (int(5)))))))))) ^ 0, int(ivec3((int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(5), int(5)))))))) ^ 0, 0, 1)))))), _GLF_IDENTITY(int(4), (int(4)) ^ 0))), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), min(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(int(4), (int(4)) ^ 0))), _GLF_IDENTITY(int(4), (int(4)) ^ 0))), (false ? _GLF_FUZZED(-75457) : _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (0 >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((4) | (0 >> _GLF_IDENTITY(int(5), int(5))), clamp((4) | (0 >> _GLF_IDENTITY(int(5), int(5))), (4) | (0 >> _GLF_IDENTITY(int(5), int(5))), (4) | (0 >> _GLF_IDENTITY(int(5), int(5)))))) - 0)))), min(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (0 >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((4) | (0 >> _GLF_IDENTITY(int(5), int(5))), clamp((4) | (0 >> _GLF_IDENTITY(int(5), int(5))), (4) | (0 >> _GLF_IDENTITY(int(5), int(5))), (4) | (0 >> _GLF_IDENTITY(int(5), int(5)))))) - 0)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (0 >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((4) | (0 >> _GLF_IDENTITY(int(5), int(5))), clamp((4) | (0 >> _GLF_IDENTITY(int(5), int(5))), (4) | (0 >> _GLF_IDENTITY(int(5), int(5))), (4) | (0 >> _GLF_IDENTITY(int(5), int(5)))))) - 0)))))))) ^ 0))), _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ~ (~ (4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (~ (ivec3(_GLF_IDENTITY(4, ~ (~ (4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))))) ^ 0))), 0))), ivec2(ivec3(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), (int(4)) ^ _GLF_IDENTITY(0, (0) | (0))), (false ? _GLF_FUZZED(-75457) : _GLF_IDENTITY(int(4), (int(4)) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), (false ? _GLF_FUZZED(97908) : _GLF_IDENTITY(int(4), (int(4)) ^ 0))))), 0), 0))))) / 1)))), 64, 2)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED((88.50 / -5.4))), bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0, 1.0)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED((88.50 / -5.4))), bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0, 1.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED((88.50 / -5.4))), bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.0) : 0.0)), 0.0, 1.0)))) / 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && true))))) || false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, min(read, read)), read, _GLF_IDENTITY(read, (read) - 0u))), read, _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(read, clamp(read, read, read)), max(_GLF_IDENTITY(read, clamp(read, read, read)), _GLF_IDENTITY(read, clamp(read, read, read))))) | (read)), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + sin(0.0), ((injectionSwitch.y) + sin(0.0)) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-545.720)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y))) - 0.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(mix(-90.07, 7.4, 430.171)))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + sin(0.0), ((injectionSwitch.y) + sin(0.0)) / 1.0)), mix(float(_GLF_FUZZED(8080.1445)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + sin(0.0), ((injectionSwitch.y) + sin(0.0)) / 1.0))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y)), injectionSwitch.y))) - _GLF_IDENTITY(0.0, (0.0) + 0.0))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-865.684))) : _GLF_FUZZED(-59.16)))) + sin(0.0), (_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(5.1)), float(_GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + sin(0.0)) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), true && _GLF_IDENTITY(((! (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(false), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(false), false), false)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(false), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(false), false), false)), false, true)))))))))))))), (_GLF_IDENTITY(((! (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(false), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(false), false), false)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(false), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(false), false), false)), false, true)))))))))))))), false || (((! (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(false), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(false), false), false)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(false), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(false), false), false)), false, true))))))))))))))))) || false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))) && true)) && true)), ! (! (! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), true && (bool(false))))))) && true)) && true)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec4(! (! (bool(bool(false)))), false, false, false)))), true && ((! (! (bool(bool(false))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))) && true)) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec4(! (! (bool(bool(false)))), false, false, false)))), true && ((! (! (bool(bool(false)))))))))), (! ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))) && true)) && true))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec4(! (! (bool(bool(false)))), false, false, false)))), true && ((! (! (bool(bool(false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec4(! (! (bool(bool(false)))), false, false, false)))), true && ((_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(! (! (bool(bool(false)))), (_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec4(! (! (bool(bool(false)))), false, false, false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))) && true)) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec4(! (! (bool(bool(false)))), false, false, false)))), true && ((! (! (bool(bool(false)))))))))), ! (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false)))))), (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))) && true)) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec4(! (! (bool(bool(false)))), false, false, false)))), true && ((! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false)))))))))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))) && true)) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec4(! (! (bool(bool(false)))), false, false, false)))), true && ((! (! (bool(bool(false)))))))))), bool(bool(! ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (! ((bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))) && true)) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(false)))), bool(bvec4(! (! (bool(bool(false)))), false, false, false)))), true && ((! (! (bool(bool(false))))))))))))), true))))))))), false)))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
