#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 bool _f0;
 vec2 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 ivec3 _f1;
 uvec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 mat3 _f1;
 uint subgroup_local_id;
 ivec3 _f2;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 vec3 _f1;
 mat4x2 _f2;
 mat2x4 _f3;
 uvec3 _f4;
 _GLF_struct_4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-4.3)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, (0 << _GLF_IDENTITY(int(3), int(3))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? int(ivec3(0, (0 << _GLF_IDENTITY(int(3), int(3))), int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(int(23506u)))))], injectionSwitch[1])))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(862.083)), (true ? vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(862.083)) : _GLF_FUZZED(vec2(-539.646, 12.67)))), bvec2(false, false))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-4.3)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, (0 << _GLF_IDENTITY(int(3), int(3))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? int(ivec3(0, (0 << _GLF_IDENTITY(int(3), int(3))), int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(int(23506u)))))], injectionSwitch[1])))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(862.083)), (true ? vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(862.083)) : _GLF_FUZZED(vec2(-539.646, 12.67)))), bvec2(false, false))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-4.3)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, (0 << _GLF_IDENTITY(int(3), int(3))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? int(ivec3(0, (0 << _GLF_IDENTITY(int(3), int(3))), int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(int(23506u)))))], injectionSwitch[1])))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(862.083)), (true ? vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(862.083)) : _GLF_FUZZED(vec2(-539.646, 12.67)))), bvec2(false, false))).y), false, false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true && (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), 0.0, 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), 0.0, 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), 0.0, 0.0, 0.0, abs(0.0), sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false || (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_2(mat3(1.0), _GLF_struct_0(mat4(1.0), mat3(1.0), gl_SubgroupInvocationID, ivec3(_GLF_IDENTITY(1, (1) - 0))), _GLF_struct_1(ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) + (ivec3(1))), 1)), clamp(ivec3(ivec4(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(1, (1) << 0)))), 1)), _GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) + (ivec3(1))), 1)), ivec3(0, 0, 0) | (ivec3(ivec4(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) + (ivec3(1))), 1)))), _GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))), 1)), ivec3(0, 0, 0) ^ (ivec3(ivec4(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(ivec4(ivec3(1), 1)), (ivec3(ivec4(ivec3(1), 1))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(ivec4(ivec3(1), 1)), (ivec3(ivec4(ivec3(1), 1))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))) | (ivec3(ivec4(ivec3(1), 1))))), uvec3(1u), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(_GLF_IDENTITY(max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + _GLF_IDENTITY((1.0), 1.0 * ((1.0))), 0.0 + (1.0), 0.0 + (1.0)))), (_GLF_IDENTITY(clamp(0.0 + (1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-32.60) : 0.0)) + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) + _GLF_IDENTITY((1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), mix(float(_GLF_FUZZED(-37.09)), float(_GLF_IDENTITY(float(float(1.0)), min(float(float(1.0)), float(float(1.0))))), bool(true)))) * ((1.0))), 0.0 + (1.0), 0.0 + _GLF_IDENTITY((1.0), 1.0 * ((1.0))))))) + 0.0))), min(_GLF_IDENTITY(max(0.0 + (1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), max(0.0 + (1.0), 0.0 + (1.0))))), sqrt(0.0)), min(vec2(_GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), max(0.0 + (1.0), 0.0 + (1.0))))), sqrt(0.0)), vec2(_GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), max(0.0 + (1.0), 0.0 + (1.0))))), sqrt(0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0)) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0)) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))), (float(float(_GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0)) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))))))) / 1.0)))), clamp(_GLF_IDENTITY(max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(4.8)) : 0.0))) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))))) + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), (false ? _GLF_FUZZED((0.7 - -385.326)) : 0.0 + (1.0)))))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0))) + (1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) * 1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, 0.0), (mat2(0.0, 1.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), 0.0)) + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))), 1.0 * (max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(0.0 + _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), min((1.0), (1.0))), (1.0))))), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))))), max(0.0 + (1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), 1.0 * (0.0 + (1.0))), _GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))))), max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), max(0.0 + (1.0), 0.0 + (1.0)))), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))), max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + _GLF_IDENTITY((1.0), ((1.0)) / 1.0), 0.0 + (1.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (clamp(0.0 + _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat4x2((1.0), sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2((1.0), sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0 + (1.0), 0.0 + (1.0)))))))), max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))))), (_GLF_IDENTITY(max(0.0 + (1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), mix(float(0.0 + (1.0)), float(_GLF_FUZZED((-6.3 - -9798.4925))), bool(false))), _GLF_IDENTITY(clamp(0.0 + _GLF_IDENTITY((1.0), 0.0 + ((1.0))), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + _GLF_IDENTITY((1.0), 1.0 * ((1.0))), 0.0 + (1.0), _GLF_IDENTITY(0.0, cos(sqrt(0.0)) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (1.0)))))), min(_GLF_IDENTITY(max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(96.05)), bool(false)))) - 0.0) + _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-45.36)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - log(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(mat4((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), log(1.0), 0.0, log(1.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0))))) * 1.0)) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))), clamp(_GLF_IDENTITY(max(0.0 + _GLF_IDENTITY((1.0), ((1.0)) - 0.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(0.0 + (1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(vec3(2068.9488, 833.748, -247.642).r)), bool(false))))) + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))), 1.0 * (max(0.0 + (1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) / 1.0), 0.0 + (1.0))), _GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + _GLF_IDENTITY((1.0), min((1.0), (1.0))), 0.0 + (1.0), 0.0 + (1.0)))))))), float(mat2(_GLF_IDENTITY(max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(0.0 + (1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(vec3(2068.9488, 833.748, -247.642).r)), bool(false))))) + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))), 1.0 * (max(0.0 + (1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), (0.0 + (1.0)) / 1.0), 0.0 + (1.0))), _GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + _GLF_IDENTITY((1.0), min((1.0), (1.0))), 0.0 + (1.0), 0.0 + (1.0)))))))), 1.0, 1.0, 0.0))), max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0 + (1.0), mix(float(0.0 + (1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-725.912)), min(float(_GLF_FUZZED(-725.912)), float(_GLF_FUZZED(-725.912)))), bool(false))), _GLF_IDENTITY(0.0 + (1.0), (true ? 0.0 + (1.0) : _GLF_FUZZED(vec2(-0.4, 6.1)[1]))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(746.108, 9663.8966).r)), bool(_GLF_IDENTITY(false, true && (false))))) + (1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))))), max(0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-64.55) : 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0 + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true)))))), 0.0 + (1.0), 0.0 + (1.0)), mix(float(clamp(0.0 + (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true)))))), 0.0 + (1.0), 0.0 + (1.0))), float(_GLF_FUZZED(884.395)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0 + (1.0), 0.0 + (1.0)))))), max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(0.0 + (1.0), 0.0 + _GLF_IDENTITY((1.0), ((1.0)) / 1.0), 0.0 + (1.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(step(-59.97, smoothstep(457.377, 388.170, 10.80)))))) + (clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0)))))))), max(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (1.0), clamp(_GLF_IDENTITY(0.0 + (1.0), (true ? _GLF_IDENTITY(0.0 + (1.0), min(0.0 + (1.0), 0.0 + (1.0))) : _GLF_FUZZED(-80.41))), 0.0 + (1.0), 0.0 + (1.0))), clamp(0.0 + (1.0), 0.0 + (1.0), 0.0 + (1.0))), 0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), mix(float(0.0 + (1.0)), float(_GLF_FUZZED(-3.1)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x) + (clamp(0.0 + (1.0), 0.0 + (1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, length(0.0), determinant(mat3(length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY((float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), determinant(mat3(length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0))) - 0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.7) : _GLF_IDENTITY((float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), determinant(mat3(length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0))) - 0.0, clamp((float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), determinant(mat3(length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0))) - 0.0, _GLF_IDENTITY((float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), determinant(mat3(length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0))) - 0.0, mix(float(_GLF_FUZZED(7.1)), float((float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), determinant(mat3(length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0))) - 0.0), bool(true))), _GLF_IDENTITY((float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), determinant(mat3(length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0))) - 0.0, min((float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), determinant(mat3(length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0))) - 0.0, (float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), determinant(mat3(length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0))) - 0.0)))))))) + (1.0))))))))) / 1.0))))), mat3x4(1.0)), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat4x2(1.0), mat2x4(1.0), uvec3(1u), _GLF_struct_4(_GLF_struct_3(true, _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), vec2(1.0))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), false, true))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), false, true))))), false, true, false)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))), false, true))))), false, true, false))))))))))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false)))), ! (! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)))))))), false || (false))) && true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false)))), ! (! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! ((false))))) && true)))))))), false || (false))) && true)))))), true, false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), false, _GLF_IDENTITY(false, ! (! (false))))))))))), false || _GLF_IDENTITY((false), ((false)) || false))) && true)))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, true, false))))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)))), true, _GLF_IDENTITY(false, ! (! (false))))), false)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && true)))))))), false || (false))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))) && true))))), false || (false))) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), bool(bvec3(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), false, false)))))) && true)), ! (! ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), bool(bvec3(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), false, false)))))) && true))))))))))), false || (false))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false || (false))) && true)))), true, false)), false))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u)))) / uvec3(1u, 1u, 1u))) + uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uint(0u)))))) - 0u), 0u))), ~ (gl_WorkGroupID))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)) ^ (gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), (workgroup_base + subgroup_base) - 0u)) | (workgroup_base + subgroup_base)) + _GLF_struct_replacement_5._f0._f1.subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base + (_GLF_IDENTITY((_GLF_struct_replacement_5._f0._f1.subgroup_local_id + 1), ((_GLF_struct_replacement_5._f0._f1.subgroup_local_id + 1)) / 1u) % subgroup_size), min(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) - 0u) + ((_GLF_struct_replacement_5._f0._f1.subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + ((_GLF_struct_replacement_5._f0._f1.subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + ((_GLF_struct_replacement_5._f0._f1.subgroup_local_id + 1) % subgroup_size), min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + ((_GLF_struct_replacement_5._f0._f1.subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + ((_GLF_struct_replacement_5._f0._f1.subgroup_local_id + 1) % subgroup_size)))) / 1u), _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base + ((_GLF_struct_replacement_5._f0._f1.subgroup_local_id + 1) % subgroup_size), 1u, 0u, 1u)), 0u ^ (uint(uvec4(workgroup_base + subgroup_base + ((_GLF_struct_replacement_5._f0._f1.subgroup_local_id + 1) % subgroup_size), 1u, 0u, 1u)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false)))))))), bool(bvec3(_GLF_DEAD(false), false, true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))))
  return;
 uint read = 0;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), (uvec4(uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)) | uvec4(0u, 0u, 0u, 0u))), (uvec2(_GLF_IDENTITY(uvec4(uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), (uvec4(uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)) | uvec4(0u, 0u, 0u, 0u)))) << (uvec2(0u, 0u) & uvec2(128143u, 88394u)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (_GLF_IDENTITY(1u, (1u) / 1u)) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) << 0u), 1u))))), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (_GLF_IDENTITY(1u, (1u) / 1u)) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) << 0u), 1u))))), (uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (_GLF_IDENTITY(1u, (1u) / 1u)) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) << 0u), 1u)))))) + (uvec2(1u, 1u) ^ uvec2(1u, 1u))))))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) + 0u)), 1u))))))), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), 1u, 0u))))))), 0u | ((~ (_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), uint(uvec3(uint(uint(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))), 1u, 1u)))), 1u)), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u)))) << 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))))))))))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u))))), 0u | (~ (~ (_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), ((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))), max(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))), uint(1u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 1u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), max(uvec3(uint(1), 1u, 1u), uvec3(uint(1), 1u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), max(uvec3(uint(1), 1u, 1u), uvec3(uint(1), 1u, 1u)))))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), max(uvec3(uint(1), 1u, 1u), uvec3(uint(1), 1u, 1u))))), 0u ^ (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), max(uvec3(uint(1), 1u, 1u), uvec3(uint(1), 1u, 1u))))))))))), uint(uvec2(uint(1), 1u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), _GLF_IDENTITY(max(uvec3(uint(1), 1u, 1u), uvec3(uint(1), 1u, 1u)), (true ? max(uvec3(uint(1), 1u, 1u), uvec3(uint(1), 1u, 1u)) : _GLF_FUZZED(uvec3(53956u, 48295u, 121398u))))))))), uint(uvec2(uint(1), 1u))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), max(uvec3(uint(1), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | (_GLF_IDENTITY(1u, max(1u, 1u)))), 1u), uvec3(uint(1), 1u, 1u))))))), uint(uvec2(uint(1), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), max(uvec3(uint(1), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | (_GLF_IDENTITY(1u, max(1u, 1u)))), 1u), uvec3(uint(1), 1u, 1u))))))), uint(uvec2(uint(1), 1u)))) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), max(uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), 1u, 1u), uvec3(uint(1), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))))))), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58543) : 1)), 0, 1, ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58543) : 1)), 0, 1, ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3)))))) | (int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58543) : 1)), 0, 1, ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3))))))))), 1u), uvec2(0u, 0u) ^ (uvec2(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58543) : 1)), 0, 1, ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58543) : 1)), 0, 1, ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3)))))) | (int(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58543) : 1)), 0, 1, ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3))))))))), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) - 0u)) / 1u), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), max(uvec3(uint(1), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), 1u), uvec3(uint(1), 1u, 1u))))))), uint(uvec2(uint(1), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), min(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), _GLF_IDENTITY(uint(1), max(uint(1), uint(1)))))) | (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 1u), max(uvec3(uint(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0)))))))), 1u, 1u), uvec3(uint(1), 1u, 1u))))))), uint(uvec2(uint(1), 1u)))) - 0u)))) / 1u))), ~ (~ (_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (uint(1)) << 0u))), uint(uvec2(uint(1), 1u)))), min(~ (_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u)))), (~ (_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u))))) / 1u))))) >> 0u)), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
 if((_GLF_struct_replacement_5._f0._f1.subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false || ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bool(true))) && ((injectionSwitch.x > injectionSwitch.y)))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bool(true))) && ((injectionSwitch.x > injectionSwitch.y)))), false, true, false))) && true))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(731.902)), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), bool(true))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), true), false)))))))), (true) && true), true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), true), false)))))))), (true) && true), true)), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), true), false)))))))), (true) && true), true))) && true), false, false, false)), (bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), true), false)))))))), (true) && true), true)), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), true), false)))))))), (true) && true), true))) && true), false, false, false))) || false)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(731.902)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat4(2.5, -283.025, 99.35, -8602.5635, -0.6, -8250.0292, -58.64, 598.058, 3633.7364, 379.712, -22.64, -42.24, 8.1, -197.137, -629.543, 95.52))) : injectionSwitch.x)) > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), true, true))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec3(bvec3(bvec2(true, true), false)))))), true))))), true, true)))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), true, true))))), false, false)))), (true) && true), true))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(731.902)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(731.902)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(731.902)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(731.902)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(731.902)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))) > injectionSwitch.y))))))))))) || false))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0), (mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec2(bvec2(bvec2(true, true)))))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bvec3(bvec3(bvec3(bvec2(true, true), false)))))))), (true) && true), true))))))))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      continue;
     subgroupAll(false);
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, true && (true))))), ! (! (bool(bool((_GLF_IDENTITY(true, true && (true)))))))))) && (_GLF_DEAD(false)), (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, true && (true))))), ! (! (bool(bool((_GLF_IDENTITY(true, true && (true)))))))))) && (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), false, true, true))) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true, true))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true, true))), false, true)), false, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true)))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false, bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), false, true, true))) || false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false, bool(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), false, true, true))) || false)))))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true, true))), false, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true, true))), false, true)), false, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bvec3(_GLF_DEAD(false), false, true)))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))) || false)))))) || false)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))) || false))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false), true, false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         barrier();
        }
       continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true && (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-787.010))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   subgroupAll(false);
   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), buf[virtual_gid])), max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(num_workgroup) : buf[virtual_gid])))), 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 1u * (read)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
