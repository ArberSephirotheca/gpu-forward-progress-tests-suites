#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat4x2 _f0;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_5 {
 uint _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_2 {
 uint subgroup_local_id;
 mat3x4 _f0;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 bvec4 _f1;
 mat2x3 _f2;
 vec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uvec4 _f2;
 vec3 _f3;
 _GLF_struct_5 _f4;
 mat4x2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), (_GLF_IDENTITY(! (! (bool(bool(false)))), (! (! (bool(bool(false))))) && true)) || false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(_GLF_struct_0(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-81.72)), float(1.0), bool(true))), float(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-81.72)), float(1.0), bool(true))), 0.0, 0.0, log(1.0), 1.0, 0.0)))), float(_GLF_FUZZED(7.2)), bool(false))))), (((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), clamp(mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)))))))) - sin(0.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-81.72)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))), float(_GLF_FUZZED(7.2)), bool(false))))), (((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(_GLF_FUZZED(-67.89), (_GLF_IDENTITY(_GLF_FUZZED(-67.89), float(vec3(_GLF_FUZZED(-67.89), 0.0, 0.0)))) / 1.0)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true)))))))))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), false)))))))))))))), clamp(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(7.2, max(7.2, 7.2)))), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)))))))) - sin(0.0)) : _GLF_FUZZED(-8289.2719)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-81.72)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))), float(_GLF_FUZZED(7.2)), bool(false))))), (((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(_GLF_FUZZED(-67.89), (_GLF_IDENTITY(_GLF_FUZZED(-67.89), float(vec3(_GLF_FUZZED(-67.89), 0.0, 0.0)))) / 1.0)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true)))))))))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), false)))))))))))))), clamp(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(7.2, max(7.2, 7.2)))), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)))))))) - sin(0.0)) : _GLF_FUZZED(-8289.2719)), max((true ? _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-81.72)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))), float(_GLF_FUZZED(7.2)), bool(false))))), (((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(_GLF_FUZZED(-67.89), (_GLF_IDENTITY(_GLF_FUZZED(-67.89), float(vec3(_GLF_FUZZED(-67.89), 0.0, 0.0)))) / 1.0)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true)))))))))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), false)))))))))))))), clamp(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(7.2, max(7.2, 7.2)))), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)))))))) - sin(0.0)) : _GLF_FUZZED(-8289.2719)), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-81.72)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))), float(_GLF_FUZZED(7.2)), bool(false))))), (((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(_GLF_FUZZED(-67.89), (_GLF_IDENTITY(_GLF_FUZZED(-67.89), float(vec3(_GLF_FUZZED(-67.89), 0.0, 0.0)))) / 1.0)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true)))))))))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), false)))))))))))))), clamp(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(7.2, max(7.2, 7.2)))), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)))))))) - sin(0.0)) : _GLF_FUZZED(-8289.2719)))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-81.72)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))), float(_GLF_FUZZED(7.2)), bool(false))))), (((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_FUZZED(-67.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FUZZED(7.2), mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(_GLF_FUZZED(-67.89), (_GLF_IDENTITY(_GLF_FUZZED(-67.89), float(vec3(_GLF_FUZZED(-67.89), 0.0, 0.0)))) / 1.0)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true)))))))))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), false))), false), false)))))))))))))), clamp(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(7.2, max(7.2, 7.2)))), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false)))))))) - sin(0.0)) : _GLF_FUZZED(-8289.2719))))) / 1.0) - _GLF_IDENTITY(0.0, (0.0) * 1.0))), bvec4(true), mat2x3(1.0), vec4(1.0), vec4(1.0))), _GLF_struct_2(gl_SubgroupInvocationID, mat3x4(1.0)), uvec4(1u), vec3(1.0), _GLF_struct_5(1u, _GLF_struct_3(ivec3(1), mat2x3(1.0)), _GLF_struct_4(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-879.145) : 0.0)), 1.0)))), (min(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((vec3(-917.139, 6.6, 6598.8820).y / -496.276))), bool(false))) + (1.0)))), 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8063.3182) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-450.687)), float(mat2x3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-450.687), (false ? _GLF_FUZZED(log(45.63)) : _GLF_FUZZED(-450.687)))), 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.8) : 0.0)), 0.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(sqrt(1.0), float(mat3x4(sqrt(1.0), 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * 1.0), 0.0, cos(0.0), 1.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0)))), 0.0, 1.0))))) / 1.0))))), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))) / 1.0) - 0.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))) ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, (0u) | (0u))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (0u | 0u))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u | (_GLF_FUZZED(subgroup_size))) : subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.60))), injectionSwitch.y))))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))) && true)))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, ~ (~ (_GLF_struct_replacement_6._f1.subgroup_local_id))), 0u | (workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)), ~ (~ (_GLF_struct_replacement_6._f1.subgroup_local_id))))), clamp(workgroup_base + subgroup_base + _GLF_struct_replacement_6._f1.subgroup_local_id, workgroup_base + subgroup_base + _GLF_struct_replacement_6._f1.subgroup_local_id, workgroup_base + subgroup_base + _GLF_struct_replacement_6._f1.subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) >> ((0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)))) + _GLF_IDENTITY(0u, (0u) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-2.0)), bool(false))))), min(((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)))) + 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)))) + 0u))) / 1u) + 1) % subgroup_size), uint(uvec3(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + _GLF_IDENTITY(1, min(1, 1))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u)))), ((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)), uint(uint(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u))))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u))))) | (_GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) * 1u))), 1u * (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) * 1u))))), min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 1u * (_GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 0u | (_GLF_IDENTITY(1u, max(1u, 1u)))))))), 0u ^ (_GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u)))), max((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u)))), 0u | ((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u))))))))))))) + 1)), clamp(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)), (~ ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1))) ^ 0u)) ^ 0u), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(uint(uvec3((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u)), 1u, (0u & 28152u))), max(uint(uvec3((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u)), 1u, (0u & 28152u))), _GLF_IDENTITY(uint(uvec3((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u)), 1u, (0u & 28152u))), (uint(uvec3((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u)), 1u, (0u & 28152u)))) | 0u))))) + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1), (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | 0u))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)))) >> 0u, 1u * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)))) >> 0u, (((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)))) >> 0u) / 1u)))), (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))), min((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))), (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))))))))), _GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id), (false ? _GLF_FUZZED((167138u & subgroup_size)) : _GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id), (69607u & 0u) ^ (_GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id), ((_GLF_struct_replacement_6._f1.subgroup_local_id)) << 0u))))) / 1u) + 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + _GLF_IDENTITY(1, min(1, 1))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id), 1u * ((_GLF_struct_replacement_6._f1.subgroup_local_id))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)), uint(uint(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u))))) | (_GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) * 1u))), min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) * 1u))), min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) * 1u))), min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (true ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) * 1u))), min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u)))))), 0u ^ ((_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u))))), (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u)))), 1u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(1u, max(1u, 1u))))))))) + _GLF_IDENTITY(1, (1) << 0))), clamp(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) ^ 0u)) / 1u) + 1)), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)), (~ ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1))) ^ 0u)) ^ 0u), ~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u))) + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1), (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u))) + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1), (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) + 0u), 1u))), min(1u, 1u))) + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1), (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | 0u)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u))) + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1), (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | 0u)), 0u)), (uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u))) + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1), (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | 0u)), 0u))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, 1u))) + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_6._f1.subgroup_local_id), min(~ (_GLF_struct_replacement_6._f1.subgroup_local_id), ~ (_GLF_struct_replacement_6._f1.subgroup_local_id))))))), (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1)) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | 0u))))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id), uint(_GLF_IDENTITY(uint(clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)), uint(uvec2(uint(clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)), 1u)))))), _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))))), ((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id)))) >> 0u), (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))), min((_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id))), (_GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, clamp(_GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_struct_replacement_6._f1.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_6._f1.subgroup_local_id, (_GLF_struct_replacement_6._f1.subgroup_local_id) | _GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id), 0u | (_GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_struct_replacement_6._f1.subgroup_local_id)))))), (~ (_GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id), 0u | (_GLF_IDENTITY((_GLF_struct_replacement_6._f1.subgroup_local_id), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_struct_replacement_6._f1.subgroup_local_id))))))) / 1u))))))))))))), (_GLF_struct_replacement_6._f1.subgroup_local_id) / 1u) + 1))))))) / 1u)) ^ 0u) % subgroup_size), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) | ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)))));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(bvec3(! (false), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (bool(bvec3(! (false), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) && true))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (false), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (false), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false)), true))))), (bool(bvec3(! (false), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if((_GLF_struct_replacement_6._f1.subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)) >> 0u), 4, 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true))), bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-23.78, -96.21, 7977.5745)[1])))), ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(vec3(-23.78, -96.21, 7977.5745)[1], clamp(vec3(-23.78, -96.21, 7977.5745)[1], _GLF_IDENTITY(vec3(-23.78, -96.21, 7977.5745)[1], mix(float(_GLF_FUZZED(3619.2155)), float(vec3(-23.78, -96.21, 7977.5745)[1]), bool(true))), vec3(-23.78, _GLF_IDENTITY(-96.21, (true ? -96.21 : _GLF_FUZZED(abs(5.8)))), 7977.5745)[1]))), float(mat3x4(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(vec3(-23.78, -96.21, 7977.5745)[1], clamp(vec3(-23.78, -96.21, 7977.5745)[1], _GLF_IDENTITY(vec3(-23.78, -96.21, 7977.5745)[1], mix(float(_GLF_FUZZED(3619.2155)), float(vec3(-23.78, -96.21, 7977.5745)[1]), bool(true))), vec3(-23.78, _GLF_IDENTITY(-96.21, (true ? -96.21 : _GLF_FUZZED(abs(5.8)))), 7977.5745)[1]))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0))))), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(vec3(-23.78, -96.21, 7977.5745)[1], clamp(vec3(-23.78, -96.21, 7977.5745)[1], _GLF_IDENTITY(vec3(-23.78, -96.21, _GLF_IDENTITY(7977.5745, min(7977.5745, 7977.5745)))[1], mix(float(_GLF_FUZZED(3619.2155)), float(vec3(-23.78, -96.21, 7977.5745)[1]), bool(true))), vec3(-23.78, _GLF_IDENTITY(_GLF_IDENTITY(-96.21, min(-96.21, -96.21)), (true ? -96.21 : _GLF_FUZZED(abs(5.8)))), 7977.5745)[1])))))), true && (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(vec3(-23.78, -96.21, 7977.5745)[1], clamp(vec3(-23.78, -96.21, 7977.5745)[1], _GLF_IDENTITY(vec3(-23.78, -96.21, _GLF_IDENTITY(7977.5745, (7977.5745) - 0.0))[_GLF_IDENTITY(1, min(1, 1))], mix(float(_GLF_IDENTITY(_GLF_FUZZED(3619.2155), clamp(_GLF_FUZZED(3619.2155), _GLF_FUZZED(3619.2155), _GLF_FUZZED(3619.2155)))), float(vec3(-23.78, -96.21, 7977.5745)[1]), bool(true))), vec3(-23.78, _GLF_IDENTITY(_GLF_IDENTITY(-96.21, (true ? -96.21 : _GLF_FUZZED(abs(5.8)))), min(_GLF_IDENTITY(-96.21, (true ? -96.21 : _GLF_FUZZED(abs(_GLF_IDENTITY(5.8, (5.8) - 0.0))))), _GLF_IDENTITY(-96.21, (true ? -96.21 : _GLF_FUZZED(abs(5.8)))))), 7977.5745)[1])))))))))))) && true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * vec2(1.0, 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))))).y, injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat4(abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-663.825), _GLF_IDENTITY(_GLF_FUZZED(-87.13), (_GLF_FUZZED(-87.13)) / abs(1.0))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), true, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), true, false, true))))), true, true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.5)), bool(false))), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))))), bool(_GLF_IDENTITY(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true), false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2685.9978, 762.608)))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2685.9978, 762.608)))).x > injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))))))) && _GLF_IDENTITY(true, true && (true)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))))), (0u) | (0u)) + (_GLF_IDENTITY(virtual_gid, (virtual_gid) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), uint(6u))) / _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))))), (_GLF_IDENTITY(0u, (0u) | (0u)) + (virtual_gid)) >> 0u))], read, 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) * 1))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool((false) && true), (bool((false) && true)) && true), ! (! (bool((false) && true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool((false) && true), ! (! (bool((_GLF_IDENTITY(false, true && (false))) && true)))), false)))), true)))))))), true, false), false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
