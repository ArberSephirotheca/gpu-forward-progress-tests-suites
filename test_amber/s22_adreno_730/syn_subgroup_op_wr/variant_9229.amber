#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 bvec2 _f0;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 uvec4 _f1;
 vec3 _f2;
 mat3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_8 {
 bool _f0;
 bvec2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 bool _f4;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 vec4 _f1;
 ivec2 _f2;
 bvec3 _f3;
 uvec4 _f4;
 mat2x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_2 {
 uint _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 ivec4 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_1 _f0;
 uint subgroup_size;
 _GLF_struct_3 _f1;
 vec3 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_8 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1944.9912)), _GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0))), float(injectionSwitch.y))), bool(true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.z = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_1(mat2x3(1.0), ivec4(1), _GLF_struct_0(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))), true)), gl_SubgroupSize, _GLF_struct_3(_GLF_struct_2(1u), ivec4(1)), vec3(1.0), _GLF_struct_5(ivec4(1), _GLF_struct_4(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(3.8)), float(float(1.0)), bool(true))), float(_GLF_FUZZED(-275.290)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))))), ivec2(1), bvec3(true), uvec4(1u), mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.6)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) ? _GLF_FUZZED(193901u) : 1u))) * _GLF_IDENTITY(1u, (1u) / 1u)), 0u | (1u)), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), 0u ^ (~ (1u))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))) | (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), 0u ^ ((1u)))) + (1u ^ 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)) ? _GLF_FUZZED(193901u) : 1u))) * _GLF_IDENTITY(1u, (1u) / 1u)), 0u | (1u)), 1u)), ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.98), _GLF_FUZZED(vec3(-7869.9318, -5.1, 66.21).s)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(193901u) : _GLF_IDENTITY(1u, ~ (~ (1u)))))) * _GLF_IDENTITY(1u, (1u) / 1u)), 0u | (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), 0u | (~ (1u)))), max((_GLF_IDENTITY(~ (1u), 0u | (~ (1u)))), (_GLF_IDENTITY(~ (1u), 0u | (~ (1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(193901u) : 1u))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)), 0u | (1u)), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))), ~ (~ (_GLF_IDENTITY(uint(uint(~ (1u))), ~ (~ (uint(uint(_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (1u)), (_GLF_IDENTITY((~ (1u)), (_GLF_IDENTITY((~ (1u)), 1u * ((~ (1u))))) / 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(193901u) : 1u))) * _GLF_IDENTITY(1u, (1u) / 1u)), 0u | (1u)), 1u))) >> 0u))))), _GLF_struct_8(true, bvec2(true), _GLF_struct_6(mat3x2(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), uvec4(1u), vec3(1.0), mat3(1.0), mat2x4(1.0)), _GLF_struct_7(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true))))), true));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.w = _GLF_struct_replacement_9.subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(-8.7)) : injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((34.56))), vec2(_GLF_FUZZED(1406.7734), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false, true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(27.68)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size, _GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size : _GLF_FUZZED(floatBitsToUint(vec4(9.2, -932.117, 1308.6583, -17.40)))), clamp((true ? GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size : _GLF_FUZZED(floatBitsToUint(vec4(9.2, -932.117, 1308.6583, -17.40)))), (true ? GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size : _GLF_FUZZED(floatBitsToUint(vec4(9.2, -932.117, 1308.6583, -17.40)))), (true ? GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size : _GLF_FUZZED(floatBitsToUint(vec4(9.2, -932.117, 1308.6583, -17.40))))))).z * GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.w;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), bool(bvec4(false, false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.w, ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.w) + 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(3074.9600)), bool(false)), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(3074.9600)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(3074.9600)), _GLF_IDENTITY(bool(false), false || (bool(false))))) - 0.0)) - 0.0)))))), 1.0))), injectionSwitch)), injectionSwitch, injectionSwitch)).y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(3074.9600)), bool(false)), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(3074.9600)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(3074.9600)), _GLF_IDENTITY(bool(false), false || (bool(false))))) - 0.0)) - 0.0)))))), 1.0))), injectionSwitch)), injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(3074.9600)), bool(false)), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(3074.9600)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(3074.9600)), _GLF_IDENTITY(bool(false), false || (bool(false))))) - 0.0)) - 0.0)))))), 1.0))), injectionSwitch)), injectionSwitch, injectionSwitch)).y) - 0.0), 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-189.330)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.8)))), _GLF_ONE(1.0, injectionSwitch.y)))).y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ~ (~ ((1)))))) * 1)), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) << 0))))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6225.1133) : injectionSwitch.x)) > injectionSwitch.y))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6225.1133) : injectionSwitch.x)) > injectionSwitch.y))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6225.1133) : injectionSwitch.x)) > injectionSwitch.y))))))))), true && ((! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6225.1133) : injectionSwitch.x)) > injectionSwitch.y))))))))))))) || false), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6225.1133) : injectionSwitch.x)) > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6225.1133) : injectionSwitch.x)) > injectionSwitch.y)))) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-784.075)), float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))), bool(true))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), ((4)) | ((4))), _GLF_IDENTITY((4), ((4)) - (0 >> _GLF_IDENTITY(int(8), int(8)))))) ^ 0))), 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.y), bool(true)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.x)) > injectionSwitch.y)) && true))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-54.69)), bool(false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, (true) || false), true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-507.348)), bvec2(false, false))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-507.348)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-507.348)), bvec2(false, false))).x > injectionSwitch.y))) && true)) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(-3452.8947) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))) - vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) && true)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) >> 0), _GLF_IDENTITY(64, _GLF_IDENTITY(0, (0) >> 0) + (_GLF_IDENTITY(64, 1 * (64)))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | (2))) | 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0))) + log(1.0)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), float(float(1.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), max(_GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), _GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-185.739) : float(float(1.0))), clamp((false ? _GLF_FUZZED(-185.739) : float(float(1.0))), (false ? _GLF_FUZZED(-185.739) : float(float(1.0))), (false ? _GLF_FUZZED(-185.739) : float(float(1.0)))))), float(_GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0))))) * (injectionSwitch.y)))))))))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y) | 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y, min(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y, GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_13num_workgroupreadsubgroup_idsubgroup_size.y))) | 0u))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(-27413) : _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) | (64)))))), max((false ? _GLF_FUZZED(-27413) : _GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, (64) | (64)))), (~ (~ (_GLF_IDENTITY(64, (64) | (64))))) ^ 0))), (false ? _GLF_FUZZED(-27413) : _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) | (64))))))))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-89.27), (true ? _GLF_IDENTITY(_GLF_FUZZED(-89.27), min(_GLF_FUZZED(-89.27), _GLF_FUZZED(-89.27))) : _GLF_FUZZED(-5.7)))), float(1.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))), tan(0.0), 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)))))))) * 1.0))))), float(_GLF_FUZZED(-527.736)), bool(false)))), 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, sqrt(1.0), 1.0) : _GLF_FUZZED(mat4x3(1144.9358, -124.648, -0.4, 353.999, 9.9, 15.09, 75.04, 81.10, -6.1, -63.22, 6.1, -613.828)))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)))), injectionSwitch)).y)), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(921.569))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-89.27), (true ? _GLF_IDENTITY(_GLF_FUZZED(-89.27), min(_GLF_FUZZED(-89.27), _GLF_FUZZED(-89.27))) : _GLF_FUZZED(-5.7)))), float(1.0), bool(true))), tan(0.0), 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), float(float(float(mat3x2(1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(1891.9480)), bool(false))), abs(1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), min(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, float(vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, sin(0.0), 0.0))))), 0.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED((mat4(1.4, 2.6, 5712.5277, -9.3, 590.687, 5.8, -4092.6296, -13.12, 889.077, -668.866, -5.8, -5497.3016, -629.122, -76.68, 8.3, -562.033))))) * (mat3x4(_GLF_IDENTITY(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0))))))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0)))) - 0.0)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))))))))) * cos(0.0))), 1.0, 0.0))))))))), float(_GLF_FUZZED(-527.736)), bool(false)))), 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.8))), 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, sqrt(1.0), 1.0) : _GLF_FUZZED(mat4x3(_GLF_IDENTITY(1144.9358, float(mat3(1144.9358, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0)))), -124.648, -0.4, 353.999, 9.9, 15.09, 75.04, 81.10, -6.1, -63.22, 6.1, -613.828)))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, exp(0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (true ? _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))))), clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-89.27), (true ? _GLF_IDENTITY(_GLF_FUZZED(-89.27), min(_GLF_FUZZED(-89.27), _GLF_FUZZED(-89.27))) : _GLF_FUZZED(-5.7)))), float(1.0), bool(true))), tan(0.0), 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), (float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))) / 1.0)) / 1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), clamp(false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), (float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))) / 1.0)) / 1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), clamp(false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), (float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))) / 1.0)) / 1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), clamp(false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), (float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))) / 1.0)) / 1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), clamp(false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))))))), 0.0, 0.0, 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-527.736), (_GLF_IDENTITY(_GLF_FUZZED(-527.736), min(_GLF_FUZZED(-527.736), _GLF_FUZZED(-527.736)))) - 0.0)), bool(false)))), 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 0.0, 1.0)), 0.0 + (float(mat2(0.0, 0.0, 0.0, 1.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, sqrt(1.0), 1.0) : _GLF_FUZZED(mat4x3(1144.9358, -124.648, -0.4, 353.999, 9.9, 15.09, 75.04, 81.10, -6.1, -63.22, 6.1, -613.828)))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), false, true)), ! (! (bool(bvec3((! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-89.27), (true ? _GLF_IDENTITY(_GLF_FUZZED(-89.27), min(_GLF_FUZZED(_GLF_IDENTITY(-89.27, clamp(-89.27, -89.27, _GLF_IDENTITY(-89.27, clamp(_GLF_IDENTITY(-89.27, (-89.27) - 0.0), -89.27, -89.27))))), _GLF_FUZZED(-89.27))) : _GLF_FUZZED(-5.7)))), float(1.0), bool(true))), tan(0.0), 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0)), float(float(float(mat3x2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(1.0), 0.0, 1.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), min(false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), false ? _GLF_FUZZED(log2(-5.1)) : _GLF_IDENTITY(float(mat3x2(1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x2(1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))))))))), float(_GLF_FUZZED(-527.736)), bool(false)))), 1.0), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.1) : injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, sqrt(1.0), 1.0) : _GLF_FUZZED(mat4x3(1144.9358, -124.648, -0.4, 353.999, 9.9, 15.09, _GLF_IDENTITY(75.04, _GLF_IDENTITY(clamp(75.04, 75.04, 75.04), clamp(clamp(75.04, 75.04, 75.04), _GLF_IDENTITY(clamp(75.04, 75.04, 75.04), clamp(_GLF_IDENTITY(clamp(75.04, 75.04, 75.04), min(clamp(75.04, 75.04, 75.04), clamp(75.04, 75.04, 75.04))), clamp(75.04, 75.04, 75.04), clamp(75.04, 75.04, 75.04))), _GLF_IDENTITY(clamp(75.04, 75.04, 75.04), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.7) : clamp(75.04, 75.04, 75.04)))))), 81.10, -6.1, -63.22, 6.1, _GLF_IDENTITY(-613.828, mix(float(-613.828), float(_GLF_FUZZED((-6.6 / vec4(27.73, 84.12, -95.06, 584.971).b))), bool(false))))))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch)).y)), false, true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
