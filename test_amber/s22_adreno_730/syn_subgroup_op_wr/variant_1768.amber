#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_base;
 uvec4 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizenum_workgroup;
 uvec4 GLF_merged2_0_3_66_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_base;
 uvec4 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizesubgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base;
 uvec4 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id;
 uvec4 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid;
 uvec4 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup;
 uvec4 GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.xy = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uvec4 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size;
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_base.xyz = GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizenum_workgroup.xyz = GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_base.xyz;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz = GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizenum_workgroup.xyz;
 GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id.xyz = GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz;
 uvec4 GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid;
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id;
 uvec4 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup;
 uvec4 GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id;
 uvec3 GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_id;
 GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz = GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_id;
 GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.xyz = GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.xyz;
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id;
 GLF_merged2_0_3_66_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_base.xyz = GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id;
 GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz = GLF_merged2_0_3_66_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_base.xyz;
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_size;
 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizesubgroup_size.xyz = GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_size;
 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.xyz = GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizesubgroup_size.xyz;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w = subgroup_id;
 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.xy.x = GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id.xyz.x = GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.xy.x;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 ^ 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), int(4)))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.x = GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id.xyz.x;
        }
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizesubgroup_size.w = subgroup_size;
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w = GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizesubgroup_size.w;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) | 0)); _injected_loop_counter ++)
    {
     GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.xyz.z = _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w) | 0u);
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z = subgroup_local_id;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.w = GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) ^ 0u), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)) | 0u);
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizenum_workgroup.w = num_workgroup;
 do
  {
   GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base.x = GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizenum_workgroup.w;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base.x, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base.x), (~ (GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base.x)) << 0u)));
  }
 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.w = GLF_merged2_0_3_61_3_1_13GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnum_workgroup.w;
    }
   else
    {
    }
  }
 do
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(52276))), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup, (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup, max(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup, GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup))) / (uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))) >> _GLF_IDENTITY(uvec4(1u), uvec4(1u))))).w;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), vec4(vec4(vec4(0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(36.06)), bool(false))))), min(dot(vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.1)), float(0.0), bool(true))))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, sqrt(1.0), 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.2) : 0.0))))), 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-19.90, 2.0)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), 0.0 + (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, sqrt(1.0), 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), cos(0.0), length(vec2(0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, sqrt(1.0), 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0))) * mat2(1.0)), (_GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), exp(vec2(0.0, 0.0)) * (vec2(0.0, 0.0) + (injectionSwitch)))))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, sqrt(1.0), 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(28.76)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0) + (injectionSwitch)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(50.93)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - 0.0), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log(1.1)))), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, sqrt(1.0), 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0))) * mat2(1.0))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-19.90, 2.0)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), 0.0 + (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, sqrt(1.0), 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), cos(0.0), length(vec2(0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, sqrt(1.0), 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0))) * mat2(1.0)), (_GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), exp(vec2(0.0, 0.0)) * (vec2(0.0, 0.0) + (injectionSwitch)))))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, sqrt(1.0), 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(28.76)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0) + (injectionSwitch)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(50.93)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - 0.0), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log(1.1)))), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, sqrt(1.0), 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0))) * mat2(1.0))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0))))).x > injectionSwitch.y)))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id.xyz.z = workgroup_size;
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size.w = GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id.xyz.z;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id.w = workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (_GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_FUZZED(float(130295u))), float((injectionSwitch.y) - 0.0), bool(true)))) / 1.0))))))))
    {
     GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.w = GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id.w;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(ivec2(int(0), 0)))), 0 ^ (~ (_GLF_IDENTITY(int(0), int(ivec2(int(0), 0))))))))))); _injected_loop_counter --)
    {
     GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.xyz.z = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.w;
    }
  }
 else
  {
  }
 GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.z = _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.xyz) >> uvec3(0u, 0u, 0u)).z;
 uint workgroup_base = GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size.w * GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.z;
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base.z = workgroup_base;
 _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.xy.y = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base.z, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.xy.y = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base.z, (GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.xy.y = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base.z) | 0u)) << (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, 0u | (6u))))) | (_GLF_IDENTITY(6u, (6u) | 0u)))), uint(6u))));
 do
  {
   GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.xy.y;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.z;
 GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size.z = GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y;
 uint subgroup_base = GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.x * GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.xyz.z;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_base.w = subgroup_base;
 GLF_merged2_0_3_66_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_base.w = GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_base.w;
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.y = GLF_merged2_0_3_66_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_base.w;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(true, (true) && true)))))
  {
   do
    {
     GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.xyz.y = GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.y;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint virtual_gid = GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size.z + GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.xyz.y + GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.w;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.w = virtual_gid;
  }
 GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id.xyz.y = GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.w;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y = GLF_merged2_0_3_68_3_1_12GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizeworkgroup_id.xyz.y;
 GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y = _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y, (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y) / 1u);
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, min(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u)))).z, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, min(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size) + uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, min(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size)))))))) ^ uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size) / uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)))), 0u, 0u), max((GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u))), (GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size))), (GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))).z)) + GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.xyz.y + ((GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.xyz.z);
 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.z = next_virtual_gid;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(-81748))))), ~ (~ (_GLF_IDENTITY(int(2), int(2)))))) - 0))); _injected_loop_counter --)
  {
   _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.w = _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.z, (true ? GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.z : _GLF_FUZZED(GLF_merged2_0_3_66_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_base.w))), ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.w = _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.z, (true ? GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.z : _GLF_FUZZED(GLF_merged2_0_3_66_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_base.w)))), 0u | (~ (GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.w = _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.z, (true ? GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_basenext_virtual_gidvirtual_gid.z : _GLF_FUZZED(GLF_merged2_0_3_66_3_1_13GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_base.w))))))));
  }
 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.xyz.x = GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.w;
 uint read = 0;
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base.y = read;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base, (GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_base) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) << 0u))).y;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x = GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.x;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), false, false)), false || (bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), true, true, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)))))))))))) && true))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), true, true, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)))))))))))) && true))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), true, true, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)))))))))))) && true))), true, false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && _GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && _GLF_IDENTITY(true, false || (true)))) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, 0.0, 0.0))), 1.0) * (injectionSwitch)).x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))))) && true)))) || false), true, false), true))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), true, true, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)))))))))))) && true))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), true, true, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)))))))))))) && true))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), true, true, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)))))))))))) && true))), true, false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && _GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && _GLF_IDENTITY(true, false || (true)))) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, 0.0, 0.0))), 1.0) * (injectionSwitch)).x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))))) && true)))) || false), true, false), true)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true) || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), false, true, true))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) < injectionSwitch.y)))))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false))))))))))) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))) && true))), true, false), true))))))), false)), bool(bvec4(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.2)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), (_GLF_IDENTITY(true, false || (true))) && true), (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true))), (injectionSwitch.x < injectionSwitch.y))))))) && true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9756.0621), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(278.841)), bvec2(true, false))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), false || (bool(bvec4(true, false, true, true))))), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), false || (bool(bvec4(true, false, true, true))))), (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))) && true))), true, false), true))))))), false)), true, true, true))))))
  {
   do
    {
     GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size.y = GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_12readworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x;
 atomicStore(buf[GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidsubgroup_basesubgroup_sizenum_workgroup.xyz.x], uint(1), 4, 64, 4);
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * (1 | 1)), (false ? _GLF_FUZZED(2314) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ((1) ^ _GLF_IDENTITY(0, ~ (~ (0)))) * 1)), max(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(68994, 0 | (_GLF_IDENTITY(68994, 0 ^ (68994))))), _GLF_IDENTITY((_injected_loop_counter != (0 & 68994)), false || (_GLF_IDENTITY((_injected_loop_counter != (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0)) & 68994)), bool(bvec3((_injected_loop_counter != _GLF_IDENTITY((0 & 68994), clamp(_GLF_IDENTITY((0 & 68994), ((0 & 68994)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 & 68994), _GLF_IDENTITY((0 & 68994), clamp((0 & 68994), _GLF_IDENTITY((0 & 68994), ((0 & 68994)) | ((0 & 68994))), (0 & 68994)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if((GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.w % 2) == 0)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
                      {
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)).x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-1.6))))) - 0.0)), mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), (_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), min(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0))))) + 0.0) : _GLF_FUZZED(-7.5)))), bool(true)))) < injectionSwitch.y))))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))), (false ? _GLF_FUZZED(-9.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -7.0))), bool(false))))))))), false || (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), (_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), 1.0 * (float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0))))) * _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)) : _GLF_FUZZED(-7.5)))), bool(true)))) < injectionSwitch.y))))), false))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             subgroupAll(false);
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(78964) : _GLF_IDENTITY(1, 0 ^ (1))))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(78964) : _GLF_IDENTITY(1, 0 ^ (1))))) || false), false, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) < 1, (_injected_loop_counter < 1) || false), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false)))), false || (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false)))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)))))))), true, true)))))))) || false), false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), false, false)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), false, false)))), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (_injected_loop_counter < 1) || false), false, false))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)) - 0) < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), false, false))), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, (false) && true), false))))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)))) | (1)), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false)))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)))))))), true, true)))))))) || false), false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), false, false)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), false, false)))), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (_injected_loop_counter < 1) || false), false, false))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)) - 0) < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), false, false))), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, (false) && true), false))))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)))) | (1)), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false)))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)))))))), true, true)))))))) || false), false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), false, false)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), false, false)))), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (_injected_loop_counter < 1) || false), false, false))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)) - 0) < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), false, false))), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, (false) && true), false))))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)))) | (1)), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))))))) || false), false, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false)))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)))))))), true, true)))))))) || false), false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), false, false)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), false, false)))), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (_injected_loop_counter < 1) || false), false, false))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)) - 0) < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), false, false))), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, (false) && true), false))))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)))) | (1)), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))))))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false)))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true)))))))), true, true)))))))) || false), false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), false, false)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter < 1, false)), bvec2(bvec2(bvec2(bvec2(_injected_loop_counter < 1, false)))))), false, false)))), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (_injected_loop_counter < 1) || false), false, false))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)) - 0) < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), false, false))), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, (false) && true), false))))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), false)), true))))))) || false), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))) || false), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, (0 >> _GLF_IDENTITY(int(4), int(4))), 1, 0)))) | (1)), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false))))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))))))) || false), false, true, true)))), true, true, true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_injected_loop_counter < 1) || false, (_GLF_IDENTITY((_injected_loop_counter < 1) || false, false || ((_injected_loop_counter < 1) || false))) || false)), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter < 1)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) * 1))), (_injected_loop_counter < 1) || false), true && (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0))), (_injected_loop_counter < 1) || false))), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false)))))))))), false || (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (_injected_loop_counter < 1) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 1 * (6))), int(6)))), (_injected_loop_counter < 1) || false), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_injected_loop_counter < 1), (_GLF_IDENTITY((_injected_loop_counter < 1), bool(bool((_injected_loop_counter < 1))))) && true) || false), false, false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (false))), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, ! (! (false))), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_injected_loop_counter < 1) || false, bool(bvec3((_injected_loop_counter < 1) || false, false, true)))), _GLF_IDENTITY(false, ! (! (false))), false)))))))))), true)))))), false || ((_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_injected_loop_counter < 1), ! (_GLF_IDENTITY(! ((_injected_loop_counter < 1)), bool(_GLF_IDENTITY(bvec3(! ((_injected_loop_counter < 1)), false, false), bvec3(bvec3(bvec3(! ((_injected_loop_counter < 1)), false, false)))))))) || false), (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false))))))))))))))), bool(bool((_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_injected_loop_counter < 1) || false, (_GLF_IDENTITY((_injected_loop_counter < 1) || false, false || ((_injected_loop_counter < 1) || false))) || false)), false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter < 1)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) * 1))), (_injected_loop_counter < 1) || false), true && (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0))), (_injected_loop_counter < 1) || false))), false, false))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), false, false)))))))))), false || (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (_injected_loop_counter < 1) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 1 * (6))), int(6)))), (_injected_loop_counter < 1) || false), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_injected_loop_counter < 1), (_GLF_IDENTITY((_injected_loop_counter < 1), bool(bool((_injected_loop_counter < 1))))) && true) || false), false, false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (false))), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, ! (! (false))), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_injected_loop_counter < 1) || false, bool(bvec3((_injected_loop_counter < 1) || false, false, true)))), _GLF_IDENTITY(false, ! (! (false))), false)))))))))), true)))))), false || ((_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_injected_loop_counter < 1), ! (_GLF_IDENTITY(! ((_injected_loop_counter < 1)), bool(_GLF_IDENTITY(bvec3(! ((_injected_loop_counter < 1)), false, false), bvec3(bvec3(bvec3(! ((_injected_loop_counter < 1)), false, false)))))))) || false), (_injected_loop_counter < 1) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false)))))))))))))))))) || false))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size.y = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y, (GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y) ^ 0u), clamp(_GLF_IDENTITY(GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y, (GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y, (GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y) ^ 0u), (_GLF_IDENTITY(GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y, (GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y) ^ 0u)) << 0u), _GLF_IDENTITY(GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y, (GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y) ^ 0u)))], 4, 64, 2);
                      }
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                 subgroupAll(false);
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false)))))
                    {
                     do
                      {
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           do
                            {
                             do
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             do
                                              {
                                               do
                                                {
                                                 do
                                                  {
                                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                                                    {
                                                     GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size.y = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y, uint(uvec2(GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y, 0u)))], 4, 64, 2);
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                }
                                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))));
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                           else
                                            {
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                    }
                   else
                    {
                    }
                  }
                }
              }
             else
              {
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 subgroupBarrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     do
      {
       atomicStore(checker[GLF_merged2_0_3_66_3_1_17GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_idsubgroup_local_id.xyz.y], GLF_merged4_0_1_13_1_1_4_2_1_14_3_1_14num_workgroupreadworkgroup_baseworkgroup_size.y, 4, 64, 4);
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
