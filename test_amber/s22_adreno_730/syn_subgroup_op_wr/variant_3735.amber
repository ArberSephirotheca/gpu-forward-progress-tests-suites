#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_51 {
 bool _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_48 {
 mat3 _f0;
 ivec3 _f1;
 ivec2 _f2;
 bool _f3;
} ;

struct _GLF_struct_49 {
 mat3x4 _f0;
 bool _f1;
 _GLF_struct_48 _f2;
} ;

struct _GLF_struct_46 {
 bool _f0;
 mat3 _f1;
 uvec3 _f2;
 mat4 _f3;
 float _f4;
 bool _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_47 {
 _GLF_struct_46 _f0;
} ;

struct _GLF_struct_50 {
 _GLF_struct_47 _f0;
 _GLF_struct_49 _f1;
 uint subgroup_base;
} ;

struct _GLF_struct_43 {
 mat4 _f0;
 bvec2 _f1;
 mat4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_42 {
 vec2 _f0;
 uvec3 _f1;
 uvec3 _f2;
 uvec4 _f3;
 uint next_virtual_gid;
} ;

struct _GLF_struct_41 {
 mat3 _f0;
} ;

struct _GLF_struct_40 {
 ivec3 _f0;
 vec3 _f1;
 uvec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_44 {
 _GLF_struct_40 _f0;
 _GLF_struct_41 _f1;
 _GLF_struct_42 _f2;
 _GLF_struct_43 _f3;
} ;

struct _GLF_struct_45 {
 _GLF_struct_44 _f0;
} ;

struct _GLF_struct_37 {
 bool _f0;
 vec3 _f1;
 ivec3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_36 {
 mat4x2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_38 {
 mat4x3 _f0;
 ivec2 _f1;
 _GLF_struct_36 _f2;
 _GLF_struct_37 _f3;
} ;

struct _GLF_struct_35 {
 bvec3 _f0;
 bool _f1;
} ;

struct _GLF_struct_33 {
 uvec3 _f0;
 bvec3 _f1;
 ivec4 _f2;
 ivec2 _f3;
 bvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_34 {
 _GLF_struct_33 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_31 {
 vec4 _f0;
 mat2x4 _f1;
 int _f2;
 mat3x2 _f3;
 bvec4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_30 {
 mat3 _f0;
 vec4 _f1;
 mat2 _f2;
 ivec4 _f3;
 vec2 _f4;
 int _f5;
} ;

struct _GLF_struct_32 {
 uvec4 _f0;
 _GLF_struct_30 _f1;
 mat2x4 _f2;
 _GLF_struct_31 _f3;
} ;

struct _GLF_struct_39 {
 _GLF_struct_32 _f0;
 _GLF_struct_34 _f1;
 _GLF_struct_35 _f2;
 _GLF_struct_38 _f3;
 uint virtual_gid;
} ;

struct _GLF_struct_27 {
 uvec2 _f0;
 mat4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_25 {
 mat3 _f0;
 ivec2 _f1;
 vec4 _f2;
 uvec4 _f3;
 ivec3 _f4;
 vec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_26 {
 bvec2 _f0;
 _GLF_struct_25 _f1;
 int _f2;
 uint workgroup_base;
 bvec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_23 {
 bool _f0;
 float _f1;
 bvec4 _f2;
 ivec2 _f3;
 mat4x2 _f4;
 ivec3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_22 {
 vec3 _f0;
 mat2 _f1;
 ivec2 _f2;
 bvec3 _f3;
 int _f4;
} ;

struct _GLF_struct_24 {
 int _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_23 _f2;
} ;

struct _GLF_struct_20 {
 ivec3 _f0;
 mat2x4 _f1;
 mat4 _f2;
 uvec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 uint _f1;
 bvec3 _f2;
 ivec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_18 {
 uvec3 _f0;
 bool _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_17 {
 uvec2 _f0;
 ivec4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
} ;

struct _GLF_struct_21 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 bvec3 _f1;
 mat4 _f2;
 mat4x2 _f3;
 mat4x2 _f4;
 ivec2 _f5;
 int _f6;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 bvec2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 bool _f1;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
 uvec4 _f1;
 vec4 _f2;
 uvec3 _f3;
 bvec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_15 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_10 {
 int _f0;
 vec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_29 {
 _GLF_struct_10 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_24 _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_28 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat4x2 _f1;
 bvec2 _f2;
 ivec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 mat4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 mat3 _f1;
 mat3x4 _f2;
 mat4 _f3;
 float _f4;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 mat2x3 _f1;
 bool _f2;
 bvec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 mat4x2 _f2;
 _GLF_struct_4 _f3;
 bool _f4;
 bool _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_0 {
 float _f0;
 mat2 _f1;
 ivec4 _f2;
 mat2x4 _f3;
 mat3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 vec3 _f1;
 _GLF_struct_0 _f2;
 uvec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_5 _f2;
 uint workgroup_size;
 mat4x2 _f3;
 _GLF_struct_8 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)).x;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), 1))), _GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), (true ? ivec3(_GLF_IDENTITY(1, (1) / 1)) : _GLF_FUZZED(ivec3(-9618, -44412, -46173)))), ivec3(1))))), _GLF_struct_1(mat2x3(1.0), vec3(1.0), _GLF_struct_0(1.0, mat2(1.0), ivec4(1), mat2x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))), mat3(1.0), mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, min((1.0) * 1.0, (1.0) * 1.0)))), float(_GLF_FUZZED(-4.7)), bool(false))))), uvec4(1u), mat2x3(1.0)), _GLF_struct_5(_GLF_struct_2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), true)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec3(bvec2(bvec2(bvec2(true))), true)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true), true)))))))))))), mat2x3(1.0), _GLF_IDENTITY(true, (true) || false), bvec3(true), ivec3(1)), _GLF_struct_3(mat3x2(1.0), mat3(1.0), mat3x4(1.0), mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0)), mat4x2(1.0), _GLF_struct_4(mat4x2(1.0), mat3x2(1.0), mat4x2(1.0)), true, true, bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)), bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))))))) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)) && true)))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)) && true)))), (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)) && true))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bool(! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) && true)), bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)), bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)), bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x, mat4x2(1.0), _GLF_struct_8(mat3(1.0), mat4(1.0), _GLF_struct_6(1, mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0) + (1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))) + _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(158.080)), float((1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (1.0))), 0.0 + (_GLF_IDENTITY(0.0 + (1.0), float(mat4x2(0.0 + (1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), 0.0 + _GLF_IDENTITY((1.0), ((1.0)) + sin(0.0)))))) / _GLF_IDENTITY(round(length(normalize(1.0))), 0.0 + (round(length(normalize(1.0))))))), bvec2(true), ivec2(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))))), mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))), true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))))))))), true))))), true)))), true))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_51 _GLF_struct_replacement_51 = _GLF_struct_51(true, gl_WorkGroupID.x);
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(_GLF_struct_10(1, vec2(1.0), _GLF_IDENTITY(mat2(1.0), mat2(mat3(_GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))))))), _GLF_struct_15(_GLF_struct_11(mat2x3(1.0), uvec4(_GLF_IDENTITY(1u, (1u) + (1u ^ 1u))), vec4(1.0), uvec3(_GLF_IDENTITY(1u, (1u) >> 0u)), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((true), ((true)) && true)), bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((true), ((true)) && true)), true && (! (! _GLF_IDENTITY((true), ((true)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false))))), mat4x3(1.0)), _GLF_struct_12(uvec4(1u), true), _GLF_struct_13(ivec4(1), bvec2(true), ivec2(1)), _GLF_struct_14(mat3x4(1.0), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false)))))))), mat4(1.0), mat4x2(1.0), mat4x2(1.0), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, 0 + (1)))), max(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, 0 + (1)))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, 0 + (1)))))), (1) ^ 0)), mat4x2(1.0)), _GLF_struct_21(_GLF_struct_16(bvec4(true)), _GLF_struct_17(uvec2(1u), ivec4(1), vec4(1.0)), _GLF_struct_18(uvec3(1u), true, uvec2(1u)), _GLF_struct_19(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(1u, 1u)), 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 0u, 0u))), 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), _GLF_IDENTITY((max(1u, 1u)) | 0u, ((max(1u, 1u)) | 0u) >> 0u))), 0u)), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | (max(1u, 1u)))) | 0u)), 0u)), (true ? uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | 0u)), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) : _GLF_FUZZED(num_workgroup))), uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | 0u)), 0u)))))))), 1u, _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false))))), true)))))), false)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false))))))), false)), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))))))))), false)), true))))))), true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(false, (false) || false))), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))))), true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))), true))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)), true))))))))))))))))), true)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))))), true)))))), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), true)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), true)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), true)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), true)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), true)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false))), false)))))))), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))))))), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false))))))), false)), true))))))), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ivec4(1), true), _GLF_struct_20(ivec3(1), mat2x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-429.418)), vec2(_GLF_FUZZED(-7.4), (vec2(1.0, 1.0))[1]), bvec2(false, true))), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-429.418)), vec2(_GLF_FUZZED(-7.4), (vec2(1.0, 1.0))[1]), bvec2(false, true)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), mat4(1.0), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) * 1u), _GLF_IDENTITY(1u, (1u) << 0u), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec4(1))), _GLF_struct_24(1, _GLF_struct_22(vec3(1.0), mat2(1.0), ivec2(1), bvec3(true), 1), _GLF_struct_23(true, 1.0, bvec4(true), ivec2(1), mat4x2(1.0), ivec3(1), vec2(1.0))), _GLF_struct_26(bvec2(_GLF_IDENTITY(true, true && (true))), _GLF_struct_25(mat3(1.0), ivec2(1), vec4(1.0), uvec4(1u), ivec3(1), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, tan(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, cos(0.0), 1.0)), max(float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, tan(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, cos(0.0), 1.0)), float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.4))))), 1.0, tan(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, cos(0.0), 1.0)))))), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), false)), true)))), true, false)))), 1, _GLF_struct_replacement_9.workgroup_size * _GLF_struct_replacement_51.workgroup_id, bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))), uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_struct_28(_GLF_struct_27(uvec2(1u), mat4(1.0), bvec2(true)), mat3x4(1.0)), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false || (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 _GLF_struct_50 _GLF_struct_replacement_50 = _GLF_struct_50(_GLF_struct_47(_GLF_struct_46(true, _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))), uvec3(1u), mat4(1.0), 1.0, true, mat2x3(1.0))), _GLF_struct_49(mat3x4(1.0), true, _GLF_struct_48(mat3(1.0), ivec3(1), ivec2(1), true)), subgroup_id * subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_32(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u), 1u)), _GLF_struct_30(mat3(1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), ivec4(1), vec2(1.0), 1), mat2x4(1.0), _GLF_struct_31(vec4(1.0), mat2x4(1.0), 1, mat3x2(1.0), bvec4(true), bvec3(true))), _GLF_struct_34(_GLF_struct_33(uvec3(1u), bvec3(true), ivec4(1), ivec2(1), bvec4(true), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(vec3(1.0), clamp(_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-37.25), _GLF_FUZZED(9.3), (vec3(1.0))[2]), vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_FUZZED(-3.6)), bvec3(true, true, false))), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), vec3(1.0)))))), uvec3(1u)), _GLF_struct_35(bvec3(true), true), _GLF_struct_38(mat4x3(1.0), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / sqrt(vec2(1.0, 1.0))).y)) | 1)), (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / sqrt(vec2(1.0, 1.0))).y)) | 1))) >> ivec4(0, 0, 0, 0)), ivec4(1, 1, 1, 1) * (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) * ivec2(1, 1)), 0, (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0) | 1)), (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ _GLF_IDENTITY((ivec2(1)), (_GLF_IDENTITY((ivec2(1)), ((ivec2(1))) - ivec2(0, 0))) ^ (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6)))))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))) | (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1)))), min(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1)))), ~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1)))))))))))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))))))), min(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ (_GLF_IDENTITY(ivec2(1), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1))))), ivec2(_GLF_IDENTITY(ivec4((~ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1))))), 1, 0), max(ivec4((~ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1))))), 1, 0), ivec4((~ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1))))), 1, 0))))))))), 0, (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | _GLF_IDENTITY(1, max(1, 1)), min(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - abs(0.0)))) | 1, int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)))), ivec4(1, 1, 1, _GLF_IDENTITY(1, (1) ^ 0)) * (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))))), (false ? _GLF_FUZZED(ivec2(_GLF_IDENTITY(38795, int(ivec4(_GLF_IDENTITY(38795, (38795) ^ 0), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1))), 98962)) : (~ (ivec2(1)))))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)), (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))) | (ivec4(_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), (~ (ivec2(1))) / ((ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ ivec2(1, 1))))), 0, _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1) : _GLF_FUZZED(10774))))))))), ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(19.86)), vec2(_GLF_FUZZED(-341.260), (injectionSwitch)[_GLF_IDENTITY(1, (1) - _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), (false ? _GLF_FUZZED(-14743) : (0 >> _GLF_IDENTITY(int(0), int(0)))))) | (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) / 1))))]), bvec2(false, true))).y)) | 1)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1)), 1, 1, 1) * (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) + ivec2(0, 0)), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.95)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) || false)))))) | 1)), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.8) : 1.0)), injectionSwitch.y)) | 1))) | (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))) | _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) | 1)), min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) | 1)), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) | 1)) : _GLF_FUZZED(ivec4(97060, -43691, 65155, 20383)))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) | 1)), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) | 1))) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) | 1))))))), clamp((ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)), min(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))) | 1))), (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(7451.8129), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.8)), bvec2(true, false)))))).y)) | 1))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))) | 1))), clamp((ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))) | 1))), (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))) | 1))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))) | 1))), ((ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))) | 1)))) / (ivec4(1, 1, 1, 1) & ivec4(1, 1, 1, 1))))))), min((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)), (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))) >> ivec4(0, 0, 0, 0))) | (ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (1))), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(sqrt(vec2(0.0, 0.0)))).y)) | 1))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), int(ivec3(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), ((int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)) >> 0), 1, 1))))) | (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))), max((ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))) | (ivec4(_GLF_IDENTITY(ivec2(1), ~ _GLF_IDENTITY((~ (ivec2(1))), ((~ (ivec2(1)))) >> ivec2(0, 0))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))), (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1))) | (ivec4(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)))))))) / ivec4(_GLF_IDENTITY(1, 1 * (1)), 1, 1, 1))))))))), _GLF_struct_36(mat4x2(1.0), bvec2(_GLF_IDENTITY(true, false || (true)))), _GLF_struct_37(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), ivec3(1), mat3x2(1.0))), _GLF_struct_replacement_29._f4.workgroup_base + _GLF_struct_replacement_50.subgroup_base + subgroup_local_id);
 _GLF_struct_45 _GLF_struct_replacement_45 = _GLF_struct_45(_GLF_struct_44(_GLF_struct_40(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) / 1))))) ^ 0)), vec3(1.0), uvec4(1u), vec4(1.0)), _GLF_struct_41(mat3(1.0)), _GLF_struct_42(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (mat4x2(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))), (true ? _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))) : _GLF_FUZZED(vec2(-169.688, 1.1)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(87.74), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(false, true))))).x)), (mat4x2(1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))), (true ? _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), clamp((vec2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), (vec2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), (vec2(1.0)) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))))) : _GLF_FUZZED(vec2(-169.688, 1.1))))) - vec2(0.0, 0.0)), uvec3(1u), uvec3(1u), uvec4(1u), _GLF_struct_replacement_29._f4.workgroup_base + _GLF_struct_replacement_50.subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) : subgroup_local_id)) + 1)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10901) : 1))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | 0)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) ? _GLF_FUZZED(-10901) : 1, 0 | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10901) : 1)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + 1))))) / 1u)) / 1u)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (1) | (1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(floatBitsToUint(5.8)) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))))))), max((false ? _GLF_FUZZED(floatBitsToUint(5.8)) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))))))), (false ? _GLF_FUZZED(floatBitsToUint(5.8)) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))))))))))), 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), 0u | ((subgroup_local_id + 1) | (subgroup_local_id + 1)))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) : _GLF_FUZZED(uaddCarry(2623u, (78942u / subgroup_id), num_workgroup)))), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3((subgroup_local_id + 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, true, false))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)) + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), 0u))) << 0u), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)) + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)) + 1)))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)) + 1))))) | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1))) << 0u), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)) + 1)))))))))) << 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10901) : 1))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10901) : 1, 0 | _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1), max((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1)))) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1), max((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1)))) >> 0, ((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1), max((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) ? _GLF_FUZZED(-10901) : 1)))) >> 0) ^ 0)) + 0))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))))))))), _GLF_struct_43(mat4(1.0), bvec2(true), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), ivec4(1))));
 uint read = 0;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[_GLF_struct_replacement_45._f0._f2.next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) + 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   read = atomicLoad(buf[_GLF_struct_replacement_39.virtual_gid], 4, 64, 2);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-95.04)), bvec2(false, false))).x > injectionSwitch.y)), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-95.04)), bvec2(false, false))).x > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-95.04)), bvec2(false, false))).x > injectionSwitch.y)), false)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   read = atomicLoad(buf[_GLF_struct_replacement_39.virtual_gid], 4, _GLF_IDENTITY(64, (64) << 0), 2);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[_GLF_struct_replacement_39.virtual_gid], read, _GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(64, (64) >> 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
