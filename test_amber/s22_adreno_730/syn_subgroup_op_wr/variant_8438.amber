#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0)), float(_GLF_FUZZED(-3965.9065)), bool(false))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2)), 0.0 + ((true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2)))), (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2)), (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, tan(0.0), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))).y, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2))))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y)) : _GLF_FUZZED(5.2)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-65.39, clamp(-65.39, -65.39, -65.39))) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), true, true)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))))), false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), uvec3(0u, 0u, 0u) + (min(gl_WorkGroupID, gl_WorkGroupID))))) >> (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u)))), min(uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u)))))), (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u)))), min(uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u))))))) >> uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) >> _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))), _GLF_IDENTITY(((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(subgroup_local_id))))))) / uvec3(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_IDENTITY(1u, (1u) | 0u)), (((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))))) / uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))), 1u, 1u)) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), (false ? _GLF_FUZZED(uvec3(77348u, 141670u, 143512u)) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u)), min(gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))))))) | uvec3(0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) >> (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(89817u) : (0u))), (0u))) * 1u)) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, ~ (~ (2u)))), uvec3(2u))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)), clamp((workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)), (workgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) | ((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)))), (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - log(sqrt(1.0)))) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x, mix(float(_GLF_FUZZED(809.637)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(32.22))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(83.82) : 1.0))) * (injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) - vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), max(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) * sqrt(vec2(1.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((mix(vec4(9.7, -632.891, 1.7, -1.5), vec4(_GLF_IDENTITY(-2808.1923, float(mat4x2(-2808.1923, 0.0, abs(1.0), 0.0, 1.0, abs(1.0), 1.0, 0.0))), 7.2, -312.542, -3.9), -502.780) * mat2x4(-1781.2475))) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), _GLF_IDENTITY(max((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)) - vec2(0.0, 0.0)), (max((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)) - vec2(0.0, 0.0))) * mat2(1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x))))), bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), max((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), max((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0))))[0], _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED(71.79), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), max((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0))))[1], float(mat2x4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), max((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0))))[1], 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0)))), bvec2(false, true))).x, mix(float(_GLF_FUZZED(809.637)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(32.22))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), injectionSwitch))), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-75.62) : 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), injectionSwitch))), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))))), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-75.62) : 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? mat2(1.0) : _GLF_FUZZED(mat2(4.5, -6.1, -64.08, 9.2)), transpose(transpose(true ? mat2(1.0) : _GLF_FUZZED(mat2(4.5, -6.1, -64.08, 9.2))))))) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))) - vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), vec2(_GLF_IDENTITY(mat2x3(vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))) - vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat2x3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(255.797)), float(0.0), bool(true))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, abs(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(255.797)), float(0.0), bool(true))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, abs(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0)) * mat3(1.0)))), 1.0, 0.0, 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x3(vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))) - vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))) - vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0)))))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0)), _GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0), max((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x), clamp(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((2367.4119)), _GLF_FUZZED(float(88884u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0), max((mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0)))).x), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / abs(1.0))), (mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), sin(vec2(0.0, 0.0)) + (mat2(1.0) * (injectionSwitch)))) - vec2(0.0, 0.0), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat2x3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(mat3x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0), max((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) - vec2(0.0, 0.0), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-24.07)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) - vec2(0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))).x))))))), bool(true))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), true, false)), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false))))))) || false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), true, false))) && true))), ! (! (bool(bvec3(false, true, false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), true, false))) && true))), ! (! (bool(bvec3(false, true, false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec4((workgroup_base), 0u, 0u, 1u), (uvec4((workgroup_base), 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)))))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) + subgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u)) ^ 0u))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, sqrt(1.0), exp(0.0), 1.0, 1.0, 1.0, sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).x))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u)) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(149676u) : (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u)))) | (workgroup_base))) | (0u & 117954u)), _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u)) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(791.718)), float(injectionSwitch.x), bool(true))))))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u)) << 0u), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u)))) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), 0u ^ (~ ((workgroup_base)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << 0u) + subgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u)) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))), 0u | ((_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))))) / 1u)) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u)) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u)) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_FUZZED(workgroup_size), 0u, 1u, 0u)))) / 1u)) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))) - 0u)) + subgroup_base))))))), _GLF_IDENTITY((workgroup_base + subgroup_base), max((_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))), (workgroup_base + subgroup_base))) >> 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_base) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), (injectionSwitch) * mat2(1.0)))).x)), 0u)))) + subgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))) + subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_FUZZED(workgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_FUZZED(workgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(94.55)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(94.55)))))), ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(94.55))))))) | 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(94.55)))))))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_base))))), (workgroup_base + subgroup_base) >> 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_base) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) ^ 0u), _GLF_IDENTITY(0u, (0u) | (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) + subgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_FUZZED(workgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_base) : 4u))), uint(4u)))) + subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((workgroup_base)) + 0u) : _GLF_FUZZED(workgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_base) : 4u))), uint(4u)))) + subgroup_base))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec2(_GLF_FUZZED(workgroup_size), 1u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_base) : 4u))), uint(4u)))) + subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((workgroup_base)) + 0u) : _GLF_FUZZED(workgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_base) : 4u))), uint(4u)))) + subgroup_base)))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))))))), (workgroup_base + subgroup_base) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))) ? workgroup_base : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))))), max(workgroup_base, workgroup_base)))) + subgroup_base) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - (0u | 0u)), 0u)))) + subgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u) + subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) : _GLF_FUZZED(workgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5759.0423), _GLF_FUZZED(307.640)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))) + 0.0), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) * 1u)) + subgroup_base))))), (workgroup_base + subgroup_base) >> _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_base) ^ 0u) : _GLF_FUZZED(subgroup_local_id))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract((5.7 - -2755.9878))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16((+ subgroup_base))))).x > injectionSwitch.y) || false), true, false)))) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))) && true))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))) && true))), (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, true)))) || false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(true, true))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))) && true))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(true, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! ((bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))))) && true))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) - vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-2727.4479))))), _GLF_ZERO(0.0, injectionSwitch.x))), min((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)))), injectionSwitch))) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))).y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(_GLF_ONE(1.0, injectionSwitch.y))), mat3(1.0) * (mat3(injectionSwitch, length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(_GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED((vec2(-6197.6843, -0.6) + vec2(-905.022, 7.2))) : vec2(_GLF_IDENTITY(mat3(injectionSwitch, length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(_GLF_ONE(1.0, injectionSwitch.y))), mat3(1.0) * (mat3(injectionSwitch, length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(_GLF_ONE(1.0, injectionSwitch.y))))))))).x), _GLF_ZERO(0.0, injectionSwitch.x))), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) - 0.0), 0.0)), injectionSwitch.x))), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-247.030) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.1)), bool(false)))))))).y), float(_GLF_IDENTITY(mat2x4(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))).y), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (true ? mat2x4(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))) * mat2(1.0)))) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).x), _GLF_ZERO(0.0, injectionSwitch.x))), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-7.8), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (((injectionSwitch) * mat2(1.0))[0]) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_FUZZED((5.0 * 36.44))), bvec2(true, false)))))))).y), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0) : _GLF_FUZZED(mat2x4(-8.0, -7941.1626, -4.0, 5.8, -5.8, 70.70, 9586.1939, _GLF_IDENTITY(-65.54, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-52.34) : -65.54))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) >> 0u, ((atomicLoad(buf[virtual_gid], 4, 64, 2)) >> 0u) | 0u), uint(uvec2(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) >> 0u, ((atomicLoad(buf[virtual_gid], 4, 64, 2)) >> 0u) | 0u), 0u))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
    barrier();
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (64) | (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) | (_GLF_IDENTITY(64, (64) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0)))).x < injectionSwitch.y)) ? _GLF_IDENTITY((64) | (64), (_GLF_IDENTITY((64) | (_GLF_IDENTITY(64, (64) + 0)), ((64) | (64)) / 1)) ^ 0) : _GLF_FUZZED(37631), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0)))).x < injectionSwitch.y)) ? _GLF_IDENTITY((64) | (64), (_GLF_IDENTITY((64) | (64), ((64) | (64)) / 1)) ^ 0) : _GLF_FUZZED(37631)) | 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0)))).x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0)))).x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0)))).x < injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) ? _GLF_IDENTITY((64) | (64), (_GLF_IDENTITY((64) | (64), ((64) | (64)) / 1)) ^ 0) : _GLF_FUZZED(37631), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0)))).x < injectionSwitch.y)) ? _GLF_IDENTITY((64) | (64), (_GLF_IDENTITY((64) | (64), ((64) | (64)) / 1)) ^ 0) : _GLF_FUZZED(37631)) | 0)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0)))).x < injectionSwitch.y)) ? _GLF_IDENTITY((64) | (64), (_GLF_IDENTITY((64) | (64), ((64) | (64)) / 1)) ^ 0) : _GLF_FUZZED(37631), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))) ? _GLF_IDENTITY((64) | (64), (_GLF_IDENTITY((64) | (64), ((64) | (64)) / 1)) ^ 0) : _GLF_FUZZED(37631)) | 0))))), ~ (~ ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) / 1)))) * 1)) | (64))))))), 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))), false, false, false)))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(2.9, -41.18, -45.85, -85.93, 58.96, 3.7, -22.99, -149.077, 1497.6475, 2571.1104, 110.440, -0.6)) : mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-40.83, _GLF_IDENTITY(-745.823, min(-745.823, -745.823))).t)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))) * 1.0), float(_GLF_FUZZED(7.2)), bool(false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4203.4630), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.6)), bvec2(true, false))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4203.4630), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.6)), bvec2(true, false))).y)) || false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], read, 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
