#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 mat4x3 _f0;
 bool _f1;
 mat4x2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
 uvec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_28 {
 ivec3 _f0;
} ;

struct _GLF_struct_27 {
 bvec3 _f0;
 mat2x3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_29 {
 _GLF_struct_27 _f0;
 bvec3 _f1;
 bool _f2;
 _GLF_struct_28 _f3;
} ;

struct _GLF_struct_25 {
 vec3 _f0;
 vec3 _f1;
 ivec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_24 {
 mat2x4 _f0;
 vec4 _f1;
 bvec4 _f2;
 uint _f3;
 mat4x2 _f4;
 mat2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_23 {
 ivec4 _f0;
 vec3 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_22 {
 vec3 _f0;
} ;

struct _GLF_struct_26 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 _GLF_struct_24 _f2;
 bool _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_32 {
 _GLF_struct_26 _f0;
 mat4x3 _f1;
 _GLF_struct_29 _f2;
 uint subgroup_id;
 ivec4 _f3;
 _GLF_struct_31 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_19 {
 uvec3 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_18 {
 mat3x4 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 mat4 _f1;
 int _f2;
} ;

struct _GLF_struct_16 {
 mat2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_15 {
 int _f0;
} ;

struct _GLF_struct_20 {
 bool _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_19 _f5;
 float _f6;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 bvec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 uvec4 _f1;
 uint workgroup_id;
 bool _f2;
 int _f3;
 _GLF_struct_13 _f4;
 mat4x2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_14 _f0;
 _GLF_struct_20 _f1;
 bvec3 _f2;
 vec4 _f3;
 ivec4 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 mat2 _f1;
 uint subgroup_size;
 bvec3 _f2;
 uint _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
 vec2 _f3;
 ivec4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 int _f1;
 uint _f2;
 mat2x4 _f3;
 ivec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_2 {
 float _f0;
 uint _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 float _f1;
 uvec3 _f2;
 vec4 _f3;
 mat3x2 _f4;
 mat4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 float _f1;
 mat4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 ivec4 _f3;
 _GLF_struct_2 _f4;
 ivec3 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_4 _f0;
 bvec3 _f1;
 _GLF_struct_9 _f2;
 vec4 _f3;
 mat3x4 _f4;
 bvec4 _f5;
 _GLF_struct_11 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_26(_GLF_struct_22(vec3(1.0)), _GLF_struct_23(ivec4(1), vec3(1.0), ivec3(1), mat4x3(1.0), uvec2(1u)), _GLF_struct_24(mat2x4(1.0), vec4(1.0), bvec4(true), 1u, mat4x2(1.0), mat2(1.0), vec3(1.0)), true, _GLF_struct_25(vec3(1.0), vec3(1.0), ivec2(1), mat2(1.0))), mat4x3(1.0), _GLF_struct_29(_GLF_struct_27(bvec3(true), mat2x3(1.0), mat4(1.0)), bvec3(true), true, _GLF_struct_28(ivec3(1))), gl_SubgroupID, ivec4(1), _GLF_struct_31(_GLF_struct_30(mat4x3(1.0), true, mat4x2(1.0), bvec4(true)), uvec4(1u), mat2x4(1.0)), uvec2(1u));
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_4(mat4x3(1.0), _GLF_struct_0(mat2(1.0), 1.0, mat4(1.0), ivec4(1)), _GLF_struct_1(uvec2(1u), 1.0, uvec3(1u), vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3x2(1.0), mat4(1.0), vec2(1.0)), ivec4(1), _GLF_struct_2(1.0, 1u, mat4x3(1.0)), ivec3(1), _GLF_struct_3(mat3x2(1.0), 1, 1u, mat2x4(1.0), ivec2(1), vec4(1.0))), bvec3(true), _GLF_struct_9(_GLF_struct_5(mat2x3(1.0), mat2x4(1.0)), _GLF_struct_6(uvec3(1u)), _GLF_struct_7(ivec2(1), mat2x4(1.0), mat2x4(1.0), vec2(1.0), ivec4(1), bvec4(true)), _GLF_struct_8(vec4(1.0), uvec4(1u))), vec4(1.0), mat3x4(1.0), bvec4(true), _GLF_struct_11(_GLF_struct_10(mat2(1.0), mat2(1.0), gl_SubgroupSize, bvec3(true), 1u), uvec2(1u)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_14(bvec4(true), uvec4(1u), gl_WorkGroupID.x, true, 1, _GLF_struct_13(uvec2(1u), bvec4(true), mat2x4(1.0)), mat4x2(1.0), mat4(1.0)), _GLF_struct_20(true, _GLF_struct_15(1), _GLF_struct_16(mat2(1.0), vec3(1.0)), _GLF_struct_17(bvec2(true), mat4(1.0), 1), _GLF_struct_18(mat3x4(1.0), mat4x2(1.0), mat3x4(1.0), _GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))), _GLF_struct_19(uvec3(1u), mat2x4(1.0), uvec2(1u), mat3(1.0)), 1.0), bvec3(true), vec4(1.0), ivec4(1), uvec4(1u));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_21._f0.workgroup_id;
 uint subgroup_base = _GLF_struct_replacement_32.subgroup_id * _GLF_struct_replacement_12._f6._f0.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_struct_replacement_12._f6._f0.subgroup_size);
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, _GLF_IDENTITY(bool(bool((subgroup_local_id % 2) == 0)), ! (! (bool(bool((subgroup_local_id % 2) == 0)))))))
  {
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
