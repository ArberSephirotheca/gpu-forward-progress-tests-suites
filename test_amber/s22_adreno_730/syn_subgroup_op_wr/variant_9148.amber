#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))), (_GLF_IDENTITY((bool(false)), ! (! ((bool(false)))))) || false) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) && true))), false, true))))))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.3)), float(0.0), bool(true)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, 9.1, 5954.8792, -7.4))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (float(_GLF_IDENTITY(0.0, min(0.0, 0.0)))) + 0.0)))), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, 9.1, 5954.8792, _GLF_IDENTITY(-7.4, float(mat4x2(-7.4, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))), (false ? _GLF_FUZZED(vec2(-95.28, -56.19)) : vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0), (true ? mat2x3(injectionSwitch, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, 9.1, 5954.8792, -7.4)))))))) * vec2(1.0, 1.0))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), float(_GLF_FUZZED(585.934)), bool(false)))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, 9.1, 5954.8792, -7.4))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-265.073)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, 9.1, 5954.8792, -7.4))))), (false ? _GLF_FUZZED(vec2(-95.28, -56.19)) : vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), float(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-10.20)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(true))), 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, 9.1, 5954.8792, -7.4)))))))) * _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || (bool(bvec2(false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0), (true ? mat2x3(injectionSwitch, log(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, _GLF_IDENTITY(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) + (9.1)), _GLF_IDENTITY(9.1, clamp(9.1, 9.1, 9.1)))), min(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) + (9.1)), _GLF_IDENTITY(9.1, clamp(9.1, 9.1, 9.1)))), _GLF_IDENTITY(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) + (9.1)), _GLF_IDENTITY(9.1, clamp(9.1, 9.1, 9.1)))), clamp(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) + (9.1)), _GLF_IDENTITY(9.1, clamp(9.1, 9.1, 9.1)))), _GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) + (9.1)), _GLF_IDENTITY(9.1, clamp(9.1, 9.1, 9.1)))), _GLF_IDENTITY(_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) + (9.1)), _GLF_IDENTITY(9.1, clamp(9.1, 9.1, 9.1)))), (_GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) + (9.1)), _GLF_IDENTITY(9.1, clamp(9.1, 9.1, 9.1))))) - 0.0))))), 5954.8792, -7.4))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.5)), float(sqrt(0.0)), bool(true))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(1.0, 0.0, 0.0))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, 9.1, 5954.8792, -7.4))))), (false ? _GLF_FUZZED(vec2(-95.28, -56.19)) : vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0)))))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(1.2)), bool(false))), float(mat4x3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), tan(0.0) + (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, tan(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, tan(0.0)))), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, tan(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, tan(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, tan(0.0)))))), 0.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(sqrt(0.0), (false ? _GLF_FUZZED(-1.2) : sqrt(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(sqrt(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(71.94))), injectionSwitch.x), 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0)))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, 9.1, 5954.8792, -7.4)))))))) * _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, _GLF_IDENTITY(9.1, max(_GLF_IDENTITY(9.1, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((0.2 / -15.35))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.5)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0))) + (9.1)), _GLF_IDENTITY(9.1, clamp(9.1, 9.1, 9.1)))), 5954.8792, -7.4))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.5)), float(sqrt(0.0)), bool(true))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(1.0, 0.0, 0.0))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, _GLF_IDENTITY(9.1, clamp(9.1, 9.1, 9.1)), _GLF_IDENTITY(5954.8792, max(5954.8792, 5954.8792)), -7.4))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true) ? _GLF_FUZZED(vec2(-95.28, -56.19)) : vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0)))))), 1.0), (true ? mat2x3(injectionSwitch, log(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, tan(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, tan(0.0)))), 0.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(44.53)), bool(false))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0)))), 1.0) : _GLF_FUZZED(mat2x3(-105.848, 9.9, -23.66, 9.1, 5954.8792, -7.4)))))))) * vec2(1.0, 1.0))).x)) > injectionSwitch.y))) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupID) | uvec3(0u, 0u, 0u)), min(uvec3((gl_WorkGroupID) | uvec3(0u, 0u, 0u)), uvec3((gl_WorkGroupID) | uvec3(0u, 0u, 0u))))), min(uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupID) | uvec3(0u, 0u, 0u)), min(uvec3((gl_WorkGroupID) | uvec3(0u, 0u, 0u)), uvec3((gl_WorkGroupID) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupID) | uvec3(0u, 0u, 0u)), min(uvec3((gl_WorkGroupID) | uvec3(0u, 0u, 0u)), uvec3((gl_WorkGroupID) | uvec3(0u, 0u, 0u))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(799.229, 56.70)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(799.229, 56.70)))).x > injectionSwitch.y) && true)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * subgroup_size))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * subgroup_size))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * subgroup_size))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), ~ (~ (~ (64)))), _GLF_IDENTITY((~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))), (true ? ~ ((64)) : _GLF_FUZZED(-72825)))))), max((~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))), (true ? ~ ((64)) : _GLF_FUZZED(-72825)))))), _GLF_IDENTITY((~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))), (true ? ~ ((64)) : _GLF_FUZZED(-72825)))))), ((~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))), (true ? ~ ((64)) : _GLF_FUZZED(-72825))))))) / 1))) + 0)))), ((_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((64), ((64)) >> 0)), 0 + ((~ _GLF_IDENTITY((64), ((64)) >> 0))))))) >> (-2498 & 0)))) >> 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))))) + 0u)], min(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))))) + 0u)], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))))) + 0u)], 0u | (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))))) + 0u)])))), 4, 64, 2), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), 64, 2))), max(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(58794) : _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, 0 ^ (2))))))), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(4, 4))), (~ (_GLF_IDENTITY(4, max(4, 4)))) >> 0))), 64, 2))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), 64, 2)))))) | (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | 0), 2))), (true ? read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) >> 0))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) >> 0))), ~ (~ (int(int(_GLF_IDENTITY(2, (2) >> 0)))))), int(int(_GLF_IDENTITY(2, (2) >> 0))), int(int(_GLF_IDENTITY(2, (2) >> 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, 0 | (2))), ~ (~ (~ (_GLF_IDENTITY(2, 0 | (2))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, 0 | (2))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 | (2)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, 0 | (2)), 1, 0)), (int(ivec3(_GLF_IDENTITY(2, 0 | (2)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(2, 0 | (2)), 1, 0))))))), clamp((~ (_GLF_IDENTITY(2, 0 | (2)))), (~ (_GLF_IDENTITY(2, 0 | (2)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(2, 0 | (2)))), ((~ (_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, ~ (~ (2)))))))) >> 0))))))) - 0))), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], 4, 64, 2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)), (_GLF_IDENTITY((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)), uint(uint((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)))))) + 0u), ~ (_GLF_IDENTITY(~ ((atomicLoad(buf[virtual_gid], 4, 64, 2))), 0u ^ (~ ((atomicLoad(buf[virtual_gid], 4, 64, 2))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)), (_GLF_IDENTITY((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)), uint(uint((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)))))) + 0u), ~ (_GLF_IDENTITY(~ ((atomicLoad(buf[virtual_gid], 4, 64, 2))), 0u ^ (~ ((atomicLoad(buf[virtual_gid], 4, 64, 2))))))), (_GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)), (_GLF_IDENTITY((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)), uint(uint((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2)))))) + 0u), ~ (_GLF_IDENTITY(~ ((atomicLoad(buf[virtual_gid], 4, 64, 2))), 0u ^ (~ ((atomicLoad(buf[virtual_gid], 4, 64, 2)))))))) << 0u))) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ (2)), 2))), max(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | (_GLF_IDENTITY(2, int(ivec4(2, 0, 0, 1))))), min(_GLF_IDENTITY(2, 0 ^ (2)), 2))), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) ^ 0u)], 4, 64, _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ (2)), 2)))))))) | (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 ^ (64)), 2))) : _GLF_FUZZED(subgroup_size)));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))), false, true)), false, false, true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), false || (bool(bvec3(! (false), false, true))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))), (_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))), true && (bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))))) || false))))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), bool(bool(bool(bvec3(! (false), false, true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))) || false)))))))))), false, true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), ! (! (bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), ! (! (bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), ! (! (bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))))))))))), false, true), true))))))), false, false, true))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, min(0, 0)) & -36845)); _injected_loop_counter --)
      {
       _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, 0 + (64))))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, 0 + (64))))), 2)));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (1 ^ 0))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-59478, (-59478) + 0)) : int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 subgroupBarrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7818.1671)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), ((injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), 0.0, 1.0)))))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.2)))), transpose(transpose(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0)))))))), clamp(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(vec2(-9554.2802, 6.5)) : vec2(0.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6406.5309)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0)))))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0))), float(_GLF_FUZZED(-6.3)), bool(false))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))), sqrt(1.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))) : _GLF_FUZZED(vec2(90.16, -343.492)))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0)))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(log2(vec2(-5.1, -62.54))) : _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0)))))))), max(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(log2(vec2(-5.1, -62.54))) : _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0)))))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(log2(vec2(-5.1, -62.54))) : _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0)))))))))))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(mat2x3(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0), (true ? mat2x3(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-83.93, 40.09, 11.49, 148.975, -1.3, 38.30)))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0))))))))))) * mat2(1.0)).y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), ~ (~ (virtual_gid)))], read, 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) << 0))), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
