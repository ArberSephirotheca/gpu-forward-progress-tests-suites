#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base;
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id;
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(-68997, (-68997) | (-68997)) & (1 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id)))), max(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id)))), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id)))))));
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
            {
            }
           else
            {
             GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.w = workgroup_id;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) ? _GLF_IDENTITY(workgroup_size, (15054u & 0u) | (workgroup_size)) : _GLF_FUZZED(workgroup_id))) * GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.w;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (5), max(~ (5), _GLF_IDENTITY(~ (5), min(~ (5), ~ (5)))))), (true ? ~ (~ (5)) : _GLF_FUZZED((-87447 >> (_injected_loop_counter * _injected_loop_counter))))))))), (1 ^ 1) + (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, ~ (~ (5)))))), int(ivec3((0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, ~ (~ (5)))))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(674.323)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z = workgroup_base;
            }
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z;
  }
 else
  {
  }
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)).x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_base : _GLF_FUZZED(107867u))) + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y, 1u * (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y));
 do
  {
   GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) | (virtual_gid), (false ? _GLF_FUZZED(num_workgroup) : (virtual_gid) | (virtual_gid))), min((virtual_gid) | (virtual_gid), _GLF_IDENTITY((virtual_gid) | (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u & 139188u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u ^ ((virtual_gid) | (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u & 139188u))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))), virtual_gid));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y, uint(uvec4(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y, 0u, 0u, 0u))))));
  }
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.y;
 uint next_virtual_gid = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_base + ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid) | (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)).y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z))) >> 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z))) >> 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z))) >> 0u, uint(uint((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z))) >> 0u)))))));
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x = next_virtual_gid;
 uint read = 0;
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x = read;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x, (GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x) + 0u), (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x, (GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x) + 0u)) + 0u)], _GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), max(uint(1), uint(1))))), 4, 64, 4);
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y % _GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(0, max(0, 0)) + _GLF_IDENTITY((2), (_GLF_IDENTITY((2), max((2), _GLF_IDENTITY((2), (false ? _GLF_FUZZED(65592) : (2)))))) | ((2))))), uint(uvec2((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y % _GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), 0 + (2))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))) == 0)
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), (_GLF_WRAPPED_IF_FALSE(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), (_GLF_WRAPPED_IF_FALSE(false)) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))), false, false, true))))))))))) || false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 subgroupAll(false);
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, ~ (~ (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid))), GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, ~ (~ (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid))), GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid, ~ (~ (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid))), GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid)) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id)))) | uvec4(0u, 0u, 0u, 0u)).w], 4, 64, 2), ~ (~ (atomicLoad(buf[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w], 4, 64, 2))));
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
          {
           do
            {
             do
              {
               switch(_GLF_SWITCH(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))) ^ _GLF_IDENTITY(0, (0) | 0), 0 ^ ((0) ^ 0)))))
                {
                 case 39:
                 bool _GLF_SWITCH_0_0v[22], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
                 case 76:
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(-86628) : 5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))) || (false)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))) || (false)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))))))) && true)) || (true))))
                        {
                         mat4x2(-11.83, -905.636, _GLF_IDENTITY(28.48, max(28.48, _GLF_IDENTITY(28.48, _GLF_IDENTITY((true ? 28.48 : _GLF_FUZZED(step(4807.7399, 9.8))), float(vec3((true ? 28.48 : _GLF_FUZZED(step(4807.7399, 9.8))), 1.0, _GLF_IDENTITY(log(sqrt(1.0)), min(_GLF_IDENTITY(log(sqrt(1.0)), float(_GLF_IDENTITY(mat2(log(sqrt(1.0)), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), transpose(transpose(mat2(log(sqrt(1.0)), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))), log(sqrt(1.0)))))))))), 35.71, -4.8, 6.0, -5.4, -852.416);
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 case 0:
                 case 72:
                 case 83:
                 case 25:
                 case 5:
                 case 49:
                 case 71:
                 case 61:
                 case 64:
                 case 15:
                 subgroupAll(false);
                 break;
                 case 44:
                 if(false)
                  {
                   do
                    {
                     do
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           vec2(_GLF_IDENTITY(-1.7, min(-1.7, -1.7)), 5.3);
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   uvec3 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v[78];
                   findMSB(_GLF_IDENTITY(uvec2(138066u, _GLF_IDENTITY(160011u, (160011u) | (160011u))), max(_GLF_IDENTITY(uvec2(138066u, 160011u), min(uvec2(138066u, _GLF_IDENTITY(160011u, max(_GLF_IDENTITY(160011u, (160011u) | _GLF_IDENTITY((160011u), ((160011u)) >> 0u)), 160011u))), uvec2(138066u, 160011u))), uvec2(138066u, _GLF_IDENTITY(160011u, (_GLF_IDENTITY(_GLF_IDENTITY(160011u, uint(uvec3(_GLF_IDENTITY(160011u, clamp(160011u, _GLF_IDENTITY(160011u, max(160011u, 160011u)), 160011u)), 1u, _GLF_IDENTITY(1u, (1u) | 0u)))), (_GLF_IDENTITY(160011u, ~ (~ (160011u)))) | (160011u))) / 1u)))));
                   bvec4 _GLF_SWITCH_0_5v[9], _GLF_SWITCH_0_6v[58];
                   bvec2 _GLF_SWITCH_0_7v[52], _GLF_SWITCH_0_8v[89];
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       do
                        {
                         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           mat2x3(2047.5797, 96.51, 918.206, 2308.1015, 841.108, -0.5);
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = (1 ^ 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) - 0)) >> 0)), ~ (~ (int(7)))))) >> _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), ! (! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), ! (! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0 | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), int(ivec2(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), min((int(7)), (int(7)))))))), (0 >> _GLF_IDENTITY(int(0), int(0)))))), max(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), max(int(7), int(7)))))))), _GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))), (((_GLF_IDENTITY(1, ~ (~ (1))) | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))) << 0))) >> _GLF_IDENTITY(int(7), int(7)))), bool(bvec3(_GLF_IDENTITY((_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0 | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), int(ivec2(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), min((int(7)), (int(7)))))))), (0 >> _GLF_IDENTITY(int(0), int(0)))))), max(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), max(int(7), int(7)))))))), _GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))), (((_GLF_IDENTITY(1, ~ (~ (1))) | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))) << 0))) >> _GLF_IDENTITY(int(7), int(7)))), true && (_GLF_IDENTITY((_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0 | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), int(ivec2(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), min((int(7)), (int(7)))))))), (0 >> _GLF_IDENTITY(int(0), int(0)))))), max(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), max(int(7), int(7)))))))), _GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))), (((_GLF_IDENTITY(1, ~ (~ (1))) | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))) << 0))) >> _GLF_IDENTITY(int(7), int(7)))), ! (! ((_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0 | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), int(ivec2(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), min((int(7)), (int(7)))))))), (0 >> _GLF_IDENTITY(int(0), int(0)))))), max(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), max(int(7), int(7)))))))), _GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))), (((_GLF_IDENTITY(1, ~ (~ (1))) | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))) << 0))) >> _GLF_IDENTITY(int(7), int(7))))))))), false, false))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))) >> _GLF_IDENTITY(int(7), int(7))), true && (_injected_loop_counter != (_GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), (_GLF_IDENTITY((int(7)), (_GLF_IDENTITY((int(7)), ((int(7))) | 0)) * 1)) | (0 >> _GLF_IDENTITY(int(4), int(4)))))))), max(((_GLF_IDENTITY(1 | 0, (1 | 0) | (_GLF_IDENTITY(1 | 0, (1 | 0) | (1 | 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) / 1), ~ (~ (int(7))))), 0 | (_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) / 1), ~ (~ (int(7)))))))), _GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), (_GLF_IDENTITY(int(7), ~ (~ (int(7))))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), (_GLF_IDENTITY(int(7), ~ (~ (int(7))))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(_GLF_IDENTITY(7, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (7)))))), (_GLF_IDENTITY(int(7), ~ (~ (int(7))))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))) * 1) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY((((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, (30836 & 0))), (int(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, (30836 & 0)))) | 0)) | _GLF_IDENTITY(0, (0) | (0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))) | _GLF_IDENTITY((_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ _GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) | (_GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) - 0)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ _GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) | (_GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) - 0)))))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 0)), clamp(int(ivec4((_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ _GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) | (_GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) - 0)))))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 0)), int(ivec4((_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ _GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) | (_GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) - 0)))))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 0)), int(ivec4((_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ _GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) | (_GLF_IDENTITY((~ (int(7))), ((~ (int(7)))) - 0)))))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 0)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(((1 | _GLF_IDENTITY(0, int(ivec3(0, 0, 1)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0 | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), 0 + (((1 | _GLF_IDENTITY(0, int(ivec3(0, 0, 1)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0 | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))))))), ((((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))))) * 1), (((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))), _GLF_IDENTITY(_GLF_IDENTITY((((1 | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ (int(7)), (~ (int(7))) * 1))), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))), int(int(_GLF_IDENTITY((((1 | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ (int(7)), (~ (int(7))) * 1))), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))), ((((1 | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ (int(7)), (~ (int(7))) * 1))), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))))) | 0)))), max((((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))), (((1 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))))))) << 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 ^ (7))), int(7)))))))); _injected_loop_counter ++)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 mat4x2(mat4x3(2.1, _GLF_IDENTITY(8353.4114, (_GLF_IDENTITY(8353.4114, min(_GLF_IDENTITY(8353.4114, max(8353.4114, 8353.4114)), _GLF_IDENTITY(8353.4114, mix(float(8353.4114), float(_GLF_FUZZED(-18.87)), bool(false)))))) * 1.0), 2.3, _GLF_IDENTITY(_GLF_IDENTITY(94.51, (false ? _GLF_FUZZED(dot(vec3(-4588.4538, -5.7, -2.1), vec3(-2.3, -8.9, -688.013))) : 94.51)), (_GLF_IDENTITY(94.51, (false ? _GLF_FUZZED(dot(vec3(-4588.4538, -5.7, -2.1), vec3(-2.3, -8.9, -688.013))) : 94.51))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8381.7054, (_GLF_IDENTITY(-8381.7054, min(-8381.7054, _GLF_IDENTITY(-8381.7054, min(-8381.7054, -8381.7054))))) / 1.0), min(-8381.7054, _GLF_IDENTITY(-8381.7054, _GLF_IDENTITY((-8381.7054), mix(float(_GLF_FUZZED(-2.2)), float((-8381.7054)), bool(true))) / 1.0))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(-8381.7054, min(-8381.7054, _GLF_IDENTITY(-8381.7054, (-8381.7054) / 1.0)))), float(_GLF_FUZZED(9.6)), bool(false)), float(mat2x4(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(-8381.7054, min(-8381.7054, _GLF_IDENTITY(-8381.7054, _GLF_IDENTITY((-8381.7054), mix(float((-8381.7054)), float(_GLF_FUZZED(59.49)), bool(false))) / 1.0)))), float(_GLF_FUZZED(9.6)), bool(false)), min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(-8381.7054, min(-8381.7054, _GLF_IDENTITY(-8381.7054, (-8381.7054) / 1.0)))), float(_GLF_FUZZED(9.6)), bool(false)), mix(float(_GLF_FUZZED(-82.48)), float(mix(float(_GLF_IDENTITY(-8381.7054, min(-8381.7054, _GLF_IDENTITY(-8381.7054, (-8381.7054) / 1.0)))), float(_GLF_FUZZED(9.6)), bool(false))), bool(true))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(-8381.7054, min(-8381.7054, _GLF_IDENTITY(-8381.7054, _GLF_IDENTITY((-8381.7054), ((-8381.7054)) / 1.0) / 1.0)))), float(_GLF_FUZZED(9.6)), bool(false)), max(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-8381.7054, min(-8381.7054, _GLF_IDENTITY(-8381.7054, (-8381.7054) / 1.0))), max(_GLF_IDENTITY(-8381.7054, min(-8381.7054, _GLF_IDENTITY(-8381.7054, (-8381.7054) / 1.0))), _GLF_IDENTITY(-8381.7054, min(-8381.7054, _GLF_IDENTITY(-8381.7054, (-8381.7054) / 1.0)))))), float(_GLF_FUZZED(9.6)), bool(false)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-8381.7054, float(float(-8381.7054))), min(-8381.7054, _GLF_IDENTITY(-8381.7054, (-8381.7054) / 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.6), (_GLF_FUZZED(9.6)) + 0.0), (true ? _GLF_FUZZED(9.6) : _GLF_FUZZED(-1189.7094)))), bool(false)))))), determinant(mat3(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(438.683), _GLF_IDENTITY(float(mat2(_GLF_FUZZED(438.683), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_FUZZED(438.683), 1.0, 1.0, 0.0)), float(mat2(_GLF_FUZZED(438.683), 1.0, 1.0, 0.0))))) : _GLF_IDENTITY(0.0, (0.0) * determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, cos(0.0))))), 201.240, 29.28, _GLF_IDENTITY(15.87, clamp(15.87, _GLF_IDENTITY(15.87, _GLF_IDENTITY((_GLF_IDENTITY(15.87, clamp(15.87, _GLF_IDENTITY(15.87, mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(15.87, max(15.87, 15.87))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 15.87))) + 0.0, _GLF_IDENTITY(clamp((_GLF_IDENTITY(15.87, clamp(_GLF_IDENTITY(15.87, mix(float(_GLF_FUZZED(-1.2)), float(15.87), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))), 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, clamp(15.87, 15.87, _GLF_IDENTITY(15.87, (true ? _GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87)) : _GLF_FUZZED(-97.69)))))) + _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, max((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0))), clamp(clamp((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, clamp(15.87, _GLF_IDENTITY(15.87, (false ? _GLF_FUZZED(7633.8620) : 15.87)), 15.87))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, _GLF_IDENTITY(max((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, clamp(_GLF_IDENTITY(15.87, float(vec3(15.87, 0.0, determinant(mat4(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 15.87, 15.87))) + 0.0), mix(float(_GLF_FUZZED(-99.53)), float(_GLF_IDENTITY(max((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, clamp(_GLF_IDENTITY(15.87, float(vec3(15.87, 0.0, determinant(mat4(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 15.87, 15.87))) + 0.0), float(mat2(max((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, clamp(_GLF_IDENTITY(15.87, float(vec3(15.87, 0.0, determinant(mat4(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 15.87, 15.87))) + 0.0), 1.0, 0.0, 0.0)))), bool(true))))), clamp((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), max((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, _GLF_IDENTITY(clamp(15.87, 15.87, 15.87), (clamp(15.87, 15.87, 15.87)) / 1.0))) + 0.0))), clamp((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, clamp(15.87, _GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87)), 15.87))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(15.87, clamp(_GLF_IDENTITY(15.87, 0.0 + (15.87)), 15.87, 15.87))) + 0.0, max((_GLF_IDENTITY(15.87, clamp(15.87, 15.87, 15.87))) + 0.0, (_GLF_IDENTITY(15.87, clamp(15.87, _GLF_IDENTITY(15.87, max(15.87, _GLF_IDENTITY(15.87, max(15.87, 15.87)))), 15.87))) + 0.0))))))), 15.87)), _GLF_IDENTITY(2909.4585, float(mat4x3(2909.4585, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0)))), 425.437, _GLF_IDENTITY(-2.3, max(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-532.555, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-532.555, float(mat2x4(-532.555, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY((vec2(1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((vec2(1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))) - 0.0))))), max(_GLF_IDENTITY(-532.555, float(mat2x4(-532.555, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(-532.555, float(mat2x4(-532.555, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(-532.555, (true ? _GLF_IDENTITY(-532.555, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-532.555, float(mat4(-532.555, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) - 0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(583.366)), float(1.0), bool(true)))) * (vec4(_GLF_IDENTITY(-532.555, float(mat4(-532.555, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))))) : _GLF_FUZZED(length(vec4(0.9, -334.939, -5.6, -7.3))))), (_GLF_IDENTITY(_GLF_IDENTITY(-532.555, (true ? _GLF_IDENTITY(-532.555, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-532.555, float(mat4(-532.555, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) - 0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(583.366)), float(1.0), bool(true)))) * (vec4(_GLF_IDENTITY(-532.555, float(mat4(-532.555, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))))) : _GLF_FUZZED(length(vec4(0.9, -334.939, -5.6, -7.3))))), float(mat4x3(_GLF_IDENTITY(-532.555, (true ? _GLF_IDENTITY(-532.555, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-532.555, float(mat4(-532.555, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) - 0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(583.366)), float(1.0), bool(true)))) * (vec4(_GLF_IDENTITY(-532.555, float(mat4(-532.555, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))))) : _GLF_FUZZED(length(vec4(0.9, -334.939, -5.6, -7.3))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) - 0.0), -532.555)))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(_GLF_IDENTITY(-2.3, _GLF_IDENTITY(float(vec2(-2.3, sqrt(sqrt(0.0)))), clamp(float(vec2(-2.3, sqrt(sqrt(0.0)))), _GLF_IDENTITY(float(vec2(-2.3, sqrt(sqrt(0.0)))), (true ? float(vec2(-2.3, sqrt(sqrt(0.0)))) : _GLF_FUZZED(8.4))), float(vec2(-2.3, sqrt(sqrt(0.0)))))))), bool(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false))))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(-2.3), bool(true)))), max(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(-2.3), bool(true)))), _GLF_IDENTITY(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(-2.3), bool(true)))), (false ? _GLF_FUZZED(9098.4674) : float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), _GLF_IDENTITY(float(-2.3), mix(float(_GLF_FUZZED(1.1)), float(float(-2.3)), bool(true))), bool(true)))))))) : _GLF_FUZZED(-2.6))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(_GLF_IDENTITY(-2.3, _GLF_IDENTITY(float(vec2(-2.3, sqrt(sqrt(0.0)))), clamp(float(vec2(-2.3, sqrt(sqrt(0.0)))), _GLF_IDENTITY(float(vec2(-2.3, sqrt(sqrt(0.0)))), (true ? float(vec2(-2.3, sqrt(sqrt(0.0)))) : _GLF_FUZZED(8.4))), float(vec2(-2.3, sqrt(sqrt(0.0)))))))), bool(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false))))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(-2.3), bool(true)))), max(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(-2.3), bool(true)))), _GLF_IDENTITY(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(-2.3), bool(true)))), (false ? _GLF_FUZZED(9098.4674) : float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), _GLF_IDENTITY(float(-2.3), mix(float(_GLF_FUZZED(1.1)), float(float(-2.3)), bool(true))), bool(true)))))))) : _GLF_FUZZED(-2.6))), _GLF_IDENTITY(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(_GLF_IDENTITY(-2.3, _GLF_IDENTITY(float(vec2(-2.3, sqrt(sqrt(0.0)))), clamp(float(vec2(-2.3, sqrt(sqrt(0.0)))), _GLF_IDENTITY(float(vec2(-2.3, sqrt(sqrt(0.0)))), (true ? float(vec2(-2.3, sqrt(sqrt(0.0)))) : _GLF_FUZZED(8.4))), float(vec2(-2.3, sqrt(sqrt(0.0)))))))), bool(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false))))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(-2.3), bool(true)))), max(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(-2.3), bool(true)))), _GLF_IDENTITY(float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), float(-2.3), bool(true)))), (false ? _GLF_FUZZED(9098.4674) : float(_GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED(-60.93)), _GLF_IDENTITY(float(-2.3), mix(float(_GLF_FUZZED(1.1)), float(float(-2.3)), bool(true))), bool(true)))))))) : _GLF_FUZZED(-2.6))))), bool(true))), _GLF_IDENTITY(-2.3, (true ? -2.3 : _GLF_FUZZED(faceforward(vec3(-30.10, 1001.2694, -1769.1208).t, -5.1, 76.95)))))), -3384.8166));
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                      }
                     _GLF_IDENTITY(_GLF_SWITCH_0_1v, ! (! _GLF_IDENTITY((_GLF_SWITCH_0_1v), true && ((_GLF_SWITCH_0_1v)))));
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))), int(1))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))), int(1))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(_injected_loop_counter)) : _GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))), int(1)))))) << 0)))); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, ((true) || false) || false))))))
                            {
                             do
                              {
                               ;
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                     bvec4 _GLF_SWITCH_0_9v[57];
                    }
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)))))) * 1)) ^ 0), clamp((0 << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) - 0)) | 0)), (0 << _GLF_IDENTITY(int(1), int(1)))))); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.7, 6782.1769)) : injectionSwitch))) - vec2(0.0, 0.0)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.8))), (injectionSwitch.x > injectionSwitch.y) && true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           _GLF_SWITCH_0_2v;
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   while((_GLF_SWITCH_0_2v || (_GLF_IDENTITY(_GLF_IDENTITY(-94127, _GLF_IDENTITY((-94127), 0 ^ ((-94127))) / (1 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) - 0)))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), max((0), (0)))) + 0) | _GLF_IDENTITY((_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 1, 0, 1)))), 0 ^ ((_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 1, 0, 1)))))))) | _GLF_IDENTITY(0, 0 | (0)), ((_GLF_IDENTITY(0, (0) | (0))) | _GLF_IDENTITY(0, 0 | (0))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(true))), 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x)))) ^ 0)) ^ 0))) == 95459, true && (_GLF_IDENTITY(_GLF_IDENTITY(-94127, 1 * (-94127)), _GLF_IDENTITY((-94127) / (1 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0))) | (0))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))))))) | 0, ((_GLF_IDENTITY(0, (0) | (0))) | 0) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))) ^ 0)) ^ 0)), 0 | ((-94127) / (1 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))))))) | 0, ((_GLF_IDENTITY(0, (0) | (0))) | 0) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))) ^ 0)) ^ 0))))) == _GLF_IDENTITY(95459, 0 | (95459)))))))
                    {
                    }
                   while(_GLF_IDENTITY(_GLF_IDENTITY((94.13 >= _GLF_IDENTITY(-37.80, _GLF_IDENTITY((-37.80), _GLF_IDENTITY(max((-37.80), _GLF_IDENTITY((-37.80), clamp((-37.80), _GLF_IDENTITY((-37.80), max((-37.80), (-37.80))), _GLF_IDENTITY((-37.80), ((-37.80)) - 0.0)))), mix(float(max((-37.80), _GLF_IDENTITY((-37.80), clamp((-37.80), _GLF_IDENTITY((-37.80), max((-37.80), (-37.80))), _GLF_IDENTITY((-37.80), ((-37.80)) - 0.0))))), float(_GLF_FUZZED((-4066.5164 / 17.05))), bool(false)))) / 1.0)), ((94.13 >= -37.80)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(94.13 >= -37.80, false || _GLF_IDENTITY(_GLF_IDENTITY((94.13 >= -37.80), _GLF_IDENTITY(! (! ((94.13 >= -37.80))), ! (! (! (! ((94.13 >= -37.80))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((94.13 >= -37.80), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(94.13, (94.13) * 1.0) >= -37.80, bool(bool(_GLF_IDENTITY(94.13 >= -37.80, _GLF_IDENTITY(false || (94.13 >= -37.80), true && (_GLF_IDENTITY(false || (94.13 >= -37.80), (false || (94.13 >= -37.80)) || false)))))))), false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * sqrt(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat4(sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat4(sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))) + 0.0))))).y)))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(94.13 >= -37.80, false || (94.13 >= -37.80))), bool(bvec4(_GLF_IDENTITY((94.13 >= -37.80), ! (! (_GLF_IDENTITY((94.13 >= -37.80), ! (_GLF_IDENTITY(! ((94.13 >= -37.80)), ! (! (! ((94.13 >= -37.80)))))))))), false, false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), false, false, true))))))), ((94.13 >= -37.80)) || false)) && true))
                    {
                     (+ (mat2x4(_GLF_IDENTITY(mat2(58.15, 18.86, -5756.6751, -869.364), (_GLF_IDENTITY(mat2(58.15, 18.86, -5756.6751, -869.364), _GLF_IDENTITY((mat2(58.15, 18.86, -5756.6751, -869.364)) + mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose((mat2(58.15, 18.86, -5756.6751, -869.364)) + mat2(0.0, 0.0, 0.0, 0.0)))))) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) + outerProduct(vec4(-902.028, 322.044, 8295.8600, -9.5), _GLF_IDENTITY(vec2(35.70, -371.277), clamp(_GLF_IDENTITY(vec2(35.70, -371.277), max(vec2(35.70, -371.277), vec2(35.70, -371.277))), _GLF_IDENTITY(vec2(35.70, -371.277), vec2(0.0, 0.0) + (vec2(35.70, -371.277))), _GLF_IDENTITY(vec2(35.70, -371.277), max(vec2(35.70, -371.277), vec2(35.70, -371.277))))))));
                     bvec2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))) || false))))))
                      {
                       inverse(mat2(9.0, -5.2, -9.4, -974.219));
                      }
                     else
                      {
                      }
                     bvec2 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v;
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))), true, _GLF_IDENTITY(false, (false) && true), true)), true && (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))), true, _GLF_IDENTITY(false, (false) && true), true)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, true)), false, false, _GLF_IDENTITY(false, (false) || false)))))))
                      {
                       for(mat2x4 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v; _GLF_IDENTITY(_GLF_SWITCH_0_2v, ! (_GLF_IDENTITY(! (_GLF_SWITCH_0_2v), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH_0_2v, false || (_GLF_SWITCH_0_2v)), bool(bool(_GLF_IDENTITY(_GLF_SWITCH_0_2v, false || (_GLF_SWITCH_0_2v)))))), ! (! ((_GLF_IDENTITY(_GLF_SWITCH_0_2v, _GLF_IDENTITY(false || (_GLF_SWITCH_0_2v), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7212.4987))), 1.0, 1.0, 0.0))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7212.4987))), 1.0, 1.0, 0.0))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))))))))))) || (_GLF_IDENTITY(false || (_GLF_SWITCH_0_2v), bool(bvec3(_GLF_IDENTITY(false || (_GLF_SWITCH_0_2v), false || (false || (_GLF_SWITCH_0_2v))), false, true)))))))))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(! (_GLF_SWITCH_0_2v), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(! (_GLF_SWITCH_0_2v), false)))), true, false)))))); (mat3x2(790.108, -5.6, 0.5, 0.0, 77.71, 6.2) == mat3x2(2212.9321, -2034.8651, 2.8, 660.358, _GLF_IDENTITY(-7.2, mix(float(-7.2), float(_GLF_FUZZED(948.198)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.3, (0.3) * 1.0), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(-0.7) : 0.3)))))
                        {
                         do
                          {
                           do
                            {
                             for(int _injected_loop_counter = (42058 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))) || false))
                                {
                                 do
                                  {
                                   subgroup_base;
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               else
                                {
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           do
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   injectionSwitch;
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.6)), bool(false))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.6)), bool(false))) < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))));
                          }
                         mat4x3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
                         mat4x2(_GLF_IDENTITY(686.109, (false ? _GLF_FUZZED(-4.5) : 686.109)), 409.798, -1584.1981, 6.3, -737.315, -7.0, 2.1, -9.3);
                         uvec3 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[96], _GLF_SWITCH_0_22v;
                         mat3x2 _GLF_SWITCH_0_23v[50], _GLF_SWITCH_0_24v;
                         bvec4(false, false, true, true);
                        }
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))))
                    {
                     if((6536.8554 != _GLF_IDENTITY(-0.0, min(_GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(sqrt(-7202.3939)) : -0.0)), _GLF_IDENTITY(-0.0, min(_GLF_IDENTITY(-0.0, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((-0.0), max((-0.0), (-0.0))), _GLF_IDENTITY(max(0.0 + (-0.0), 0.0 + (-0.0)), max(max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), float(mat2x3(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), 0.0, 0.0, 1.0, 0.0, 1.0)))) + (-0.0), 0.0 + (-0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))) + (_GLF_IDENTITY(-0.0, mix(float(-0.0), float(_GLF_FUZZED(144.205)), bool(false)))), 0.0 + (-0.0)), mix(float(_GLF_FUZZED(vec4(95.75, 8326.2742, -221.059, 0.5).t)), float(max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))) + (_GLF_IDENTITY(-0.0, mix(float(-0.0), float(_GLF_FUZZED(144.205)), bool(false)))), 0.0 + (-0.0))), bool(true))))))), -0.0))))))
                      {
                       uvec4 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
                      }
                    }
                   else
                    {
                    }
                   uvec3 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
                  }
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x = atomicLoad(buf[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w], 4, 64, 2);
        }
      }
    }
  }
 else
  {
  }
 subgroupBarrier();
 do
  {
   atomicStore(checker[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w], GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_12readvirtual_gidworkgroup_baseworkgroup_id.x, 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
