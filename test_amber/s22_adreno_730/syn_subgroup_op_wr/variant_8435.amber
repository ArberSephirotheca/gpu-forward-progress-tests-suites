#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(216.790) : injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, true, false, true))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true)))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), 0u, 0u))), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), (max(injectionSwitch[1], injectionSwitch[1])) - abs(0.0))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (true && (true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (true && (true)))), ! (! (_GLF_IDENTITY(true, true && (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false, false)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(true, true && (true))), false, false)), false)))))), _GLF_IDENTITY(true, ! (! (true))), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : next_virtual_gid)))), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))))) + 0u)], uint(_GLF_IDENTITY(1, 0 ^ (1))), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), _GLF_FUZZED(-392.403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))).x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 4, 64, 2), (read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 4, 64, 2)) | 0u), 0u + (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) / 1u), _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])))), 4, 64, 2)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0 * (0.0)), injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 0u), min(uvec4(0u, 1u, 1u, 0u), uvec4(0u, 1u, 1u, 0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(5389.3751, _GLF_IDENTITY(float(mat4x2(5389.3751, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), max(float(mat4x2(5389.3751, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), float(mat4x2(5389.3751, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))))))))), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.2) : injectionSwitch.x)))))) : _GLF_FUZZED(workgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.9))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((4979.8956 - -279.728))), bool(false))), injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(-78.52, 7373.9859))))).x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(2515.9119))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(9.2)), bool(false)))))), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (uint(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0), (true ? vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0) : _GLF_FUZZED(vec3(9129.4506, -65.66, 2797.8723))))) * abs(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(vec2(mat2(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0), (true ? vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0) : _GLF_FUZZED(vec3(9129.4506, -65.66, 2797.8723))))) * abs(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)), min(vec2(mat2(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0), (true ? vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0) : _GLF_FUZZED(vec3(9129.4506, -65.66, 2797.8723))))) * abs(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)), vec2(mat2(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0), (true ? vec3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch * -5.5)) : (injectionSwitch))), 0.0) : _GLF_FUZZED(vec3(9129.4506, -65.66, 2797.8723))))) * abs(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)))))) - vec2(0.0, 0.0)).x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6095.3367) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))), float(_GLF_FUZZED(8.2)), bool(false))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))), 0u + (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)))))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], float(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))) - log(1.0)))).x)))), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (false ? _GLF_FUZZED(num_workgroup) : ~ (uint(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3625.3809)), float(0.0), bool(true))), injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(105108u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) << 0u)))), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, length(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), min(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, length(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, length(tan(0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(exp(0.0), float(mat4(exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(log(1.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))).x)))), clamp(uint(_GLF_IDENTITY(uvec4(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec4(148036u, 130582u, 20658u, 133599u).zyyz))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec4(148036u, 130582u, 20658u, 133599u).zyyz))), min(_GLF_IDENTITY(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec4(148036u, 130582u, 20658u, 133599u).zyyz))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec4(148036u, 130582u, 20658u, 133599u).zyyz))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec4(148036u, 130582u, 20658u, 133599u).zyyz)))))))) * uvec4(1u, 1u, 1u, 1u))))), uint(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u), ~ (~ (clamp(0u, 0u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), injectionSwitch.x)))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false)))) / 1.0), 0.0)), injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(next_virtual_gid))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(716.646, (false ? _GLF_FUZZED((-371.846 * -8.0)) : _GLF_IDENTITY(716.646, (false ? _GLF_FUZZED(-34.84) : 716.646)))))), bool(false))), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(716.646)), bool(false))), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, injectionSwitch.x)), max(max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), ~ (_GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), min(~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), ~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(next_virtual_gid)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(716.646)), bool(false))), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))), uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(716.646)), bool(false))), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (0.0)), injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(_GLF_IDENTITY(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec4(0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec4(0u, 0u, 0u, 0u))))), uint(uvec4(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))])).x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-836.894) : max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(5389.3751))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), min(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), min(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), min(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), min(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)))), 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), min(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)))), 1.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), min(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), min(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)))), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), min(mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)), mix(float(_GLF_FUZZED(422.585)), float((_GLF_ZERO(0.0, injectionSwitch.x))), bool(true)))), 1.0, 0.0, 0.0))))) + 0.0)))) - 0.0) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) - 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(_GLF_IDENTITY(min(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u | 0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(0u, (0u) / 1u) ^ ((0u)))) | (0u))), uint(_GLF_IDENTITY(0u, 0u | (0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (min(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u | 0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(0u, (0u) / 1u) ^ ((0u)))) | (0u))), uint(_GLF_IDENTITY(0u, 0u | (0u)))))), min(min(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | (0u))), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_base) : 0u)) | (0u)))), min(uint(_GLF_IDENTITY(0u, 0u | (0u))), uint(_GLF_IDENTITY(0u, 0u | (0u))))))))))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY(((false) || false), ! (! (((false) || false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.0)), vec2(_GLF_FUZZED(45.52), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), true, true, false))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.7)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false, false)))))))), false, true), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, 64, 2)) / 1u);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
