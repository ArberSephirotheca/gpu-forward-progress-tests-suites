#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(54650u, 49048u, 179088u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))), clamp((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(54650u, 49048u, 179088u), (uvec3(54650u, 49048u, 179088u)) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))), (false ? _GLF_FUZZED(uvec3(54650u, 49048u, 179088u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))), (false ? _GLF_FUZZED(uvec3(54650u, 49048u, 179088u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(54650u, 49048u, 179088u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))), clamp((false ? _GLF_FUZZED(uvec3(54650u, 49048u, 179088u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))), (false ? _GLF_FUZZED(uvec3(54650u, 49048u, 179088u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(1u, (1u) - 0u))))), (false ? _GLF_FUZZED(uvec3(54650u, 49048u, 179088u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))))))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (14905 & int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3442.6815)))) + 0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, sqrt(1.0)), vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))).y))));
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(bool(false))))))))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : (workgroup_base))))))) + subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + subgroup_base)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(true, true && (true)) ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u)))));
 uint read = 0;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), int(ivec4(int(6), 1, 1, 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 1 * (_GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY(int(ivec2((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), 1 * (_GLF_IDENTITY(int(1), int(1))))), 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec2((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 1 * (_GLF_IDENTITY(int(1), int(1))))), 0))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & _GLF_IDENTITY((true ? -43555 : 53701), ((true ? -43555 : 53701)) >> 0))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), 0 | (~ (_injected_loop_counter ++))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))) | (_injected_loop_counter)) < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-283.358, 6.0)))).x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))
          {
           barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), max((0 | 0), (0 | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = (23235 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                }
               else
                {
                }
               barrier();
              }
            }
          }
        }
       else
        {
        }
      }
     do
      {
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))), true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)))))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0))) > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 ^ 1) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true), false)))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (_GLF_IDENTITY(~ (_injected_loop_counter --), (~ (_injected_loop_counter --)) ^ 0))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-784.550)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(false), true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(false), true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 subgroupBarrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(4), int(4)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(20489)))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))))))) || false))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))));
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec2(82.74, -3.2), vec2(-2.4, 699.196))) : injectionSwitch.y))))));
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))) >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec3(int(5), 0, 1), (_GLF_IDENTITY(ivec3(int(5), 0, 1), ivec3(1, 1, 1) * (ivec3(int(5), 0, 1)))) / (ivec3(1, 1, 1) & ivec3(1, 1, 1))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (5) + _GLF_IDENTITY(0, (0) << 0)))))), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / int(_GLF_ONE(1.0, injectionSwitch.y))), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), min(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0))))))) : -87235)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / int(_GLF_ONE(1.0, injectionSwitch.y))), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), min(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0))))))) : -87235)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / int(_GLF_ONE(1.0, injectionSwitch.y))), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), min(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0))))))) : -87235)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / int(_GLF_ONE(1.0, injectionSwitch.y))), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), min(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(84781, clamp(84781, 84781, 84781)), 1, 0))))))) : -87235))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))), bool(bvec3(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, max(5, 5)), 5))))), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))), false, true)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), _GLF_IDENTITY(0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), int(_GLF_IDENTITY(ivec2(0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), 1), ivec2(0, 0) | (ivec2(0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), 1))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (5) + 0))))), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, clamp(84781, 84781, 84781)) : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))), (_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(5, (5) + 0))), min((~ (_GLF_IDENTITY(5, (5) + 0))), (~ (_GLF_IDENTITY(5, (5) + 0))))))), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, clamp(84781, 84781, 84781)) : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((false ? 84781 : -87235), ~ (~ ((false ? 84781 : -87235))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))) || false)), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | (int(5))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))) && true) ? _GLF_IDENTITY(84781, clamp(84781, 84781, 84781)) : -87235))))), _GLF_IDENTITY(0, 0 | (0)) | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(findLSB(_injected_loop_counter)) : 5))))))), bool(bvec3(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) / 1)), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))), false, true)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), (int(5)) | 0) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, max(_GLF_IDENTITY(-87235, int(ivec4(-87235, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))))) & 1), 0, 0))), -87235))))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (5) + 0))))), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), (_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), clamp(0 | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), 0 | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), 0 | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))))) << 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) * 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) - (0 ^ 0)), int(5))))), bool(bvec3(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))), false, true)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false ? 84781 : -87235, (false ? 84781 : -87235) / (((_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) | (0)), (0 >> _GLF_IDENTITY(int(7), int(7))), 0, 1))) ^ 1) << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) ^ 0)) >> (0 << _GLF_IDENTITY(int(8), int(8))))))) >> _GLF_IDENTITY(int(3), int(3))))))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | (int(5))), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) + (0 >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (5) + 0))))), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false ? 84781 : -87235, (false ? 84781 : -87235) | (false ? 84781 : -87235)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 | (_GLF_IDENTITY(int(5), int(5))))) * int(_GLF_ONE(1.0, injectionSwitch.y))), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_IDENTITY(_GLF_FUZZED((false ? 84781 : -87235)), (_GLF_IDENTITY(_GLF_FUZZED((false ? 84781 : -87235)), ~ (~ (_GLF_FUZZED((false ? 84781 : -87235)))))) | 0))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), clamp(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 1 * (int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)), clamp(true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)), true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)), true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, clamp(84781, _GLF_IDENTITY(84781, min(84781, 84781)), _GLF_IDENTITY(84781, (_GLF_IDENTITY(84781, (84781) | (84781))) | (84781)))) : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, clamp(84781, _GLF_IDENTITY(84781, min(84781, 84781)), _GLF_IDENTITY(84781, (_GLF_IDENTITY(84781, (84781) | (84781))) | (84781)))) : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, clamp(84781, _GLF_IDENTITY(84781, min(84781, 84781)), _GLF_IDENTITY(84781, (_GLF_IDENTITY(84781, (84781) | (84781))) | (84781)))) : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))))) << 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, clamp(84781, _GLF_IDENTITY(84781, min(84781, 84781)), _GLF_IDENTITY(84781, (_GLF_IDENTITY(84781, (84781) | (84781))) | (84781)))) : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, clamp(84781, _GLF_IDENTITY(84781, min(84781, 84781)), _GLF_IDENTITY(84781, (_GLF_IDENTITY(84781, (84781) | (84781))) | (84781)))) : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, clamp(84781, _GLF_IDENTITY(84781, min(84781, 84781)), _GLF_IDENTITY(84781, (_GLF_IDENTITY(84781, (84781) | (84781))) | (84781)))) : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))))))))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, bool(bool(true)))))))) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(0, clamp(0, 0, 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))), int(5))))), bool(bvec3(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_IDENTITY(_GLF_FUZZED((false ? 84781 : -87235)), min(_GLF_FUZZED((false ? 84781 : -87235)), _GLF_FUZZED((false ? 84781 : -87235))))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))), false, true)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | 0)))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (5) + 0))))), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false ? 84781 : -87235, (false ? 84781 : -87235) | (false ? 84781 : -87235)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 | (_GLF_IDENTITY(int(5), int(5))))) * int(_GLF_ONE(1.0, injectionSwitch.y))), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_IDENTITY(_GLF_FUZZED((false ? 84781 : -87235)), (_GLF_IDENTITY(_GLF_FUZZED((false ? 84781 : -87235)), 1 * (_GLF_FUZZED((false ? 84781 : -87235))))) << 0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))))))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))), int(5))))), bool(bvec3(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))) << 0)) ^ 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), (int(5)) / 1)))) << 0))))), false, true)))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | 0)))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (5) + 0))))), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))) : _GLF_FUZZED((_GLF_IDENTITY(false ? 84781 : -87235, (false ? 84781 : -87235) | (false ? 84781 : -87235)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), max(int(5), int(5)))) - 0))), int(5)), 0 | (_GLF_IDENTITY(int(5), int(5))))) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 | (_GLF_IDENTITY(int(5), int(5))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))) + 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, (5) | 0)) : _GLF_FUZZED((false ? 84781 : -87235)))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false, ! (! (false))) ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))) : _GLF_FUZZED((false ? 84781 : -87235)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), int(ivec2(int(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 1)))), (false ? _GLF_FUZZED(-7828) : int(_GLF_IDENTITY(int(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), int(ivec2(int(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 1)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, int(ivec4(84781, 1, 0, 1))) : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, (5) | 0)) : _GLF_FUZZED((false ? 84781 : -87235)))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false, ! (! (false))) ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))) : _GLF_FUZZED((false ? 84781 : -87235)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), int(ivec2(int(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 1)))), (false ? _GLF_FUZZED(-7828) : int(_GLF_IDENTITY(int(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), int(ivec2(int(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), 1, ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 1)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, int(ivec4(84781, 1, 0, 1))) : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))), int(int(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))))))))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? _GLF_IDENTITY(5, (5) / 1) : _GLF_FUZZED(-7109)))), int(5)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))), int(5))))), bool(bvec3(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(true, true && (true)) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))), false, true)))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, 5))), _GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter / _injected_loop_counter)) : int(5))) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | 0)))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | 0)))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))), false || (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | 0)))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | 0)))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | 0)))))), 0 | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))) | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), clamp(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))) - ((-7732 ^ 70853) & 0))))), true, true)))))))))))))) && true)))))))))) && _GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) | 0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(5, ~ (~ (5)))), (~ (5)) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, 0 + (84781)) : -87235))))), _GLF_IDENTITY(0, max(0, 0)) | (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(int(5), min(int(5), int(5))))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(84781, (84781) ^ 0), (1 | 1) * (_GLF_IDENTITY(84781, _GLF_IDENTITY((84781) ^ 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((84781) ^ 0, ((84781) ^ 0) / 1)), (~ (_GLF_IDENTITY((84781) ^ 0, ((84781) ^ 0) / 1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(56514) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), ((_GLF_IDENTITY(int(5), int(5)))) | ((_GLF_IDENTITY(int(5), int(5)))))))), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) - 0)) >> 0), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | (-87235))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | (-87235))), ((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | (-87235)))) << 0))))))))))), (int(int(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false, (false) || false) ? 84781 : -87235))))), _GLF_IDENTITY(0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), (0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, max(5, 5)), 5))) : _GLF_FUZZED((false ? 84781 : -87235))))))) / 1))))) << 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))) ^ 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) - 0)) >> 0), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), (int(5)) | 0))), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | (-87235)), min(false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | (-87235)), false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | (-87235))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) << 0) : _GLF_IDENTITY((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | (-87235))), ((false ? 84781 : _GLF_IDENTITY(-87235, (-87235) | (-87235)))) << 0))))))))))), (int(int(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false, (false) || false) ? 84781 : -87235))))), _GLF_IDENTITY(_GLF_IDENTITY(0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), (0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, max(5, 5)), 5))) : _GLF_FUZZED((false ? 84781 : -87235))))))) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), (0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, max(5, 5)), 5))) : _GLF_FUZZED((false ? 84781 : -87235))))))) / 1), max(_GLF_IDENTITY(0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), (0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, max(5, 5)), 5))) : _GLF_FUZZED((false ? 84781 : -87235))))))) / 1), _GLF_IDENTITY(0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), (0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, max(5, 5)), 5))) : _GLF_FUZZED((false ? 84781 : -87235))))))) / 1))), _GLF_IDENTITY(0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))), (0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, max(5, 5)), 5))) : _GLF_FUZZED((false ? 84781 : -87235))))))) / 1))))))) << 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : 5))), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(true ? int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) - 0)) | 0)) : _GLF_FUZZED((false ? 84781 : -87235)), (true ? int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) - 0)) | 0)) : _GLF_FUZZED((false ? 84781 : -87235))) ^ (0 | 0))))), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98276) : 0)), 0)) | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, min(5, 5))) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : 5))), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(true ? int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) - 0)) | 0)) : _GLF_FUZZED((false ? 84781 : -87235)), (true ? int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) - 0)) | 0)) : _GLF_FUZZED((false ? 84781 : -87235))) ^ (0 | 0))))), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98276) : 0)), 0)) | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, min(5, 5))) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : 5))), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(true ? int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) - 0)) | 0)) : _GLF_FUZZED((false ? 84781 : -87235)), (true ? int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) - 0)) | 0)) : _GLF_FUZZED((false ? 84781 : -87235))) ^ (0 | 0))))), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98276) : 0)), 0)) | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(_GLF_IDENTITY(5, min(5, 5))) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))))), true, false, true))), _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((false ? 84781 : -87235), ((false ? _GLF_IDENTITY(84781, (true ? 84781 : _GLF_FUZZED(76896))) : -87235)) | (_GLF_IDENTITY((false ? 84781 : -87235), ((false ? 84781 : -87235)) << 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))), true && ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((false ? 84781 : -87235), ((false ? _GLF_IDENTITY(84781, (true ? 84781 : _GLF_FUZZED(76896))) : -87235)) | (_GLF_IDENTITY((false ? 84781 : -87235), ((false ? 84781 : -87235)) << 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))), ! (_GLF_IDENTITY(! (_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((false ? 84781 : -87235), ((false ? _GLF_IDENTITY(84781, (true ? 84781 : _GLF_FUZZED(76896))) : -87235)) | (_GLF_IDENTITY((false ? 84781 : -87235), ((false ? 84781 : -87235)) << 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((false ? 84781 : -87235), ((false ? _GLF_IDENTITY(84781, (true ? 84781 : _GLF_FUZZED(76896))) : -87235)) | (_GLF_IDENTITY((false ? 84781 : -87235), ((false ? 84781 : -87235)) << 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), ! (! (! (_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((false ? 84781 : -87235), ((false ? _GLF_IDENTITY(84781, (true ? 84781 : _GLF_FUZZED(76896))) : -87235)) | (_GLF_IDENTITY((false ? 84781 : -87235), ((false ? 84781 : -87235)) << 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))))))), (! (_GLF_IDENTITY(! (_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((false ? 84781 : -87235), ((false ? _GLF_IDENTITY(84781, (true ? 84781 : _GLF_FUZZED(76896))) : -87235)) | (_GLF_IDENTITY((false ? 84781 : -87235), ((false ? 84781 : -87235)) << 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), ! (! (! (_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_GLF_IDENTITY((false ? 84781 : -87235), ((false ? _GLF_IDENTITY(84781, (true ? 84781 : _GLF_FUZZED(76896))) : -87235)) | (_GLF_IDENTITY((false ? 84781 : -87235), ((false ? 84781 : -87235)) << 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(5), int(5)), 1, 0), ~ (~ (ivec3(_GLF_IDENTITY(int(5), int(5)), 1, 0))))))) * 1)))))))))) && true))))))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, 0 ^ (-87235))))), ((true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, 0 ^ (-87235)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, 0 ^ (-87235)))), int(ivec4(true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, 0 ^ (_GLF_IDENTITY(-87235, (-87235) | 0))))), 0, 1, 1)))), max(_GLF_IDENTITY((_GLF_IDENTITY(true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, 0 ^ (-87235)))), (true ? true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, 0 ^ (-87235)))) : _GLF_FUZZED(-4156)))), ((true ? int(_GLF_IDENTITY(5, clamp(5, 5, 5))) : _GLF_FUZZED((_GLF_IDENTITY(false ? 84781 : _GLF_IDENTITY(-87235, 0 ^ _GLF_IDENTITY((-87235), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (-87235) : _GLF_FUZZED(atomicMax(_injected_loop_counter, -23622))))), int(ivec2(false ? 84781 : _GLF_IDENTITY(-87235, 0 ^ (-87235)), 1))))))) | ((true ? int(5) : _GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, 0 ^ (-87235))))))), _GLF_IDENTITY((true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false ? 84781 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-87235, 0 ^ (-87235)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(-87235, 0 ^ (-87235)))), (_GLF_IDENTITY(-87235, 0 ^ (-87235))) - 0), ~ (~ (false ? 84781 : _GLF_IDENTITY(_GLF_IDENTITY(-87235, 0 ^ (-87235)), (_GLF_IDENTITY(-87235, 0 ^ (-87235))) - 0))))))), ((true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false ? 84781 : _GLF_IDENTITY(_GLF_IDENTITY(-87235, 0 ^ (-87235)), (_GLF_IDENTITY(-87235, 0 ^ (-87235))) - 0), ~ (~ (false ? 84781 : _GLF_IDENTITY(_GLF_IDENTITY(-87235, 0 ^ (-87235)), (_GLF_IDENTITY(-87235, 0 ^ _GLF_IDENTITY((-87235), (false ? _GLF_FUZZED(_injected_loop_counter) : (-87235))))) - 0)))))))) + 0))))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_injected_loop_counter))), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, max(84781, _GLF_IDENTITY(_GLF_IDENTITY(84781, max(_GLF_IDENTITY(84781, ~ (~ (84781))), 84781)), clamp(84781, 84781, 84781)))) : _GLF_IDENTITY(-87235, int(int(-87235))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(0 | ((_GLF_IDENTITY(int(5), int(5)))), int(ivec3(_GLF_IDENTITY(0 | ((_GLF_IDENTITY(int(5), int(5)))), (0 | ((_GLF_IDENTITY(int(5), int(5))))) ^ 0), (64321 & 0), 1))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (0 ^ 0) + (_GLF_FUZZED(_injected_loop_counter)))), (true ? (true ? (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_injected_loop_counter))), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED((false ? _GLF_IDENTITY(84781, max(84781, _GLF_IDENTITY(_GLF_IDENTITY(84781, max(_GLF_IDENTITY(84781, ~ (~ (84781))), 84781)), clamp(84781, 84781, 84781)))) : _GLF_IDENTITY(-87235, int(int(-87235))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(0 | ((_GLF_IDENTITY(int(5), int(5)))), int(ivec3(_GLF_IDENTITY(0 | ((_GLF_IDENTITY(int(5), int(5)))), (0 | ((_GLF_IDENTITY(int(5), int(5))))) ^ 0), (64321 & 0), 1))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (0 ^ 0) + (_GLF_FUZZED(_injected_loop_counter)))) : _GLF_FUZZED(_injected_loop_counter)))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))), ((_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))) | ((_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))), ((_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))) | ((_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))), ((_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))) | ((_GLF_IDENTITY(true, (true) && true) ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) ^ 0))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), min(~ (5), _GLF_IDENTITY(~ (5), int(int(~ (5)))))))), (_GLF_IDENTITY(5, ~ (~ (5)))) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, ~ (~ (5)))) / 1)), 0 ^ (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), int(ivec4(_GLF_IDENTITY(~ (5), clamp(~ (5), _GLF_IDENTITY(~ (5), 0 ^ (~ (5))), ~ (5))), 0, 1, 0)))))) / 1))))) ^ 0), (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)), ~ (~ (true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235)))))))), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | _GLF_IDENTITY(0, ~ (~ (0))))) - 0, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | _GLF_IDENTITY(0, ~ (~ (0))))) - 0) | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | _GLF_IDENTITY(0, ~ (~ (0))))) - 0))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), min(int(_GLF_IDENTITY(5, 0 ^ (_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (5) - 0)))))), _GLF_IDENTITY(int(5), 1 * (_GLF_IDENTITY(int(5), min(int(5), int(5))))))) : _GLF_FUZZED((false ? 84781 : -87235)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) << 0)), int(5)))))), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 | 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) * 1)), _GLF_IDENTITY(int(5), _GLF_IDENTITY((true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))), 0 ^ ((true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))))))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) / 1)) << 0))))), (true ? int(_GLF_IDENTITY(5, (5) + 0)) : _GLF_IDENTITY(_GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (true ? -87235 : _GLF_FUZZED(_injected_loop_counter))))), (_GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (true ? -87235 : _GLF_FUZZED(_injected_loop_counter)))))) / 1))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (0 >> _GLF_IDENTITY(int(2), int(2))) + (_GLF_IDENTITY(int(5), int(int(int(5))))))), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))), (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 | 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY((5), clamp(_GLF_IDENTITY((5), int(ivec2((5), 0))), (5), (5))) * 1)), _GLF_IDENTITY(int(5), _GLF_IDENTITY((true ? int(5) : _GLF_FUZZED((false ? 84781 : -87235))), 0 ^ ((true ? int(5) : _GLF_FUZZED((_GLF_IDENTITY(false ? 84781 : -87235, max(_GLF_IDENTITY(false ? 84781 : -87235, max(false ? 84781 : -87235, false ? 84781 : -87235)), false ? 84781 : -87235))))))))), 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(acosh(-249.301))) : 1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) / 1)) << 0))))), (true ? int(_GLF_IDENTITY(5, _GLF_IDENTITY((5), int(int((5)))) + 0)) : _GLF_IDENTITY(_GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (true ? -87235 : _GLF_FUZZED(_injected_loop_counter))))), (_GLF_FUZZED((false ? 84781 : _GLF_IDENTITY(-87235, (true ? -87235 : _GLF_FUZZED(_injected_loop_counter)))))) / 1))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (0 >> _GLF_IDENTITY(int(2), int(2))) + (_GLF_IDENTITY(int(5), int(int(int(5))))))), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))))) || false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, min(64, 64)), 0))), 4);
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), 4)))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
