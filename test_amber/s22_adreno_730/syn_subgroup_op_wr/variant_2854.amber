#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackUnorm2x16(170357u)) : injectionSwitch)), mix(vec2(_GLF_FUZZED((758.962 / 7.5)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackUnorm2x16(170357u)) : injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackUnorm2x16(170357u)) : injectionSwitch)))[0], _GLF_FUZZED(1.8)), bvec2(true, false))).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-9.1))), 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false))))), ! (! (_GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))))))), false || (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))) || false)))))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)))))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, (true) && true) && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))) || false), false))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), bool(bvec2(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, false, false)), (bool(bvec4(! (_GLF_DEAD(false)), false, false, false))) || false))))), true && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! _GLF_IDENTITY((! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)))), bool(bvec3((! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)))), false, _GLF_IDENTITY(true, false || (true)))))))))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), true, true)))))) || false))))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, (true) && true) && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))) || false), false))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), bool(bvec2(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, false, false)), (bool(bvec4(! (_GLF_DEAD(false)), false, false, false))) || false))))), true && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! _GLF_IDENTITY((! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)))), bool(bvec3((! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)))), false, _GLF_IDENTITY(true, false || (true)))))))))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true)), true, true)))))) || false))))), _GLF_IDENTITY(false, ! (! (false)))))))), (bool(bvec2(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), true && (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))), true, true, false))))), true)))))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false))))))), ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true))))), _GLF_IDENTITY(false, ! (! (false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, true && (true)), false)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))), bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ 0u, clamp((gl_WorkGroupSize.x) ^ 0u, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ 0u, ((gl_WorkGroupSize.x) ^ 0u) | ((gl_WorkGroupSize.x) ^ 0u)), _GLF_IDENTITY((gl_WorkGroupSize.x) ^ 0u, uint(uint((gl_WorkGroupSize.x) ^ 0u)))))) : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = _GLF_IDENTITY(0, (0) | (0));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(50.26))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)), false || ((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)), false || ((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false))))))))), true)), ! (! (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)), false || ((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false))))))))), true)))))))) && _GLF_IDENTITY(true, (true) && true))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)))).y))))) || _GLF_IDENTITY(false, false || (false)))))) && true)), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(50.26))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))))) || _GLF_IDENTITY(false, false || (false)))))) && _GLF_IDENTITY(true, (true) && true))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).y) || _GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_IDENTITY(false, true && (false)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((0u & 88819u), 1u * (_GLF_IDENTITY((0u & 88819u), max((0u & 88819u), (0u & 88819u))))) + _GLF_IDENTITY((7u), uint(uvec2(_GLF_IDENTITY((7u), ((7u)) | ((7u))), 1u))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(7u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u)))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u)))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u)))), ((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u))))) << 0u)) | 0u)) | ((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u))))))), (1u ^ _GLF_IDENTITY(1u, 0u + (1u))), 1u)), (uint(uvec3(_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), (1u ^ 1u), 1u))) >> 0u)))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((0u & 88819u), 1u * (_GLF_IDENTITY((0u & 88819u), max((0u & 88819u), (0u & 88819u))))) + _GLF_IDENTITY((7u), uint(uvec2(_GLF_IDENTITY((7u), ((7u)) | ((7u))), 1u))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(7u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u)))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u)))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u)))), ((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u))))) << 0u)) | 0u)) | ((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u))))))), (1u ^ _GLF_IDENTITY(1u, 0u + (1u))), 1u)), (uint(uvec3(_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), (1u ^ 1u), 1u))) >> 0u)))), (((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((0u & 88819u), 1u * (_GLF_IDENTITY((0u & 88819u), max((0u & 88819u), (0u & 88819u))))) + _GLF_IDENTITY((7u), uint(uvec2(_GLF_IDENTITY((7u), ((7u)) | ((7u))), 1u))))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(7u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u)))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u)))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u)))), ((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u))))) << 0u)) | 0u)) | ((~ _GLF_IDENTITY((uint(7u)), uint(uvec2((uint(7u)), 0u))))))), (1u ^ _GLF_IDENTITY(1u, 0u + (1u))), 1u)), (uint(uvec3(_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), (1u ^ 1u), 1u))) >> 0u))))) / 1u)) - 0u)), next_virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, min(4, 4)), 1), max(ivec2(_GLF_IDENTITY(4, min(4, 4)), 1), ivec2(_GLF_IDENTITY(4, min(4, 4)), 1))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), false), bvec2(bvec2(bvec2(bool(bvec2(false, true)), false)))), true, true)))))))))) || false)), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(64, 64)), 2), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), true && (bool(true)))))), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), false, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), false, true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), false, true), true)), true)), false))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), _GLF_IDENTITY(true, ! (! (true))), true)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), true && (bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))), bool(bvec3(! (bool(true)), true, true)))) || false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), false, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), _GLF_IDENTITY(false, bool(bvec2(false, true))), true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), false, true), true)), true)), false))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.9, 9.5)))).y))))))) || false)))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), true && (bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true))), bool(bvec4(_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true))), true, false, true))))))) || false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), true && ((bool(true)))), _GLF_IDENTITY((_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false, ! (! ((_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))), true, true)))) || false), _GLF_IDENTITY(false, ! (! (false))), true), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), true, true)))) || false), false, true), true)), true)), false))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), true), true, false))))) ? read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) | (2))) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(_GLF_IDENTITY(read, (read) << (0u | 0u)), _GLF_IDENTITY(read, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : read), ((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : read, 0u + (false ? _GLF_FUZZED(num_workgroup) : read)))) << 0u)), -50413, 51149), min(bitfieldInsert(read, _GLF_IDENTITY(read, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(read))), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : read)), -50413, 51149), bitfieldInsert(read, _GLF_IDENTITY(read, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : read, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : read, min(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : read, (false ? _GLF_FUZZED(num_workgroup) : read) + 0u), false ? _GLF_FUZZED(num_workgroup) : read))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), -50413, 51149))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], 4, 64, 2)) >> 0u);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), injectionSwitch)) * vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(2.5), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), max((vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), vec2(mat3x4((vec2(mat2(injectionSwitch, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch)) * vec2(1.0, 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch), mix(vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(3725.0410)), vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[0], (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * vec2(1.0, 1.0))))[0], _GLF_FUZZED((true ? 5.6 : 4.2))), bvec2(true, false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), injectionSwitch)) * vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(2.5), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), max((vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), vec2(mat3x4((vec2(mat2(injectionSwitch, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch)) * vec2(1.0, 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch), mix(vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(3725.0410)), vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[0], (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * vec2(1.0, 1.0))))[0], _GLF_FUZZED((true ? 5.6 : 4.2))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), injectionSwitch)) * vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(2.5), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), max((vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), vec2(mat3x4((vec2(mat2(injectionSwitch, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch)) * vec2(1.0, 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch), mix(vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(3725.0410)), vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[0], (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * vec2(1.0, 1.0))))[0], _GLF_FUZZED((true ? 5.6 : 4.2))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), injectionSwitch)) * vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(2.5), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), max((vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), vec2(mat3x4((vec2(mat2(injectionSwitch, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch)) * vec2(1.0, 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch), mix(vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(3725.0410)), vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[0], (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * vec2(1.0, 1.0))))[0], _GLF_FUZZED((true ? 5.6 : 4.2))), bvec2(true, false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), injectionSwitch)) * vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(2.5), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), max((vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), vec2(mat3x4((vec2(mat2(injectionSwitch, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch)) * vec2(1.0, 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch), mix(vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(3725.0410)), vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[0], (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * vec2(1.0, 1.0))))[0], _GLF_FUZZED((true ? 5.6 : 4.2))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), injectionSwitch)) * vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(2.5), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), max((vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), vec2(mat3x4((vec2(mat2(injectionSwitch, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch)) * vec2(1.0, 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch), mix(vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(3725.0410)), vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[0], (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * vec2(1.0, 1.0))))[0], _GLF_FUZZED((true ? 5.6 : 4.2))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), (mat2(injectionSwitch, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), injectionSwitch)) * vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(2.5), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), max((vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), vec2(mat3x4((vec2(mat2(injectionSwitch, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch)) * vec2(1.0, 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch), mix(vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(3725.0410)), vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[0], (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) + sqrt(vec2(0.0, 0.0)))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * vec2(1.0, 1.0))))[0], _GLF_FUZZED((true ? 5.6 : 4.2))), bvec2(true, false))))))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), false, false)), false || (bool(bvec3(bool(false), false, false)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (0 | _GLF_IDENTITY(1, (1) << 0)) * (_GLF_IDENTITY(64, (64) << 0))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.0)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 1.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))), min(float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 1.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 1.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))))), mix(float(_GLF_FUZZED(90.96)), float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 1.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))), min(float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 1.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), float(mat4x3(injectionSwitch.x, exp(0.0), 1.0, 0.0, 1.0, sqrt(1.0), 1.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))), bool(true)))) > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
