#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 vec4 _f0;
 uvec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 bvec4 _f1;
 ivec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_13 {
 uint next_virtual_gid;
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat3x2 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 mat2 _f1;
 float _f2;
 mat4 _f3;
 uvec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 uvec2 _f1;
 vec3 _f2;
 mat2 _f3;
 bool _f4;
 ivec4 _f5;
 int _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 vec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 bvec3 _f1;
 ivec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 _GLF_struct_3 _f1;
 ivec3 _f2;
 _GLF_struct_4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_8 _f2;
 mat3x2 _f3;
 ivec2 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 bool _f1;
 mat3x2 _f2;
 uint workgroup_id;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat3 _f1;
 _GLF_struct_1 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false), bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u) ^ (gl_WorkGroupSize)))).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(10783u, 174428u, 121493u, 2001u)) : uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u)), clamp(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(10783u, 174428u, 121493u, 2001u)) : uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(10783u, 174428u, 121493u, 2001u)) : uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(10783u, 174428u, 121493u, 2001u)) : uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(10783u, 174428u, 121493u, 2001u)) : uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(10783u, 174428u, 121493u, 2001u)) : uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u) ^ (gl_WorkGroupSize)))).x) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(ivec3(1), mat3(1.0), _GLF_struct_1(mat4x3(1.0), _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), log(1.0), log(1.0), 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-46.65, 3454.1154, 888.323, 3081.7356, -81.79, 478.076, -7.2, 398.459)) : mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), min(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-46.65, 3454.1154, 888.323, 3081.7356, -81.79, 478.076, -7.2, 398.459)) : mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-46.65, 3454.1154, 888.323, 3081.7356, -81.79, 478.076, -7.2, 398.459)) : mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))), 0.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), log(1.0), log(1.0), 1.0)), (mat4(mat3x4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))) ? _GLF_FUZZED(-444.614) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), log(1.0), log(1.0), 1.0))) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), mix(float(_GLF_FUZZED((7.8 * vec3(-441.374, 3.4, -36.43).p))), float(max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), bool(true)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.7)), bool(false))), 1.0, 1.0, 1.0))))))), mix(vec3((vec3(1.0))[0], _GLF_FUZZED(67.51), _GLF_IDENTITY((vec3(1.0))[2], (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0))[2], max((vec3(1.0))[2], (vec3(1.0))[2])), mix(float(_GLF_FUZZED(7666.6869)), float(_GLF_IDENTITY((vec3(1.0))[2], max((vec3(1.0))[2], (vec3(1.0))[2]))), bool(true))) : _GLF_FUZZED(asinh(9.3))))), vec3(_GLF_FUZZED(484.360), (vec3(1.0))[1], _GLF_FUZZED(0.8)), bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0))))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), log(1.0), log(1.0), 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), log(1.0), log(1.0), 1.0)), (mat4(mat3x4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-444.614) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(196.234) : 0.0))), log(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), mat3(mat4x3(mat3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))), _GLF_IDENTITY(log(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(log(1.0), 0.0, 1.0), min(vec3(log(1.0), 0.0, 1.0), vec3(log(1.0), 0.0, 1.0)))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(log(1.0), 0.0, 1.0), min(vec3(log(1.0), 0.0, 1.0), vec3(log(1.0), 0.0, 1.0)))), (false ? _GLF_FUZZED(-61.02) : float(_GLF_IDENTITY(vec3(log(1.0), 0.0, 1.0), min(vec3(log(1.0), 0.0, 1.0), vec3(log(1.0), 0.0, 1.0))))))), float(_GLF_FUZZED(-2.6)), bool(false)))), 1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), mix(vec3((vec3(1.0))[0], _GLF_FUZZED(67.51), _GLF_IDENTITY((vec3(1.0))[2], (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((vec3(1.0))[2], max((vec3(1.0))[2], (vec3(1.0))[2])) : _GLF_IDENTITY(_GLF_FUZZED(asinh(9.3)), (_GLF_FUZZED(_GLF_IDENTITY(asinh(9.3), (true ? _GLF_IDENTITY(asinh(9.3), clamp(asinh(9.3), asinh(9.3), asinh(9.3))) : _GLF_FUZZED(-2.9))))) * 1.0)))), vec3(_GLF_FUZZED(484.360), (vec3(1.0))[1], _GLF_FUZZED(0.8)), bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED((9692.8401 * 554.885))), float(mat4x3(float(_GLF_FUZZED((9692.8401 * 554.885))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(log(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec3(log(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, sqrt(0.0), 1.0, 0.0, 0.0))), float(injectionSwitch.y), bool(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))) + vec3(0.0, 0.0, 0.0)), true, mat3x2(1.0), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)))) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)))) / 1.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, log(1.0)), transpose(transpose(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, log(1.0))))))))))) / 1.0) > injectionSwitch.y) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(659.451) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-3.1, 168.969, -8752.6200, 6.4, 379.507, -38.08)) : _GLF_IDENTITY(mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(6.6, 4401.1060, -868.456, 587.193, -18.04, 209.083)) : mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0))))))) - 0.0), 0.0, 0.0)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-79.34), (vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) - 0.0), 0.0, 0.0))[1], _GLF_FUZZED(-25.34)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0))[0], _GLF_FUZZED(vec2(6.6, 6.9).s), (vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0))[2]), bvec3(true, false, true))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-3.1, 168.969, -8752.6200, 6.4, 379.507, -38.08)) : _GLF_IDENTITY(mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(6.6, 4401.1060, -868.456, 587.193, -18.04, 209.083)) : mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0))))))) - 0.0), 0.0, 0.0)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-79.34), (vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) - 0.0), 0.0, 0.0))[1], _GLF_FUZZED(-25.34)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0))[0], _GLF_FUZZED(vec2(6.6, 6.9).s), (vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0))[2]), bvec3(true, false, true))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-3.1, 168.969, -8752.6200, 6.4, 379.507, -38.08)) : _GLF_IDENTITY(mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(6.6, 4401.1060, -868.456, 587.193, -18.04, 209.083)) : mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0))))))) - 0.0), 0.0, 0.0)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-79.34), (vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) - 0.0), 0.0, 0.0))[1], _GLF_FUZZED(-25.34)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0))[0], _GLF_FUZZED(vec2(6.6, 6.9).s), (vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0))[2]), bvec3(true, false, true))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-3.1, 168.969, -8752.6200, 6.4, 379.507, -38.08)) : _GLF_IDENTITY(mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(6.6, 4401.1060, -868.456, 587.193, -18.04, 209.083)) : mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0))))))) - 0.0), 0.0, 0.0)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-79.34), (vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) - 0.0), 0.0, 0.0))[1], _GLF_FUZZED(-25.34)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0))[0], _GLF_FUZZED(vec2(6.6, 6.9).s), (vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0))[2]), bvec3(true, false, true)))))))))) / 1.0) > injectionSwitch.y) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(6.2)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(6.2)), ((true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(6.2))) - 0.0)))))), true)), true, true)))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)))) / 1.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)))) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)))) / 1.0, 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)))) / 1.0)), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)))) / 1.0))) > injectionSwitch.y) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)))) / 1.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-79.34), (vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0))[1], _GLF_FUZZED(-25.34)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) + 0.0), max(_GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float(_GLF_FUZZED(4.1)), float(_GLF_IDENTITY((injectionSwitch.x) - 0.0, clamp((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0, _GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float(_GLF_FUZZED(-3180.4100)), float(_GLF_IDENTITY((injectionSwitch.x) - 0.0, (true ? (injectionSwitch.x) - 0.0 : _GLF_FUZZED(6.5)))), bool(true)))))), bool(true))), (injectionSwitch.x) - 0.0))), 0.0, 0.0))[0], _GLF_FUZZED(vec2(6.6, 6.9).s), (vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))[2]), bvec3(true, false, true)))))))) / 1.0) > injectionSwitch.y) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true)))), false)))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_2._f2._f1.workgroup_id, (workgroup_size * _GLF_struct_replacement_2._f2._f1.workgroup_id) - 0u);
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) / 1u)))) / 1u)) * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))) || (false), false, false, false)), bool(bvec4(bool(bvec4(false || (false), false, false, false)), false, true, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))) * 1u)))), (false ? _GLF_FUZZED(subgroup_base) : uint(workgroup_base + subgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))) * 1u)))), (false ? _GLF_FUZZED(subgroup_base) : uint(workgroup_base + subgroup_base))))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) + 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))) * 1u)))), (false ? _GLF_FUZZED(subgroup_base) : uint(workgroup_base + subgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))) * 1u)))), (false ? _GLF_FUZZED(subgroup_base) : uint(workgroup_base + subgroup_base))))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))) * 1u)))), (false ? _GLF_FUZZED(subgroup_base) : uint(workgroup_base + subgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))) * 1u)))), (false ? _GLF_FUZZED(subgroup_base) : uint(workgroup_base + subgroup_base))))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) + 0u)) / 1u))) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_base + subgroup_local_id)), clamp((~ (workgroup_base + subgroup_base + subgroup_local_id)), (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base)) + subgroup_base + subgroup_local_id)), (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), (~ (workgroup_base + subgroup_base + subgroup_local_id)) ^ 0u))))), workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_base)) + subgroup_local_id, 0u | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + subgroup_local_id) ^ 0u)))));
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(vec2(1.0), _GLF_struct_5(ivec4(1), _GLF_struct_3(uvec2(1u), mat4x2(1.0)), ivec3(1), _GLF_struct_4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec3(true), ivec3(1), vec2(1.0)), uvec2(1u)), _GLF_struct_8(_GLF_struct_6(mat4x3(1.0), uvec2(1u), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - abs(0.0))))), true, ivec4(1), _GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_struct_7(vec4(1.0), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-1497.8743, 3.0, _GLF_IDENTITY(8622.1117, min(8622.1117, 8622.1117)), 3.9)) : mat2(1.0))), 1.0, mat4(1.0), uvec3(1u), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - determinant(mat4(length(0.0), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))), max(1.0, 1.0)))), vec4(1.0), mat3x2(1.0)), mat3x2(1.0), _GLF_IDENTITY(ivec2(1), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-50.68)), float(float(mat2x4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0))), bool(true)))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(5326.0796))))))) ? _GLF_FUZZED(ivec2(-96737, 87244)) : _GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (ivec2(1))))), _GLF_struct_13(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size)))))), _GLF_struct_9(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(true && (_GLF_IDENTITY(true, ! (! (true)))), true)))))))), bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ivec3(1), mat2(1.0)), _GLF_struct_10(bvec4(true)), mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.4) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_struct_11(mat2x3(1.0)), _GLF_struct_12(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec3(1u), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), clamp(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (uvec3(5u)) + uvec3(0u, 0u, 0u)), uvec3(5u))), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), uvec3(0u, 0u, 0u) | ((uvec3(1u)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), clamp(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (uvec3(5u)) + uvec3(0u, 0u, 0u)), uvec3(5u))), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-872.457))), 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-872.457))), 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-872.457))), 0.0, 0.0, 0.0)) - _GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-77.50) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 0.0, 0.0))))) : _GLF_FUZZED(mat3(0.4, 9.2, 731.074, -7.7, 6.4, _GLF_IDENTITY(-4759.8848, clamp(-4759.8848, _GLF_IDENTITY(_GLF_IDENTITY(-4759.8848, float(_GLF_IDENTITY(mat4(-4759.8848, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(3.5, -96.41, -9.4, -59.74, -631.057, 163.152, 7440.4101, -2.4, -23.76, -554.605, 418.426, -247.772, -8049.1075, 66.91, 25.13, 8127.0604)) : mat4(-4759.8848, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(true ? -4759.8848 : _GLF_FUZZED(-219.544), min(true ? -4759.8848 : _GLF_FUZZED(-219.544), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? -4759.8848 : _GLF_FUZZED(-219.544))))), -4759.8848)), 9824.9877, -2.0, -5628.1035)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (false)), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (false)), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_14._f5.next_virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), true && (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true)))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec3(bvec2(false, false), true))))))));
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, min(4, 4))))) + 0), 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (64))), 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, max(2, 2)))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))) || (true)))) && true))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(39.48, -3892.0637)) : injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) + sqrt(tan(vec2(0.0, 0.0)))))) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, max(_GLF_IDENTITY(read, 0u ^ (read)), _GLF_IDENTITY(read, max(read, read)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
