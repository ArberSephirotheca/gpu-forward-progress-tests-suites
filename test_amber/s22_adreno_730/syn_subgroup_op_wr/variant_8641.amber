#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true)), bool(bvec2(bool(bvec4(false, false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) || false))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(false, false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(false, false), false)), true))))))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(false, false), false)), true)))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(false, false), false)), true))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(false, false), false)), true))))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(false, false), false)), true))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(false, false), false)), true))))))))))))))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), float(mat3x2(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.2)), float(0.0), bool(true)))) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-31.56, 6.1, -3.8, -9.6, 8070.3842, -7.7)) : _GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-31.56, 6.1, -3.8, -9.6, 8070.3842, -7.7)) : _GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) - 0.0)), (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.7))), _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, clamp(_GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, float(mat3x2((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4544.9676))))), float(mat3x2(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(718.148)), bool(false))), 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, clamp(_GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, float(mat3x2((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4544.9676))))), float(mat3x2(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, clamp(_GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, float(mat3x2((dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 1.0, 0.0))))) * 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4544.9676))))), float(mat3x2(float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(vec3(vec3(1.0, 1.0, 0.0)))))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))) - tan(0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, clamp(_GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, float(mat3x2((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4544.9676))))), float(mat3x2(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, clamp(_GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, float(mat3x2((dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 1.0, 0.0))))) * 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4544.9676))))), float(mat3x2(float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(vec3(vec3(1.0, 1.0, 0.0)))))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))) - tan(0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, clamp(_GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, float(mat3x2((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4544.9676))))), float(mat3x2(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, clamp(_GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, float(mat3x2((dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 1.0, 0.0))))) * 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4544.9676))))), float(mat3x2(float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(vec3(vec3(1.0, 1.0, 0.0)))))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))) - tan(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, clamp(_GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, float(mat3x2((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4544.9676))))), float(mat3x2(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, clamp(_GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, float(mat3x2((dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 1.0, 0.0))))) * 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4544.9676))))), float(mat3x2(float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), vec3(1.0, 1.0, 0.0)), (dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(vec3(vec3(1.0, 1.0, 0.0)))))) * 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))) - tan(0.0))))) : _GLF_FUZZED(970.991))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 0.0, tan(0.0), log(1.0), 1.0, 0.0, 1.0, exp(0.0), 0.0, 1.0), (mat4x3(1.0, 1.0, 1.0, 0.0, tan(0.0), log(1.0), 1.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5376.0562)), bool(false))), 1.0)))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), (dot(vec3(_GLF_IDENTITY(0.0, (0.0) + abs(0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0))) * _GLF_IDENTITY(1.0, (1.0) / 1.0))), sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-25.88) : 0.0), (false ? _GLF_FUZZED(810.846) : (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-25.88) : 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.1)), float(injectionSwitch.x), bool(true)))), bool(true)))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0)), float(mat3x2(float(mat4(injectionSwitch.x, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(mat3x2(vec3(1.0, 1.0, 0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), sqrt(0.0)), (mat3x2(vec3(1.0, 1.0, 0.0), 0.0, 1.0, sqrt(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY((dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))) * 1.0, min((dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(1.0, 1.0, 0.0))) * 1.0, (dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))) * 1.0)))), sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, abs(0.0)))), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(((mat2(9.9, -783.354, -4654.1718, -8.1) == mat2(-9436.6352, 94.45, 7.4, 8112.0703)) ? 50.44 : -8421.4887)))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-661.358), _GLF_FUZZED(2.5)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(true, true))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-661.358), _GLF_FUZZED(2.5)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(true, true))).y : _GLF_FUZZED(-20.52)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) && true))) && true))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x), uint(uvec2(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x), 1u))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false) && true)), (! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), false || (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))) && true)))))) && true), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(! (_GLF_IDENTITY(false, bool(bool(false))))))))), (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (bool(! (_GLF_IDENTITY(false, bool(bool(false))))))))))))) || false)))))))) && true))))), true && (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))) && true), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true))))), (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! ((! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! ((! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! ((! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))))))) && true), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))) && true))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true)))) && true))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))) && true), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true, bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bool(! ((! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))))))))))) || false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), false || (! (! ((false) && true)))))), bool(bvec3((_GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false) && true)), (! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bool(false)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bool(false)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)))))))), true && (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))))) && true)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))))) && true))))))) && true))) && true), ! (! _GLF_IDENTITY((((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_IDENTITY((((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)), ((((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true))) && true)))))), (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))) && true), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true)))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true))))), _GLF_IDENTITY(! (! ((! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))) && true), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true))))))), (_GLF_IDENTITY(! (! ((! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), bool(bool(false)))))))))) && true))))))), (! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)), ! (! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)), ! (! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)), ! (! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)), ! (! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) && true)))), true)))), true, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (! ((false) && true)))))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), bool(bvec2(! (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), true))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), ! (! (! (! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), ! (! ((_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))))), ! (! (! (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true, ! (! ((false) && true))))))))))) || false), true)))))) && true) ? _GLF_IDENTITY(_GLF_FUZZED((num_workgroup - workgroup_id)), (_GLF_FUZZED((num_workgroup - workgroup_id))) << 0u) : (subgroup_size) - _GLF_IDENTITY(0u, uint(uint(0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) || false) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true, ! (! _GLF_IDENTITY(((false) && true), (((false) && true)) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))) && true, ! _GLF_IDENTITY((! ((false) && true)), ! (! ((! ((false) && true))))))), (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true, true)))))))))) && true, ! (! ((false) && true))))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true, ! _GLF_IDENTITY((! ((false) && true)), ! (! ((! ((false) && true))))))), (_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true, true)))))))))) && true, bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true, true)))))))))) && true, false, false, true))), ! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true)))))))) && true)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(bvec3((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, false)), false || (bool(bvec4((false), false, false, false)))))) && true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), false, false))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, (true) || false)) || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.9)), bool(false)))))))) && true)), bool(bvec3((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), false, false))))), true, false, true))), bool(bvec2(! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(bvec3((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, ! (! ((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), ! (! (bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, ! (! ((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))))))), false, _GLF_IDENTITY(false, (false) || false)))))), true, false, true))), false))))))))) && true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-613.482)), vec2(_GLF_FUZZED(-23.73), (injectionSwitch)[1]), bvec2(false, true))))[0], float(mat2((injectionSwitch)[0], 0.0, 0.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(-7.6, (_GLF_IDENTITY(-7.6, max(-7.6, -7.6))) + 0.0))), vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), bool(bvec3(bool(bvec3((false), false, true)), true, true)))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((false), ! (! ((false))))), false, false)), false || (bool(bvec3(bool(_GLF_IDENTITY((false), ! (! ((false))))), false, false))))))) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-8.4), _GLF_IDENTITY((_GLF_FUZZED(-8.4)), min((_GLF_FUZZED(-8.4)), (_GLF_FUZZED(-8.4)))) / 1.0)), bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) && true))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) && true)))))))))))), injectionSwitch.y)))) || (false))) && true, true && (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ! (! ((false)))) && true)), true && ((! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), ! (! (((false))))))) && true))))))))) && true) ? _GLF_FUZZED((num_workgroup - workgroup_id)) : _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), 0u ^ ((0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))) + 0u))) - 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY((num_workgroup - workgroup_id), ((num_workgroup - workgroup_id)) | ((num_workgroup - workgroup_id)))) : _GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_size) - _GLF_IDENTITY(0u, (0u) >> (0u & 112271u)), 0u | (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u))))), (~ (~ (_GLF_IDENTITY((subgroup_size) - 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u, (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) - _GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))))) | (~ (~ (_GLF_IDENTITY((subgroup_size) - 0u, 0u | (_GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY(((subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u))), ~ (~ (((subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)))))) >> 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))) + 0u))) - 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY((num_workgroup - workgroup_id), ((num_workgroup - workgroup_id)) | ((num_workgroup - workgroup_id)))) : _GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_size) - _GLF_IDENTITY(0u, (0u) >> (0u & 112271u)), 0u | (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u))))), (~ (~ (_GLF_IDENTITY((subgroup_size) - 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u, (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) - _GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))))) | (~ (~ (_GLF_IDENTITY((subgroup_size) - 0u, 0u | (_GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY(((subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u))), ~ (~ (((subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)))))) >> 0u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))) + 0u))) - 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY((num_workgroup - workgroup_id), ((num_workgroup - workgroup_id)) | ((num_workgroup - workgroup_id)))) : _GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_size) - _GLF_IDENTITY(0u, (0u) >> (0u & 112271u)), 0u | (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u))))), (~ (~ (_GLF_IDENTITY((subgroup_size) - 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u, (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) - _GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))))) | (~ (~ (_GLF_IDENTITY((subgroup_size) - 0u, 0u | (_GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY(((subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u))), ~ (~ (((subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)))))) >> 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))) + 0u))) - 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY((num_workgroup - workgroup_id), ((num_workgroup - workgroup_id)) | ((num_workgroup - workgroup_id)))) : _GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_size) - _GLF_IDENTITY(0u, (0u) >> (0u & 112271u)), 0u | (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u))))), (~ (~ (_GLF_IDENTITY((subgroup_size) - 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u, (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) - _GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))))) | (~ (~ (_GLF_IDENTITY((subgroup_size) - 0u, 0u | (_GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY(((subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u))), ~ (~ (((subgroup_size) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)))))) >> 0u))))))))))) - 0u)))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))))) << 0u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u) + subgroup_local_id, uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) ^ 0u), workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)) - 0u), min(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) ^ 0u) + subgroup_local_id)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))), injectionSwitch[1])).y)) && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), 0u | (((subgroup_local_id)) | ((subgroup_local_id))))) | _GLF_IDENTITY(0u, 0u + (0u)), max((subgroup_local_id) | _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), _GLF_IDENTITY((_GLF_IDENTITY((0u), ((0u)) | ((0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((0u)), (((0u))) | (((0u))))), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((0u)), _GLF_IDENTITY((((0u))), (0u & 173208u) ^ ((((0u))))) | (((0u))))), 0u + (~ (_GLF_IDENTITY(((0u)), (((0u))) | (((0u))))))))))) | ((0u))))), (subgroup_local_id) | 0u))) + 1), _GLF_IDENTITY((true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), 0u | (((subgroup_local_id)) | ((subgroup_local_id))))) | 0u, max((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) | ((0u))))), (subgroup_local_id) | 0u))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), 0u | (((subgroup_local_id)) | ((subgroup_local_id))))) | 0u, max((subgroup_local_id) | _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) | ((0u))))), (subgroup_local_id) | 0u)))) ^ 0u) + 1) : _GLF_FUZZED(workgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), 0u | ((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u)) | ((subgroup_local_id))))) | 0u, max((subgroup_local_id) | _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) | ((0u))))), (subgroup_local_id) | 0u))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), 0u | (((subgroup_local_id)) | ((subgroup_local_id))))) | 0u, max((subgroup_local_id) | _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((0u))))), (subgroup_local_id) | 0u)))) ^ 0u) + 1) : _GLF_FUZZED(workgroup_id))))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, max((subgroup_local_id) | 0u, (subgroup_local_id) | 0u))) + 1)) >> 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true))))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.9)), bvec2(true, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) - 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)))))))) + 0u);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), clamp(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(virtual_gid, 1u, 1u)))))], buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))])), 4, _GLF_IDENTITY(64, (64) >> 0), 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-6.4)), bool(false))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(33499)), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(33499)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(33499))) >> (0 << _GLF_IDENTITY(int(5), int(5))))) >> 0)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(vec3(2922.0181, 831.821, -248.876)).x) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat2(1.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0 * (1.0))))), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y, injectionSwitch.y)) - 0.0, ((clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0))), injectionSwitch.y, injectionSwitch.y)) - 0.0) * 1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y, injectionSwitch.y), float(mat3x4(clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0)), 1.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), sqrt(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, tan(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.5)), bool(false)))), 1.0, sqrt(0.0))))))) : _GLF_FUZZED(-7.1)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat3x2(injectionSwitch[0], cos(0.0), 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat3x2(injectionSwitch[0], cos(0.0), 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(2.9)), bool(false)))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat3x2(injectionSwitch[0], cos(0.0), 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat3x2(injectionSwitch[0], cos(0.0), 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(2.9)), bool(false)))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch)).x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))))), false, true)))), bool(bool(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))))), false, true)))))))))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
