#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))))))), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), bool(bvec4(! (false), _GLF_IDENTITY(true, ! (! (true))), true, true))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) || false)))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) | 0u)))))), 0u, 0u))) | ((gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)) - 0u), (gl_WorkGroupSize.x) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) + 0.0)), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         continue;
        }
       continue;
       if(_GLF_DEAD(false))
        break;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       break;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(mat2x4(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * (injectionSwitch)) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, 0u ^ (subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(virtual_gid) : ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u)) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)) | 0u)) | 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(((subgroup_local_id + 1)) ^ 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) ^ 0u, (((subgroup_local_id + 1)) ^ 0u) >> 0u)) << 0u))) | 0u, ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)) ^ 0u)) | 0u) << 0u))))) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(atomicOr(workgroup_size, virtual_gid)))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))), ((_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ! (! ((false)))))) && true))) || false)), true, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(bool(bvec2((! (! (false))), true)), ! (! (bool(bvec2((! (! (false))), true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (! (false))), ! (! ((! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), true, true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (! (false))), ! (! ((! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), true, true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((! (! (false))), ! (! ((! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), true, true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), false, true), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY((! (! (false))), ! (! ((! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), true, true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), false, true))))))))), ((! (! (false)))) || false)) || false) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false, (((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false) || false))), true, false)))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && _GLF_IDENTITY(true, false || (true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || _GLF_IDENTITY(((bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))))), bool(bool(((bool(bvec2(false, false)))))))))) && _GLF_IDENTITY(true, ! (! (true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || _GLF_IDENTITY(((bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))))), bool(bool(((bool(bvec2(false, false)))))))))) && _GLF_IDENTITY(true, ! (! (true))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || _GLF_IDENTITY(((bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))))), bool(bool(((bool(bvec2(false, false)))))))))) && _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || _GLF_IDENTITY(((bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))))), bool(bool(((bool(bvec2(false, false)))))))))) && _GLF_IDENTITY(true, ! (! (true)))))))), true)))))))))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) && true)), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))) && true))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), ! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), true && (_GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), true))))) && true))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))))) && true), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))), bool(bvec4(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))), false, true, true))))), (! (! (false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))) && true))))) || false)), true, false)))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || _GLF_IDENTITY(false, (false) && true))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), bool(bvec4((! (_GLF_IDENTITY(false, true && (false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, false || ((! (! (false))) && true))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true, false)))))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) && true))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true && ((! (_GLF_IDENTITY(! (false), true && (! (false))))))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ! (! (bool(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))) && true)))))))), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) && true))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) && true)))) || false)) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), true, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) && true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + 0.0) < injectionSwitch.y)), true))))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), (! (! (false))) && true))))) || false)), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) && true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))), (! (! _GLF_IDENTITY((false), ((false)) || false))) && true)), ((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, ((! (! (false))) && true) || false)))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY((! (! (false))), true && ((! (! (false))))) && true, ! (! (_GLF_IDENTITY((! (! (false))), true && ((! (! (false))))) && true))))), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), ! (! (! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), (bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))) || false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), ! (! (! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))), (! (bool(bvec2(false, false)))) || false)), ((! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(false, bool(bvec2(false, false))) || ((bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), true, false))))))))))))) && _GLF_IDENTITY(true, true && (true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))), false || ((bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))))) && true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), true)))))))) && true))))), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), true, true))))), false || ((bool(bvec2(false, false))))))) && true)))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ((false)) || false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true, true))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false))) && ((! (! (false))))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true, true))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false))) && ((! (! (false))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true, true))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false))) && ((! (! (false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true, true))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false))) && ((! (! (false))))) && true)), true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), ! (! (bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))), (! (! (false))) && true))) || false)), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true, true))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (true) && true), true, true, false))) && ((! (! (false))))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)))), _GLF_IDENTITY(false, (false) && true), false, false))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), ((! (! (_GLF_IDENTITY(false, (false) || false))))) || _GLF_IDENTITY(false, true && (false)))) || false) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ((false)) && true))) && true))) || false)), true, false)))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true), false || (_GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true), false || (_GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (bool(bvec2(false, false)))))), _GLF_IDENTITY(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))))), false || ((bool(bvec2(false, false))))))) && true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true, (((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), false || ((bool(bvec2(false, false))))))) && true) && true), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))))) && true, false, true), false))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true && (bool(bvec2(false, false))))))))) && true, false, true), false)))))))), ((bool(_GLF_IDENTITY(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(((! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), (_GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0))), injectionSwitch.y)))), true), bvec3(bvec3(bvec3(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true && _GLF_IDENTITY((bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(bvec2(false, false))), ((bool(bvec2(false, false)))) || false))))))))) && true, false, true), false))))))))) && true) || false), ! (! (bool(_GLF_IDENTITY(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(((! _GLF_IDENTITY((bool(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true) || ((bool(bvec2(false, false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true) || ((bool(bvec2(false, false)))), false, true, true)))))), bool(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true) || ((bool(bvec2(false, false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true) || ((bool(bvec2(false, false)))), false, true, true)))))), false, true))) && true, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true, false, true), false)))))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), _GLF_IDENTITY(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true, ! (! (((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), _GLF_IDENTITY(((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true, ! (! (((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) || false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true))))))))))))))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (false))) && _GLF_IDENTITY(true, false || (true))))), ((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (false))) && _GLF_IDENTITY(true, false || (true)))))) || false))), ((_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), true && ((! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), true && (bool(bvec4((false), false, false, true))))))))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, false)))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || (_GLF_IDENTITY((bool(bvec2(false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, false))), false || (_GLF_IDENTITY((bool(bvec2(false, false))), bool(bool((bool(bvec2(false, false)))))))), false || (_GLF_IDENTITY((bool(bvec2(false, false))), false || (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), bool(bool((bool(bvec2(false, false)))))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((bool(bvec2(false, false))), false || (_GLF_IDENTITY((bool(bvec2(false, false))), bool(bool((bool(bvec2(false, false)))))))))), true, false)))))))) && true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), _GLF_IDENTITY(((! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, false))), ((bool(bvec2(false, false)))) || false), false || ((bool(bvec2(false, false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (((! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, false))), ((bool(bvec2(false, false)))) || false), false || ((bool(bvec2(false, false))))))))) && true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true))))), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true))))), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(false, false))), (_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), false || ((bool(bvec2(false, false))))))) && true)))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), false || (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), false || (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false)))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), false || (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))))) || false))))))) && true)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((bool(bvec2(false, false)))))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) || _GLF_IDENTITY(false, ! (! (false))))) && true))))))))))), false)))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true)))) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), ! (! (((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false)))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), true && ((! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! (! (false))) && true))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false)) || false) && true)), ((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), true, false)))), false))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false))))))) && true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))))) && true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false)))))) && true))) && true))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), (! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false)))))) && true))) && true))), true)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, true)), false, false))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! (bool(bvec2(false, false)))), ((! _GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), false, true))) && true)))))))) && true))))))))))))))))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))) || false), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))) || false))))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(20271) : 1)))) * 1u), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)))), (_GLF_IDENTITY(4, max(4, 4))) ^ 0)) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))) - 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))) - 0, ((_GLF_IDENTITY(4, max(4, 4))) - 0) / 1), (_GLF_IDENTITY(4, max(4, 4))) - 0, (_GLF_IDENTITY(4, max(4, 4))) - 0))), _GLF_IDENTITY(4, max(4, 4)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(7), int(7))) | (4)), 0, (72402 & 0))), (int(ivec3(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(7), int(7))) | (4)), 0, (72402 & 0)))) | (int(ivec3(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(7), int(7))) | (4)), 0, (72402 & 0)))))))), (_GLF_IDENTITY(4, max(4, 4))) - 0), _GLF_IDENTITY(4, max(4, 4)))))), _GLF_IDENTITY(0 | (4), (0 | (4)) | _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))))));
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(bool((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0 ^ 0) | (_GLF_IDENTITY(0, min(0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0 ^ 0) | (_GLF_IDENTITY(0, min(0, 0))))) * 1)) * 1))), ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), min(0, 0))) * 1))), ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))), 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) << 0))))) * _GLF_IDENTITY(1, (1) << 0))))))), (false ? _GLF_FUZZED(-48884) : _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7))) ^ ((_GLF_IDENTITY(0, min(0, 0))))), (true ? (_GLF_IDENTITY(0, min(0, 0))) : _GLF_FUZZED(-41063))) * 1))), ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), 1 * (min(0, 0))))) * 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) / 1)))) * 1)))) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) >> 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0, min(0, 0))))) - 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0, min(0, 0))))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-9933.2376) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(0, min(0, 0))))) - 0)))) >> 0))) * 1) * 1))))), ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(int(0)))))) * 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1)))), ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1))))) / 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-32182) : ~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1))))))) - 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1))), ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), 0 | (min(0, 0))))) * 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) ^ 0))), 1, 1, 0)))))), ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))) * 1))), ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) * 1))))))))) << 0)))))))
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true), true))))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
      return;
     read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), ~ (~ (ivec2(2, 1)))), min(ivec2(2, 1), ivec2(2, 1))), (_GLF_IDENTITY(ivec2(2, 1), min(ivec2(2, 1), ivec2(_GLF_IDENTITY(2, _GLF_IDENTITY((2) | int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((2) | int(_GLF_ZERO(0.0, injectionSwitch.x)), min((2) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((2) | int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (2) | int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-76553))))), (2) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1)))) * ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0)))))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(2, 1), min(ivec2(2, 1), ivec2(2, 1)))), ((_GLF_IDENTITY(ivec2(2, 1), min(ivec2(2, 1), ivec2(2, 1))))) / ivec2(1, 1)), (~ (_GLF_IDENTITY(ivec2(2, 1), min(ivec2(2, 1), ivec2(2, 1))))) | (~ (_GLF_IDENTITY(ivec2(2, 1), min(ivec2(2, 1), ivec2(2, 1)))))))), min(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), ivec2(2, 1)))), int(_GLF_IDENTITY(ivec2(2, 1), min(ivec2(2, 1), ivec2(2, 1))))))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((0 ^ 1), (_GLF_IDENTITY((0 ^ 1), min((0 ^ 1), (0 ^ 1)))) - 0)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((0 ^ _GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), (false ? _GLF_FUZZED(_injected_loop_counter) : (0 ^ 1))), min((0 ^ 1), (0 ^ 1)))) - 0))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
     break;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    break;
   subgroupBarrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))) * sqrt(vec2(1.0, 1.0))).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))) * sqrt(vec2(1.0, 1.0))).y, mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))) * sqrt(vec2(1.0, 1.0))).y), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), (true ? float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))))) * sqrt(vec2(1.0, 1.0))).y, mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))) * sqrt(vec2(1.0, 1.0))).y), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2705.2185)), bool(false))), 0.0, 1.0)) : _GLF_FUZZED(-9250.1648))))))))
      return;
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(false))), true, true), bvec3(bvec4(bvec3((! (_GLF_DEAD(false))), true, true), true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(0, int(int(0))) | 1)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), 1)), (0 ^ 1) * (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((_GLF_IDENTITY(int(0), int(0))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(int(0), int(0)))) / 1)))))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), 1)), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3))))))) ^ 0))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) >> (0 >> _GLF_IDENTITY(int(3), int(3))))))) ^ 0)))) << 0)), 1))))))))) << 0) | (_GLF_IDENTITY(0, max(0, 0)))), int(int(0))) | 1)), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(0, int(int(0))) | 1))) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), int(_GLF_IDENTITY(ivec4(int(int(0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), clamp(ivec4(int(int(0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), ivec4(int(int(0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), _GLF_IDENTITY(ivec4(int(int(0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), ~ (~ (ivec4(int(int(0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))))))) | 1), ! (! (_injected_loop_counter < (_GLF_IDENTITY(0, int(int(0))) | _GLF_IDENTITY(1, 0 | (1))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(0, int(int(0))) | 1))) && true))), bool(bvec3(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY(0, int(int(0))) | 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter < (_GLF_IDENTITY(0, int(int(0))) | 1)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(0, int(int(0))) | 1))) && true))), true, false))))))); _injected_loop_counter ++)
    {
     atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (64) - (0 >> _GLF_IDENTITY(int(8), int(8)))))), (64) | (_GLF_IDENTITY(64, 0 ^ (64))))))), 4);
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7302.4554))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
