#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(vec2(-5.7, 191.158), vec2(-4.1, 926.238))))), max(injectionSwitch.y, injectionSwitch.y))))) || false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))))) || false)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) >> 0u), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u | (_GLF_IDENTITY(0u, min(0u, 0u))))) << 0u))))), uvec3(5u), uvec3(5u)))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u & 68749u)), 0u, _GLF_IDENTITY(0u, uint(uint(0u))))), uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, max(5u, 5u))))), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), (true ? (uvec3(5u)) : _GLF_FUZZED(uvec3(79027u, 101926u, 151817u))))) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), ~ (_GLF_IDENTITY(~ ((uvec3(5u))), ~ (~ (~ ((uvec3(5u)))))))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), (false ? _GLF_FUZZED(uvec2(1043u, 167624u)[0]) : (5u))) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((uvec3(5u)), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ ((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) * 1u), 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), uvec3(uvec4(uvec3(5u), 0u)))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))))))) >> uvec3(0u, 0u, 0u)))))), max(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u & 68749u)), 0u, _GLF_IDENTITY(0u, uint(uint(0u))))), uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, max(5u, 5u))))), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), (true ? (uvec3(5u)) : _GLF_FUZZED(uvec3(79027u, 101926u, 151817u))))) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), ~ (_GLF_IDENTITY(~ ((uvec3(5u))), ~ (~ (~ ((uvec3(5u)))))))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), (false ? _GLF_FUZZED(uvec2(1043u, 167624u)[0]) : (5u))) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((uvec3(5u)), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ ((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) * 1u), 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), uvec3(uvec4(uvec3(5u), 0u)))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))))))) >> uvec3(0u, 0u, 0u)))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u & 68749u)), 0u, _GLF_IDENTITY(0u, uint(uint(0u))))), uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, max(5u, 5u))))), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), (true ? (uvec3(5u)) : _GLF_FUZZED(uvec3(79027u, 101926u, 151817u))))) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), ~ (_GLF_IDENTITY(~ ((uvec3(5u))), ~ (~ (~ ((uvec3(5u)))))))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), (false ? _GLF_FUZZED(uvec2(1043u, 167624u)[0]) : (5u))) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((uvec3(5u)), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ ((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) * 1u), 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), uvec3(uvec4(uvec3(5u), 0u)))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))))))) >> uvec3(0u, 0u, 0u))))))) + uvec3(0u, 0u, 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u & 68749u)), 0u, _GLF_IDENTITY(0u, uint(uint(0u))))), uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, max(5u, 5u))))), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), (true ? (uvec3(5u)) : _GLF_FUZZED(uvec3(79027u, 101926u, 151817u))))) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), ~ (_GLF_IDENTITY(~ ((uvec3(5u))), ~ (~ (~ ((uvec3(5u)))))))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), (false ? _GLF_FUZZED(uvec2(1043u, 167624u)[0]) : (5u))) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((uvec3(5u)), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ ((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) * 1u), 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), uvec3(uvec4(uvec3(5u), 0u)))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))))))) >> uvec3(0u, 0u, 0u)))))))))), uvec3(uvec4((gl_NumWorkGroups) | (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) >> 0u), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u | (_GLF_IDENTITY(0u, min(0u, 0u))))) << 0u))))), uvec3(5u), uvec3(5u)))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u & 68749u)), 0u, _GLF_IDENTITY(0u, uint(uint(0u))))), uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, max(5u, 5u))))), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), (true ? (uvec3(5u)) : _GLF_FUZZED(uvec3(79027u, 101926u, 151817u))))) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), ~ (_GLF_IDENTITY(~ ((uvec3(5u))), ~ (~ (~ ((uvec3(5u)))))))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), (false ? _GLF_FUZZED(uvec2(1043u, 167624u)[0]) : (5u))) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((uvec3(5u)), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ ((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) * 1u), 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), uvec3(uvec4(uvec3(5u), 0u)))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))))))) >> uvec3(0u, 0u, 0u)))))), max(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u & 68749u)), 0u, _GLF_IDENTITY(0u, uint(uint(0u))))), uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, max(5u, 5u))))), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), (true ? (uvec3(5u)) : _GLF_FUZZED(uvec3(79027u, 101926u, 151817u))))) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), ~ (_GLF_IDENTITY(~ ((uvec3(5u))), ~ (~ (~ ((uvec3(5u)))))))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), (false ? _GLF_FUZZED(uvec2(1043u, 167624u)[0]) : (5u))) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((uvec3(5u)), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ ((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) * 1u), 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), uvec3(uvec4(uvec3(5u), 0u)))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))))))) >> uvec3(0u, 0u, 0u)))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u & 68749u)), 0u, _GLF_IDENTITY(0u, uint(uint(0u))))), uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, max(5u, 5u))))), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), (true ? (uvec3(5u)) : _GLF_FUZZED(uvec3(79027u, 101926u, 151817u))))) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), ~ (_GLF_IDENTITY(~ ((uvec3(5u))), ~ (~ (~ ((uvec3(5u)))))))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), (false ? _GLF_FUZZED(uvec2(1043u, 167624u)[0]) : (5u))) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((uvec3(5u)), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ ((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) * 1u), 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), uvec3(uvec4(uvec3(5u), 0u)))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))))))) >> uvec3(0u, 0u, 0u))))))) + uvec3(0u, 0u, 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) ^ (0u & 68749u)), 0u, _GLF_IDENTITY(0u, uint(uint(0u))))), uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, max(5u, 5u))))), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), (_GLF_IDENTITY((uvec3(5u)), (true ? (uvec3(5u)) : _GLF_FUZZED(uvec3(79027u, 101926u, 151817u))))) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(5u)), ~ (_GLF_IDENTITY(~ ((uvec3(5u))), ~ (~ (~ ((uvec3(5u)))))))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), (false ? _GLF_FUZZED(uvec2(1043u, 167624u)[0]) : (5u))) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((uvec3(5u)), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))), ~ (~ ((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) * 1u), 5u, 5u))))), clamp(_GLF_IDENTITY(uvec3(5u), (uvec3(5u)) ^ uvec3(0u, 0u, 0u)), uvec3(5u), _GLF_IDENTITY(uvec3(5u), ~ (~ (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), uvec3(uvec4(uvec3(5u), 0u)))), uvec3(1u, 1u, 1u) * ((uvec3(5u)))) | uvec3(0u, 0u, 0u))))))))))))) >> uvec3(0u, 0u, 0u)))))))))), 0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), false || (_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, (false) && true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u)) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(workgroup_id ++, (workgroup_id ++) - 0u))), (_GLF_FUZZED((workgroup_id ++))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED((workgroup_id ++)), (_GLF_FUZZED((workgroup_id ++))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) : (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED((workgroup_id ++)), (_GLF_FUZZED((workgroup_id ++))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) : (subgroup_local_id + 1))) % subgroup_size) + (0u | 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_IDENTITY(_GLF_FUZZED((workgroup_id ++)), _GLF_IDENTITY((_GLF_FUZZED((workgroup_id ++))), (_GLF_IDENTITY((_GLF_FUZZED((workgroup_id ++))), 0u ^ ((_GLF_FUZZED((workgroup_id ++)))))) / 1u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << (0u & 136438u))) : (subgroup_local_id + 1))) % subgroup_size))) | 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u + (next_virtual_gid), (0u + (next_virtual_gid)) | (0u + (next_virtual_gid))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)))), ((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, true), bvec3(bvec4(bvec3(bool(bvec2(false, true)), false, true), false)))))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(24040) : _GLF_IDENTITY(0, clamp(0, 0, 0))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(1, 1))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(1, 1))], min(injectionSwitch[_GLF_IDENTITY(1, min(1, 1))], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))]))) - 0.0), (_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) - sin(vec2(0.0, 0.0)))[1]))) / 1.0))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))) && true))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((- -507.904)) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((- -507.904)) : injectionSwitch.y)), 1.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 0u))) % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, true, true))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), false, false, false)), bool(bool(bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false)), false, false, false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))) && true)) && true) || false)) ? _GLF_FUZZED(ivec2(20024, -67502)[0]) : 2, int(ivec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) || false)) || false), ! (! (! ((_GLF_IDENTITY(false, (false) || false)) || false))))))) ? _GLF_FUZZED(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(20024, 0 | (20024)), (20024) - _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), -67502)[0]) : 2, 1, 0))))), _GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(53063) : 2), _GLF_IDENTITY(int(ivec2((false ? _GLF_FUZZED(53063) : 2), 0)), (int(ivec2((false ? _GLF_FUZZED(53063) : 2), 0))) / 1)))))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) || false, ! (! ((bool(bool(false))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))), false, true, true)))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), false || ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) || false) || false)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.5)))))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (1u ^ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) & 1u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(virtual_gid, (1u ^ (1u & 1u)) | (virtual_gid)))))], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(1u ^ (1u & 1u), (1u ^ (1u & 1u)) << 0u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) | (uint(uvec2(virtual_gid, 1u))))), (1u ^ (1u & 1u)) | (virtual_gid)))))], min(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(1u ^ (1u & 1u), (1u ^ (1u & 1u)) << 0u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) | (uint(uvec2(virtual_gid, 1u))))), (1u ^ (1u & 1u)) | (virtual_gid)))))], min(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(1u ^ (1u & 1u), (1u ^ (1u & 1u)) << 0u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) | (uint(uvec2(virtual_gid, 1u))))), (1u ^ (1u & 1u)) | (virtual_gid)))))], buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(1u ^ (1u & 1u), (1u ^ (1u & 1u)) << 0u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) | (uint(uvec2(virtual_gid, 1u))))), (1u ^ (1u & 1u)) | (virtual_gid)))))])), _GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(1u ^ (1u & 1u), (1u ^ (1u & 1u)) << 0u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) | (uint(uvec2(virtual_gid, 1u))))), (1u ^ (1u & 1u)) | (virtual_gid)))))], (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(1u ^ (1u & 1u), (1u ^ (1u & 1u)) << 0u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) | (uint(uvec2(virtual_gid, 1u))))), (1u ^ (1u & 1u)) | (virtual_gid)))))]) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (1u ^ (1u & 1u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(virtual_gid, (1u ^ (1u & _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) << 0u))))) | (virtual_gid)))))]) * 1u)), 0u + (~ (_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (1u ^ (1u & 1u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((1u ^ (1u & 1u)), clamp(_GLF_IDENTITY((1u ^ (1u & 1u)), ~ (~ ((1u ^ (1u & 1u))))), (1u ^ (1u & 1u)), (1u ^ (1u & 1u)))) | (virtual_gid)))))], (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (1u ^ (1u & 1u)) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(virtual_gid, (1u ^ (1u & 1u)) | (virtual_gid)))))]) * 1u)))))), 4, 64, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), clamp((2), (2), _GLF_IDENTITY((2), (false ? _GLF_FUZZED(-97705) : (2))))))))));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 0); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))), ~ (~ (((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))) - (0 << _GLF_IDENTITY(int(4), int(4))))) * 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(false);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(1, ((0 << _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(8), int(8))) + (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), ((64)) ^ (0 << _GLF_IDENTITY(int(3), int(3)))))) >> _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(7))), (((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch.x))), int(7)))) - 0)))) : _GLF_FUZZED(_GLF_IDENTITY(30945, (30945) | (30945))), (true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) >> ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)))), 0)), 0 ^ (int(ivec2(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, max(7, 7))) ^ 0))), 0)))))))))))) : _GLF_FUZZED(30945)) - (_GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) | (0)) << _GLF_IDENTITY(int(5), int(5)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), ((64)) ^ (0 << _GLF_IDENTITY(int(3), int(3)))))) >> _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(7))), (((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch.x))), int(7)))) - 0)))) : _GLF_FUZZED(_GLF_IDENTITY(30945, (30945) | (30945))), (true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) >> ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)))), 0)), 0 ^ (int(ivec2(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, max(7, 7))) ^ 0))), 0)))))))))))) : _GLF_FUZZED(30945)) - (_GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) | (0)) << _GLF_IDENTITY(int(5), int(5)))))), min(_GLF_IDENTITY(64, (_GLF_IDENTITY(true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), ((64)) ^ (0 << _GLF_IDENTITY(int(3), int(3)))))) >> _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(7))), (((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch.x))), int(7)))) - 0)))) : _GLF_FUZZED(_GLF_IDENTITY(30945, (30945) | (30945))), (true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) >> ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)))), 0)), 0 ^ (int(ivec2(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, max(7, 7))) ^ 0))), 0)))))))))))) : _GLF_FUZZED(30945)) - (_GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) | (0)) << _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), ((64)) ^ (0 << _GLF_IDENTITY(int(3), int(3)))))) >> _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(7))), (((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch.x))), int(7)))) - 0)))) : _GLF_FUZZED(_GLF_IDENTITY(30945, (30945) | (30945))), (true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) >> ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)))), 0)), 0 ^ (int(ivec2(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, max(7, 7))) ^ 0))), 0)))))))))))) : _GLF_FUZZED(30945)) - (_GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) | (0)) << _GLF_IDENTITY(int(5), int(5)))))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), ((64)) ^ (0 << _GLF_IDENTITY(int(3), int(3)))))) >> _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(7))), (((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch.x))), int(7)))) - 0)))) : _GLF_FUZZED(_GLF_IDENTITY(30945, (30945) | (30945))), (true ? _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) >> ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)))), 0)), 0 ^ (int(ivec2(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, max(7, 7))) ^ 0))), 0)))))))))))) : _GLF_FUZZED(30945)) - (_GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) | (0)) << _GLF_IDENTITY(int(5), int(5)))))))), 2);
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))), (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, false)), bvec3(bvec4(bvec3(bvec3(true, false, false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, false)), bvec3(bvec4(bvec3(bvec3(true, false, false)), true)))))))), bvec3(bvec4(bvec3(true, false, false), false))))))) || false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-938.037) : injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, false)))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (! (false))), true && (_GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), ((! (! (false)))) || false)))), true)), (bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false)))), true))) && true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), true, false, true)))) || false)))))) || false))));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             subgroupBarrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), clamp((0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), min((0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), min((0 << _GLF_IDENTITY(int(6), int(6))), (0 << _GLF_IDENTITY(int(6), int(6))))))), (0 << _GLF_IDENTITY(int(6), int(6))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(7), min(int(7), int(7)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(int(7), min(int(7), int(7)))), (false ? _GLF_FUZZED(76317) : (_GLF_IDENTITY(int(7), min(int(7), int(7)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(7), min(int(7), int(7)))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(7), min(int(7), int(7)))), ((_GLF_IDENTITY(int(7), min(int(7), int(7))))) ^ 0), (_GLF_IDENTITY(int(7), min(int(7), int(7)))))), (false ? _GLF_FUZZED(90263) : (_GLF_IDENTITY(int(7), min(int(7), int(7)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(7), min(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ (int(7)), (~ (int(7))) << 0)))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7)))), int(7)))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, (7) >> 0)))), min(int(7), int(7))))) + 0))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(int(7), min(int(7), int(7)))), ((_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(7) : _GLF_FUZZED(24310))))))) | ((_GLF_IDENTITY(int(7), min(int(7), int(7)))))))) / 1), int(7)), ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(min(6, 6), min(min(6, 6), min(6, 6))))), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, ~ (~ (7)))) | (7))), (false ? _GLF_FUZZED(-94616) : int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, ~ (~ (7)))) | (7))))), int(7))) | (_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ ((0 << _GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), (0 << _GLF_IDENTITY(int(6), int(6))) + 0)) << _GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) / 1)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED((~ 86131))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | 0))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | 0)), 0 + (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) + 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), 0), (true ? ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), 0) : _GLF_FUZZED(ivec2(-89873, -1378)))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (true ? _GLF_IDENTITY(int(6), int(6)) : _GLF_FUZZED(12160)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))))))) * 1)), clamp((_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | 0))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) + 0)))), _GLF_IDENTITY(((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), 0 | (0 << _GLF_IDENTITY(int(6), int(6))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))), (((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), 0 | (0 << _GLF_IDENTITY(int(6), int(6))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)))) ^ 0) - _GLF_IDENTITY(0, (0) | 0))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | 0))))))), (_GLF_IDENTITY((_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)), _GLF_IDENTITY(int(int((int(7)))), (int(int((int(7))))) | (0 << _GLF_IDENTITY(int(6), int(6))))) >> 0))) - _GLF_IDENTITY(0, (0) | 0))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)))), ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | 0))), clamp((_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | 0), (false ? _GLF_FUZZED(78558) : _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | 0), (((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) - _GLF_IDENTITY(0, (0) | 0)) - 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, (6) | 0)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((int(7)), max((int(7)), (int(7)))))), (int(int(_GLF_IDENTITY((int(7)), max((int(7)), (int(7))))))) - 0)) >> 0)), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), (false ? _GLF_FUZZED(-8521) : _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), 1 * (0 << _GLF_IDENTITY(int(6), int(6))))), 0 ^ ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), 1 * (0 << _GLF_IDENTITY(int(6), int(6))))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> _GLF_IDENTITY(0, (0) ^ 0)))))) - _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, 0 ^ ((0) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (0) | 0)) >> 0)))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))))))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))))))))), 1, 0, 0), clamp(ivec4(_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))))))))), 1, 0, 0), ivec4(_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))))))))), 1, 0, 0), ivec4(_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))), ~ (~ (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) >> 0))))))))), 1, 0, 0))))) - _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) / 1))), (0) | 0)))))))) / 1) / 1)) >> (0 << _GLF_IDENTITY(int(0), int(0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-55.83))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x3((injectionSwitch) * mat2(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, 0.0))))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-533.839), _GLF_FUZZED(-4064.5019)), bvec2(false, false)))).x > injectionSwitch.y, false)))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
