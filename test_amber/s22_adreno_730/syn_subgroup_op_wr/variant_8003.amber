#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uint workgroup_size;
 mat2x3 _f0;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat3x4 _f1;
 uvec2 _f2;
 uint _f3;
 ivec2 _f4;
 bvec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 mat3 _f3;
 ivec3 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_2 {
 uint subgroup_size;
 mat2x3 _f0;
 mat4 _f1;
 ivec4 _f2;
 _GLF_struct_0 _f3;
 _GLF_struct_1 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_3 {
 uint _f0;
 _GLF_struct_2 _f1;
 float _f2;
 uvec4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(57.19))))), 1.0, 1.0)), injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(-7.1))))) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.7)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0))))))))), mix(vec2(_GLF_FUZZED(-3.7), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0))))))))))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, sqrt(1.0), 1.0, 1.0, 0.0))))))))))[0], _GLF_FUZZED(9.9)), bvec2(true, _GLF_IDENTITY(false, false || (false))))) * vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(1u, _GLF_struct_2(gl_SubgroupSize, mat2x3(1.0), mat4(1.0), ivec4(1), _GLF_struct_0(ivec2(1), mat2x4(1.0), ivec4(1), mat3(1.0), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)), (_GLF_IDENTITY((ivec3(1)), ~ (~ ((ivec3(1)))))) << ivec3(0, 0, 0)) | (ivec3(1))), mat2x3(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))), _GLF_struct_1(mat4x2(1.0), mat3x4(1.0), uvec2(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED((mat2(0.5, -769.944, -4.8, -5.4) , (-- subgroup_id)))))), 1u, ivec2(1), bvec4(true), mat3x4(1.0)), vec4(_GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, uvec4(1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_WorkGroupSize.x, mat2x3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.6)), bool(false)))))) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_size, uint(uint(_GLF_struct_replacement_4.workgroup_size))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((! (true))) && true)) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), 0u ^ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))) / (1u | 1u)))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))), ((_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), 0u ^ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))) / (1u | 1u)))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))))))) | 0u) / 1u)), ((true ? (_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED(workgroup_id))) >> 0u))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(43436u) : (~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), (uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))) >> 0u)))))), (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + (workgroup_id))))) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)), ((true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> 0u))), 0u + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(43436u) : (~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))), clamp((~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))), (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))), (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))), clamp((~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))), (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))), (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))), 0u, 0u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), min(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)) >> 0u))))), ~ (~ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)), (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))) ^ 0u)) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) * 1u) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)), ((true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> 0u)))))))), 0u, 1u, 1u), ~ (~ (uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((workgroup_id --)) : 0u))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) / 1u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_size, uint(uint(_GLF_struct_replacement_4.workgroup_size))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)) * 1u), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))), (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), 0u | (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> _GLF_IDENTITY(0u, 0u + (0u))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(43436u) : (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id)))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), 1u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), max(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bool(! (! (true)))), false || (bool(bool(! (! (true))))))))))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))))))), (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), 0u + (_GLF_IDENTITY((workgroup_id), ~ _GLF_IDENTITY((~ ((workgroup_id))), 1u * ((~ ((workgroup_id)))))))) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)), ((true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> 0u)))))), 0u, 1u, 1u), max(uvec4(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)) * 1u), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))), (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), 0u | (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> _GLF_IDENTITY(0u, 0u + (0u))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(43436u) : (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id)))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), 1u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), max(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bool(! (! (true)))), false || (bool(bool(! (! (true))))))))))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))))))), (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), 0u + (_GLF_IDENTITY((workgroup_id), ~ _GLF_IDENTITY((~ ((workgroup_id))), 1u * ((~ ((workgroup_id)))))))) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)), ((true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> 0u)))))), 0u, 1u, 1u), uvec4(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)) * 1u), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))), (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), 0u | (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> _GLF_IDENTITY(0u, 0u + (0u))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(43436u) : (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id)))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), 1u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), max(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))), uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bool(! (! (true)))), false || (bool(bool(! (! (true))))))))))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))))))), (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), 0u + (_GLF_IDENTITY((workgroup_id), ~ _GLF_IDENTITY((~ ((workgroup_id))), 1u * ((~ ((workgroup_id)))))))) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)), ((true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> 0u)))))), 0u, 1u, 1u))), ~ (~ (uvec4(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), 1u * (~ (~ (workgroup_id))))), 0u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u)))))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((workgroup_id --)) : 0u))) / 1u)))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_size, uint(uint(_GLF_struct_replacement_4.workgroup_size))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), 0u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), 0u, 0u), 0u)))))) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), 0u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), 0u, 0u), 0u)))))) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u, (true ? (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), 0u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), 0u, 0u), 0u)))))) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u : _GLF_FUZZED(51212u))), 0u, 1u))))), ((true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> 0u))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(43436u) : (~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true, ! (! (true))) ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))))))), (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), ~ (~ (_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), 0u ^ (uint(uint(_GLF_IDENTITY(true ? (workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), max(true ? (workgroup_id) : _GLF_FUZZED(workgroup_id), true ? (workgroup_id) : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)), ((true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))) >> 0u)))))), 0u, 1u, 1u), ~ (~ (uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((workgroup_id --)) : 0u))) / 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u), _GLF_IDENTITY(uint(0u), uint(0u))))))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_3._f1.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, cos(0.0), sin(0.0)))).y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) / 1.0))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(max(-1.7, -14.22), (true ? max(-1.7, -14.22) : _GLF_FUZZED(distance(tan(7141.2270), 3.7))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (false))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0), (mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0), (mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0), (mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y)) || false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false, false, true))), false, false, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.7)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % _GLF_struct_replacement_3._f1.subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(5.2) : injectionSwitch[0])), injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(3.9, -45.56)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)) + 0u), 1u * (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)))))), max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), (min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) - (0u | 0u))), next_virtual_gid))], uint(_GLF_IDENTITY(1, int(int(1)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, ! (! (true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) - 0u))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, true && (false)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0))), mat2(1.0) * (vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0)))))).y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid, virtual_gid))], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false, true))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(24.59, -536.684)) : injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true), true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true))), true), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true, ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), bool(bvec4(false, true, false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true), true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true))), true), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) / 1.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7754.7241) : injectionSwitch.y))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false))))))), _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), bool(bool(false || (false)))))))), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, true && (false)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0), mat4(1.0) * (mat4(injectionSwitch, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0)))) * mat4(1.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec3((injectionSwitch), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(vec3((injectionSwitch), 0.0)))[0], ((vec2(vec3((injectionSwitch), 0.0)))[0]) * 1.0), (vec2(vec3((injectionSwitch), 0.0)))[1]), vec2(_GLF_FUZZED(408.715), _GLF_FUZZED(float(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))), bvec2(false, false)))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0)))), (false ? _GLF_FUZZED(-50.68) : 0.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0)))), clamp(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8031.1058))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.7)), float(0.0), bool(true)), clamp(mix(float(_GLF_FUZZED(8.7)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(8.7)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(8.7)), float(0.0), bool(true))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat2x3(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((5319.3223)), _GLF_FUZZED(3545.0301)), bvec2(false, false))).x, float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9013.7065))), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.8)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(0.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), (! ((_GLF_DEAD(false)) && true)) || false), (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)) || false)))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))) && true))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-1.9, mix(float(_GLF_FUZZED(929.229)), float(_GLF_IDENTITY(-1.9, clamp(-1.9, -1.9, -1.9))), bool(true))))), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(608.230), max(_GLF_IDENTITY(_GLF_FUZZED(608.230), min(_GLF_FUZZED(608.230), _GLF_IDENTITY(_GLF_FUZZED(608.230), (_GLF_FUZZED(608.230)) * _GLF_IDENTITY(1.0, (1.0) * exp(0.0))))), _GLF_FUZZED(608.230)))), bvec2(true, false))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, determinant(mat4(cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, log(1.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(float(mat3x2(injectionSwitch.y, determinant(mat4(cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, log(1.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0, 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 1.0, 0.0))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0), mat4(1.0) * (mat2x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (mat2x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(242.984))), 1.0, 1.0)), 1.0, 1.0, 0.0))))))))).x > injectionSwitch.y))), true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0)), clamp(float(mat4(injectionSwitch.y, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, length(vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0))), 0.0)), 0.0, 0.0, 0.0)), log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(66.24) : 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0)), float(mat4(injectionSwitch.y, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0)), float(mat4(injectionSwitch.y, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
