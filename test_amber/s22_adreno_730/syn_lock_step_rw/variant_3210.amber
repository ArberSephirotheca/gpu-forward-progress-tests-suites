#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false)))), true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), true))), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), true))), true, false, true)))), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.5))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), injectionSwitch)).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0), max(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0), vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 1.0)))), max(vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0), _GLF_IDENTITY(max(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0), vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0)), vec4(mat4x3(max(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0), vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0)), 1.0, 1.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0))))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0), max(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), 1.0), vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0))), dot(vec2(0.0, 1.0), vec2(1.0, abs(0.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.5)))))))))))), vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-8.8, -436.035).t)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-8.8, -436.035).t)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(false || (_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), bool(bvec3(! (false || (_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), true, true)))))) || false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), false || (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size) : _GLF_FUZZED(workgroup_size))), min(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size) : _GLF_FUZZED(workgroup_size))), min(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size) : _GLF_FUZZED(workgroup_size))), min(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size) : _GLF_FUZZED(workgroup_size))), min(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size), (max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)) | _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), max((max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), (max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), uint(uvec4(~ (subgroup_base), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), 0u, 0u, 1u), (true ? uvec4(_GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u))))), 0u, 0u, 1u) : _GLF_FUZZED(uvec4(58371u, 154207u, 177204u, 30370u))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), 0u, 0u, 1u), (true ? uvec4(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), 0u, 0u, 1u) : _GLF_FUZZED(uvec4(58371u, 154207u, 177204u, 30370u))))))))) << 0u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u)), ((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))) ^ 0u), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), max(~ ((subgroup_base)), ~ ((subgroup_base)))))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base))))), uint(uvec3((_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base))))), 1u, 1u))) : _GLF_FUZZED(uaddCarry(workgroup_size, num_workgroup, workgroup_id))))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) | (_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u)), ((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))) ^ 0u), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), max(~ ((subgroup_base)), ~ ((subgroup_base)))))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base))))), uint(uvec3((_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base))))), 1u, 1u))) : _GLF_FUZZED(uaddCarry(workgroup_size, num_workgroup, workgroup_id))))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) | (_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u)))), (clamp(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u)), ((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))) ^ 0u), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), max(~ ((subgroup_base)), ~ ((subgroup_base)))))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base))))), uint(uvec3((_GLF_IDENTITY(~ ((subgroup_base)), min(~ ((subgroup_base)), ~ ((subgroup_base))))), 1u, 1u))) : _GLF_FUZZED(uaddCarry(workgroup_size, num_workgroup, workgroup_id))))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) | (_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))))) << 0u)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), (~ ((subgroup_base))) + 0u))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))), (min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ _GLF_IDENTITY((~ ((subgroup_base))), 0u | ((~ ((subgroup_base)))))))) - 0u))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(~ (~ ((subgroup_base))), (~ (~ ((subgroup_base)))) << (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), ((_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))), clamp(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), 0u ^ (~ ((subgroup_base)))))), (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u), _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), subgroup_base))))), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), max(~ ((subgroup_base)), ~ ((subgroup_base)))))), (subgroup_base)))), uint(uint(_GLF_IDENTITY(~ ((subgroup_base)), max(~ ((subgroup_base)), ~ ((subgroup_base))))))))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ~ (~ _GLF_IDENTITY(((subgroup_base)), (uvec4(53936u, 152010u, 172061u, 176101u).s & 0u) + (((subgroup_base)))))), (_GLF_IDENTITY((subgroup_base), ~ (~ _GLF_IDENTITY(((subgroup_base)), min(((subgroup_base)), ((subgroup_base))))))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))), max((_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))), clamp(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(~ (~ ((subgroup_base))), clamp(~ (~ ((subgroup_base))), ~ (~ ((subgroup_base))), ~ (~ ((subgroup_base)))))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))), (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u))), _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup))))))), min((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))))), _GLF_IDENTITY(((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u, (((subgroup_base) | _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) << 0u) + 0u)))))))) * 1u)) << 0u) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x : _GLF_FUZZED(-5077.5889))) > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x : _GLF_FUZZED(-5077.5889))) > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))) && true))))), false)), bool(bvec3(bool(bvec3(false, true, false)), false, true))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))), true, false))))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), vec2(mat2(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), 0.0, length(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).y)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7216.4178, -4625.0081)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-36.31), _GLF_FUZZED(452.162)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)), injectionSwitch)).y)))))), ((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch)).y))))))) || false)), (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(680.395), _GLF_FUZZED(6.8)), vec2(((injectionSwitch) * vec2(1.0, 1.0))[0], ((injectionSwitch) * vec2(1.0, 1.0))[1]), bvec2(true, true)))), injectionSwitch)).y)))))), ((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), true && (bool(bvec4(true, true, false, true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (bool(bool(bvec3(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))) || false))) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))), true, false))))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)))))))))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))), true, false))))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false)))))))))), true, true, true)))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y) || false))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), _GLF_FUZZED(93.93)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2866.0961)), bool(false)))) * 1.0)), bool(true))))), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), min(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-36.31, (false ? _GLF_FUZZED(19.20) : _GLF_IDENTITY(-36.31, float(mat2(-36.31, 1.0, 0.0, 0.0)))))), _GLF_FUZZED(452.162)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)), injectionSwitch)).y)))))), ((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))) || false)), (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y)), false || (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y))))))))))), ((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))) || false))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))), true, false))))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-36.31), _GLF_FUZZED(452.162)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)), injectionSwitch)).y)))))), ((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y) || false)))))))))) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9321.8287, 48.89)) : injectionSwitch)))).y)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9321.8287, 48.89)) : injectionSwitch)))).y)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9321.8287, 48.89)) : injectionSwitch)))).y))))))), false)))))) || false)), bool(bvec3((_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9321.8287, 48.89)) : injectionSwitch)))).y)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9321.8287, 48.89)) : injectionSwitch)))).y)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9321.8287, 48.89)) : injectionSwitch)))).y))))))), false)))))) || false)), true, false)))) || false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))), true, false))))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), injectionSwitch)).y)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || (_GLF_IDENTITY(false, false || (false)))))))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-36.31), _GLF_FUZZED(452.162)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)), injectionSwitch)).y)))))), ((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))) || false)), (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y)))))), ((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))))) || false))) || false)))))))) || false), true)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(injectionSwitch, injectionSwitch)))) > injectionSwitch.y)), true, false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), bool(bvec4(false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false, false, false))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))), true && _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))) || false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (_GLF_IDENTITY(4, 0 ^ (4))), (0 | (_GLF_IDENTITY(4, 0 ^ (4)))) / int(_GLF_ONE(1.0, injectionSwitch.y))))) | 0), 64, _GLF_IDENTITY(2, (2) << 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(floatBitsToInt(-86.18))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))), (true ? 1 : _GLF_FUZZED(floatBitsToInt(-86.18)))))) ^ 0u), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) >> _GLF_IDENTITY(0, 0 | (0))))))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)))) > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
