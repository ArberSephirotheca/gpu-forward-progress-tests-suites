#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat2 _f0;
 ivec4 _f1;
 mat3x4 _f2;
 vec2 _f3;
 bvec2 _f4;
 bvec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 uvec3 _f1;
 _GLF_struct_7 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 bvec3 _f1;
 mat2 _f2;
 vec4 _f3;
 ivec4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 uvec4 _f1;
 mat4 _f2;
 mat2 _f3;
 ivec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 mat2x3 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 bvec2 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 mat3 _f1;
 uint subgroup_local_id;
 vec3 _f2;
 _GLF_struct_5 _f3;
 int _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_IDENTITY(true, false || (true))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), float(float(1.0))))), (1.0) / 1.0), 1.0))), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_struct_0(uvec4(1u), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), bvec3(bvec4(bvec3(bvec3(true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_struct_1(_GLF_IDENTITY(ivec3(1), ~ (~ (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))))) * _GLF_IDENTITY((vec4(1.0)), max((vec4(1.0)), _GLF_IDENTITY((vec4(1.0)), clamp(_GLF_IDENTITY((vec4(1.0)), clamp((vec4(1.0)), (_GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))), (vec4(1.0)))), _GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(-6751.3748, -5371.3280, 288.411, 281.033)) : (vec4(1.0)))), (vec4(1.0))))))))), mat3(1.0), gl_SubgroupInvocationID, vec3(1.0), _GLF_struct_5(ivec3(1), uvec3(1u), mat4x3(1.0), mat2x3(1.0), _GLF_struct_3(bvec3(true), uvec4(_GLF_IDENTITY(1u, max(1u, 1u))), mat4(1.0), mat2(1.0), ivec4(1), _GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(40654, _GLF_IDENTITY(37597, (true ? 37597 : _GLF_FUZZED(14168))), _GLF_IDENTITY(-70425, ~ (~ (-70425))), -84247)), _GLF_IDENTITY((_GLF_FUZZED(ivec4(40654, 37597, -70425, -84247))), ((_GLF_FUZZED(ivec4(40654, 37597, -70425, -84247)))) | ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1))))), _GLF_struct_4(mat4x3(1.0), bvec3(true), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), vec3(_GLF_FUZZED(-90.89), _GLF_FUZZED(-9313.3994), _GLF_FUZZED(-199.613)), bvec3(false, false, false))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), clamp(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (0.0))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.6)), bool(false))), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(-5.4), min(true ? _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), vec3(_GLF_FUZZED(-90.89), _GLF_FUZZED(-9313.3994), _GLF_FUZZED(-199.613)), bvec3(false, false, false))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), clamp(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (0.0))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.6)), bool(false))), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(-5.4), true ? _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), vec3(_GLF_FUZZED(-90.89), _GLF_FUZZED(-9313.3994), _GLF_FUZZED(-199.613)), bvec3(false, false, false))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), clamp(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, round(length(normalize(1.0))), 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (0.0))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.6)), bool(false))), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(-5.4)))))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), clamp(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(mat4(vec3(0.0, 0.0, 1.0), 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0), 0.0, 0.0, cos(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-0.1, 174.960, -104.518, 8.3, -9.0, -68.26, -0.5, -1.3, 868.840, -0.4, 5.1, -4.4, 48.89, -66.17, -7033.7579, 9.9)) : mat4(vec3(0.0, 0.0, 1.0), 0.0, 0.0, sqrt(0.0), 1.0, abs(1.0), 0.0, 0.0, cos(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0))))))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat3(_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED((mat3(1586.2073, 1.5, 7.9, 9.8, 7.8, -94.71, -5.7, 47.87, -18.77) - 1185.4784)))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(float(1.0)))))) - 0.0)), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-4029.1530)), bool(false))), 0.0)), 0.0, 0.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.4)), float(0.0), bool(true))), 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(-5.4))))))), vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), ivec4(1), mat3x4(1.0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-32126, 0 | (-32126))) : _GLF_IDENTITY(1, 0 ^ (1)), clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(-32126, 0 | (-32126))) : _GLF_IDENTITY(1, 0 ^ (1)), false ? _GLF_FUZZED(_GLF_IDENTITY(-32126, 0 | (-32126))) : _GLF_IDENTITY(1, 0 ^ (1)), false ? _GLF_FUZZED(_GLF_IDENTITY(-32126, 0 | (-32126))) : _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(5), int(5)))))))))));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_8(ivec2(1), uvec3(1u), _GLF_struct_7(mat2(1.0), ivec4(1), mat3x4(1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(normalize(1228.8240)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, log(1.0), 1.0))), max(1.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0 * (float(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_FUZZED(8.5)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bvec2(true), bvec4(true), _GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ ivec4(0, 0, 0, 0))))), vec2(1.0)), gl_WorkGroupID.x);
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_9.workgroup_id, (workgroup_size * _GLF_struct_replacement_9.workgroup_id) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), ((0u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-851.899), _GLF_FUZZED(((1.4 < 704.496) ? -62.15 : -503.408))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, false || (false))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_IDENTITY(true, (true) && true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, (false) && true)))), bool(bool(! ((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), true && (true && (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_IDENTITY(true, (true) && true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))), bool(bool(! ((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), true && (true && (true)))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, length(vec2(0.0, 0.0)) + (injectionSwitch.x)) < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, length(vec2(0.0, 0.0)) + (injectionSwitch.x)) < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, length(vec2(0.0, 0.0)) + (injectionSwitch.x)) < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))))))) || false)))), true))), (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_6.subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0)))), false, false, true))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_FUZZED(35.13)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x))), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x)) > injectionSwitch.y))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))), false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) - 0.0) > injectionSwitch.y))) || false)) && true), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bool(bool((false)))))), (bool(_GLF_IDENTITY(bool((false)), bool(bool(bool((false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), min(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), max(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec3(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), ~ (~ (uvec3(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))), 0u | (uint(_GLF_IDENTITY(uvec3(subgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.7))))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.7)))))) | 0u), 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_base, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), 1u), ~ (~ (uvec3(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))))), _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), _GLF_IDENTITY(0u ^ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), workgroup_base + subgroup_base, workgroup_base + subgroup_base))))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base)))))), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))), clamp(~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))), 0u | (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))), ~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))), ~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base)))))))), _GLF_IDENTITY((0u ^ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))) | 0u, clamp((0u ^ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))) | 0u, _GLF_IDENTITY((0u ^ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))) | 0u, max((0u ^ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))) | 0u, (0u ^ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))) | 0u)), (0u ^ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))) | 0u))), 0u ^ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - 0u)), 0u + ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u)), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base)))))))))))) | 0u) + (_GLF_IDENTITY((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_struct_replacement_6.subgroup_local_id + 1), max((_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id + 1, min(_GLF_struct_replacement_6.subgroup_local_id + 1, _GLF_struct_replacement_6.subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id + 1, uint(uvec3(_GLF_struct_replacement_6.subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id + 1, (_GLF_struct_replacement_6.subgroup_local_id + 1) ^ 0u)))), (_GLF_struct_replacement_6.subgroup_local_id + 1))) % subgroup_size) / 1u));
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), uint(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(76728))))), 2), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), 0u), min(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u), (uvec2(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u + (_GLF_IDENTITY(uint(0u), uint(0u))))) + 0u)), min((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (true ? _GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))), uint(0u))) : _GLF_FUZZED(148235u))), uint(0u))))) + 0u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u + (_GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u + (_GLF_IDENTITY(uint(0u), uint(0u))))), 0u, (0u | 0u), 1u)), max(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u + (_GLF_IDENTITY(uint(0u), uint(0u))))), 0u, (0u | 0u), 1u)), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u + (_GLF_IDENTITY(uint(0u), uint(0u))))), 0u, (0u | 0u), 1u))))) + 0u)))) ^ (virtual_gid))], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 2), 0u)) - uvec2(0u, 0u)), uvec2(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u))) : _GLF_FUZZED(uvec2(149629u, 153990u)))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 | (2))))), uint(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u), (true ? uvec2(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u) : _GLF_FUZZED(uvec2(_GLF_IDENTITY(149629u, min(149629u, 149629u)), 153990u))))))) | (0u | 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 4, 64, _GLF_IDENTITY(4, 0 ^ (4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
